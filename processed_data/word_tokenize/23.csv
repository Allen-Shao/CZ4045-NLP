,text,token,annotation
0,"I want to be able to Marshal/Unmarshall a struct

","['I', 'want', 'to', 'be', 'able', 'to', 'Marshal/Unmarshall', 'a', 'struct']","['PRP', 'VBP', 'TO', 'VB', 'JJ', 'TO', 'VB', 'DT', 'NN']"
1,type MyType struct {,"['type', 'MyType', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
2,"    Items       `json:""item""`","['Items', 'json', ':', '""item""']","['IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
3,},['}'],['PUNCTUATION']
4,"

Where an example JSON document it must be able to handle is

","['Where', 'an', 'example', 'JSON', 'document', 'it', 'must', 'be', 'able', 'to', 'handle', 'is']","['WRB', 'DT', 'NN', 'NNP', 'NN', 'PRP', 'MD', 'VB', 'JJ', 'TO', 'VB', 'VBZ']"
5,"{""items"":[""value1"", {""x"":""y""}, ""value3""]}","['{', '""items""', ':[', '""value1""', ',', '{', '""x""', ':', '""y""', '},', '""value3""', ']}']","['PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
6,"

I am only starting to learn Go.  I am starting to think I might need to impose some restrictions on the structure of the array.  Using the above example, my idea would be

","['I', 'am', 'only', 'starting', 'to', 'learn', 'Go', '.', 'I', 'am', 'starting', 'to', 'think', 'I', 'might', 'need', 'to', 'impose', 'some', 'restrictions', 'on', 'the', 'structure', 'of', 'the', 'array', '.', 'Using', 'the', 'above', 'example', ',', 'my', 'idea', 'would', 'be']","['PRP', 'VBP', 'RB', 'VBG', 'TO', 'VB', 'NNP', '.', 'PRP', 'VBP', 'VBG', 'TO', 'VB', 'PRP', 'MD', 'VB', 'TO', 'VB', 'DT', 'NNS', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', '.', 'VBG', 'DT', 'JJ', 'NN', ',', 'PRP$', 'NN', 'MD', 'VB']"
7,"{""items"":[","['{', '""items""', ':[']","['PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
8,"    {""type"":null, ""value"":""value1""}","['{', '""type""', ':', 'null', ',', '""value""', ':', '""value1""', '}']","['PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
9,"    {""type:""x"", ""value"":""y""},","['{', '""type:""', 'x', '"", ""', 'value', '"":""', 'y', '},']","['PUNCTUATION', 'STRING_LITERAL', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
10,"    {""type"": ""value3"", ""value"":""value3""}","['{', '""type""', ':', '""value3""', ',', '""value""', ':', '""value3""', '}']","['PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
11,]},[']}'],['PUNCTUATION']
12,"

Then modelling the objects inside with their own struct.  I'd rather do it the first way, is it possible?
","['Then', 'modelling', 'the', 'objects', 'inside', 'with', 'their', 'own', 'struct', '.', 'I', ""'d"", 'rather', 'do', 'it', 'the', 'first', 'way', ',', 'is', 'it', 'possible', '?']","['RB', 'VBG', 'DT', 'NNS', 'IN', 'IN', 'PRP$', 'JJ', 'NN', '.', 'PRP', 'MD', 'RB', 'VB', 'PRP', 'DT', 'JJ', 'NN', ',', 'VBZ', 'PRP', 'JJ', '.']"
