,text,token,annotation
0,"The goroutines are only working on copies of the slice headers, the underlying arrays are the same. To make a copy of a slice, you need to use copy (or append to a different slice).","['The', 'goroutines', 'are', 'only', 'working', 'on', 'copies', 'of', 'the', 'slice', 'headers', ',', 'the', 'underlying', 'arrays', 'are', 'the', 'same', '.', 'To', 'make', 'a', 'copy', 'of', 'a', 'slice', ',', 'you', 'need', 'to', 'use', 'copy', '(', 'or', 'append', 'to', 'a', 'different', 'slice', ')', '.']","['DT', 'NNS', 'VBP', 'RB', 'VBG', 'IN', 'NNS', 'IN', 'DT', 'NN', 'NNS', ',', 'DT', 'JJ', 'NNS', 'VBP', 'DT', 'JJ', '.', 'TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN', ',', 'PRP', 'VBP', 'TO', 'VB', 'NN', '(', 'CC', 'VB', 'TO', 'DT', 'JJ', 'NN', ')', '.']"
1,"buf_Seq = append(buf_Seq, line)","['buf_Seq', '=', 'append(buf_Seq, line)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
2,"bufCopy := make([]string, len(buf_Seq))","['bufCopy', ':=', 'make([]string, len(buf_Seq))']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
3,"copy(bufCopy, buf_Seq)","['copy(bufCopy, buf_Seq)']",['FUNCTION_CALL']
4,"You can then safely pass bufCopy to the goroutines, or simply use it directly in the closure.","['You', 'can', 'then', 'safely', 'pass', 'bufCopy', 'to', 'the', 'goroutines', ',', 'or', 'simply', 'use', 'it', 'directly', 'in', 'the', 'closure', '.']","['PRP', 'MD', 'RB', 'RB', 'VBP', 'NNP', 'TO', 'DT', 'NNS', ',', 'CC', 'RB', 'VB', 'PRP', 'RB', 'IN', 'DT', 'NN', '.']"