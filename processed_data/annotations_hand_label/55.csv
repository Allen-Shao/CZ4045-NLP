,text,token,annotation
0,"No issues building at commandline:


  Darians-MacBook-Pro:gdriveweb darianhickman$ go build helloworld/hello.go
  
  Darians-MacBook-Pro:gdriveweb darianhickman$ 


Error at locahost:8080/


  The Go application could not be built.
  
  (Executed command: /Users/darianhickman/go_appengine/goroot/bin/go-app-builder -app_base /Users/darianhickman/gowork/src/bitbucket.org/darian_hickman/gdriveweb/helloworld -arch 6 -dynamic -goroot /Users/darianhickman/go_appengine/goroot -nobuild_files ^^$ -unsafe -gopath /Users/darianhickman/gowork -binary_name _go_app -extra_imports appengine_internal/init -work_dir /var/folders/fk/wknp5jzn53gbgbml0yn695_m0000gn/T/tmpsHFP6tappengine-go-bin -gcflags -I,/Users/darianhickman/go_appengine/goroot/pkg/darwin_amd64_appengine -ldflags -L,/Users/darianhickman/go_appengine/goroot/pkg/darwin_amd64_appengine hello.go)
  /Users/darianhickman/gowork/src/golang.org/x/net/context/ctxhttp/ctxhttp.go:35: req.Cancel undefined (type *http.Request has no field or method Cancel)
  
  2016/05/24 19:39:17 go-app-builder: build timing: 6×6g (469ms total), 0×6l (0 total)
  2016/05/24 19:39:17 go-app-builder: failed running 6g: exit status 1


When I research the error


  *http.Request has no field or method Cancel


it leads to a bunch of nonapplicable posts about updating to >Go1.5. 

Source:

","['No', 'issues', 'building', 'at', 'commandline:', 'Darians-MacBook-Pro:gdriveweb', 'darianhickman$', 'go', 'build', 'helloworld/hello.go', 'Darians-MacBook-Pro:gdriveweb', 'darianhickman$', 'Error', 'at', 'locahost:8080/', 'The', 'Go', 'application', 'could', 'not', 'be', 'built.', '(Executed', 'command:', '/Users/darianhickman/go_appengine/goroot/bin/go-app-builder', '-app_base', '/Users/darianhickman/gowork/src/bitbucket.org/darian_hickman/gdriveweb/helloworld', '-arch', '6', '-dynamic', '-goroot', '/Users/darianhickman/go_appengine/goroot', '-nobuild_files', '^^$', '-unsafe', '-gopath', '/Users/darianhickman/gowork', '-binary_name', '_go_app', '-extra_imports', 'appengine_internal/init', '-work_dir', '/var/folders/fk/wknp5jzn53gbgbml0yn695_m0000gn/T/tmpsHFP6tappengine-go-bin', '-gcflags', '-I,/Users/darianhickman/go_appengine/goroot/pkg/darwin_amd64_appengine', '-ldflags', '-L,/Users/darianhickman/go_appengine/goroot/pkg/darwin_amd64_appengine', 'hello.go)', '/Users/darianhickman/gowork/src/golang.org/x/net/context/ctxhttp/ctxhttp.go:35:', 'req.Cancel', 'undefined', '(type', '*http.Request', 'has', 'no', 'field', 'or', 'method', 'Cancel)', '2016/05/24', '19:39:17', 'go-app-builder:', 'build', 'timing:', '6×6g', '(469ms', 'total),', '0×6l', '(0', 'total)', '2016/05/24', '19:39:17', 'go-app-builder:', 'failed', 'running', '6g:', 'exit', 'status', '1', 'When', 'I', 'research', 'the', 'error', '*http.Request', 'has', 'no', 'field', 'or', 'method', 'Cancel', 'it', 'leads', 'to', 'a', 'bunch', 'of', 'nonapplicable', 'posts', 'about', 'updating', 'to', '>Go1.5.', 'Source:']","['DT', 'NNS', 'NN', 'IN', 'JJ', 'NNP', 'NN', 'VBP', 'JJ', 'JJ', 'NNP', 'NN', 'NNP', 'IN', 'NN', 'DT', 'NNP', 'NN', 'MD', 'RB', 'VB', 'RB', 'VBN', 'JJ', 'JJ', 'NN', 'NNP', 'VBZ', 'CD', 'JJ', 'NN', 'NN', 'VBZ', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'VBZ', 'JJ', 'JJ', 'JJ', 'NNS', 'VBP', 'JJ', 'NNP', 'NN', 'NNP', 'NN', 'VBD', 'JJ', 'NNP', 'VBZ', 'DT', 'NN', 'CC', 'NN', 'NNP', 'CD', 'CD', 'JJ', 'NN', 'NN', 'CD', 'NNP', 'VBD', 'CD', 'NNP', 'VBD', 'CD', 'CD', 'NN', 'VBD', 'VBG', 'CD', 'NN', 'NN', 'CD', 'WRB', 'PRP', 'NN', 'DT', 'NN', 'NNP', 'VBZ', 'DT', 'NN', 'CC', 'NN', 'NNP', 'PRP', 'VBZ', 'TO', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'IN', 'VBG', 'TO', 'VB', 'NNP']"
1, package hello,"['package', 'hello']","['KEYWORD', 'IDENTIFIER']"
2,import (,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
3,"    ""encoding/json""","['""encoding/json""']",['STRING_LITERAL']
4,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
5,"    ""golang.org/x/net/context""","['""golang.org/x/net/context""']",['STRING_LITERAL']
6,"    ""golang.org/x/oauth2""","['""golang.org/x/oauth2""']",['STRING_LITERAL']
7,"    ""golang.org/x/oauth2/google""","['""golang.org/x/oauth2/google""']",['STRING_LITERAL']
8,"    ""google.golang.org/api/drive/v3""","['""google.golang.org/api/drive/v3""']",['STRING_LITERAL']
9,"    _ ""google.golang.org/appengine/urlfetch""","['_', '""google.golang.org/appengine/urlfetch""']","['IDENTIFIER', 'STRING_LITERAL']"
10,"    ""io/ioutil""","['""io/ioutil""']",['STRING_LITERAL']
11,"    ""log""","['""log""']",['STRING_LITERAL']
12,"    ""net/http""","['""net/http""']",['STRING_LITERAL']
13,"    ""net/url""","['""net/url""']",['STRING_LITERAL']
14,"    ""os""","['""os""']",['STRING_LITERAL']
15,"    ""os/user""","['""os/user""']",['STRING_LITERAL']
16,"    ""path/filepath""","['""path/filepath""']",['STRING_LITERAL']
17,),[')'],['PUNCTUATION']
18,const (,"['const', '(']","['KEYWORD', 'PUNCTUATION']"
19,"    assetfolder = ""0B-zdryEj60U_MXVkajFweXBQWHM""","['assetfolder', '=', '""0B-zdryEj60U_MXVkajFweXBQWHM""']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
20,),[')'],['PUNCTUATION']
21,var (,"['var', '(']","['KEYWORD', 'PUNCTUATION']"
22,    dir *drive.FileList,"['dir', '*', 'drive', '.', 'FileList']","['IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
23,),[')'],['PUNCTUATION']
24,func init() {,"['func', 'init', '()', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
25,"    http.HandleFunc(""/"", handler)","['http.HandleFunc(""/"", handler)']",['FUNCTION_CALL']
26,    ctx := context.Background(),"['ctx', ':=', 'context.Background()']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
27,"    b, err := ioutil.ReadFile(""client_secret.json"")","['b', ',', 'err', ':=', 'ioutil.ReadFile(""client_secret.json"")']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
28,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
29,"        log.Fatalf(""Unable to read client secret file: %v"", err)","['log.Fatalf(""Unable to read client secret file: %v"", err)']",['FUNCTION_CALL']
30,    },['}'],['PUNCTUATION']
31,"    // If modifying these scopes, delete your previously saved credentials","['//', 'If', 'modifying', 'these', 'scopes,', 'delete', 'your', 'previously', 'saved', 'credentials']","['COMMENT', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'PRP$', 'RB', 'VBN', 'NNS']"
32,    // at ~/.credentials/drive-go-quickstart.json,"['//', 'at', '~/.credentials/drive-go-quickstart.json']","['COMMENT', 'IN', 'JJ']"
33,"    config, err := google.ConfigFromJSON(b, drive.DriveMetadataReadonlyScope)","['config', ',', 'err', ':=', 'go', 'ogle.ConfigFromJSON(b, drive.DriveMetadataReadonlyScope)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'FUNCTION_CALL']"
34,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
35,"        log.Fatalf(""Unable to parse client secret file to config: %v"", err)","['log.Fatalf(""Unable to parse client secret file to config: %v"", err)']",['FUNCTION_CALL']
36,    },['}'],['PUNCTUATION']
37,"    client := getClient(ctx, config)","['client', ':=', 'getClient', '(', 'ctx', ',', 'config', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
38,"    srv, err := drive.New(client)","['srv', ',', 'err', ':=', 'drive.New(client)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
39,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
40,"        log.Fatalf(""Unable to retrieve drive Client %v"", err)","['log.Fatalf(""Unable to retrieve drive Client %v"", err)']",['FUNCTION_CALL']
41,    },['}'],['PUNCTUATION']
42,"    dir, err = srv.Files.List().PageSize(10).","['dir', ',', 'err', '=', 'srv', '.', 'Files.List().PageSize(10)', '.']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL', 'PUNCTUATION']"
43,"        Fields(""nextPageToken, files(id, name)"").Do()","['Fields', '(', '""nextPageToken, files(id, name)""', ').', 'Do', '()']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
44,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
45,"        log.Fatalf(""Unable to retrieve files."", err)","['log.Fatalf(""Unable to retrieve files."", err)']",['FUNCTION_CALL']
46,    },['}'],['PUNCTUATION']
47,},['}'],['PUNCTUATION']
48,"func handler(w http.ResponseWriter, r *http.Request) {","['func', 'handler', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
49,"    //fmt.Fprint(w, r.RequestURI)","['//', 'fmt.Fprint(w,', 'r.RequestURI)']","['COMMENT', 'NN', 'NN']"
50,"    fmt.Fprint(w, ""Files:"")","['fmt.Fprint(w, ""Files:"")']",['FUNCTION_CALL']
51,    if len(dir.Files) > 0 {,"['if', 'len', '(', 'dir', '.', 'Files', ')', '>', '0', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
52,"        for _, i := range dir.Files {","['for', '_', ',', 'i', ':=', 'range', 'dir', '.', 'Files', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
53,"            fmt.Fprint(w, ""%s (%s)\n"", i.Name, i.Id)","['fmt.Fprint(w, ""%s (%s)\\n"", i.Name, i.Id)']",['FUNCTION_CALL']
54,        },['}'],['PUNCTUATION']
55,    } else {,"['}', 'else', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
56,"        fmt.Fprint(w, ""No files found."")","['fmt.Fprint(w, ""No files found."")']",['FUNCTION_CALL']
57,    },['}'],['PUNCTUATION']
58,},['}'],['PUNCTUATION']
59,// getClient uses a Context and Config to retrieve a Token,"['//', 'getClient', 'uses', 'a', 'Context', 'and', 'Config', 'to', 'retrieve', 'a', 'Token']","['COMMENT', 'NN', 'VBZ', 'DT', 'NNP', 'CC', 'NNP', 'TO', 'VB', 'DT', 'NNP']"
60,// then generate a Client. It returns the generated Client.,"['//', 'then', 'generate', 'a', 'Client.', 'It', 'returns', 'the', 'generated', 'Client.']","['COMMENT', 'RB', 'VB', 'DT', 'NNP', 'PRP', 'VBZ', 'DT', 'JJ', 'NNP']"
61,"func getClient(ctx context.Context, config *oauth2.Config) *http.Client {","['func', 'getClient', '(', 'ctx', 'context', '.', 'Context', ',', 'config', '*', 'oauth2', '.', 'Config', ')', '*', 'http', '.', 'Client', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
62,"    cacheFile, err := tokenCacheFile()","['cacheFile', ',', 'err', ':=', 'tokenCacheFile', '()']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
63,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
64,"        log.Fatalf(""Unable to get path to cached credential file. %v"", err)","['log.Fatalf(""Unable to get path to cached credential file. %v"", err)']",['FUNCTION_CALL']
65,    },['}'],['PUNCTUATION']
66,"    tok, err := tokenFromFile(cacheFile)","['tok', ',', 'err', ':=', 'tokenFromFile', '(', 'cacheFile', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
67,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
68,        tok = getTokenFromWeb(config),"['tok', '=', 'getTokenFromWeb', '(', 'config', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
69,"        saveToken(cacheFile, tok)","['saveToken', '(', 'cacheFile', ',', 'tok', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
70,    },['}'],['PUNCTUATION']
71,"    return config.Client(ctx, tok)","['return', 'config.Client(ctx, tok)']","['KEYWORD', 'FUNCTION_CALL']"
72,},['}'],['PUNCTUATION']
73,// getTokenFromWeb uses Config to request a Token.,"['//', 'getTokenFromWeb', 'uses', 'Config', 'to', 'request', 'a', 'Token.']","['COMMENT', 'NN', 'VBZ', 'NNP', 'TO', 'VB', 'DT', 'NN']"
74,// It returns the retrieved Token.,"['//', 'It', 'returns', 'the', 'retrieved', 'Token.']","['COMMENT', 'PRP', 'VBZ', 'DT', 'JJ', 'NNP']"
75,func getTokenFromWeb(config *oauth2.Config) *oauth2.Token {,"['func', 'getTokenFromWeb', '(', 'config', '*', 'oauth2', '.', 'Config', ')', '*', 'oauth2', '.', 'Token', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
76,"    authURL := config.AuthCodeURL(""state-token"", oauth2.AccessTypeOffline)","['authURL', ':=', 'config.AuthCodeURL(""state-token"", oauth2.AccessTypeOffline)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
77,"    fmt.Printf(""Go to the following link in your browser then type the ""+","['fmt', '.', 'Printf', '(', '""Go to the following link in your browser then type the ""', '+']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'ARITHMETIC_OPERATOR']"
78,"        ""authorization code: \n%v\n"", authURL)","['""authorization code: \\n%v\\n""', ',', 'authURL', ')']","['STRING_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
79,    var code string,"['var', 'code', 'string']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
80,"    if _, err := fmt.Scan(&code); err != nil {","['if', '_', ',', 'err', ':=', 'fmt.Scan(&code)', ';', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
81,"        log.Fatalf(""Unable to read authorization code %v"", err)","['log.Fatalf(""Unable to read authorization code %v"", err)']",['FUNCTION_CALL']
82,    },['}'],['PUNCTUATION']
83,"    tok, err := config.Exchange(oauth2.NoContext, code)","['tok', ',', 'err', ':=', 'config.Exchange(oauth2.NoContext, code)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
84,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
85,"        log.Fatalf(""Unable to retrieve token from web %v"", err)","['log.Fatalf(""Unable to retrieve token from web %v"", err)']",['FUNCTION_CALL']
86,    },['}'],['PUNCTUATION']
87,    return tok,"['return', 'tok']","['KEYWORD', 'IDENTIFIER']"
88,},['}'],['PUNCTUATION']
89,// tokenCacheFile generates credential file path/filename.,"['//', 'tokenCacheFile', 'generates', 'credential', 'file', 'path/filename.']","['COMMENT', 'NN', 'VBZ', 'JJ', 'NN', 'NN']"
90,// It returns the generated credential path/filename.,"['//', 'It', 'returns', 'the', 'generated', 'credential', 'path/filename.']","['COMMENT', 'PRP', 'VBZ', 'DT', 'JJ', 'JJ', 'NN']"
91,"func tokenCacheFile() (string, error) {","['func', 'tokenCacheFile', '()', '(', 'string', ',', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
92,"    usr, err := user.Current()","['usr', ',', 'err', ':=', 'user.Current()']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
93,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
94,"        return """", err","['return', '""""', ',', 'err']","['KEYWORD', 'STRING_LITERAL', 'PUNCTUATION', 'IDENTIFIER']"
95,    },['}'],['PUNCTUATION']
96,"    tokenCacheDir := filepath.Join(usr.HomeDir, "".credentials"")","['tokenCacheDir', ':=', 'filepath.Join(usr.HomeDir, "".credentials"")']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
97,"    os.MkdirAll(tokenCacheDir, 0700)","['os.MkdirAll(tokenCacheDir, 0700)']",['FUNCTION_CALL']
98,"    return filepath.Join(tokenCacheDir,","['return', 'filepath', '.', 'Join', '(', 'tokenCacheDir', ',']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
99,"        url.QueryEscape(""drive-go-quickstart.json"")), err","['url.QueryEscape(""drive-go-quickstart.json""))', ',', 'err']","['FUNCTION_CALL', 'PUNCTUATION', 'IDENTIFIER']"
100,},['}'],['PUNCTUATION']
101,// tokenFromFile retrieves a Token from a given file path.,"['//', 'tokenFromFile', 'retrieves', 'a', 'Token', 'from', 'a', 'given', 'file', 'path.']","['COMMENT', 'NN', 'VBZ', 'DT', 'NNP', 'IN', 'DT', 'VBN', 'NN', 'NN']"
102,// It returns the retrieved Token and any read error encountered.,"['//', 'It', 'returns', 'the', 'retrieved', 'Token', 'and', 'any', 'read', 'error', 'encountered.']","['COMMENT', 'PRP', 'VBZ', 'DT', 'JJ', 'NNP', 'CC', 'DT', 'JJ', 'NN', 'NN']"
103,"func tokenFromFile(file string) (*oauth2.Token, error) {","['func', 'tokenFromFile', '(', 'file', 'string', ')', '(*', 'oauth2', '.', 'Token', ',', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
104,"    f, err := os.Open(file)","['f', ',', 'err', ':=', 'os.Open(file)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
105,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
106,"        return nil, err","['return', 'nil', ',', 'err']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
107,    },['}'],['PUNCTUATION']
108,    t := &oauth2.Token{},"['t', ':=', '&', 'oauth2', '.', 'Token', '{}']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
109,    err = json.NewDecoder(f).Decode(t),"['err', '=', 'json.NewDecoder(f).Decode(t)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
110,    defer f.Close(),"['defer', 'f.Close()']","['IDENTIFIER', 'FUNCTION_CALL']"
111,"    return t, err","['return', 't', ',', 'err']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
112,},['}'],['PUNCTUATION']
113,// saveToken uses a file path to create a file and store the,"['//', 'saveToken', 'uses', 'a', 'file', 'path', 'to', 'create', 'a', 'file', 'and', 'store', 'the']","['COMMENT', 'JJ', 'VBZ', 'DT', 'JJ', 'NN', 'TO', 'VB', 'DT', 'NN', 'CC', 'NN', 'DT']"
114,// token in it.,"['//', 'token', 'in', 'it.']","['COMMENT', 'VBN', 'IN', 'NN']"
115,"func saveToken(file string, token *oauth2.Token) {","['func', 'saveToken', '(', 'file', 'string', ',', 'token', '*', 'oauth2', '.', 'Token', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
116,"    fmt.Printf(""Saving credential file to: %s\n"", file)","['fmt.Printf(""Saving credential file to: %s\\n"", file)']",['FUNCTION_CALL']
117,"    f, err := os.Create(file)","['f', ',', 'err', ':=', 'os.Create(file)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
118,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
119,"        log.Fatalf(""Unable to cache oauth token: %v"", err)","['log.Fatalf(""Unable to cache oauth token: %v"", err)']",['FUNCTION_CALL']
120,    },['}'],['PUNCTUATION']
121,    defer f.Close(),"['defer', 'f.Close()']","['IDENTIFIER', 'FUNCTION_CALL']"
122,    json.NewEncoder(f).Encode(token),['json.NewEncoder(f).Encode(token)'],['FUNCTION_CALL']
123,},['}'],['PUNCTUATION']
124,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
125,    ctx := context.Background(),"['ctx', ':=', 'context.Background()']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
126,"    b, err := ioutil.ReadFile(""client_secret.json"")","['b', ',', 'err', ':=', 'ioutil.ReadFile(""client_secret.json"")']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
127,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
128,"        log.Fatalf(""Unable to read client secret file: %v"", err)","['log.Fatalf(""Unable to read client secret file: %v"", err)']",['FUNCTION_CALL']
129,    },['}'],['PUNCTUATION']
130,"    // If modifying these scopes, delete your previously saved credentials","['//', 'If', 'modifying', 'these', 'scopes,', 'delete', 'your', 'previously', 'saved', 'credentials']","['COMMENT', 'IN', 'VBG', 'DT', 'JJ', 'NN', 'PRP$', 'RB', 'VBN', 'NNS']"
131,    // at ~/.credentials/drive-go-quickstart.json,"['//', 'at', '~/.credentials/drive-go-quickstart.json']","['COMMENT', 'IN', 'JJ']"
132,"    config, err := google.ConfigFromJSON(b, drive.DriveMetadataReadonlyScope)","['config', ',', 'err', ':=', 'go', 'ogle.ConfigFromJSON(b, drive.DriveMetadataReadonlyScope)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'FUNCTION_CALL']"
133,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
134,"        log.Fatalf(""Unable to parse client secret file to config: %v"", err)","['log.Fatalf(""Unable to parse client secret file to config: %v"", err)']",['FUNCTION_CALL']
135,    },['}'],['PUNCTUATION']
136,"    client := getClient(ctx, config)","['client', ':=', 'getClient', '(', 'ctx', ',', 'config', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
137,"    srv, err := drive.New(client)","['srv', ',', 'err', ':=', 'drive.New(client)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
138,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
139,"        log.Fatalf(""Unable to retrieve drive Client %v"", err)","['log.Fatalf(""Unable to retrieve drive Client %v"", err)']",['FUNCTION_CALL']
140,    },['}'],['PUNCTUATION']
141,"    r, err := srv.Files.List().PageSize(10).","['r', ',', 'err', ':=', 'srv', '.', 'Files.List().PageSize(10)', '.']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL', 'PUNCTUATION']"
142,"        Fields(""nextPageToken, files(id, name)"").Do()","['Fields', '(', '""nextPageToken, files(id, name)""', ').', 'Do', '()']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
143,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
144,"        log.Fatalf(""Unable to retrieve files."", err)","['log.Fatalf(""Unable to retrieve files."", err)']",['FUNCTION_CALL']
145,    },['}'],['PUNCTUATION']
146,"    fmt.Println(""Files:"")","['fmt.Println(""Files:"")']",['FUNCTION_CALL']
147,    if len(r.Files) > 0 {,"['if', 'len', '(', 'r', '.', 'Files', ')', '>', '0', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
148,"        for _, i := range r.Files {","['for', '_', ',', 'i', ':=', 'range', 'r', '.', 'Files', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
149,"            fmt.Printf(""%s (%s)\n"", i.Name, i.Id)","['fmt.Printf(""%s (%s)\\n"", i.Name, i.Id)']",['FUNCTION_CALL']
150,        },['}'],['PUNCTUATION']
151,    } else {,"['}', 'else', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
152,"        fmt.Print(""No files found."")","['fmt.Print(""No files found."")']",['FUNCTION_CALL']
153,    },['}'],['PUNCTUATION']
154,},['}'],['PUNCTUATION']
