,text,token,annotation
0,"I'm not familiar with Perl and Dumper, but from what I understand of your post and the related C post (and the very name of the function!), it outputs the content of the data structure.

You can do this using the %v verb of the fmt package. I assume your JSON data is decoded into a struct or a map. Using ","['I', ""'m"", 'not', 'familiar', 'with', 'Perl', 'and', 'Dumper', ',', 'but', 'from', 'what', 'I', 'understand', 'of', 'your', 'post', 'and', 'the', 'related', 'C', 'post', '(', 'and', 'the', 'very', 'name', 'of', 'the', 'function', '!', ')', ',', 'it', 'outputs', 'the', 'content', 'of', 'the', 'data', 'structure', '.', 'You', 'can', 'do', 'this', 'using', 'the', '%', 'v', 'verb', 'of', 'the', 'fmt', 'package', '.', 'I', 'assume', 'your', 'JSON', 'data', 'is', 'decoded', 'into', 'a', 'struct', 'or', 'a', 'map', '.', 'Using']","['PRP', 'VBP', 'RB', 'JJ', 'IN', 'NNP', 'CC', 'NNP', ',', 'CC', 'IN', 'WP', 'PRP', 'VBP', 'IN', 'PRP$', 'NN', 'CC', 'DT', 'JJ', 'NNP', 'NN', '(', 'CC', 'DT', 'RB', 'NN', 'IN', 'DT', 'NN', '.', ')', ',', 'PRP', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'NN', '.', 'PRP', 'MD', 'VB', 'DT', 'VBG', 'DT', 'SYM', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', '.', 'PRP', 'VBP', 'PRP$', 'NNP', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NN', 'CC', 'DT', 'NN', '.', ‘VBG']"
1,"fmt.Printf(""%v"", json_obj)","['fmt.Printf(""%v"", json_obj)']",['FUNCTION_CALL']
2," will output the values, while %+v will add field names (for a struct - no difference if its a map, %v will output both keys and values), and %#v will output type information too.
","['will', 'output', 'the', 'values', ',', 'while', '%', '+v', 'will', 'add', 'field', 'names', '(', 'for', 'a', 'struct', '-', 'no', 'difference', 'if', 'its', 'a', 'map', ',', '%', 'v', 'will', 'output', 'both', 'keys', 'and', 'values', ')', ',', 'and', '%', '#', 'v', 'will', 'output', 'type', 'information', 'too', '.']","['MD', ‘VB', 'DT', 'NNS', ',', 'IN', 'NN', 'NN', 'MD', 'VB', 'NN', 'NNS', '(', 'IN', 'DT', 'NN', ':', 'DT', 'NN', 'IN', 'PRP$', 'DT', 'NN', ',', 'NN', 'NN', 'MD', 'VB', 'DT', 'NNS', 'CC', 'NNS', ')', ',', 'CC', 'NN', '#', 'NN', 'MD', ‘VB', ‘NN', 'NN', 'RB', '.']"