,text,token,annotation
0,"This is what i normally do. 

","['This', 'is', 'what', 'i', 'normally', 'do.']","['DT', 'VBZ', 'WP', 'JJ', 'RB', 'VBP']"
1,package mongo,"['package', 'mongo']","['KEYWORD', 'IDENTIFIER']"
2,import (,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
3,"    ""time""","['""time""']",['STRING_LITERAL']
4,"    ""gopkg.in/mgo.v2""","['""gopkg.in/mgo.v2""']",['STRING_LITERAL']
5,),[')'],['PUNCTUATION']
6,// DataStore containing a pointer to a mgo session,"['//', 'DataStore', 'containing', 'a', 'pointer', 'to', 'a', 'mgo', 'session']","['COMMENT', 'NNP', 'VBG', 'DT', 'NN', 'TO', 'DT', 'NN', 'NN']"
7,type DataStore struct {,"['type', 'DataStore', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
8,    Session *mgo.Session,"['Session', '*', 'mgo', '.', 'Session']","['IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
9,},['}'],['PUNCTUATION']
10,// ConnectToTagserver is a helper method that connections to pubgears' tagserver,"['//', 'ConnectToTagserver', 'is', 'a', 'helper', 'method', 'that', 'connections', 'to', ""pubgears'"", 'tagserver']","['COMMENT', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', 'WDT', 'NNS', 'TO', 'VB', 'NN']"
11,// database,"['//', 'database']","['COMMENT', 'NN']"
12,func (ds *DataStore) ConnectToTagserver() {,"['func', '(', 'ds', '*', 'DataStore', ')', 'ConnectToTagserver', '()', '{']","['KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
13,    mongoDBDialInfo := &mgo.DialInfo{,"['mongoDBDialInfo', ':=', '&', 'mgo', '.', 'DialInfo', '{']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
14,"        Addrs:    []string{""some IP""},","['Addrs', ':', '[]', 'string', '{', '""some IP""', '},']","['IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
15,"        Timeout:  60 * time.Second,","['Timeout', ':', '60', '*', 'time', '.', 'Second', ',']","['IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
16,"        Database: ""some db"",","['Database', ':', '""some db""', ',']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
17,    },['}'],['PUNCTUATION']
18,"    sess, err := mgo.DialWithInfo(mongoDBDialInfo)","['sess', ',', 'err', ':=', 'mgo.DialWithInfo(mongoDBDialInfo)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
19,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
20,        panic(err),"['panic', '(', 'err', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
21,    },['}'],['PUNCTUATION']
22,"    sess.SetMode(mgo.Monotonic, true)","['sess.SetMode(mgo.Monotonic, true)']",['FUNCTION_CALL']
23,    ds.Session = sess,"['ds', '.', 'Session', '=', 'sess']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
24,},['}'],['PUNCTUATION']
25,// Close is a helper method that ensures the session is properly terminated,"['//', 'Close', 'is', 'a', 'helper', 'method', 'that', 'ensures', 'the', 'session', 'is', 'properly', 'terminated']","['COMMENT', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', 'WDT', 'VBZ', 'DT', 'NN', 'VBZ', 'RB', 'VBN']"
26,func (ds *DataStore) Close() {,"['func', '(', 'ds', '*', 'DataStore', ')', 'Close', '()', '{']","['KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
27,    ds.Session.Close(),"['ds', '.', 'Session.Close()']","['IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL']"
28,},['}'],['PUNCTUATION']
29,"

Then in my models package I do something like this

","['Then', 'in', 'my', 'models', 'package', 'I', 'do', 'something', 'like', 'this']","['RB', 'IN', 'PRP$', 'NNS', 'NN', 'PRP', 'VBP', 'NN', 'IN', 'DT']"
30,package models,"['package', 'models']","['KEYWORD', 'IDENTIFIER']"
31,import (,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
32,"    ""./mongo""","['""./mongo""']",['STRING_LITERAL']
33,"    ""gopkg.in/mgo.v2/bson""","['""gopkg.in/mgo.v2/bson""']",['STRING_LITERAL']
34,),[')'],['PUNCTUATION']
35,// AdSize represents the data object stucture that is returned by querying,"['//', 'AdSize', 'represents', 'the', 'data', 'object', 'stucture', 'that', 'is', 'returned', 'by', 'querying']","['COMMENT', 'NNP', 'VBZ', 'DT', 'NNS', 'VBP', 'NN', 'WDT', 'VBZ', 'VBN', 'IN', 'VBG']"
36,// mongo's account collection,"['//', ""mongo's"", 'account', 'collection']","['COMMENT', 'NN', 'NN', 'NN']"
37,type AdSize struct {,"['type', 'AdSize', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
38,"    ID        bson.ObjectId `bson:""_id,omitempty""`","['ID', 'bson', '.', 'ObjectId', 'bson', ':', '""_id,omitempty""']","['IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
39,"    Providers []string      `bson:""providers""`","['Providers', '[]', 'string', 'bson', ':', '""providers""']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
40,"    Size      string        `bson:""size""`","['Size', 'string', 'bson', ':', '""size""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
41,},['}'],['PUNCTUATION']
42,// GetAllAdsizes is a helper function designed to retrieve all the objects in the,"['//', 'GetAllAdsizes', 'is', 'a', 'helper', 'function', 'designed', 'to', 'retrieve', 'all', 'the', 'objects', 'in', 'the']","['COMMENT', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', 'VBN', 'TO', 'VB', 'PDT', 'DT', 'NNS', 'IN', 'DT']"
43,// adsize collection,"['//', 'adsize', 'collection']","['COMMENT', 'VB', 'NN']"
44,"func GetAllAdsizes() ([]AdSize, error) {","['func', 'GetAllAdsizes', '()', '([]', 'AdSize', ',', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
45,    ds := mongo.DataStore{},"['ds', ':=', 'mongo', '.', 'DataStore', '{}']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
46,    ds.ConnectToTagserver(),['ds.ConnectToTagserver()'],['FUNCTION_CALL']
47,    defer ds.Close(),"['defer', 'ds.Close()']","['IDENTIFIER', 'FUNCTION_CALL']"
48,    adSizes := []AdSize{},"['adSizes', ':=', '[]', 'AdSize', '{}']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
49,"    adSizeCollection := ds.Session.DB(""some database"").C(""some collection"")","['adSizeCollection', ':=', 'ds', '.', 'Session.DB(""some database"").C(""some collection"")']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL']"
50,"    err := adSizeCollection.Find(bson.M{}).Sort(""name"").All(&adSizes)","['err', ':=', 'adSizeCollection.Find(bson.M{}).Sort(""name"").All(&adSizes)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
51,"    return adSizes, err","['return', 'adSizes', ',', 'err']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
52,},['}'],['PUNCTUATION']
53,"

So I created a session wrapper in the mongo file, then create a session object in the models file, then lastly in some route file i call the method GetAllAdsizes(), which handled my mongo session.  The session is keep alive until the the end of the GetAllAdsizes() method, as it was closed on defer. However something like this can be modified, where you handle all the user stuff and then close the session if user logs out. Also take a look here Best practice to maintain a mgo session, where you can see a similar type of logic.
","['So', 'I', 'created', 'a', 'session', 'wrapper', 'in', 'the', 'mongo', 'file,', 'then', 'create', 'a', 'session', 'object', 'in', 'the', 'models', 'file,', 'then', 'lastly', 'in', 'some', 'route', 'file', 'i', 'call', 'the', 'method', 'GetAllAdsizes(),', 'which', 'handled', 'my', 'mongo', 'session.', 'The', 'session', 'is', 'keep', 'alive', 'until', 'the', 'the', 'end', 'of', 'the', 'GetAllAdsizes()', 'method,', 'as', 'it', 'was', 'closed', 'on', 'defer.', 'However', 'something', 'like', 'this', 'can', 'be', 'modified,', 'where', 'you', 'handle', 'all', 'the', 'user', 'stuff', 'and', 'then', 'close', 'the', 'session', 'if', 'user', 'logs', 'out.', 'Also', 'take', 'a', 'look', 'here', 'Best', 'practice', 'to', 'maintain', 'a', 'mgo', 'session,', 'where', 'you', 'can', 'see', 'a', 'similar', 'type', 'of', 'logic.']","['RB', 'PRP', 'VBD', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'NN', 'RB', 'VB', 'DT', 'NN', 'NN', 'IN', 'DT', 'NNS', 'VBP', 'RB', 'RB', 'IN', 'DT', 'NN', 'NN', 'NN', 'VBP', 'DT', 'NN', 'NNP', 'WDT', 'VBD', 'PRP$', 'NN', 'VBZ', 'DT', 'NN', 'VBZ', 'JJ', 'JJ', 'IN', 'DT', 'DT', 'NN', 'IN', 'DT', 'NNP', 'NN', 'IN', 'PRP', 'VBD', 'VBN', 'IN', 'NN', 'RB', 'NN', 'IN', 'DT', 'MD', 'VB', 'VBN', 'WRB', 'PRP', 'VBP', 'PDT', 'DT', 'NN', 'NN', 'CC', 'RB', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'NN', 'RB', 'VBP', 'DT', 'NN', 'RB', 'NNP', 'NN', 'TO', 'VB', 'DT', 'NN', 'NN', 'WRB', 'PRP', 'MD', 'VB', 'DT', 'JJ', 'NN', 'IN', 'NN']"
