,text,token,annotation
0,"This code gets the page data through a proxy.
It start from id of page = 1 and continue till 100000

","['This', 'code', 'gets', 'the', 'page', 'data', 'through', 'a', 'proxy.', 'It', 'start', 'from', 'id', 'of', 'page', '=', '1', 'and', 'continue', 'till', '100000']","['DT', 'NN', 'VBZ', 'DT', 'NN', 'NNS', 'IN', 'DT', 'NN', 'PRP', 'VBZ', 'IN', 'NN', 'IN', 'NN', '$', 'CD', 'CC', 'VB', 'NN', 'CD']"
1,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
2,import (,"['import', '(']","['KEYWORD', 'OPERATOR']"
3,"    ""code.google.com/p/gcfg""","['""code.google.com/p/gcfg""']",['STRING_LITERAL']
4,"    ""database/sql""","['""database/sql""']",['STRING_LITERAL']
5,"    ""flag""","['""flag""']",['STRING_LITERAL']
6,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
7,"    _ ""github.com/go-sql-driver/mysql""","['_', '""github.com/go-sql-driver/mysql""']","['IDENTIFIER', 'STRING_LITERAL']"
8,"    ""github.com/parnurzeal/gorequest""","['""github.com/parnurzeal/gorequest""']",['STRING_LITERAL']
9,"    ""log""","['""log""']",['STRING_LITERAL']
10,"    ""strconv""","['""strconv""']",['STRING_LITERAL']
11,"    ""time""","['""time""']",['STRING_LITERAL']
12,),[')'],['OPERATOR']
13,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
14,    t := time.Now(),"['t', ':=', 'time.Now()']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
15,    initConfig(),"['initConfig', '()']","['IDENTIFIER', 'OPERATOR']"
16,    initRoundRobin(),"['initRoundRobin', '()']","['IDENTIFIER', 'OPERATOR']"
17,    for i := vStart; i <= vStop; i++ {,"['for', 'i', ':=', 'vStart', ';', 'i', '<=', 'vStop', ';', 'i', '++', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
18,"        cache(""https://site.ru/url/""+strconv.Itoa(i), ""url"", i)","['cache(""https://site.ru/url/""+strconv.Itoa(i),', '""url""', ',', 'i', ')']","['DIRECTORY', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
19,    },['}'],['OPERATOR']
20,"    fmt.Println(""Time: "", time.Since(t))","['fmt.Println(""Time: "", time.Since(t))']",['FUNCTION_CALL']
21,},['}'],['OPERATOR']
22,var (,"['var', '(']","['KEYWORD', 'OPERATOR']"
23,    db                  *sql.DB,"['db', '*', 'sql', '.', 'DB']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
24,    config              ConfigStruct,"['config', 'ConfigStruct']","['IDENTIFIER', 'IDENTIFIER']"
25,"    configFile          = ""config.gcfg""","['configFile', '=', '""config.gcfg""']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
26,    roundRobin          map[int]string,"['roundRobin', 'map', '[', 'int', ']', 'string']","['IDENTIFIER', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
27,    roundRobinNextId    int,"['roundRobinNextId', 'int']","['IDENTIFIER', 'IDENTIFIER']"
28,    roundRobinMaxId     int,"['roundRobinMaxId', 'int']","['IDENTIFIER', 'IDENTIFIER']"
29,    vStart              int,"['vStart', 'int']","['IDENTIFIER', 'IDENTIFIER']"
30,    vStop               int,"['vStop', 'int']","['IDENTIFIER', 'IDENTIFIER']"
31,    vPart               int,"['vPart', 'int']","['IDENTIFIER', 'IDENTIFIER']"
32,    vScriptCount        int,"['vScriptCount', 'int']","['IDENTIFIER', 'IDENTIFIER']"
33,    roundRobinShift     int,"['roundRobinShift', 'int']","['IDENTIFIER', 'IDENTIFIER']"
34,    failedRequestCount  int,"['failedRequestCount', 'int']","['IDENTIFIER', 'IDENTIFIER']"
35,    successRequestCount int,"['successRequestCount', 'int']","['IDENTIFIER', 'IDENTIFIER']"
36,),[')'],['OPERATOR']
37,type ConfigStruct struct {,"['type', 'ConfigStruct', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
38,    Database struct {,"['Database', 'struct', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR']"
39,        ConnectionString string,"['ConnectionString', 'string']","['IDENTIFIER', 'IDENTIFIER']"
40,        TableNameCache   string,"['TableNameCache', 'string']","['IDENTIFIER', 'IDENTIFIER']"
41,    },['}'],['OPERATOR']
42,    Part struct {,"['Part', 'struct', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR']"
43,        CurrentPart             int,"['CurrentPart', 'int']","['IDENTIFIER', 'IDENTIFIER']"
44,        CurrentProxyCheckerPart int,"['CurrentProxyCheckerPart', 'int']","['IDENTIFIER', 'IDENTIFIER']"
45,    },['}'],['OPERATOR']
46,},['}'],['OPERATOR']
47,type ProxyAddress struct {,"['type', 'ProxyAddress', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
48,    Id int,"['Id', 'int']","['IDENTIFIER', 'IDENTIFIER']"
49,    Ip string,"['Ip', 'string']","['IDENTIFIER', 'IDENTIFIER']"
50,},['}'],['OPERATOR']
51,func check(e error) {,"['func', 'check', '(', 'e', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
52,    if e != nil {,"['if', 'e', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
53,        panic(e),"['panic', '(', 'e', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
54,        log.Fatal(e),['log.Fatal(e)'],['FUNCTION_CALL']
55,    },['}'],['OPERATOR']
56,},['}'],['OPERATOR']
57,"

Init connection to the database where stored proxy list and store all pages data.

","['Init', 'connection', 'to', 'the', 'database', 'where', 'stored', 'proxy', 'list', 'and', 'store', 'all', 'pages', 'data.']","['NNP', 'NN', 'TO', 'DT', 'NN', 'WRB', 'VBN', 'JJ', 'NN', 'CC', 'NN', 'DT', 'NNS', 'VBP']"
58,func initConfig() {,"['func', 'initConfig', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
59,"    if err := gcfg.ReadFileInto(&config, configFile); err != nil {","['if', 'err', ':=', 'gcfg.ReadFileInto(&config, configFile)', ';', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
60,        check(err),"['check', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
61,    },['}'],['OPERATOR']
62,"    connect, err := sql.Open(""mysql"", config.Database.ConnectionString)","['connect', ',', 'err', ':=', 'sql.Open(""mysql"", config.Database.ConnectionString)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
63,    check(err),"['check', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
64,    db = connect,"['db', '=', 'connect']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
65,    vScriptCount = 100000,"['vScriptCount', '=', '100000']","['IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL']"
66,"    flag.IntVar(&roundRobinShift, ""shift"", 0, """")","['flag.IntVar(&roundRobinShift, ""shift"", 0, """")']",['FUNCTION_CALL']
67,"    flag.IntVar(&vPart, ""part"", 0, ""select part"")","['flag.IntVar(&vPart, ""part"", 0, ""select part"")']",['FUNCTION_CALL']
68,"    flag.IntVar(&vStart, ""start"", (vPart*vScriptCount)+1, ""select start id"")","['flag.IntVar(&vStart, ""start"", (vPart*vScriptCount)+1, ""select start id"")']",['FUNCTION_CALL']
69,"    flag.IntVar(&vStop, ""stop"", (vPart+1)*vScriptCount, ""select stop id"")","['flag.IntVar(&vStop, ""stop"", (vPart+1)*vScriptCount, ""select stop id"")']",['FUNCTION_CALL']
70,    flag.Parse(),['flag.Parse()'],['FUNCTION_CALL']
71,    vStart = vStart + (vPart * vScriptCount),"['vStart', '=', 'vStart', '+', '(', 'vPart', '*', 'vScriptCount', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
72,    vStop = vStop + (vPart * vScriptCount),"['vStop', '=', 'vStop', '+', '(', 'vPart', '*', 'vScriptCount', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
73,    successRequestCount = 0,"['successRequestCount', '=', '0']","['IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL']"
74,},['}'],['OPERATOR']
75,"

Init list of proxies

","['Init', 'list', 'of', 'proxies']","['NNP', 'NN', 'IN', 'NNS']"
76,func initRoundRobin() {,"['func', 'initRoundRobin', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
77,    roundRobin = make(map[int]string),"['roundRobin', '=', 'make', '(', 'map', '[', 'int', ']', 'string', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
78,"    rows, err := db.Query(""SELECT id, ip FROM proxies WHERE status = 1 order by id asc"")","['rows', ',', 'err', ':=', 'db.Query(""SELECT id, ip FROM proxies WHERE status = 1 order by id asc"")']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
79,    check(err),"['check', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
80,    defer rows.Close(),"['defer', 'rows.Close()']","['IDENTIFIER', 'FUNCTION_CALL']"
81,    for rows.Next() {,"['for', 'rows.Next()', '{']","['KEYWORD', 'FUNCTION_CALL', 'OPERATOR']"
82,        pa := new(ProxyAddress),"['pa', ':=', 'new', '(', 'ProxyAddress', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
83,"        if err := rows.Scan(&pa.Id, &pa.Ip); err != nil {","['if', 'err', ':=', 'rows.Scan(&pa.Id, &pa.Ip)', ';', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
84,            check(err),"['check', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
85,        },['}'],['OPERATOR']
86,        roundRobin[pa.Id] = pa.Ip,"['roundRobin', '[', 'pa', '.', 'Id', ']', '=', 'pa', '.', 'Ip']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
87,        roundRobinMaxId = pa.Id,"['roundRobinMaxId', '=', 'pa', '.', 'Id']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
88,    },['}'],['OPERATOR']
89,    roundRobinNextId = roundRobinShift + successRequestCount,"['roundRobinNextId', '=', 'roundRobinShift', '+', 'successRequestCount']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
90,    if roundRobinNextId > roundRobinMaxId {,"['if', 'roundRobinNextId', '>', 'roundRobinMaxId', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
91,        roundRobinNextId = 0,"['roundRobinNextId', '=', '0']","['IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL']"
92,    },['}'],['OPERATOR']
93,    failedRequestCount = 0,"['failedRequestCount', '=', '0']","['IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL']"
94,},['}'],['OPERATOR']
95,"

Function check data from database and if it is not in it - script will do a request 

","['Function', 'check', 'data', 'from', 'database', 'and', 'if', 'it', 'is', 'not', 'in', 'it', '-', 'script', 'will', 'do', 'a', 'request']","['NNP', 'NN', 'NNS', 'IN', 'NN', 'CC', 'IN', 'PRP', 'VBZ', 'RB', 'IN', 'PRP', ':', 'NN', 'MD', 'VB', 'DT', 'NN']"
96,"func cache(url string, tag string, url_id int) ([]byte, error) {","['func', 'cache', '(', 'url', 'string', ',', 'tag', 'string', ',', 'url_id', 'int', ')', '([]', 'byte', ',', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
97,    var data string,"['var', 'data', 'string']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
98,"    err := db.QueryRow(""SELECT data FROM cache WHERE url_id=? AND tag=?"", url_id, tag).Scan(&data)","['err', ':=', 'db.QueryRow(""SELECT data FROM cache WHERE url_id=? AND tag=?"", url_id, tag).Scan(&data)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
99,    if err == sql.ErrNoRows {,"['if', 'err', '==', 'sql', '.', 'ErrNoRows', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
100,"        data, err := proxyRequest(url)","['data', ',', 'err', ':=', 'proxyRequest', '(', 'url', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
101,        check(err),"['check', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
102,"        insert, err := db.Prepare(""INSERT cache SET url_id=?, url=?, tag=?, data=?, datetime=?"")","['insert', ',', 'err', ':=', 'db.Prepare(""INSERT cache SET url_id=?, url=?, tag=?, data=?, datetime=?"")']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
103,"        datetime, err := strconv.ParseInt(time.Now().Format(""20060102150405""), 10, 64)","['datetime', ',', 'err', ':=', 'strconv.ParseInt(time.Now().Format(""20060102150405""), 10, 64)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
104,        check(err),"['check', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
105,"        insert.Exec(url_id, url, tag, data, datetime)","['insert.Exec(url_id, url, tag, data, datetime)']",['FUNCTION_CALL']
106,"        return []byte(data), nil","['return', '[]', 'byte', '(', 'data', '),', 'nil']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
107,    },['}'],['OPERATOR']
108,"    return []byte(data), nil","['return', '[]', 'byte', '(', 'data', '),', 'nil']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
109,},['}'],['OPERATOR']
110,"

Function make request through proxy to get page data. Each request get through new proxy server. Timeout per server = 10 sec. If server don't send a response - server will be deleted from roundrobin.

","['Function', 'make', 'request', 'through', 'proxy', 'to', 'get', 'page', 'data.', 'Each', 'request', 'get', 'through', 'new', 'proxy', 'server.', 'Timeout', 'per', 'server', '=', '10', 'sec.', 'If', 'server', ""don't"", 'send', 'a', 'response', '-', 'server', 'will', 'be', 'deleted', 'from', 'roundrobin.']","['NNP', 'VBP', 'NN', 'IN', 'NN', 'TO', 'VB', 'JJ', 'NN', 'DT', 'NN', 'VBP', 'IN', 'JJ', 'JJ', 'NN', 'NNP', 'IN', 'NN', 'VBP', 'CD', 'NN', 'IN', 'JJ', 'VBP', 'VB', 'DT', 'NN', ':', 'NN', 'MD', 'VB', 'VBN', 'IN', 'NN']"
111,"func proxyRequest(url string) ([]byte, error) {","['func', 'proxyRequest', '(', 'url', 'string', ')', '([]', 'byte', ',', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
112,    for {,"['for', '{']","['KEYWORD', 'OPERATOR']"
113,        roundRobinCurrentId := getNextRoundRobinId(),"['roundRobinCurrentId', ':=', 'getNextRoundRobinId', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
114,        proxy := roundRobin[roundRobinCurrentId],"['proxy', ':=', 'roundRobin', '[', 'roundRobinCurrentId', ']']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
115,"        request := gorequest.New().Timeout(10000 * time.Millisecond).Proxy(""http://"" + proxy)","['request', ':=', 'go', 'request.New().Timeout(10000 * time.Millisecond).Proxy(""http://"" + proxy)']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'FUNCTION_CALL']"
116,"        _, body, err := request.Get(url).End()","['_', ',', 'body', ',', 'err', ':=', 'request.Get(url).End()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
117,        if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
118,"            deleteRoundRobinId(roundRobinCurrentId, err[0].Error())","['deleteRoundRobinId', '(', 'roundRobinCurrentId', ',', 'err', '[', '0', '].', 'Error', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
119,            continue,['continue'],['KEYWORD']
120,        } else {,"['}', 'else', '{']","['OPERATOR', 'KEYWORD', 'OPERATOR']"
121,            successRequestCount++,"['successRequestCount', '++']","['IDENTIFIER', 'OPERATOR']"
122,        },['}'],['OPERATOR']
123,"        return []byte(body), nil","['return', '[]', 'byte', '(', 'body', '),', 'nil']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
124,        break,['break'],['KEYWORD']
125,    },['}'],['OPERATOR']
126,"    return []byte(""""), nil","['return', '[]', 'byte', '(', '""""', '),', 'nil']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER']"
127,},['}'],['OPERATOR']
128,"

Get next proxy server from list. If list is ended - script will wait for 30 seconds.

","['Get', 'next', 'proxy', 'server', 'from', 'list.', 'If', 'list', 'is', 'ended', '-', 'script', 'will', 'wait', 'for', '30', 'seconds.']","['NNP', 'JJ', 'NN', 'NN', 'IN', 'NN', 'IN', 'NN', 'VBZ', 'VBN', ':', 'NN', 'MD', 'VB', 'IN', 'CD', 'NN']"
129,func getNextRoundRobinId() int {,"['func', 'getNextRoundRobinId', '()', 'int', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
130,    for {,"['for', '{']","['KEYWORD', 'OPERATOR']"
131,        if len(roundRobin) == 0 {,"['if', 'len', '(', 'roundRobin', ')', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'OCTAL_LITERAL', 'OPERATOR']"
132,            initRoundRobin(),"['initRoundRobin', '()']","['IDENTIFIER', 'OPERATOR']"
133,            if len(roundRobin) == 0 {,"['if', 'len', '(', 'roundRobin', ')', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'OCTAL_LITERAL', 'OPERATOR']"
134,"                fmt.Println(""proxy is ended"")","['fmt.Println(""proxy is ended"")']",['FUNCTION_CALL']
135,                time.Sleep(30 * time.Second),['time.Sleep(30 * time.Second)'],['FUNCTION_CALL']
136,                initRoundRobin(),"['initRoundRobin', '()']","['IDENTIFIER', 'OPERATOR']"
137,            },['}'],['OPERATOR']
138,        },['}'],['OPERATOR']
139,        if roundRobinNextId == roundRobinMaxId {,"['if', 'roundRobinNextId', '==', 'roundRobinMaxId', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
140,            roundRobinNextId = 0,"['roundRobinNextId', '=', '0']","['IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL']"
141,        },['}'],['OPERATOR']
142,        roundRobinNextId++,"['roundRobinNextId', '++']","['IDENTIFIER', 'OPERATOR']"
143,"        _, ok := roundRobin[roundRobinNextId]","['_', ',', 'ok', ':=', 'roundRobin', '[', 'roundRobinNextId', ']']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
144,        if ok {,"['if', 'ok', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR']"
145,            break,['break'],['KEYWORD']
146,        },['}'],['OPERATOR']
147,    },['}'],['OPERATOR']
148,    return roundRobinNextId,"['return', 'roundRobinNextId']","['KEYWORD', 'IDENTIFIER']"
149,},['}'],['OPERATOR']
150,"

If response from proxy was bad - server will be deleted by this function.
If count of servers get 5 - list of proxy will be reinit.

","['If', 'response', 'from', 'proxy', 'was', 'bad', '-', 'server', 'will', 'be', 'deleted', 'by', 'this', 'function.', 'If', 'count', 'of', 'servers', 'get', '5', '-', 'list', 'of', 'proxy', 'will', 'be', 'reinit.']","['IN', 'NN', 'IN', 'NN', 'VBD', 'JJ', ':', 'NN', 'MD', 'VB', 'VBN', 'IN', 'DT', 'NN', 'IN', 'NN', 'IN', 'NNS', 'VBP', 'CD', ':', 'NN', 'IN', 'NN', 'MD', 'VB', 'JJ']"
151,"func deleteRoundRobinId(roundRobinId int, result string) {","['func', 'deleteRoundRobinId', '(', 'roundRobinId', 'int', ',', 'result', 'string', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
152,"    db.Exec(""update proxies set status = 0, response =? where id=?"", result, roundRobinId)","['db.Exec(""update proxies set status = 0, response =? where id=?"", result, roundRobinId)']",['FUNCTION_CALL']
153,"    delete(roundRobin, roundRobinId)","['delete', '(', 'roundRobin', ',', 'roundRobinId', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
154,    failedRequestCount++,"['failedRequestCount', '++']","['IDENTIFIER', 'OPERATOR']"
155,    if failedRequestCount == 5 {,"['if', 'failedRequestCount', '==', '5', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
156,        initRoundRobin(),"['initRoundRobin', '()']","['IDENTIFIER', 'OPERATOR']"
157,    },['}'],['OPERATOR']
158,},['}'],['OPERATOR']
159,"

I run this script on 10 terminals. Some time later most of them crashed with this error:

","['I', 'run', 'this', 'script', 'on', '10', 'terminals.', 'Some', 'time', 'later', 'most', 'of', 'them', 'crashed', 'with', 'this', 'error:']","['PRP', 'VBP', 'DT', 'NN', 'IN', 'CD', 'CC', 'DT', 'NN', 'RB', 'JJS', 'IN', 'PRP', 'VBD', 'IN', 'DT', 'NN']"
160,"database/sql.(*Stmt).Exec(0x0, 0xc20842be38, 0x5, 0x5, 0x0, 0x0, 0x0, 0x0)","['database/sql.(*Stmt).Exec(0x0,', '0xc2', '0', '842', 'be38', ',', '0x5', ',', '0x5', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
161,    /usr/local/go/src/database/sql/sql.go:1302 +0x3e1,"['/usr/local/go/src/database/sql/sql.go:1302', '+', '0x3e1']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
162,"main.cache(0xc2082f0690, 0x23, 0x355910, 0x9, 0x12775b, 0x0, 0x0, 0x0, 0x0, 0x0)","['main.cache(0xc2082f0690, 0x23, 0x355910, 0x9, 0x12775b, 0x0, 0x0, 0x0, 0x0, 0x0)']",['FUNCTION_CALL']
163,    /var/go/src/parser/index.go:148 +0x702,"['/var/go/src/parser/index.go:148', '+', '0x7', '02']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL']"
164,main.main(),['main.main()'],['FUNCTION_CALL']
165,    /var/go/src/parser/index.go:31 +0x26c,"['/var/go/src/parser/index.go:31', '+', '0x26c']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
166,"goroutine 5 [chan receive, 213 minutes]:","['go', 'routine', '5', '[', 'chan', 'receive', ',', '213', 'minutes', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
167,database/sql.(*DB).connectionOpener(0xc2080446e0),['database/sql.(*DB).connectionOpener(0xc2080446e0)'],['DIRECTORY']
168,    /usr/local/go/src/database/sql/sql.go:589 +0x4c,"['/usr/local/go/src/database/sql/sql.go:589', '+', '0x4c']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
169,created by database/sql.Open,"['created', 'by', 'database/sql.Open']","['IDENTIFIER', 'IDENTIFIER', 'DIRECTORY']"
170,    /usr/local/go/src/database/sql/sql.go:452 +0x31c,"['/usr/local/go/src/database/sql/sql.go:452', '+', '0x31c']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
171,"goroutine 17 [syscall, 213 minutes, locked to thread]:","['go', 'routine', '17', '[', 'syscall', ',', '213', 'minutes', ',', 'locked', 'to', 'thread', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR']"
172,runtime.goexit(),['runtime.goexit()'],['FUNCTION_CALL']
173,    /usr/local/go/src/runtime/asm_amd64.s:2232 +0x1,"['/usr/local/go/src/runtime/asm_amd64.s:2232', '+', '0x1']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
174,goroutine 10854 [IO wait]:,"['go', 'routine', '10854', '[', 'IO', 'wait', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR']"
175,"net.(*pollDesc).Wait(0xc2081f2990, 0x72, 0x0, 0x0)","['net', '.(*', 'pollDesc', ').', 'Wait', '(', '0xc2', '0', '81', 'f2990', ',', '0x72', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
176,    /usr/local/go/src/net/fd_poll_runtime.go:84 +0x47,"['/usr/local/go/src/net/fd_poll_runtime.go:84', '+', '0x47']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
177,"net.(*pollDesc).WaitRead(0xc2081f2990, 0x0, 0x0)","['net', '.(*', 'pollDesc', ').', 'WaitRead', '(', '0xc2', '0', '81', 'f2990', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
178,    /usr/local/go/src/net/fd_poll_runtime.go:89 +0x43,"['/usr/local/go/src/net/fd_poll_runtime.go:89', '+', '0x43']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
179,"net.(*netFD).Read(0xc2081f2930, 0xc20844e800, 0x400, 0x400, 0x0, 0x584b70, 0xc2081f7ae8)","['net', '.(*', 'netFD', ').', 'Read', '(', '0xc2', '0', '81', 'f2930', ',', '0xc2', '0', '844', 'e800', ',', '0x4', '0', '0', ',', '0x4', '0', '0', ',', '0', 'x0', ',', '0x584b7', '0', ',', '0xc2', '0', '81', 'f7ae
180,    /usr/local/go/src/net/fd_unix.go:242 +0x40f,"['/usr/local/go/src/net/fd_unix.go:242', '+', '0x4', '0', 'f']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'IDENTIFIER']"
181,"net.(*conn).Read(0xc208038390, 0xc20844e800, 0x400, 0x400, 0x0, 0x0, 0x0)","['net', '.(*', 'conn', ').', 'Read', '(', '0xc2', '0', '8038390', ',', '0xc2', '0', '844', 'e800', ',', '0x4', '0', '0', ',', '0x4', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
182,    /usr/local/go/src/net/net.go:121 +0xdc,"['/usr/local/go/src/net/net.go:121', '+', '0xdc']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
183,"crypto/tls.(*block).readFromUntil(0xc20857dfb0, 0x5860a8, 0xc208038390, 0x5, 0x0, 0x0)","['crypto/tls.(*block).readFromUntil(0xc20857dfb0,', '0x586', '0', 'a8', ',', '0xc2', '0', '8038390', ',', '0x5', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
184,    /usr/local/go/src/crypto/tls/conn.go:454 +0xe6,"['/usr/local/go/src/crypto/tls/conn.go:454', '+', '0xe6']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
185,"crypto/tls.(*Conn).readRecord(0xc208484b00, 0x17, 0x0, 0x0)","['crypto/tls.(*Conn).readRecord(0xc208484b00,', '0x17', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
186,    /usr/local/go/src/crypto/tls/conn.go:539 +0x2da,"['/usr/local/go/src/crypto/tls/conn.go:539', '+', '0x2da']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
187,"crypto/tls.(*Conn).Read(0xc208484b00, 0xc20834e000, 0x1000, 0x1000, 0x0, 0x0, 0x0)","['crypto/tls.(*Conn).Read(0xc208484b00,', '0xc2', '0', '834', 'e000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
188,    /usr/local/go/src/crypto/tls/conn.go:904 +0x166,"['/usr/local/go/src/crypto/tls/conn.go:904', '+', '0x166']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
189,"net/http.noteEOFReader.Read(0x58c488, 0xc208484b00, 0xc208263398, 0xc20834e000, 0x1000, 0x1000, 0x2a0300, 0x0, 0x0)","['net/http.noteEOFReader.Read(0x58c488,', '0xc2', '0', '8484', 'b00', ',', '0xc2', '0', '8263398', ',', '0xc2', '0', '834', 'e000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0x2a', '03', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
190,    /usr/local/go/src/net/http/transport.go:1270 +0x6e,"['/usr/local/go/src/net/http/transport.go:1270', '+', '0x6e']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
191,"net/http.(*noteEOFReader).Read(0xc2082a4460, 0xc20834e000, 0x1000, 0x1000, 0xc208012000, 0x0, 0x0)","['net/http.(*noteEOFReader).Read(0xc2082a4460,', '0xc2', '0', '834', 'e000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0xc2', '0', '8012000', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
192,    :125 +0xd4,"[':', '125', '+', '0xd4']","['OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL']"
193,bufio.(*Reader).fill(0xc2080fc060),"['bufio', '.(*', 'Reader', ').', 'fill', '(', '0xc2', '0', '80', 'fc060', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
194,    /usr/local/go/src/bufio/bufio.go:97 +0x1ce,"['/usr/local/go/src/bufio/bufio.go:97', '+', '0x1ce']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
195,"bufio.(*Reader).Peek(0xc2080fc060, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)","['bufio', '.(*', 'Reader', ').', 'Peek', '(', '0xc2', '0', '80', 'fc060', ',', '0x1', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
196,    /usr/local/go/src/bufio/bufio.go:132 +0xf0,"['/usr/local/go/src/bufio/bufio.go:132', '+', '0xf', '0']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL']"
197,net/http.(*persistConn).readLoop(0xc208263340),['net/http.(*persistConn).readLoop(0xc208263340)'],['DIRECTORY']
198,    /usr/local/go/src/net/http/transport.go:842 +0xa4,"['/usr/local/go/src/net/http/transport.go:842', '+', '0xa4']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
199,created by net/http.(*Transport).dialConn,"['created', 'by', 'net/http.(*Transport).dialConn']","['IDENTIFIER', 'IDENTIFIER', 'DIRECTORY']"
200,    /usr/local/go/src/net/http/transport.go:660 +0xc9f,"['/usr/local/go/src/net/http/transport.go:660', '+', '0xc9f']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
201,goroutine 10863 [select]:,"['go', 'routine', '10863', '[', 'select', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
202,net/http.(*persistConn).writeLoop(0xc208263ad0),['net/http.(*persistConn).writeLoop(0xc208263ad0)'],['DIRECTORY']
203,    /usr/local/go/src/net/http/transport.go:945 +0x41d,"['/usr/local/go/src/net/http/transport.go:945', '+', '0x41d']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
204,created by net/http.(*Transport).dialConn,"['created', 'by', 'net/http.(*Transport).dialConn']","['IDENTIFIER', 'IDENTIFIER', 'DIRECTORY']"
205,    /usr/local/go/src/net/http/transport.go:661 +0xcbc,"['/usr/local/go/src/net/http/transport.go:661', '+', '0xcbc']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
206,goroutine 10855 [select]:,"['go', 'routine', '10855', '[', 'select', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
207,net/http.(*persistConn).writeLoop(0xc208263340),['net/http.(*persistConn).writeLoop(0xc208263340)'],['DIRECTORY']
208,    /usr/local/go/src/net/http/transport.go:945 +0x41d,"['/usr/local/go/src/net/http/transport.go:945', '+', '0x41d']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
209,created by net/http.(*Transport).dialConn,"['created', 'by', 'net/http.(*Transport).dialConn']","['IDENTIFIER', 'IDENTIFIER', 'DIRECTORY']"
210,    /usr/local/go/src/net/http/transport.go:661 +0xcbc,"['/usr/local/go/src/net/http/transport.go:661', '+', '0xcbc']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
211,goroutine 10862 [IO wait]:,"['go', 'routine', '10862', '[', 'IO', 'wait', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR']"
212,"net.(*pollDesc).Wait(0xc208010b50, 0x72, 0x0, 0x0)","['net', '.(*', 'pollDesc', ').', 'Wait', '(', '0xc2', '0', '8010', 'b50', ',', '0x72', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
213,    /usr/local/go/src/net/fd_poll_runtime.go:84 +0x47,"['/usr/local/go/src/net/fd_poll_runtime.go:84', '+', '0x47']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
214,"net.(*pollDesc).WaitRead(0xc208010b50, 0x0, 0x0)","['net', '.(*', 'pollDesc', ').', 'WaitRead', '(', '0xc2', '0', '8010', 'b50', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
215,    /usr/local/go/src/net/fd_poll_runtime.go:89 +0x43,"['/usr/local/go/src/net/fd_poll_runtime.go:89', '+', '0x43']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
216,"net.(*netFD).Read(0xc208010af0, 0xc20852c800, 0x400, 0x400, 0x0, 0x584b70, 0xc2081af168)","['net', '.(*', 'netFD', ').', 'Read', '(', '0xc2', '0', '8010', 'af0', ',', '0xc2', '0', '852', 'c800', ',', '0x4', '0', '0', ',', '0x4', '0', '0', ',', '0', 'x0', ',', '0x584b7', '0', ',', '0xc2', '0', '81', 'af168', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
217,    /usr/local/go/src/net/fd_unix.go:242 +0x40f,"['/usr/local/go/src/net/fd_unix.go:242', '+', '0x4', '0', 'f']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'IDENTIFIER']"
218,"net.(*conn).Read(0xc208038488, 0xc20852c800, 0x400, 0x400, 0x0, 0x0, 0x0)","['net', '.(*', 'conn', ').', 'Read', '(', '0xc2', '0', '8038488', ',', '0xc2', '0', '852', 'c800', ',', '0x4', '0', '0', ',', '0x4', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
219,    /usr/local/go/src/net/net.go:121 +0xdc,"['/usr/local/go/src/net/net.go:121', '+', '0xdc']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
220,"crypto/tls.(*block).readFromUntil(0xc2085597a0, 0x5860a8, 0xc208038488, 0x5, 0x0, 0x0)","['crypto/tls.(*block).readFromUntil(0xc2085597a0,', '0x586', '0', 'a8', ',', '0xc2', '0', '8038488', ',', '0x5', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
221,    /usr/local/go/src/crypto/tls/conn.go:454 +0xe6,"['/usr/local/go/src/crypto/tls/conn.go:454', '+', '0xe6']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
222,"crypto/tls.(*Conn).readRecord(0xc2084858c0, 0x17, 0x0, 0x0)","['crypto/tls.(*Conn).readRecord(0xc2084858c0,', '0x17', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
223,    /usr/local/go/src/crypto/tls/conn.go:539 +0x2da,"['/usr/local/go/src/crypto/tls/conn.go:539', '+', '0x2da']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
224,"crypto/tls.(*Conn).Read(0xc2084858c0, 0xc208415000, 0x1000, 0x1000, 0x0, 0x0, 0x0)","['crypto/tls.(*Conn).Read(0xc2084858c0,', '0xc2', '0', '8415000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
225,    /usr/local/go/src/crypto/tls/conn.go:904 +0x166,"['/usr/local/go/src/crypto/tls/conn.go:904', '+', '0x166']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
226,"net/http.noteEOFReader.Read(0x58c488, 0xc2084858c0, 0xc208263b28, 0xc208415000, 0x1000, 0x1000, 0x2a0300, 0x0, 0x0)","['net/http.noteEOFReader.Read(0x58c488,', '0xc2', '0', '84858', 'c0', ',', '0xc2', '0', '8263', 'b28', ',', '0xc2', '0', '8415000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0x2a', '03', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
227,    /usr/local/go/src/net/http/transport.go:1270 +0x6e,"['/usr/local/go/src/net/http/transport.go:1270', '+', '0x6e']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
228,"net/http.(*noteEOFReader).Read(0xc20825bce0, 0xc208415000, 0x1000, 0x1000, 0xc208012000, 0x0, 0x0)","['net/http.(*noteEOFReader).Read(0xc20825bce0,', '0xc2', '0', '8415000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0xc2', '0', '8012000', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
229,    :125 +0xd4,"[':', '125', '+', '0xd4']","['OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL']"
230,bufio.(*Reader).fill(0xc2080fd740),"['bufio', '.(*', 'Reader', ').', 'fill', '(', '0xc2', '0', '80', 'fd740', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
231,    /usr/local/go/src/bufio/bufio.go:97 +0x1ce,"['/usr/local/go/src/bufio/bufio.go:97', '+', '0x1ce']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
232,"bufio.(*Reader).Peek(0xc2080fd740, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)","['bufio', '.(*', 'Reader', ').', 'Peek', '(', '0xc2', '0', '80', 'fd740', ',', '0x1', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
233,    /usr/local/go/src/bufio/bufio.go:132 +0xf0,"['/usr/local/go/src/bufio/bufio.go:132', '+', '0xf', '0']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL']"
234,net/http.(*persistConn).readLoop(0xc208263ad0),['net/http.(*persistConn).readLoop(0xc208263ad0)'],['DIRECTORY']
235,    /usr/local/go/src/net/http/transport.go:842 +0xa4,"['/usr/local/go/src/net/http/transport.go:842', '+', '0xa4']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
236,created by net/http.(*Transport).dialConn,"['created', 'by', 'net/http.(*Transport).dialConn']","['IDENTIFIER', 'IDENTIFIER', 'DIRECTORY']"
237,    /usr/local/go/src/net/http/transport.go:660 +0xc9f,"['/usr/local/go/src/net/http/transport.go:660', '+', '0xc9f']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
238,goroutine 10867 [select]:,"['go', 'routine', '10867', '[', 'select', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
239,net/http.(*persistConn).writeLoop(0xc208263ef0),['net/http.(*persistConn).writeLoop(0xc208263ef0)'],['DIRECTORY']
240,    /usr/local/go/src/net/http/transport.go:945 +0x41d,"['/usr/local/go/src/net/http/transport.go:945', '+', '0x41d']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
241,created by net/http.(*Transport).dialConn,"['created', 'by', 'net/http.(*Transport).dialConn']","['IDENTIFIER', 'IDENTIFIER', 'DIRECTORY']"
242,    /usr/local/go/src/net/http/transport.go:661 +0xcbc,"['/usr/local/go/src/net/http/transport.go:661', '+', '0xcbc']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
243,goroutine 10866 [IO wait]:,"['go', 'routine', '10866', '[', 'IO', 'wait', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR']"
244,"net.(*pollDesc).Wait(0xc2084be1b0, 0x72, 0x0, 0x0)","['net', '.(*', 'pollDesc', ').', 'Wait', '(', '0xc2', '0', '84', 'be1b0', ',', '0x72', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
245,    /usr/local/go/src/net/fd_poll_runtime.go:84 +0x47,"['/usr/local/go/src/net/fd_poll_runtime.go:84', '+', '0x47']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
246,"net.(*pollDesc).WaitRead(0xc2084be1b0, 0x0, 0x0)","['net', '.(*', 'pollDesc', ').', 'WaitRead', '(', '0xc2', '0', '84', 'be1b0', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
247,    /usr/local/go/src/net/fd_poll_runtime.go:89 +0x43,"['/usr/local/go/src/net/fd_poll_runtime.go:89', '+', '0x43']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
248,"net.(*netFD).Read(0xc2084be150, 0xc208465000, 0x1000, 0x1000, 0x0, 0x584b70, 0xc2081602f0)","['net', '.(*', 'netFD', ').', 'Read', '(', '0xc2', '0', '84', 'be150', ',', '0xc2', '0', '8465000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0', 'x0', ',', '0x584b7', '0', ',', '0xc2', '0', '81602', 'f0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
249,    /usr/local/go/src/net/fd_unix.go:242 +0x40f,"['/usr/local/go/src/net/fd_unix.go:242', '+', '0x4', '0', 'f']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'IDENTIFIER']"
250,"net.(*conn).Read(0xc208038540, 0xc208465000, 0x1000, 0x1000, 0x0, 0x0, 0x0)","['net', '.(*', 'conn', ').', 'Read', '(', '0xc2', '0', '8038540', ',', '0xc2', '0', '8465000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
251,    /usr/local/go/src/net/net.go:121 +0xdc,"['/usr/local/go/src/net/net.go:121', '+', '0xdc']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
252,"crypto/tls.(*block).readFromUntil(0xc2080cc180, 0x5860a8, 0xc208038540, 0x5, 0x0, 0x0)","['crypto/tls.(*block).readFromUntil(0xc2080cc180,', '0x586', '0', 'a8', ',', '0xc2', '0', '8038540', ',', '0x5', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
253,    /usr/local/go/src/crypto/tls/conn.go:454 +0xe6,"['/usr/local/go/src/crypto/tls/conn.go:454', '+', '0xe6']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
254,"crypto/tls.(*Conn).readRecord(0xc2082cc000, 0x17, 0x0, 0x0)","['crypto/tls.(*Conn).readRecord(0xc2082cc000,', '0x17', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
255,    /usr/local/go/src/crypto/tls/conn.go:539 +0x2da,"['/usr/local/go/src/crypto/tls/conn.go:539', '+', '0x2da']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
256,"crypto/tls.(*Conn).Read(0xc2082cc000, 0xc2082cf000, 0x1000, 0x1000, 0x0, 0x0, 0x0)","['crypto/tls.(*Conn).Read(0xc2082cc000,', '0xc2', '0', '82', 'cf000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
257,    /usr/local/go/src/crypto/tls/conn.go:904 +0x166,"['/usr/local/go/src/crypto/tls/conn.go:904', '+', '0x166']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
258,"net/http.noteEOFReader.Read(0x58c488, 0xc2082cc000, 0xc208263f48, 0xc2082cf000, 0x1000, 0x1000, 0x2a0300, 0x0, 0x0)","['net/http.noteEOFReader.Read(0x58c488,', '0xc2', '0', '82', 'cc000', ',', '0xc2', '0', '8263', 'f48', ',', '0xc2', '0', '82', 'cf000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0x2a', '03', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
259,    /usr/local/go/src/net/http/transport.go:1270 +0x6e,"['/usr/local/go/src/net/http/transport.go:1270', '+', '0x6e']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
260,"net/http.(*noteEOFReader).Read(0xc20820ed60, 0xc2082cf000, 0x1000, 0x1000, 0xc208012000, 0x0, 0x0)","['net/http.(*noteEOFReader).Read(0xc20820ed60,', '0xc2', '0', '82', 'cf000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0xc2', '0', '8012000', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
261,    :125 +0xd4,"[':', '125', '+', '0xd4']","['OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL']"
262,bufio.(*Reader).fill(0xc208326240),"['bufio', '.(*', 'Reader', ').', 'fill', '(', '0xc2', '0', '8326240', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR']"
263,    /usr/local/go/src/bufio/bufio.go:97 +0x1ce,"['/usr/local/go/src/bufio/bufio.go:97', '+', '0x1ce']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
264,"bufio.(*Reader).Peek(0xc208326240, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)","['bufio', '.(*', 'Reader', ').', 'Peek', '(', '0xc2', '0', '8326240', ',', '0x1', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
265,    /usr/local/go/src/bufio/bufio.go:132 +0xf0,"['/usr/local/go/src/bufio/bufio.go:132', '+', '0xf', '0']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL']"
266,net/http.(*persistConn).readLoop(0xc208263ef0),['net/http.(*persistConn).readLoop(0xc208263ef0)'],['DIRECTORY']
267,    /usr/local/go/src/net/http/transport.go:842 +0xa4,"['/usr/local/go/src/net/http/transport.go:842', '+', '0xa4']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
268,created by net/http.(*Transport).dialConn,"['created', 'by', 'net/http.(*Transport).dialConn']","['IDENTIFIER', 'IDENTIFIER', 'DIRECTORY']"
269,    /usr/local/go/src/net/http/transport.go:660 +0xc9f,"['/usr/local/go/src/net/http/transport.go:660', '+', '0xc9f']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
270,goroutine 10859 [select]:,"['go', 'routine', '10859', '[', 'select', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
271,net/http.(*persistConn).writeLoop(0xc208263760),['net/http.(*persistConn).writeLoop(0xc208263760)'],['DIRECTORY']
272,    /usr/local/go/src/net/http/transport.go:945 +0x41d,"['/usr/local/go/src/net/http/transport.go:945', '+', '0x41d']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
273,created by net/http.(*Transport).dialConn,"['created', 'by', 'net/http.(*Transport).dialConn']","['IDENTIFIER', 'IDENTIFIER', 'DIRECTORY']"
274,    /usr/local/go/src/net/http/transport.go:661 +0xcbc,"['/usr/local/go/src/net/http/transport.go:661', '+', '0xcbc']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
275,goroutine 10858 [IO wait]:,"['go', 'routine', '10858', '[', 'IO', 'wait', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR']"
276,"net.(*pollDesc).Wait(0xc2081f3790, 0x72, 0x0, 0x0)","['net', '.(*', 'pollDesc', ').', 'Wait', '(', '0xc2', '0', '81', 'f3790', ',', '0x72', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
277,    /usr/local/go/src/net/fd_poll_runtime.go:84 +0x47,"['/usr/local/go/src/net/fd_poll_runtime.go:84', '+', '0x47']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
278,"net.(*pollDesc).WaitRead(0xc2081f3790, 0x0, 0x0)","['net', '.(*', 'pollDesc', ').', 'WaitRead', '(', '0xc2', '0', '81', 'f3790', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
279,    /usr/local/go/src/net/fd_poll_runtime.go:89 +0x43,"['/usr/local/go/src/net/fd_poll_runtime.go:89', '+', '0x43']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
280,"net.(*netFD).Read(0xc2081f3730, 0xc208418000, 0x1000, 0x1000, 0x0, 0x584b70, 0xc2081c53e8)","['net', '.(*', 'netFD', ').', 'Read', '(', '0xc2', '0', '81', 'f3730', ',', '0xc2', '0', '8418000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0', 'x0', ',', '0x584b7', '0', ',', '0xc2', '0', '81', 'c53e8', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
281,    /usr/local/go/src/net/fd_unix.go:242 +0x40f,"['/usr/local/go/src/net/fd_unix.go:242', '+', '0x4', '0', 'f']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'IDENTIFIER']"
282,"net.(*conn).Read(0xc208038400, 0xc208418000, 0x1000, 0x1000, 0x0, 0x0, 0x0)","['net', '.(*', 'conn', ').', 'Read', '(', '0xc2', '0', '8038400', ',', '0xc2', '0', '8418000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
283,    /usr/local/go/src/net/net.go:121 +0xdc,"['/usr/local/go/src/net/net.go:121', '+', '0xdc']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
284,"crypto/tls.(*block).readFromUntil(0xc208458510, 0x5860a8, 0xc208038400, 0x5, 0x0, 0x0)","['crypto/tls.(*block).readFromUntil(0xc208458510,', '0x586', '0', 'a8', ',', '0xc2', '0', '8038400', ',', '0x5', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
285,    /usr/local/go/src/crypto/tls/conn.go:454 +0xe6,"['/usr/local/go/src/crypto/tls/conn.go:454', '+', '0xe6']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
286,"crypto/tls.(*Conn).readRecord(0xc208485340, 0x17, 0x0, 0x0)","['crypto/tls.(*Conn).readRecord(0xc208485340,', '0x17', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
287,    /usr/local/go/src/crypto/tls/conn.go:539 +0x2da,"['/usr/local/go/src/crypto/tls/conn.go:539', '+', '0x2da']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
288,"crypto/tls.(*Conn).Read(0xc208485340, 0xc2082f6000, 0x1000, 0x1000, 0x0, 0x0, 0x0)","['crypto/tls.(*Conn).Read(0xc208485340,', '0xc2', '0', '82', 'f6000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
289,    /usr/local/go/src/crypto/tls/conn.go:904 +0x166,"['/usr/local/go/src/crypto/tls/conn.go:904', '+', '0x166']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
290,"net/http.noteEOFReader.Read(0x58c488, 0xc208485340, 0xc2082637b8, 0xc2082f6000, 0x1000, 0x1000, 0x2a0300, 0x0, 0x0)","['net/http.noteEOFReader.Read(0x58c488,', '0xc2', '0', '8485340', ',', '0xc2', '0', '82637', 'b8', ',', '0xc2', '0', '82', 'f6000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0x2a', '03', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
291,    /usr/local/go/src/net/http/transport.go:1270 +0x6e,"['/usr/local/go/src/net/http/transport.go:1270', '+', '0x6e']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
292,"net/http.(*noteEOFReader).Read(0xc20827a1a0, 0xc2082f6000, 0x1000, 0x1000, 0xc208012000, 0x0, 0x0)","['net/http.(*noteEOFReader).Read(0xc20827a1a0,', '0xc2', '0', '82', 'f6000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0xc2', '0', '8012000', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
293,    :125 +0xd4,"[':', '125', '+', '0xd4']","['OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR', 'HEX_LITERAL']"
294,bufio.(*Reader).fill(0xc2080fcc00),"['bufio', '.(*', 'Reader', ').', 'fill', '(', '0xc2', '0', '80', 'fcc00', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
295,    /usr/local/go/src/bufio/bufio.go:97 +0x1ce,"['/usr/local/go/src/bufio/bufio.go:97', '+', '0x1ce']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
296,"bufio.(*Reader).Peek(0xc2080fcc00, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)","['bufio', '.(*', 'Reader', ').', 'Peek', '(', '0xc2', '0', '80', 'fcc00', ',', '0x1', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER', 'OPERATOR']"
297,    /usr/local/go/src/bufio/bufio.go:132 +0xf0,"['/usr/local/go/src/bufio/bufio.go:132', '+', '0xf', '0']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL']"
298,net/http.(*persistConn).readLoop(0xc208263760),['net/http.(*persistConn).readLoop(0xc208263760)'],['DIRECTORY']
299,    /usr/local/go/src/net/http/transport.go:842 +0xa4,"['/usr/local/go/src/net/http/transport.go:842', '+', '0xa4']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
300,created by net/http.(*Transport).dialConn,"['created', 'by', 'net/http.(*Transport).dialConn']","['IDENTIFIER', 'IDENTIFIER', 'DIRECTORY']"
301,    /usr/local/go/src/net/http/transport.go:660 +0xc9f,"['/usr/local/go/src/net/http/transport.go:660', '+', '0xc9f']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
302,exit status 2,"['exit', 'status', '2']","['IDENTIFIER', 'IDENTIFIER', 'DECIMAL_LITERAL']"
303,"

What it can be and how I can fix it?

Thank you!
","['What', 'it', 'can', 'be', 'and', 'how', 'I', 'can', 'fix', 'it?', 'Thank', 'you!']","['WP', 'PRP', 'MD', 'VB', 'CC', 'WRB', 'PRP', 'MD', 'VB', 'JJ', 'NNP', 'NN']"
