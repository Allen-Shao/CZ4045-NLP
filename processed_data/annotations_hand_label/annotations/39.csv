,text,token,annotation
0,"I'm trying to understand how to get client's certificates in Go web server. Here is a server code:

","[""I'm"", 'trying', 'to', 'understand', 'how', 'to', 'get', ""client's"", 'certificates', 'in', 'Go', 'web', 'server.', 'Here', 'is', 'a', 'server', 'code:']","['NNP', 'VBG', 'TO', 'VB', 'WRB', 'TO', 'VB', 'JJ', 'NNS', 'IN', 'NNP', 'NN', 'NN', 'RB', 'VBZ', 'DT', 'NN', 'NN']"
1,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
2,import (,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
3,"    ""log""","['""log""']",['STRING_LITERAL']
4,"    ""net/http""","['""net/http""']",['STRING_LITERAL']
5,"    ""net/http/httputil""","['""net/http/httputil""']",['STRING_LITERAL']
6,),[')'],['PUNCTUATION']
7,"func defaultHandler(w http.ResponseWriter, r *http.Request) {","['func', 'default', 'Handler', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
8,"    dump, err := httputil.DumpRequest(r, true)","['dump', ',', 'err', ':=', 'httputil.DumpRequest(r, true)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
9,"    log.Println(""HTTP request"", r, string(dump), err)","['log.Println(""HTTP request"", r, string(dump), err)']",['FUNCTION_CALL']
10,"    log.Println(""HTTP TLS"", r.TLS, string(r.TLS.TLSUnique))","['log.Println(""HTTP TLS"", r.TLS, string(r.TLS.TLSUnique))']",['FUNCTION_CALL']
11,    certs := r.TLS.PeerCertificates,"['certs', ':=', 'r', '.', 'TLS', '.', 'PeerCertificates']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
12,"    log.Println(""HTTP CERTS"", certs)","['log.Println(""HTTP CERTS"", certs)']",['FUNCTION_CALL']
13,    w.WriteHeader(http.StatusMethodNotAllowed),['w.WriteHeader(http.StatusMethodNotAllowed)'],['FUNCTION_CALL']
14,"    w.Write([]byte(""Hello""))","['w.Write([]byte(""Hello""))']",['FUNCTION_CALL']
15,},['}'],['PUNCTUATION']
16,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
17,"    http.HandleFunc(""/"", defaultHandler)","['http.HandleFunc(""/"", defaultHandler)']",['FUNCTION_CALL']
18,"    http.ListenAndServeTLS("":8080"", ""server.crt"", ""server.key"", nil)","['http.ListenAndServeTLS("":8080"", ""server.crt"", ""server.key"", nil)']",['FUNCTION_CALL']
19,},['}'],['PUNCTUATION']
20,"

and here is client code

","['and', 'here', 'is', 'client', 'code']","['CC', 'RB', 'VBZ', 'NN', 'NN']"
21,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
22,import (,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
23,"    ""crypto/tls""","['""crypto/tls""']",['STRING_LITERAL']
24,"    ""io/ioutil""","['""io/ioutil""']",['STRING_LITERAL']
25,"    ""log""","['""log""']",['STRING_LITERAL']
26,"    ""net/http""","['""net/http""']",['STRING_LITERAL']
27,"    ""os""","['""os""']",['STRING_LITERAL']
28,),[')'],['PUNCTUATION']
29,func HttpClient() (client *http.Client) {,"['func', 'HttpClient', '()', '(', 'client', '*', 'http', '.', 'Client', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
30,"    uckey := os.Getenv(""X509_USER_KEY"")","['uckey', ':=', 'os.Getenv(""X509_USER_KEY"")']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
31,"    ucert := os.Getenv(""X509_USER_CERT"")","['ucert', ':=', 'os.Getenv(""X509_USER_CERT"")']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
32,"    x509cert, err := tls.LoadX509KeyPair(ucert, uckey)","['x509cert', ',', 'err', ':=', 'tls.LoadX509KeyPair(ucert, uckey)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
33,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
34,        panic(err.Error()),"['panic', '(', 'err.Error())']","['IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL']"
35,    },['}'],['PUNCTUATION']
36,    certs := []tls.Certificate{x509cert},"['certs', ':=', '[]', 'tls', '.', 'Certificate', '{', 'x509cert', '}']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
37,    if len(certs) == 0 {,"['if', 'len', '(', 'certs', ')', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
38,       client = &http.Client{},"['client', '=', '&', 'http', '.', 'Client', '{}']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
39,       return,['return'],['KEYWORD']
40,    },['}'],['PUNCTUATION']
41,    tr := &http.Transport{,"['tr', ':=', '&', 'http', '.', 'Transport', '{']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
42,"        TLSClientConfig: &tls.Config{Certificates: certs,","['TLSClientConfig', ':', '&', 'tls', '.', 'Config', '{', 'Certificates', ':', 'certs', ',']","['IDENTIFIER', 'PUNCTUATION', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
43,"        InsecureSkipVerify: true},","['InsecureSkipVerify', ':', 'true', '},']","['IDENTIFIER', 'PUNCTUATION', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
44,    },['}'],['PUNCTUATION']
45,    client = &http.Client{Transport: tr},"['client', '=', '&', 'http', '.', 'Client', '{', 'Transport', ':', 'tr', '}']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
46,    return,['return'],['KEYWORD']
47,},['}'],['PUNCTUATION']
48,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
49,"    rurl := ""https://localhost:8080""","['rurl', ':=', '""https://localhost:8080""']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
50,    client := HttpClient(),"['client', ':=', 'HttpClient', '()']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
51,"    req, err := http.NewRequest(""GET"", rurl, nil)","['req', ',', 'err', ':=', 'http.NewRequest(""GET"", rurl, nil)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
52,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
53,"       log.Println(""Unable to make GET request"", err)","['log.Println(""Unable to make GET request"", err)']",['FUNCTION_CALL']
54,       os.Exit(1),['os.Exit(1)'],['FUNCTION_CALL']
55,    },['}'],['PUNCTUATION']
56,"    req.Header.Add(""Accept"", ""*/*"")","['req', '.', 'Header.Add(""Accept"", ""*/*"")']","['IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL']"
57,"    resp, err := client.Do(req)","['resp', ',', 'err', ':=', 'client.Do(req)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
58,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
59,        log.Println(err),['log.Println(err)'],['FUNCTION_CALL']
60,        os.Exit(1),['os.Exit(1)'],['FUNCTION_CALL']
61,    },['}'],['PUNCTUATION']
62,    defer resp.Body.Close(),"['defer', 'resp', '.', 'Body.Close()']","['IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL']"
63,"    data, err := ioutil.ReadAll(resp.Body)","['data', ',', 'err', ':=', 'ioutil.ReadAll(resp.Body)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
64,    log.Println(string(data)),['log.Println(string(data))'],['FUNCTION_CALL']
65,},['}'],['PUNCTUATION']
66,"

If I run both server and a client I see the following on a server side:

","['If', 'I', 'run', 'both', 'server', 'and', 'a', 'client', 'I', 'see', 'the', 'following', 'on', 'a', 'server', 'side:']","['IN', 'PRP', 'VBP', 'DT', 'NN', 'CC', 'DT', 'NN', 'PRP', 'VBP', 'DT', 'VBG', 'IN', 'DT', 'NN', 'NN']"
67,2017/02/08 15:46:49 HTTP request &{GET / HTTP/1.1 1 1 map[User-Agent:[Go-http-client/1.1] Accept:[*/*] Accept-Encoding:[gzip]] {} 0 [] false localhost:8080 map[] map[]  map[] 127.0.0.1:58941 / 0xc4204ef080   0xc420014d40} GET / HTTP/1.1,['2017/02/08 15:46:49 HTTP request &{GET / HTTP/1.1 1 1 map[User-Agent:[Go-http-client/1.1] Accept:[*/*] Accept-Encoding:[gzip]] {} 0 [] false localhost:8080 map[] map[]  map[] 127.0.0.1:58941 / 0xc4204ef080   0xc420014d40} GET / HTTP/1.1'],['DIRECTORY']
68,Host: localhost:8080,"['Host', ':', 'localhost', ':', '8080']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL']"
69,Accept: */*,"['Accept', ':', '*/*']","['IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
70,Accept-Encoding: gzip,"['Accept', '-', 'Encoding', ':', 'gzip']","['IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
71,User-Agent: Go-http-client/1.1,"['User', '-', 'Agent', ':', 'Go', '-', 'http', '-', 'client/1.1']","['IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'DIRECTORY']"
72, ,[],[]
73,2017/02/08 15:46:49 HTTP TLS &{771 true false 49195  true localhost [] [] []   [] [203 144 196 105 155 216 89 105 83 90 93 4]} ÀêiSZ],"['2017/02/08', '15', ':', '46', ':', '49', 'HTTP', 'TLS', '&{', '771', 'true', 'false', '49195', 'true', 'localhost', '[]', '[]', '[]', '[]', '[', '203', '144', '196', '105', '155', '216', '89', '105', '83', '90', '93', '4', ']}', 'iSZ', ']']","['DIRECTORY', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'BOOLEAN_LITERAL', 'BOOLEAN_LITERAL', 'DECIMAL_LITERAL', 'BOOLEAN_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'PUNCTUATION', 'PUNCTUATION', 'PUNCTUATION', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
74,2017/02/08 15:46:49 HTTP CERTS [],"['2017/02/08', '15', ':', '46', ':', '49', 'HTTP', 'CERTS', '[]']","['DIRECTORY', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION']"
75,"

As you can see the client's certificates are empty.

While if I invoke curl call to a server providing my certificates, then I can see server certificates:

","['As', 'you', 'can', 'see', 'the', ""client's"", 'certificates', 'are', 'empty.', 'While', 'if', 'I', 'invoke', 'curl', 'call', 'to', 'a', 'server', 'providing', 'my', 'certificates,', 'then', 'I', 'can', 'see', 'server', 'certificates:']","['IN', 'PRP', 'MD', 'VB', 'DT', 'NN', 'NNS', 'VBP', 'RB', 'IN', 'IN', 'PRP', 'VBP', 'JJ', 'NN', 'TO', 'DT', 'NN', 'VBG', 'PRP$', 'NN', 'RB', 'PRP', 'MD', 'VB', 'RB', 'VB']"
76,curl -L -k --key mykey.key --cert mycert.pem -vvv https://localhost:8080,"['curl', '-', 'L', '-', 'k', '--', 'key', 'mykey', '.', 'key', '--', 'cert', 'mycert', '.', 'pem', '-', 'vvv', 'https', '://', 'localhost', ':', '8080']","['IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL']"
77,*   Trying 127.0.0.1...,"['*', 'Trying', '127', '.', '0', '.', '0', '.', '1', '...']","['POINTER_OPERATOR', 'IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
78,* TCP_NODELAY set,"['*', 'TCP_NODELAY', 'set']","['POINTER_OPERATOR', 'IDENTIFIER', 'IDENTIFIER']"
79,* Connected to localhost (127.0.0.1) port 8080 (#0),"['*', 'Connected', 'to', 'localhost', '(', '127', '.', '0', '.', '0', '.', '1', ')', 'port', '8080', '(', '0', ')']","['POINTER_OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'PUNCTUATION']"
80,"* ALPN, offering http/1.1","['*', 'ALPN', ',', 'offering', 'http/1.1']","['POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'DIRECTORY']"
81,* Cipher selection: ALL:!EXPORT:!EXPORT40:!EXPORT56:!aNULL:!LOW:!RC4:@STRENGTH,"['*', 'Cipher', 'select', 'ion', ':', 'ALL', ':!', 'EXPORT', ':!', 'EXPORT40', ':!', 'EXPORT56', ':!', 'aNULL', ':!', 'LOW', ':!', 'RC4', ':', 'STRENGTH']","['POINTER_OPERATOR', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
82,* successfully set certificate verify locations:,"['*', 'successfully', 'set', 'certificate', 'verify', 'locations', ':']","['POINTER_OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION']"
83,*   CAfile: /opt/local/share/curl/curl-ca-bundle.crt,"['*', 'CAfile', ':', '/opt/local/share/curl/curl-ca-bundle.crt']","['POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'DIRECTORY']"
84,    CApath: none,"['CApath', ':', 'none']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
85,"* TLSv1.2 (OUT), TLS header, Certificate Status (22):","['*', 'TLSv1.2 (OUT), TLS header, Certificate Status (22)', ':']","['POINTER_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION']"
86,"* TLSv1.2 (OUT), TLS handshake, Client hello (1):","['*', 'TLSv1.2 (OUT), TLS handshake, Client hello (1)', ':']","['POINTER_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION']"
87,"* TLSv1.2 (IN), TLS handshake, Server hello (2):","['*', 'TLSv1.2 (IN), TLS handshake, Server hello (2)', ':']","['POINTER_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION']"
88,"* TLSv1.2 (IN), TLS handshake, Certificate (11):","['*', 'TLSv1.2 (IN), TLS handshake, Certificate (11)', ':']","['POINTER_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION']"
89,"* TLSv1.2 (IN), TLS handshake, Server key exchange (12):","['*', 'TLSv1.2 (IN), TLS handshake, Server key exchange (12)', ':']","['POINTER_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION']"
90,"* TLSv1.2 (IN), TLS handshake, Server finished (14):","['*', 'TLSv1.2 (IN), TLS handshake, Server finished (14)', ':']","['POINTER_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION']"
91,"* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):","['*', 'TLSv1.2 (OUT), TLS handshake, Client key exchange (16)', ':']","['POINTER_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION']"
92,"* TLSv1.2 (OUT), TLS change cipher, Client hello (1):","['*', 'TLSv1.2 (OUT), TLS change cipher, Client hello (1)', ':']","['POINTER_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION']"
93,"* TLSv1.2 (OUT), TLS handshake, Finished (20):","['*', 'TLSv1.2 (OUT), TLS handshake, Finished (20)', ':']","['POINTER_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION']"
94,"* TLSv1.2 (IN), TLS change cipher, Client hello (1):","['*', 'TLSv1.2 (IN), TLS change cipher, Client hello (1)', ':']","['POINTER_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION']"
95,"* TLSv1.2 (IN), TLS handshake, Finished (20):","['*', 'TLSv1.2 (IN), TLS handshake, Finished (20)', ':']","['POINTER_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION']"
96,* SSL connection using TLSv1.2 / ECDHE-ECDSA-AES128-GCM-SHA256,"['*', 'SSL', 'connection', 'using', 'TLSv1', '.', '2', '/', 'ECDHE', '-', 'ECDSA', '-', 'AES128', '-', 'GCM', '-', 'SHA256']","['POINTER_OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER']"
97,"* ALPN, server accepted to use http/1.1","['*', 'ALPN', ',', 'server', 'accepted', 'to', 'use', 'http/1.1']","['POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'DIRECTORY']"
98,* Server certificate:,"['*', 'Server', 'certificate', ':']","['POINTER_OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION']"
99,*  subject: C=US; ST=NY; L=Town; O=Bla-Bla,"['*', 'subject', ':', 'C', '=', 'US', ';', 'ST', '=', 'NY', ';', 'L', '=', 'Town', ';', 'O', '=', 'Bla', '-', 'Bla']","['POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER']"
100,*  start date: Feb  8 14:12:06 2017 GMT,"['*', 'start', 'date', ':', 'Feb', '8', '14', ':', '12', ':', '06', '2017', 'GMT']","['POINTER_OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER']"
101,*  expire date: Feb  6 14:12:06 2027 GMT,"['*', 'expire', 'date', ':', 'Feb', '6', '14', ':', '12', ':', '06', '2027', 'GMT']","['POINTER_OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER']"
102,*  issuer: C=US; ST=NY; L=Ithaca; O=Cornell,"['*', 'issuer', ':', 'C', '=', 'US', ';', 'ST', '=', 'NY', ';', 'L', '=', 'Ithaca', ';', 'O', '=', 'Cornell']","['POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
103,"*  SSL certificate verify result: self signed certificate (18), continuing anyway.","['*', 'SSL', 'certificate', 'verify', 'result', ':', 'self', 'signed', 'certificate', '(', '18', '),', 'continuing', 'anyway', '.']","['POINTER_OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION']"
104,> GET / HTTP/1.1,"['>', 'GET', '/', 'HTTP/1.1']","['RELATION_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'DIRECTORY']"
105,> Host: localhost:8080,"['>', 'Host', ':', 'localhost', ':', '8080']","['RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL']"
106,> User-Agent: curl/7.52.1,"['>', 'User', '-', 'Agent', ':', 'curl/7.52.1']","['RELATION_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'DIRECTORY']"
107,> Accept: */*,"['>', 'Accept', ':', '*/*']","['RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
108,"

As you can see SSL negotiation is in place and curl client successfully reports server certificate. What I need is to access client's certificate on a server side to do proper authentication. But so far I can't see any client's certificate.

Any help is really welcome.
Thanks,
Valentin.
","['As', 'you', 'can', 'see', 'SSL', 'negotiation', 'is', 'in', 'place', 'and', 'curl', 'client', 'successfully', 'reports', 'server', 'certificate.', 'What', 'I', 'need', 'is', 'to', 'access', ""client's"", 'certificate', 'on', 'a', 'server', 'side', 'to', 'do', 'proper', 'authentication.', 'But', 'so', 'far', 'I', ""can't"", 'see', 'any', ""client's"", 'certificate.', 'Any', 'help', 'is', 'really', 'welcome.', 'Thanks,', 'Valentin.']","['IN', 'PRP', 'MD', 'VB', 'NNP', 'NN', 'VBZ', 'IN', 'NN', 'CC', 'NN', 'NN', 'RB', 'VBZ', 'NN', 'VBD', 'WP', 'PRP', 'VBP', 'VBZ', 'TO', 'NN', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'TO', 'VB', 'JJ', 'NN', 'CC', 'RB', 'RB', 'PRP', 'VBP', 'VB', 'DT', 'JJ', 'NN', 'NNP', 'NN', 'VBZ', 'RB', 'JJ', 'NNP', 'NNP']"
