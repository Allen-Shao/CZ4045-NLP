,text,token,annotation
0,"I am trying to using the D-Bus interface on omxplayer in order to control the running video.  I'm attempting this using the go.dbus library found here:  https://github.com/guelfey/go.dbus

The omxplayer documentation provides a dbuscontrol.sh script that I can use successfully.  It sets some environments variable and then can use dbus-send in order to query omxplayer.

I'm trying to reproduce this in Go but I keep getting the error ""The name org.mpris.MediaPlayer2 was not provided by any .service files""

Here is my code:

","['I', 'am', 'trying', 'to', 'using', 'the', 'D-Bus', 'interface', 'on', 'omxplayer', 'in', 'order', 'to', 'control', 'the', 'running', 'video.', ""I'm"", 'attempting', 'this', 'using', 'the', 'go.dbus', 'library', 'found', 'here:', 'https://github.com/guelfey/go.dbus', 'The', 'omxplayer', 'documentation', 'provides', 'a', 'dbuscontrol.sh', 'script', 'that', 'I', 'can', 'use', 'successfully.', 'It', 'sets', 'some', 'environments', 'variable', 'and', 'then', 'can', 'use', 'dbus-send', 'in', 'order', 'to', 'query', 'omxplayer.', ""I'm"", 'trying', 'to', 'reproduce', 'this', 'in', 'Go', 'but', 'I', 'keep', 'getting', 'the', 'error', '""The', 'name', 'org.mpris.MediaPlayer2', 'was', 'not', 'provided', 'by', 'any', '.service', 'files""', 'Here', 'is', 'my', 'code:']","['PRP', 'VBP', 'VBG', 'TO', 'VBG', 'DT', 'NNP', 'NN', 'IN', 'NN', 'IN', 'NN', 'TO', 'VB', 'DT', 'VBG', 'NN', 'NNP', 'VBG', 'DT', 'VBG', 'DT', 'NN', 'NN', 'VBD', 'RB', 'VBZ', 'DT', 'JJ', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'PRP', 'MD', 'VB', 'VB', 'PRP', 'VBZ', 'DT', 'NNS', 'JJ', 'CC', 'RB', 'MD', 'VB', 'JJ', 'IN', 'NN', 'TO', 'VB', 'JJ', 'NNP', 'VBG', 'TO', 'VB', 'DT', 'IN', 'NNP', 'CC', 'PRP', 'VBP', 'VBG', 'DT', 'NN', 'NNP', 'NN', 'NN', 'VBD', 'RB', 'VBN', 'IN', 'DT', 'NNP', 'NN', 'RB', 'VBZ', 'PRP$', 'NN']"
1,"package main                                                                                                                                                                                                                                                                                                                                                          import (                                                                                                                                                                               ""encoding/json""                                                                                                                                                                    ""fmt""                                                                                                                                                                              ""os""                                                                                                                                                                                                                                                                                                                                                                  ""github.com/guelfey/go.dbus""                                                                                                                                                       ""github.com/guelfey/go.dbus/introspect""                                                                                                                                        ","['package', 'main', 'import', '(', '""encoding/json""', '""fmt""', '""os""', '""github.com/guelfey/go.dbus""', '""github.com/guelfey/go.dbus/introspect""']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR', 'STRING_LITERAL', 'STRING_LITERAL', 'STRING_LITERAL', 'STRING_LITERAL', 'STRING_LITERAL']"
2,)                                                                                                                                                                                  ,[')'],['OPERATOR']
3,func main() {                                                                                                                                                                      ,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
4,"    os.Setenv(""OMXPLAYER_DBUS_ADDR"", ""/tmp/omxplayerdbus.pi"")                                                                                                                      ","['os.Setenv(""OMXPLAYER_DBUS_ADDR"", ""/tmp/omxplayerdbus.pi"")']",['FUNCTION_CALL']
5,"    os.Setenv(""OMXPLAYER_DBUS_PID"", ""/tmp/omxplayerdbus.pi.pid"")                                                                                                                   ","['os.Setenv(""OMXPLAYER_DBUS_PID"", ""/tmp/omxplayerdbus.pi.pid"")']",['FUNCTION_CALL']
6,"    conn, err := dbus.SessionBus()                                                                                                                                                 ","['conn', ',', 'err', ':=', 'dbus.SessionBus()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
7,    if err != nil {                                                                                                                                                                ,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
8,        panic(err)                                                                                                                                                                 ,"['panic', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
9,    }                                                                                                                                                                              ,['}'],['OPERATOR']
10,"    node, err := introspect.Call(conn.Object(""org.mpris.MediaPlayer2.omxplayer"", ""/org/mpris/MediaPlayer2""))                                                                       ","['node', ',', 'err', ':=', 'introspect.Call(conn.Object(""org.mpris.MediaPlayer2.omxplayer"", ""/org/mpris/MediaPlayer2""))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
11,    if err != nil {                                                                                                                                                                ,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
12,        fmt.Println(err)                                                                                                                                                           ,['fmt.Println(err)'],['FUNCTION_CALL']
13,    }                                                                                                                                                                              ,['}'],['OPERATOR']
14,"    data, _ := json.MarshalIndent(node, """", ""    "")                                                                                                                                ","['data', ',', '_', ':=', 'json.MarshalIndent(node, """", ""    "")']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
15,    var s []string                                                                                                                                                                 ,"['var', 's', '[]', 'string']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
16,"    err = conn.BusObject().Call(""org.freedesktop.DBus.ListNames"", 0).Store(&s)                                                                                                     ","['err', '=', 'conn.BusObject().Call(""org.freedesktop.DBus.ListNames"", 0).Store(&s)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
17,    if err != nil {                                                                                                                                                                ,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
18,"        fmt.Fprintln(os.Stderr, ""Failed to get list of owned names:"", err)                                                                                                         ","['fmt.Fprintln(os.Stderr, ""Failed to get list of owned names:"", err)']",['FUNCTION_CALL']
19,        os.Exit(1)                                                                                                                                                                 ,['os.Exit(1)'],['FUNCTION_CALL']
20,    }                                                                                                                                                                              ,['}'],['OPERATOR']
21,"    fmt.Println(""Currently owned names on the session bus:"")                                                                                                                       ","['fmt.Println(""Currently owned names on the session bus:"")']",['FUNCTION_CALL']
22,"    for _, v := range s {                                                                                                                                                          ","['for', '_', ',', 'v', ':=', 'range', 's', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
23,        fmt.Println(v)                                                                                                                                                             ,['fmt.Println(v)'],['FUNCTION_CALL']
24,    }                                                                                                                                                                              ,['}'],['OPERATOR']
25,    os.Stdout.Write(data)                                                                                                                                                          ,"['os', '.', 'Stdout.Write(data)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
26,},['}'],['OPERATOR']
