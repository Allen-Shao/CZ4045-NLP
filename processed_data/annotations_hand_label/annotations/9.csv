,text,token,annotation
0,"My golang program (url monitor) has a memory leak, it finially killed by kernel (oom).
the env:

","['My', 'golang', 'program', '(url', 'monitor)', 'has', 'a', 'memory', 'leak,', 'it', 'finially', 'killed', 'by', 'kernel', '(oom).', 'the', 'env:']","['PRP$', 'NN', 'NN', 'NNP', 'NN', 'VBZ', 'DT', 'NN', 'NN', 'PRP', 'RB', 'VBN', 'IN', 'NNS', 'IN', 'DT', 'NN']"
1,$ go version,"['$', 'go', 'version']","['OPERATOR', 'KEYWORD', 'IDENTIFIER']"
2,go version go1.0.3,"['go', 'version', 'go', '1', '.', '0', '.', '3']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'DECIMAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL']"
3,$ go env,"['$', 'go', 'env']","['OPERATOR', 'KEYWORD', 'IDENTIFIER']"
4,"GOARCH=""amd64""","['GOARCH', '=', '""amd64""']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
5,"GOBIN=""""","['GOBIN', '=', '""""']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
6,"GOCHAR=""6""","['GOCHAR', '=', '""6""']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
7,"GOEXE=""""","['GOEXE', '=', '""""']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
8,"GOGCCFLAGS=""-g -O2 -fPIC -m64 -pthread""","['GOGCCFLAGS', '=', '""-g -O2 -fPIC -m64 -pthread""']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
9,"GOHOSTARCH=""amd64""","['GOHOSTARCH', '=', '""amd64""']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
10,"GOHOSTOS=""linux""","['GOHOSTOS', '=', '""linux""']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
11,"GOOS=""linux""","['GOOS', '=', '""linux""']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
12,"GOPATH=""/data/apps/go""","['GOPATH=""/data/apps/go""']",['DIRECTORY']
13,"GOROOT=""/usr/local/go""","['GOROOT=""/usr/local/go""']",['DIRECTORY']
14,"GOTOOLDIR=""/usr/local/go/pkg/tool/linux_amd64""","['GOTOOLDIR=""/usr/local/go/pkg/tool/linux_amd64""']",['DIRECTORY']
15,"CGO_ENABLED=""1""","['CGO_ENABLED', '=', '""1""']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
16,"

code:

",['code:'],['NN']
17,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
18,import (,"['import', '(']","['KEYWORD', 'OPERATOR']"
19,"    ""bytes""","['""bytes""']",['STRING_LITERAL']
20,"    ""database/sql""","['""database/sql""']",['STRING_LITERAL']
21,"    ""flag""","['""flag""']",['STRING_LITERAL']
22,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
23,"    _ ""github.com/Go-SQL-Driver/MySQL""","['_', '""github.com/Go-SQL-Driver/MySQL""']","['IDENTIFIER', 'STRING_LITERAL']"
24,"    ""ijinshan.com/cfg""","['""ijinshan.com/cfg""']",['STRING_LITERAL']
25,"    ""log""","['""log""']",['STRING_LITERAL']
26,"    ""net""","['""net""']",['STRING_LITERAL']
27,"    ""net/http""","['""net/http""']",['STRING_LITERAL']
28,"    ""net/smtp""","['""net/smtp""']",['STRING_LITERAL']
29,"    ""os""","['""os""']",['STRING_LITERAL']
30,"    ""strconv""","['""strconv""']",['STRING_LITERAL']
31,"    ""strings""","['""strings""']",['STRING_LITERAL']
32,"    ""sync""","['""sync""']",['STRING_LITERAL']
33,"    ""time""","['""time""']",['STRING_LITERAL']
34,),[')'],['OPERATOR']
35,var (,"['var', '(']","['KEYWORD', 'OPERATOR']"
36,    Log           *log.Logger,"['Log', '*', 'log', '.', 'Logger']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
37,    Conf          cfg.KVConfig,"['Conf', 'cfg', '.', 'KVConfig']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
38,    Debug         bool,"['Debug', 'bool']","['IDENTIFIER', 'IDENTIFIER']"
39,    CpuCore       int,"['CpuCore', 'int']","['IDENTIFIER', 'IDENTIFIER']"
40,    HttpTransport = &http.Transport{,"['HttpTransport', '=', '&', 'http', '.', 'Transport', '{']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
41,"        Dial: func(netw, addr string) (net.Conn, error) {","['Dial', ':', 'func', '(', 'netw', ',', 'addr', 'string', ')', '(', 'net', '.', 'Conn', ',', 'error', ')', '{']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
42,            deadline := time.Now().Add(30 * time.Second),"['deadline', ':=', 'time.Now().Add(30 * time.Second)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
43,"            c, err := net.DialTimeout(netw, addr, 20*time.Second)","['c', ',', 'err', ':=', 'net.DialTimeout(netw, addr, 20*time.Second)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
44,            if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
45,"                return nil, err","['return', 'nil', ',', 'err']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
46,            },['}'],['OPERATOR']
47,            c.SetDeadline(deadline),['c.SetDeadline(deadline)'],['FUNCTION_CALL']
48,"            return c, nil","['return', 'c', ',', 'nil']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
49,"        },","['},']",['OPERATOR']
50,"        DisableKeepAlives: true,","['DisableKeepAlives', ':', 'true', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
51,    },['}'],['OPERATOR']
52,    HttpClient = &http.Client{,"['HttpClient', '=', '&', 'http', '.', 'Client', '{']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
53,"        Transport: HttpTransport,","['Transport', ':', 'HttpTransport', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
54,    },['}'],['OPERATOR']
55,    WG            sync.WaitGroup,"['WG', 'sync', '.', 'WaitGroup']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
56,),[')'],['OPERATOR']
57,const (,"['const', '(']","['KEYWORD', 'OPERATOR']"
58,    LogFileFlag   = os.O_WRONLY | os.O_CREATE | os.O_APPEND,"['LogFileFlag', '=', 'os', '.', 'O_WRONLY', '|', 'os', '.', 'O_CREATE', '|', 'os', '.', 'O_APPEND']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
59,    LogFileMode   = 0644,"['LogFileMode', '=', '0644']","['IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL']"
60,    LogFlag       = log.LstdFlags | log.Lshortfile,"['LogFlag', '=', 'log', '.', 'LstdFlags', '|', 'log', '.', 'Lshortfile']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
61,"    GET_VIDEO_SQL = `SELECT B.Name, A.TSID, A.Chapter, A.ChapterNum, ","['GET_VIDEO_SQL', '=', 'SELECT', 'B', '.', 'Name', ',', 'A', '.', 'TSID', ',', 'A', '.', 'Chapter', ',', 'A', '.', 'ChapterNum', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
62,"    IFNULL(A.Website, ''), IFNULL(A.Descr, ''), ","['IFNULL', '(', 'A', '.', 'Website', ',', ""''"", '),', 'IFNULL', '(', 'A', '.', 'Descr', ',', ""''"", '),']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
63,"    IFNULL(A.VideoId, ''), IFNULL(AndroidWebURL, ''), IFNULL(IOSWebURL, ''), ","['IFNULL', '(', 'A', '.', 'VideoId', ',', ""''"", '),', 'IFNULL', '(', 'AndroidWebURL', ',', ""''"", '),', 'IFNULL', '(', 'IOSWebURL', ',', ""''"", '),']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
64,"    IFNULL(AndroidURL, ''), IFNULL(AndroidURL2, ''), IFNULL(IOSURL, '')","['IFNULL', '(', 'AndroidURL', ',', ""''"", '),', 'IFNULL', '(', 'AndroidURL2', ',', ""''"", '),', 'IFNULL', '(', 'IOSURL', ',', ""''"", ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
65,    FROM Video A INNER JOIN TVS B ON A.TSID = B.ID LIMIT 200`,"['FROM', 'Video', 'A', 'INNER', 'JOIN', 'TVS', 'B', 'ON', 'A', '.', 'TSID', '=', 'B', '.', 'ID', 'LIMIT', '200']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'DECIMAL_LITERAL']"
66,    HtmlHead = `节目名,"['HtmlHead', '=']","['IDENTIFIER', 'OPERATOR']"
67,    tsid章节章节号描述,['tsid章节章节号描述'],['IDENTIFIER']
68,    videoid网站地址`,['videoid网站地址'],['IDENTIFIER']
69,"    HtmlTail = """"","['HtmlTail', '=', '""""']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
70,),[')'],['OPERATOR']
71,type videoInfo struct {,"['type', 'videoInfo', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
72,    name          string,"['name', 'string']","['IDENTIFIER', 'IDENTIFIER']"
73,    tsid          uint,"['tsid', 'uint']","['IDENTIFIER', 'IDENTIFIER']"
74,    chapter       string,"['chapter', 'string']","['IDENTIFIER', 'IDENTIFIER']"
75,    chapterNum    uint,"['chapterNum', 'uint']","['IDENTIFIER', 'IDENTIFIER']"
76,    descr         string,"['descr', 'string']","['IDENTIFIER', 'IDENTIFIER']"
77,    videoId       string,"['videoId', 'string']","['IDENTIFIER', 'IDENTIFIER']"
78,    website       string,"['website', 'string']","['IDENTIFIER', 'IDENTIFIER']"
79,    androidWebUrl string,"['androidWebUrl', 'string']","['IDENTIFIER', 'IDENTIFIER']"
80,    iosWebUrl     string,"['iosWebUrl', 'string']","['IDENTIFIER', 'IDENTIFIER']"
81,    androidUrl    string,"['androidUrl', 'string']","['IDENTIFIER', 'IDENTIFIER']"
82,    androidUrl2   string,"['androidUrl2', 'string']","['IDENTIFIER', 'IDENTIFIER']"
83,    iosUrl        string,"['iosUrl', 'string']","['IDENTIFIER', 'IDENTIFIER']"
84,},['}'],['OPERATOR']
85,func init() {,"['func', 'init', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
86,    var (,"['var', '(']","['KEYWORD', 'OPERATOR']"
87,        confFile string,"['confFile', 'string']","['IDENTIFIER', 'IDENTIFIER']"
88,        err      error,"['err', 'error']","['IDENTIFIER', 'IDENTIFIER']"
89,    ),[')'],['OPERATOR']
90,    // parse command argument:w,"['//', 'parse', 'command', 'argument:w']","['COMMENT', 'NN', 'NN', 'NN']"
91,"    flag.StringVar(&confFile, ""c"", ""./vsmonitor.conf"", "" set config file path"")","['flag.StringVar(&confFile, ""c"", ""./vsmonitor.conf"", "" set config file path"")']",['FUNCTION_CALL']
92,    flag.Parse(),['flag.Parse()'],['FUNCTION_CALL']
93,    // read config,"['//', 'read', 'config']","['COMMENT', 'NN', 'NN']"
94,"    if Conf, err = cfg.Read(confFile); err != nil {","['if', 'Conf', ',', 'err', '=', 'cfg.Read(confFile)', ';', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
95,"        panic(fmt.Sprintf(""Read config file \""%s\"" failed (%s)"",","['panic', '(', 'fmt.Sprintf(""Read config file \\""%s\\"" failed (%s)', ',']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'OPERATOR']"
96,"            confFile, err.Error()))","['confFile', ',', 'err.Error()))']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
97,    },['}'],['OPERATOR']
98,    // open log file,"['//', 'open', 'log', 'file']","['COMMENT', 'JJ', 'NN', 'NN']"
99,"    file, err := os.OpenFile(Conf[""log.file""], LogFileFlag, LogFileMode)","['file', ',', 'err', ':=', 'os.OpenFile(Conf[""log.file""], LogFileFlag, LogFileMode)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
100,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
101,"        panic(fmt.Sprintf(""OpenFile \""%s\"" failed (%s)"", Conf[""log.file""],","['panic', '(', 'fmt.Sprintf(""OpenFile \\""%s\\"" failed (%s)', '"", Conf[""', 'log', '.', 'file', '],']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'STRING_LITERAL', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
102,            err.Error())),['err.Error()))'],['FUNCTION_CALL']
103,    },['}'],['OPERATOR']
104,    // init LOG,"['//', 'init', 'LOG']","['COMMENT', 'NN', 'NNP']"
105,"    Log = log.New(file, """", LogFlag)","['Log', '=', 'log.New(file, """", LogFlag)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
106,    Debug = false,"['Debug', '=', 'false']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
107,"    i, err := strconv.ParseInt(Conf[""cpucore.num""], 10, 32)","['i', ',', 'err', ':=', 'strconv.ParseInt(Conf[""cpucore.num""], 10, 32)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
108,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
109,"        panic(fmt.Sprintf(""ParseInt \""%s\"" failed (%s)"", Conf[""cpucore.num""],","['panic', '(', 'fmt.Sprintf(""ParseInt \\""%s\\"" failed (%s)', '"", Conf[""', 'cpucore', '.', 'num', '],']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'STRING_LITERAL', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
110,            err.Error())),['err.Error()))'],['FUNCTION_CALL']
111,    },['}'],['OPERATOR']
112,    CpuCore = int(i),"['CpuCore', '=', 'int', '(', 'i', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
113,},['}'],['OPERATOR']
114,func getHttpStatusCode(url string) int {,"['func', 'getHttpStatusCode', '(', 'url', 'string', ')', 'int', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
115,"    if url == """" {","['if', 'url', '==', '""""', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
116,        return 200,"['return', '200']","['KEYWORD', 'DECIMAL_LITERAL']"
117,    },['}'],['OPERATOR']
118,"    req, err := http.NewRequest(""GET"", url, nil)","['req', ',', 'err', ':=', 'http.NewRequest(""GET"", url, nil)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
119,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
120,        return 0,"['return', '0']","['KEYWORD', 'OCTAL_LITERAL']"
121,    },['}'],['OPERATOR']
122,"    req.Header.Add(""User-Agent"", ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.57 Safari/537.17"")","['req', '.', 'Header.Add(""User-Agent"", ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.57 Safari/537.17"")']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
123,"    req.Header.Add(""Connection"", ""close"")","['req', '.', 'Header.Add(""Connection"", ""close"")']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
124,"    resp, err := HttpClient.Do(req)","['resp', ',', 'err', ':=', 'HttpClient.Do(req)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
125,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
126,        return 0,"['return', '0']","['KEYWORD', 'OCTAL_LITERAL']"
127,    },['}'],['OPERATOR']
128,    defer resp.Body.Close(),"['defer', 'resp', '.', 'Body.Close()']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
129,    return resp.StatusCode,"['return', 'resp', '.', 'StatusCode']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
130,},['}'],['OPERATOR']
131,"func sendMail(host, user, pwd, from, to, subject, body, mailType string) error {","['func', 'sendMail', '(', 'host', ',', 'user', ',', 'pwd', ',', 'from', ',', 'to', ',', 'subject', ',', 'body', ',', 'mailType', 'string', ')', 'error', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
132,"    auth := smtp.PlainAuth("""", user, pwd, strings.Split(host, "":"")[0])","['auth', ':=', 'smtp.PlainAuth("""", user, pwd, strings.Split(host, "":"")[0])']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
133,"    cntType := fmt.Sprintf(""Content-Type: text/%s;charset=UTF-8"", mailType)","['cntType', ':=', 'fmt.Sprintf(""Content-Type: text/%s;charset=UTF-8"", mailType)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
134,"    msg := fmt.Sprintf(""To: %s\r\nFrom: %s\r\nSubject: %s\r\n%s\r\n\r\n%s"",","['msg', ':=', 'fmt', '.', 'Sprintf', '(', '""To: %s\\r\\nFrom: %s\\r\\nSubject: %s\\r\\n%s\\r\\n\\r\\n%s""', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
135,"        to, from, user, subject, cntType, body)","['to', ',', 'from', ',', 'user', ',', 'subject', ',', 'cntType', ',', 'body', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
136,"    return smtp.SendMail(host, auth, user, strings.Split(to, "",""), []byte(msg))","['return', 'smtp.SendMail(host, auth, user, strings.Split(to, "",""), []byte(msg))']","['KEYWORD', 'FUNCTION_CALL']"
137,},['}'],['OPERATOR']
138,"func getVideos(videoChan chan *videoInfo, htmlBuf *bytes.Buffer) error {","['func', 'getVideos', '(', 'videoChan', 'chan', '*', 'videoInfo', ',', 'htmlBuf', '*', 'bytes', '.', 'Buffer', ')', 'error', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
139,    defer HttpTransport.CloseIdleConnections(),"['defer', 'HttpTransport.CloseIdleConnections()']","['IDENTIFIER', 'FUNCTION_CALL']"
140,"    db, err := sql.Open(""mysql"", Conf[""weikan.mysql""])","['db', ',', 'err', ':=', 'sql.Open(""mysql"", Conf[""weikan.mysql""])']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
141,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
142,        return err,"['return', 'err']","['KEYWORD', 'IDENTIFIER']"
143,    },['}'],['OPERATOR']
144,"    rows, err := db.Query(GET_VIDEO_SQL)","['rows', ',', 'err', ':=', 'db.Query(GET_VIDEO_SQL)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
145,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
146,        db.Close(),['db.Close()'],['FUNCTION_CALL']
147,        return err,"['return', 'err']","['KEYWORD', 'IDENTIFIER']"
148,    },['}'],['OPERATOR']
149,    for rows.Next() {,"['for', 'rows.Next()', '{']","['KEYWORD', 'FUNCTION_CALL', 'OPERATOR']"
150,        video := &videoInfo{},"['video', ':=', '&', 'videoInfo', '{}']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
151,"        err = rows.Scan(&video.name, &video.tsid, &video.chapter,","['err', '=', 'rows', '.', 'Scan', '(&', 'video', '.', 'name', ',', '&', 'video', '.', 'tsid', ',', '&', 'video', '.', 'chapter', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
152,"            &video.chapterNum,","['&', 'video', '.', 'chapterNum', ',']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
153,"            &video.website, &video.descr, &video.videoId, &video.androidWebUrl,","['&', 'video', '.', 'website', ',', '&', 'video', '.', 'descr', ',', '&', 'video', '.', 'videoId', ',', '&', 'video', '.', 'androidWebUrl', ',']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
154,"            &video.iosWebUrl, &video.androidUrl, &video.androidUrl2,","['&', 'video', '.', 'iosWebUrl', ',', '&', 'video', '.', 'androidUrl', ',', '&', 'video', '.', 'androidUrl2', ',']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
155,            &video.iosUrl),"['&', 'video', '.', 'iosUrl', ')']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
156,        if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
157,            db.Close(),['db.Close()'],['FUNCTION_CALL']
158,            return err,"['return', 'err']","['KEYWORD', 'IDENTIFIER']"
159,        },['}'],['OPERATOR']
160,        videoChan <- video,"['videoChan', '<-', 'video']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
161,        WG.Add(1),['WG.Add(1)'],['FUNCTION_CALL']
162,    },['}'],['OPERATOR']
163,    db.Close(),['db.Close()'],['FUNCTION_CALL']
164,    // wait check url finish,"['//', 'wait', 'check', 'url', 'finish']","['COMMENT', 'NN', 'NN', 'JJ', 'NN']"
165,    WG.Wait(),['WG.Wait()'],['FUNCTION_CALL']
166,    // send mail,"['//', 'send', 'mail']","['COMMENT', 'JJ', 'NN']"
167,    for {,"['for', '{']","['KEYWORD', 'OPERATOR']"
168,        if htmlBuf.Len() == 0 {,"['if', 'htmlBuf.Len()', '==', '0', '{']","['KEYWORD', 'FUNCTION_CALL', 'OPERATOR', 'OCTAL_LITERAL', 'OPERATOR']"
169,"            Log.Print(""no error found!!!!!!!!"")","['Log.Print(""no error found!!!!!!!!"")']",['FUNCTION_CALL']
170,            break,['break'],['KEYWORD']
171,        },['}'],['OPERATOR']
172,"        Log.Print(""found error !!!!!!!!"")","['Log.Print(""found error !!!!!!!!"")']",['FUNCTION_CALL']
173,        /*,['*'],['OPERATOR']
174,"        err := sendMail(""smtp.gmail.com:587"", ""xxxx"",","['err', ':=', 'sendMail', '(', '""smtp.gmail.com:587""', ',', '""xxxx""', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
175,"            ""xxx"", ""xxx "",","['""xxx""', ',', '""xxx ""', ',']","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
176,"            Conf[""mail.to""], ""xxxxx"",","['Conf', '[', '""mail.to""', '],', '""xxxxx""', ',']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
177,"            HtmlHead+htmlBuf.String()+HtmlTail, ""html"")","['HtmlHead', '+', 'htmlBuf.String()+HtmlTail, ""html"")']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
178,        if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
179,"            Log.Printf(""sendMail failed (%s)"", err.Error())","['Log.Printf(""sendMail failed (%s)"", err.Error())']",['FUNCTION_CALL']
180,            time.Sleep(10 * time.Second),['time.Sleep(10 * time.Second)'],['FUNCTION_CALL']
181,            continue,['continue'],['KEYWORD']
182,        },['}'],['OPERATOR']
183,        */,['*'],['OPERATOR']
184,"        Log.Print(""send mail"")","['Log.Print(""send mail"")']",['FUNCTION_CALL']
185,        break,['break'],['KEYWORD']
186,    },['}'],['OPERATOR']
187,"    Log.Print(""reset buf"")","['Log.Print(""reset buf"")']",['FUNCTION_CALL']
188,    htmlBuf.Reset(),['htmlBuf.Reset()'],['FUNCTION_CALL']
189,    return nil,"['return', 'nil']","['KEYWORD', 'IDENTIFIER']"
190,},['}'],['OPERATOR']
191,"func checkUrl(videoChan chan *videoInfo, errChan chan string) {","['func', 'checkUrl', '(', 'videoChan', 'chan', '*', 'videoInfo', ',', 'errChan', 'chan', 'string', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
192,    defer func() {,"['defer', 'func', '()', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR', 'OPERATOR']"
193,        if err := recover(); err != nil {,"['if', 'err', ':=', 'recover', '();', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
194,"            Log.Print(""rouintes failed : "", err)","['Log.Print(""rouintes failed : "", err)']",['FUNCTION_CALL']
195,        },['}'],['OPERATOR']
196,    }(),['}()'],['OPERATOR']
197,    for {,"['for', '{']","['KEYWORD', 'OPERATOR']"
198,        video := <-videoChan,"['video', ':=', '<-', 'videoChan']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
199,        ok := true,"['ok', ':=', 'true']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
200,"        errUrl := """"","['errUrl', ':=', '""""']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
201,        if code := getHttpStatusCode(video.androidWebUrl); code >= 400 {,"['if', 'code', ':=', 'getHttpStatusCode', '(', 'video', '.', 'androidWebUrl', ');', 'code', '>=', '400', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
202,"            errUrl += fmt.Sprintf(""%s (%d)"",","['errUrl', '+=', 'fmt.Sprintf(""%s (%d)', ',']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'OPERATOR']"
203,"                video.androidWebUrl, code)","['video', '.', 'androidWebUrl', ',', 'code', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
204,            ok = false,"['ok', '=', 'false']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
205,        },['}'],['OPERATOR']
206,        if code := getHttpStatusCode(video.iosWebUrl); code >= 400 {,"['if', 'code', ':=', 'getHttpStatusCode', '(', 'video', '.', 'iosWebUrl', ');', 'code', '>=', '400', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
207,"            errUrl += fmt.Sprintf(""%s (%d)"",","['errUrl', '+=', 'fmt.Sprintf(""%s (%d)', ',']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'OPERATOR']"
208,"                video.iosWebUrl, code)","['video', '.', 'iosWebUrl', ',', 'code', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
209,            ok = false,"['ok', '=', 'false']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
210,        },['}'],['OPERATOR']
211,        if code := getHttpStatusCode(video.androidUrl); code >= 400 {,"['if', 'code', ':=', 'getHttpStatusCode', '(', 'video', '.', 'androidUrl', ');', 'code', '>=', '400', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
212,"            errUrl += fmt.Sprintf(""%s (%d)"",","['errUrl', '+=', 'fmt.Sprintf(""%s (%d)', ',']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'OPERATOR']"
213,"                video.androidUrl, code)","['video', '.', 'androidUrl', ',', 'code', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
214,            ok = false,"['ok', '=', 'false']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
215,        },['}'],['OPERATOR']
216,        if code := getHttpStatusCode(video.androidUrl2); code >= 400 {,"['if', 'code', ':=', 'getHttpStatusCode', '(', 'video', '.', 'androidUrl2', ');', 'code', '>=', '400', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
217,"            errUrl += fmt.Sprintf(""%s (%d)"",","['errUrl', '+=', 'fmt.Sprintf(""%s (%d)', ',']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'OPERATOR']"
218,"                video.androidUrl2, code)","['video', '.', 'androidUrl2', ',', 'code', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
219,            ok = false,"['ok', '=', 'false']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
220,        },['}'],['OPERATOR']
221,        if code := getHttpStatusCode(video.iosUrl); code >= 400 {,"['if', 'code', ':=', 'getHttpStatusCode', '(', 'video', '.', 'iosUrl', ');', 'code', '>=', '400', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
222,"            errUrl += fmt.Sprintf(""%s (%d)"",","['errUrl', '+=', 'fmt.Sprintf(""%s (%d)', ',']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'OPERATOR']"
223,"                video.iosUrl, code)","['video', '.', 'iosUrl', ',', 'code', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
224,            ok = false,"['ok', '=', 'false']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
225,        },['}'],['OPERATOR']
226,        if !ok {,"['if', '!', 'ok', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
227,            errChan %s%d%s,"['errChan', 's', 'd', 's']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER']"
228,"            %d%s%s%s%s`,","['d', 's', 's', 's', 's', ',']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR']"
229,"                video.name, video.tsid, video.chapter, video.chapterNum,","['video', '.', 'name', ',', 'video', '.', 'tsid', ',', 'video', '.', 'chapter', ',', 'video', '.', 'chapterNum', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
230,"                video.descr, video.videoId,","['video', '.', 'descr', ',', 'video', '.', 'videoId', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
231,"                video.website, errUrl)","['video', '.', 'website', ',', 'errUrl', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
232,"            Log.Printf(""\""%s\"" (%s) —— \""%s\"" checkurl err"", video.name,","['Log.Printf(""\\""%s\\"" (%s)', '""%s\\""', 'checkurl', 'err', ',', 'video', '.', 'name', ',']","['FUNCTION_CALL', 'STRING_LITERAL', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
233,"                video.chapter, video.descr)","['video', '.', 'chapter', ',', 'video', '.', 'descr', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
234,        } else {,"['}', 'else', '{']","['OPERATOR', 'KEYWORD', 'OPERATOR']"
235,"            Log.Printf(""\""%s\"" (%s) —— \""%s\"" checkurl ok"", video.name,","['Log.Printf(""\\""%s\\"" (%s)', '""%s\\""', 'checkurl', 'ok', ',', 'video', '.', 'name', ',']","['FUNCTION_CALL', 'STRING_LITERAL', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
236,"                video.chapter, video.descr)","['video', '.', 'chapter', ',', 'video', '.', 'descr', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
237,            WG.Done(),['WG.Done()'],['FUNCTION_CALL']
238,        },['}'],['OPERATOR']
239,    },['}'],['OPERATOR']
240,},['}'],['OPERATOR']
241,"func mergeErr(errChan chan string, htmlBuf *bytes.Buffer) {","['func', 'mergeErr', '(', 'errChan', 'chan', 'string', ',', 'htmlBuf', '*', 'bytes', '.', 'Buffer', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
242,    defer func() {,"['defer', 'func', '()', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR', 'OPERATOR']"
243,        if err := recover(); err != nil {,"['if', 'err', ':=', 'recover', '();', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
244,"            Log.Print(""rouintes failed : "", err)","['Log.Print(""rouintes failed : "", err)']",['FUNCTION_CALL']
245,        },['}'],['OPERATOR']
246,    }(),['}()'],['OPERATOR']
247,    for {,"['for', '{']","['KEYWORD', 'OPERATOR']"
248,        html := <-errChan,"['html', ':=', '<-', 'errChan']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
249,"        _, err := htmlBuf.WriteString(html)","['_', ',', 'err', ':=', 'htmlBuf.WriteString(html)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
250,        if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
251,"            Log.Printf(""htmlBuf WriteString \""%s\"" failed (%s)"", html,","['Log.Printf(""htmlBuf WriteString \\""%s\\"" failed (%s)', ',', 'html', ',']","['FUNCTION_CALL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
252,                err.Error()),['err.Error())'],['FUNCTION_CALL']
253,            panic(err),"['panic', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
254,        },['}'],['OPERATOR']
255,        WG.Done(),['WG.Done()'],['FUNCTION_CALL']
256,    },['}'],['OPERATOR']
257,},['}'],['OPERATOR']
258,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
259,"    videoChan := make(chan *videoInfo, 100000)","['videoChan', ':=', 'make', '(', 'chan', '*', 'videoInfo', ',', '100000', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
260,"    errChan := make(chan string, 100000)","['errChan', ':=', 'make', '(', 'chan', 'string', ',', '100000', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
261,    htmlBuf := &bytes.Buffer{},"['htmlBuf', ':=', '&', 'bytes', '.', 'Buffer', '{}']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
262,    defer func() {,"['defer', 'func', '()', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR', 'OPERATOR']"
263,        if err := recover(); err != nil {,"['if', 'err', ':=', 'recover', '();', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
264,"            Log.Print(""rouintes failed : "", err)","['Log.Print(""rouintes failed : "", err)']",['FUNCTION_CALL']
265,        },['}'],['OPERATOR']
266,    }(),['}()'],['OPERATOR']
267,    // check url,"['//', 'check', 'url']","['COMMENT', 'NN', 'NN']"
268,    for i := 0; i < CpuCore; i++ {,"['for', 'i', ':=', '0', ';', 'i', '<', 'CpuCore', ';', 'i', '++', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
269,"        go checkUrl(videoChan, errChan)","['go', 'checkUrl', '(', 'videoChan', ',', 'errChan', ')']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
270,    },['}'],['OPERATOR']
271,    // merge error string then send mail,"['//', 'merge', 'error', 'string', 'then', 'send', 'mail']","['COMMENT', 'NN', 'NN', 'VBG', 'RB', 'VB', 'NN']"
272,"    go mergeErr(errChan, htmlBuf)","['go', 'mergeErr', '(', 'errChan', ',', 'htmlBuf', ')']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
273,    for {,"['for', '{']","['KEYWORD', 'OPERATOR']"
274,        // get Video and LiveSrc video source,"['//', 'get', 'Video', 'and', 'LiveSrc', 'video', 'source']","['COMMENT', 'VB', 'NNP', 'CC', 'NNP', 'NNP', 'NN']"
275,"        if err := getVideos(videoChan, htmlBuf); err != nil {","['if', 'err', ':=', 'getVideos', '(', 'videoChan', ',', 'htmlBuf', ');', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
276,"            Log.Printf(""getVideos failed (%s)"", err.Error())","['Log.Printf(""getVideos failed (%s)"", err.Error())']",['FUNCTION_CALL']
277,            time.Sleep(10 * time.Second),['time.Sleep(10 * time.Second)'],['FUNCTION_CALL']
278,            continue,['continue'],['KEYWORD']
279,        },['}'],['OPERATOR']
280,        // time.Sleep(1 * time.Hour),"['//', 'time.Sleep(1', '*', 'time.Hour)']","['COMMENT', 'NN', 'CD', 'NN']"
281,    },['}'],['OPERATOR']
282,"    Log.Print(""exit..."")","['Log.Print(""exit..."")']",['FUNCTION_CALL']
283,},['}'],['OPERATOR']
284,"

the code has four funcs:


  getHttpStatusCode


free resource use resp.Body.Close()


  sendMail


I don't need to free the resource manually


  mergeErr


concat the err string by using a htmlBuf(*bytes.Buffer)


  getVideos


First it gets the Video urls and then sends them to videoChan then it waits all the routines finish their check jobs.
then sendmail and reset htmlBuf.

I don't find any resource that needs free, but.


  $ top


shows:

","['the', 'code', 'has', 'four', 'funcs:', 'getHttpStatusCode', 'free', 'resource', 'use', 'resp.Body.Close()', 'sendMail', 'I', ""don't"", 'need', 'to', 'free', 'the', 'resource', 'manually', 'mergeErr', 'concat', 'the', 'err', 'string', 'by', 'using', 'a', 'htmlBuf(*bytes.Buffer)', 'getVideos', 'First', 'it', 'gets', 'the', 'Video', 'urls', 'and', 'then', 'sends', 'them', 'to', 'videoChan', 'then', 'it', 'waits', 'all', 'the', 'routines', 'finish', 'their', 'check', 'jobs.', 'then', 'sendmail', 'and', 'reset', 'htmlBuf.', 'I', ""don't"", 'find', 'any', 'resource', 'that', 'needs', 'free,', 'but.', '$', 'top', 'shows:']","['DT', 'NN', 'VBZ', 'CD', 'NN', 'NN', 'JJ', 'NN', 'NN', 'NN', 'NN', 'PRP', 'VBP', 'VB', 'TO', 'VB', 'DT', 'NN', 'RB', 'JJ', 'VBP', 'DT', 'NN', 'NN', 'IN', 'VBG', 'DT', 'NN', 'NN', 'NNP', 'PRP', 'VBZ', 'DT', 'NNP', 'NNS', 'CC', 'RB', 'VBZ', 'PRP', 'TO', 'VB', 'RB', 'PRP', 'VBZ', 'PDT', 'DT', 'NNS', 'VBP', 'PRP$', 'NN', 'NN', 'RB', 'NN', 'CC', 'VB', 'NN', 'PRP', 'VBP', 'VB', 'DT', 'NN', 'WDT', 'VBZ', 'JJ', 'IN', '$', 'JJ', 'NN']"
285,PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                                                                      ,"['PID', 'USER', 'PR', 'NI', 'VIRT', 'RES', 'SHR', 'S', 'CPU', 'MEM', 'TIME', '+', 'COMMAND']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
286,6451 root      20   0 3946m 115m 2808 S  0.7  0.2   6:11.20 vsmonitor,"['6451', 'root', '20', '0', '3946', 'm', '115', 'm', '2808', 'S', '0', '.', '7', '0', '.', '2', '6', ':', '11', '.', '20', 'vsmonitor']","['DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OCTAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'IDENTIFIER']"
287,"

the VIRT and RES will grow ...

memory profiling:

","['the', 'VIRT', 'and', 'RES', 'will', 'grow', '...', 'memory', 'profiling:']","['DT', 'NNP', 'CC', 'NNP', 'MD', 'VB', ':', 'NN', 'NN']"
288,(pprof) top,"['(', 'pprof', ')', 'top']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
289,Total: 10.8 MB,"['Total', ':', '10', '.', '8', 'MB']","['IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'IDENTIFIER']"
290,2.3  21.2%  21.2%      2.3  21.2% main.main,"['2', '.', '3', '21', '.', '2', '21', '.', '2', '2', '.', '3', '21', '.', '2', 'main', '.', 'main']","['DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
291,2.0  18.5%  39.8%      2.0  18.5% bufio.NewWriterSize,"['2', '.', '0', '18', '.', '5', '39', '.', '8', '2', '.', '0', '18', '.', '5', 'bufio', '.', 'NewWriterSize']","['DECIMAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
292,1.5  13.9%  53.7%      1.5  13.9% bufio.NewReaderSize,"['1', '.', '5', '13', '.', '9', '53', '.', '7', '1', '.', '5', '13', '.', '9', 'bufio', '.', 'NewReaderSize']","['DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
293,1.5  13.9%  67.6%      1.5  13.9% compress/flate.NewReader,"['1', '.', '5', '13', '.', '9', '67', '.', '6', '1', '.', '5', '13', '.', '9', 'compress/flate.NewReader']","['DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DIRECTORY']"
294,0.5   4.6%  72.2%      0.5   4.6% net.newFD,"['0', '.', '5', '4', '.', '6', '72', '.', '2', '0', '.', '5', '4', '.', '6', 'net', '.', 'newFD']","['OCTAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
295,0.5   4.6%  76.8%      0.5   4.6% net.sockaddrToTCP,"['0', '.', '5', '4', '.', '6', '76', '.', '8', '0', '.', '5', '4', '.', '6', 'net', '.', 'sockaddrToTCP']","['OCTAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
296,0.5   4.6%  81.5%      4.5  41.7% net/http.(*Transport).getConn,"['0', '.', '5', '4', '.', '6', '81', '.', '5', '4', '.', '5', '41', '.', '7', 'net/http.(*Transport).getConn']","['OCTAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DIRECTORY']"
297,0.5   4.6%  86.1%      2.5  23.2% net/http.(*persistConn).readLoop,"['0', '.', '5', '4', '.', '6', '86', '.', '1', '2', '.', '5', '23', '.', '2', 'net/http.(*persistConn).readLoop']","['OCTAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DIRECTORY']"
298,0.5   4.6%  90.7%      0.5   4.6% net/textproto.(*Reader).ReadMIMEHeader,"['0', '.', '5', '4', '.', '6', '90', '.', '7', '0', '.', '5', '4', '.', '6', 'net/textproto.(*Reader).ReadMIMEHeader']","['OCTAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DIRECTORY']"
299,0.5   4.6%  95.4%      0.5   4.6% net/url.(*URL).ResolveReference,"['0', '.', '5', '4', '.', '6', '95', '.', '4', '0', '.', '5', '4', '.', '6', 'net/url.(*URL).ResolveReference']","['OCTAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'OCTAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'DIRECTORY']"
