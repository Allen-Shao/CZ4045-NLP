,text,token,annotation
0,"I develop an app in go that locally was working perfectly with the google SDK. Now I tried to deploy it and I cannot save files on cloud storage anymore.

Here is my go code

","['I', 'develop', 'an', 'app', 'in', 'go', 'that', 'locally', 'was', 'working', 'perfectly', 'with', 'the', 'google', 'SDK.', 'Now', 'I', 'tried', 'to', 'deploy', 'it', 'and', 'I', 'cannot', 'save', 'files', 'on', 'cloud', 'storage', 'anymore.', 'Here', 'is', 'my', 'go', 'code']","['PRP', 'VBP', 'DT', 'NN', 'IN', 'NN', 'IN', 'RB', 'VBD', 'VBG', 'RB', 'IN', 'DT', 'NN', 'NNP', 'RB', 'PRP', 'VBD', 'TO', 'VB', 'PRP', 'CC', 'PRP', 'VBP', 'JJ', 'NNS', 'IN', 'JJ', 'NN', 'NN', 'RB', 'VBZ', 'PRP$', 'JJ', 'NN']"
1,package galileo,"['package', 'galileo']","['KEYWORD', 'IDENTIFIER']"
2,import (,"['import', '(']","['KEYWORD', 'OPERATOR']"
3,"    ""encoding/json""","['""encoding/json""']",['STRING_LITERAL']
4,"    ""golang.org/x/net/context""","['""golang.org/x/net/context""']",['STRING_LITERAL']
5,"    ""golang.org/x/oauth2""","['""golang.org/x/oauth2""']",['STRING_LITERAL']
6,"    ""golang.org/x/oauth2/google""","['""golang.org/x/oauth2/google""']",['STRING_LITERAL']
7,"    ""google.golang.org/appengine""","['""google.golang.org/appengine""']",['STRING_LITERAL']
8,"    ""google.golang.org/appengine/file""","['""google.golang.org/appengine/file""']",['STRING_LITERAL']
9,"    ""google.golang.org/appengine/urlfetch""","['""google.golang.org/appengine/urlfetch""']",['STRING_LITERAL']
10,"    ""google.golang.org/cloud""","['""google.golang.org/cloud""']",['STRING_LITERAL']
11,"    ""google.golang.org/cloud/storage""","['""google.golang.org/cloud/storage""']",['STRING_LITERAL']
12,"    ""io""","['""io""']",['STRING_LITERAL']
13,"    ""io/ioutil""","['""io/ioutil""']",['STRING_LITERAL']
14,"    ""log""","['""log""']",['STRING_LITERAL']
15,"    ""net/http""","['""net/http""']",['STRING_LITERAL']
16,),[')'],['OPERATOR']
17,"var bucket = ""prod_agl_expt""","['var', 'bucket', '=', '""prod_agl_expt""']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
18,// saveData struct holds information needed to run the various saving functions.,"['//', 'saveData', 'struct', 'holds', 'information', 'needed', 'to', 'run', 'the', 'various', 'saving', 'functions.']","['COMMENT', 'NNS', 'NN', 'VBZ', 'NN', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'VBG', 'NN']"
19,type saveData struct {,"['type', 'saveData', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
20,    c       context.Context,"['c', 'context', '.', 'Context']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
21,    r       *http.Request       //http response,"['r', '*', 'http', '.', 'Request', '//', 'http', 'response']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'COMMENT', 'NN', 'NN']"
22,    w       http.ResponseWriter //http writer,"['w', 'http', '.', 'ResponseWriter', '//', 'http', 'writer']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'COMMENT', 'NN', 'NN']"
23,    ctx     context.Context,"['ctx', 'context', '.', 'Context']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
24,    cleanUp []string // cleanUp is a list of filenames that need cleaning up at the end of the saving.,"['cleanUp', '[]', 'string', '//', 'cleanUp', 'is', 'a', 'list', 'of', 'filenames', 'that', 'need', 'cleaning', 'up', 'at', 'the', 'end', 'of', 'the', 'saving.']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'COMMENT', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'NNS', 'WDT', 'VBP', 'VBG', 'RP', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN']"
25,    failed  bool     // failed indicates that one or more of the saving steps failed.,"['failed', 'bool', '//', 'failed', 'indicates', 'that', 'one', 'or', 'more', 'of', 'the', 'saving', 'steps', 'failed.']","['IDENTIFIER', 'IDENTIFIER', 'COMMENT', 'VBN', 'VBZ', 'IN', 'CD', 'CC', 'JJR', 'IN', 'DT', 'VBG', 'NNS', 'RB']"
26,},['}'],['OPERATOR']
27,// saveData struct holds information needed to run the various saving functions.,"['//', 'saveData', 'struct', 'holds', 'information', 'needed', 'to', 'run', 'the', 'various', 'saving', 'functions.']","['COMMENT', 'NNS', 'NN', 'VBZ', 'NN', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'VBG', 'NN']"
28,type loadData struct {,"['type', 'loadData', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
29,    c       context.Context,"['c', 'context', '.', 'Context']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
30,    r       *http.Request       //http response,"['r', '*', 'http', '.', 'Request', '//', 'http', 'response']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'COMMENT', 'NN', 'NN']"
31,    w       http.ResponseWriter //http writer,"['w', 'http', '.', 'ResponseWriter', '//', 'http', 'writer']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'COMMENT', 'NN', 'NN']"
32,    ctx     context.Context,"['ctx', 'context', '.', 'Context']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
33,    cleanUp []string // cleanUp is a list of filenames that need cleaning up at the end of the saving.,"['cleanUp', '[]', 'string', '//', 'cleanUp', 'is', 'a', 'list', 'of', 'filenames', 'that', 'need', 'cleaning', 'up', 'at', 'the', 'end', 'of', 'the', 'saving.']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'COMMENT', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'NNS', 'WDT', 'VBP', 'VBG', 'RP', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN']"
34,    failed  bool     // failed indicates that one or more of the saving steps failed.,"['failed', 'bool', '//', 'failed', 'indicates', 'that', 'one', 'or', 'more', 'of', 'the', 'saving', 'steps', 'failed.']","['IDENTIFIER', 'IDENTIFIER', 'COMMENT', 'VBN', 'VBZ', 'IN', 'CD', 'CC', 'JJR', 'IN', 'DT', 'VBG', 'NNS', 'RB']"
35,},['}'],['OPERATOR']
36,type jsonStruct struct {,"['type', 'jsonStruct', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
37,    User struct {,"['User', 'struct', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR']"
38,"        Gender string `json:""gender""`","['Gender', 'string', 'json', ':', '""gender""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
39,"        Age    string `json:""age""`","['Age', 'string', 'json', ':', '""age""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
40,"        ID     string `json:""id""`","['ID', 'string', 'json', ':', '""id""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
41,"    } `json:""user""`","['}', 'json', ':', '""user""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
42,    Stim map[string]struct {,"['Stim', 'map', '[', 'string', ']', 'struct', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
43,"        Index           int    `json:""index""`","['Index', 'int', 'json', ':', '""index""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
44,"        Word            string `json:""word""`","['Word', 'string', 'json', ':', '""word""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
45,"        WordDisplayTime int    `json:""wordDisplayTime""`","['WordDisplayTime', 'int', 'json', ':', '""wordDisplayTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
46,"        AnswerMaxTime   int    `json:""answerMaxTime""`","['AnswerMaxTime', 'int', 'json', ':', '""answerMaxTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
47,"        FixationTime    int    `json:""fixationTime""`","['FixationTime', 'int', 'json', ':', '""fixationTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
48,"        Train           bool   `json:""train""`","['Train', 'bool', 'json', ':', '""train""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
49,"        Test            bool   `json:""test""`","['Test', 'bool', 'json', ':', '""test""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
50,"        Grammatical     bool   `json:""grammatical""`","['Grammatical', 'bool', 'json', ':', '""grammatical""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
51,"        Grammar         string `json:""grammar""`","['Grammar', 'string', 'json', ':', '""grammar""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
52,"        Keyboard        bool   `json:""keyboard""`","['Keyboard', 'bool', 'json', ':', '""keyboard""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
53,"        TestSeq         int    `json:""testSeq""`","['TestSeq', 'int', 'json', ':', '""testSeq""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
54,"    } `json:""viewedTrials""`","['}', 'json', ':', '""viewedTrials""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
55,    Answers struct {,"['Answers', 'struct', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR']"
56,        Training []struct {,"['Training', '[]', 'struct', '{']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
57,"            Answer   string  `json:""ans""`","['Answer', 'string', 'json', ':', '""ans""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
58,"            RT       float32 `json:""RT""`","['RT', 'float32', 'json', ':', '""RT""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
59,"            GtAnswer string  `json:""gtAns""`","['GtAnswer', 'string', 'json', ':', '""gtAns""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
60,"            Correct  int     `json:""correct""`","['Correct', 'int', 'json', ':', '""correct""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
61,"        } `json:""training""`","['}', 'json', ':', '""training""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
62,        Test []struct {,"['Test', '[]', 'struct', '{']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
63,"            Answer   string  `json:""ans""`","['Answer', 'string', 'json', ':', '""ans""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
64,"            RT       float32 `json:""RT""`","['RT', 'float32', 'json', ':', '""RT""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
65,"            GtAnswer bool    `json:""gtAns""`","['GtAnswer', 'bool', 'json', ':', '""gtAns""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
66,"            Correct  int     `json:""correct""`","['Correct', 'int', 'json', ':', '""correct""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
67,"        } `json:""test""`","['}', 'json', ':', '""test""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
68,"    } `json:""answers""`","['}', 'json', ':', '""answers""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
69,    Trials []struct {,"['Trials', '[]', 'struct', '{']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
70,        Trial struct {,"['Trial', 'struct', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR']"
71,"            Index           int    `json:""index""`","['Index', 'int', 'json', ':', '""index""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
72,"            Word            string `json:""word""`","['Word', 'string', 'json', ':', '""word""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
73,"            WordDisplayTime int    `json:""wordDisplayTime""`","['WordDisplayTime', 'int', 'json', ':', '""wordDisplayTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
74,"            AnswerMaxTime   int    `json:""answerMaxTime""`","['AnswerMaxTime', 'int', 'json', ':', '""answerMaxTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
75,"            FixationTime    int    `json:""fixationTime""`","['FixationTime', 'int', 'json', ':', '""fixationTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
76,"            Train           bool   `json:""train""`","['Train', 'bool', 'json', ':', '""train""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
77,"            Test            bool   `json:""test""`","['Test', 'bool', 'json', ':', '""test""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
78,"            Grammatical     bool   `json:""grammatical""`","['Grammatical', 'bool', 'json', ':', '""grammatical""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
79,"            Grammar         string `json:""grammar""`","['Grammar', 'string', 'json', ':', '""grammar""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
80,"            Keyboard        bool   `json:""keyboard""`","['Keyboard', 'bool', 'json', ':', '""keyboard""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
81,"            TestSeq         int    `json:""testSeq""`","['TestSeq', 'int', 'json', ':', '""testSeq""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
82,"        } `json:""trial""`","['}', 'json', ':', '""trial""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
83,        Metadata struct {,"['Metadata', 'struct', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR']"
84,"            Instructions string `json:""instructions""`","['Instructions', 'string', 'json', ':', '""instructions""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
85,"            SubmitUrl    string `json:""submitUrl""`","['SubmitUrl', 'string', 'json', ':', '""submitUrl""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
86,"        } `json:""metadata""`","['}', 'json', ':', '""metadata""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
87,"    } `json:""shuffledTrials""`","['}', 'json', ':', '""shuffledTrials""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
88,    Debriefing []struct {,"['Debriefing', '[]', 'struct', '{']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
89,"        Type             string `json:""type""`","['Type', 'string', 'json', ':', '""type""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
90,"        RadioWithTextAns string `json:""radioWithTextAns""`","['RadioWithTextAns', 'string', 'json', ':', '""radioWithTextAns""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
91,"        TextAns          string `json:""textAns""`","['TextAns', 'string', 'json', ':', '""textAns""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
92,"        Rating           int    `json:""rating""`","['Rating', 'int', 'json', ':', '""rating""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
93,"        RadioOnlyAns     string `json:""radioOnlyAns""`","['RadioOnlyAns', 'string', 'json', ':', '""radioOnlyAns""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
94,"    } `json:""debriefingAns""`","['}', 'json', ':', '""debriefingAns""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
95,},['}'],['OPERATOR']
96,type trialStruct []struct {,"['type', 'trialStruct', '[]', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
97,    Trial struct {,"['Trial', 'struct', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR']"
98,"        Index           int    `json:""index""`","['Index', 'int', 'json', ':', '""index""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
99,"        Word            string `json:""word""`","['Word', 'string', 'json', ':', '""word""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
100,"        WordDisplayTime int    `json:""wordDisplayTime""`","['WordDisplayTime', 'int', 'json', ':', '""wordDisplayTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
101,"        AnswerMaxTime   int    `json:""answerMaxTime""`","['AnswerMaxTime', 'int', 'json', ':', '""answerMaxTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
102,"        FixationTime    int    `json:""fixationTime""`","['FixationTime', 'int', 'json', ':', '""fixationTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
103,"        Train           bool   `json:""train""`","['Train', 'bool', 'json', ':', '""train""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
104,"        Test            bool   `json:""test""`","['Test', 'bool', 'json', ':', '""test""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
105,"        Grammatical     bool   `json:""grammatical""`","['Grammatical', 'bool', 'json', ':', '""grammatical""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
106,"        Grammar         string `json:""grammar""`","['Grammar', 'string', 'json', ':', '""grammar""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
107,"        Keyboard        bool   `json:""keyboard""`","['Keyboard', 'bool', 'json', ':', '""keyboard""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
108,"        TestSeq         int    `json:""testSeq""`","['TestSeq', 'int', 'json', ':', '""testSeq""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
109,"    } `json:""trial""`","['}', 'json', ':', '""trial""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
110,    Metadata struct {,"['Metadata', 'struct', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR']"
111,"        Instructions string `json:""instructions""`","['Instructions', 'string', 'json', ':', '""instructions""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
112,"        SubmitUrl    string `json:""submitUrl""`","['SubmitUrl', 'string', 'json', ':', '""submitUrl""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
113,"    } `json:""metadata""`","['}', 'json', ':', '""metadata""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
114,},['}'],['OPERATOR']
115,"func fromJSON(r io.Reader) (jsonStruct, error) {","['func', 'fromJSON', '(', 'r', 'io', '.', 'Reader', ')', '(', 'jsonStruct', ',', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
116,    var x jsonStruct,"['var', 'x', 'jsonStruct']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
117,    dec := json.NewDecoder(r),"['dec', ':=', 'json.NewDecoder(r)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
118,    err := dec.Decode(&x),"['err', ':=', 'dec.Decode(&x)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
119,"    return x, err","['return', 'x', ',', 'err']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
120,},['}'],['OPERATOR']
121,"func toJSON(b io.Writer, trial trialStruct) (io.Writer, error) {","['func', 'toJSON', '(', 'b', 'io', '.', 'Writer', ',', 'trial', 'trialStruct', ')', '(', 'io', '.', 'Writer', ',', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
122,    enc := json.NewEncoder(b),"['enc', ':=', 'json.NewEncoder(b)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
123,    err := enc.Encode(&trial),"['err', ':=', 'enc.Encode(&trial)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
124,"    return b, err","['return', 'b', ',', 'err']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
125,},['}'],['OPERATOR']
126,func init() {,"['func', 'init', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
127,"    http.HandleFunc(""/"", handleStatic)","['http.HandleFunc(""/"", handleStatic)']",['FUNCTION_CALL']
128,"    http.HandleFunc(""/saveUserData"", handleSaveUser)","['http.HandleFunc(""/saveUserData"", handleSaveUser)']",['FUNCTION_CALL']
129,"    http.HandleFunc(""/loadTrials"", handleloadTrials)","['http.HandleFunc(""/loadTrials"", handleloadTrials)']",['FUNCTION_CALL']
130,},['}'],['OPERATOR']
131,"func handleStatic(w http.ResponseWriter, r *http.Request) {","['func', 'handleStatic', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
132,"    w.Header().Set(""Cache-Control"", ""no-cache"")","['w.Header().Set(""Cache-Control"", ""no-cache"")']",['FUNCTION_CALL']
133,"    http.ServeFile(w, r, ""static/""+r.URL.Path)","['http.ServeFile(w, r, ""static/""+r.URL.Path)']",['FUNCTION_CALL']
134,},['}'],['OPERATOR']
135,// testSave is the main saving entry point that calls the GCS operations.,"['//', 'testSave', 'is', 'the', 'main', 'saving', 'entry', 'point', 'that', 'calls', 'the', 'GCS', 'operations.']","['COMMENT', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'NN', 'WDT', 'VBZ', 'DT', 'NNP', 'NN']"
136,"func handleSaveUser(w http.ResponseWriter, r *http.Request) {","['func', 'handleSaveUser', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
137,    c := appengine.NewContext(r),"['c', ':=', 'appengine.NewContext(r)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
138,"    if bucket == """" {","['if', 'bucket', '==', '""""', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
139,        var err error,"['var', 'err', 'error']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
140,"        if bucket, err = file.DefaultBucketName(c); err != nil {","['if', 'bucket', ',', 'err', '=', 'file.DefaultBucketName(c)', ';', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
141,"            // log.Errorf(c, ""failed to get default GCS bucket name: %v"", err)","['//', 'log.Errorf(c,', '""failed', 'to', 'get', 'default', 'GCS', 'bucket', 'name:', '%v"",', 'err)']","['COMMENT', 'NN', 'VBD', 'TO', 'VB', 'NN', 'NNP', 'NN', 'NN', 'NNP', 'NN']"
142,            return,['return'],['KEYWORD']
143,        },['}'],['OPERATOR']
144,    },['}'],['OPERATOR']
145,    hc := &http.Client{,"['hc', ':=', '&', 'http', '.', 'Client', '{']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
146,        Transport: &oauth2.Transport{,"['Transport', ':', '&', 'oauth2', '.', 'Transport', '{']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
147,"            Source: google.AppEngineTokenSource(c, storage.ScopeFullControl),","['Source', ':', 'go', 'ogle.AppEngineTokenSource(c, storage.ScopeFullControl)', ',']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'FUNCTION_CALL', 'OPERATOR']"
148,"            Base:   &urlfetch.Transport{Context: c},","['Base', ':', '&', 'urlfetch', '.', 'Transport', '{', 'Context', ':', 'c', '},']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
149,"        },","['},']",['OPERATOR']
150,    },['}'],['OPERATOR']
151,"    ctx := cloud.NewContext(appengine.AppID(c), hc)","['ctx', ':=', 'cloud.NewContext(appengine.AppID(c), hc)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
152,    // structure to holds information needed to run the various saving functions,"['//', 'structure', 'to', 'holds', 'information', 'needed', 'to', 'run', 'the', 'various', 'saving', 'functions']","['COMMENT', 'NN', 'TO', 'VBZ', 'NN', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'VBG', 'NNS']"
153,    d := &saveData{,"['d', ':=', '&', 'saveData', '{']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
154,"        c:   c,","['c', ':', 'c', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
155,"        r:   r,","['r', ':', 'r', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
156,"        w:   w,","['w', ':', 'w', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
157,"        ctx: ctx,","['ctx', ':', 'ctx', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
158,    },['}'],['OPERATOR']
159,    // retrieve data,"['//', 'retrieve', 'data']","['COMMENT', 'NN', 'NNS']"
160,"    processedJson, trials, trainAns, testAns, stimSeq, userDetails, debriefingAns, rawJson := getJsonUserData(d.r, d.w)","['processedJson', ',', 'trials', ',', 'trainAns', ',', 'testAns', ',', 'stimSeq', ',', 'userDetails', ',', 'debriefingAns', ',', 'rawJson', ':=', 'getJsonUserData', '(', 'd', '.', 'r', ',', 'd', '.', 'w', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
161,    //,['//'],['COMMENT']
162,    d.createUserFolder(processedJson.User.ID),['d.createUserFolder(processedJson.User.ID)'],['FUNCTION_CALL']
163,"    // d.saveJson(k.User.ID, ""raw"", z)","['//', 'd.saveJson(k.User.ID,', '""raw"",', 'z)']","['COMMENT', 'NN', 'CD', 'NN']"
164,"    d.saveJson(processedJson.User.ID, ""trials"", trials)","['d.saveJson(processedJson.User.ID, ""trials"", trials)']",['FUNCTION_CALL']
165,"    d.saveJson(processedJson.User.ID, ""train"", trainAns)","['d.saveJson(processedJson.User.ID, ""train"", trainAns)']",['FUNCTION_CALL']
166,"    d.saveJson(processedJson.User.ID, ""test"", testAns)","['d.saveJson(processedJson.User.ID, ""test"", testAns)']",['FUNCTION_CALL']
167,"    d.saveJson(processedJson.User.ID, ""stim"", stimSeq)","['d.saveJson(processedJson.User.ID, ""stim"", stimSeq)']",['FUNCTION_CALL']
168,"    d.saveJson(processedJson.User.ID, ""user"", userDetails)","['d.saveJson(processedJson.User.ID, ""user"", userDetails)']",['FUNCTION_CALL']
169,"    d.saveJson(processedJson.User.ID, ""debriefing"", debriefingAns)","['d.saveJson(processedJson.User.ID, ""debriefing"", debriefingAns)']",['FUNCTION_CALL']
170,"    d.saveJson(processedJson.User.ID, ""raw"", rawJson)","['d.saveJson(processedJson.User.ID, ""raw"", rawJson)']",['FUNCTION_CALL']
171,},['}'],['OPERATOR']
172,// Deal with error,"['//', 'Deal', 'with', 'error']","['COMMENT', 'NN', 'IN', 'NN']"
173,"func (d *saveData) errorf(format string, args ...interface{}) {","['func', '(', 'd', '*', 'saveData', ')', 'errorf', '(', 'for', 'mat', 'string', ',', 'args', '...', 'interface', '{})', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR', 'OPERATOR']"
174,    d.failed = true,"['d', '.', 'failed', '=', 'true']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
175,},['}'],['OPERATOR']
176,"func getJsonUserData(r *http.Request, w http.ResponseWriter) (jsonStruct, []byte, []byte, []byte, []byte, []byte, []byte, []byte) {","['func', 'getJsonUserData', '(', 'r', '*', 'http', '.', 'Request', ',', 'w', 'http', '.', 'ResponseWriter', ')', '(', 'jsonStruct', ',', '[]', 'byte', ',', '[]', 'byte', ',', '[]', 'byte', ',', '[]', 'byte', ',', '[]', 'byte', ',', '[]', 'byte', ',', '[]', 'byte', ')', '{
177,    defer r.Body.Close(),"['defer', 'r', '.', 'Body.Close()']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
178,"    procJson, err := fromJSON(r.Body)","['procJson', ',', 'err', ':=', 'fromJSON', '(', 'r', '.', 'Body', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
179,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
180,        log.Fatal(err),['log.Fatal(err)'],['FUNCTION_CALL']
181,    },['}'],['OPERATOR']
182,"    log.Printf(""initial structure: "", procJson)","['log.Printf(""initial structure: "", procJson)']",['FUNCTION_CALL']
183,"    log.Printf(""%+v\n"", procJson)","['log.Printf(""%+v\\n"", procJson)']",['FUNCTION_CALL']
184,"    trials, err := json.Marshal(procJson.Trials)","['trials', ',', 'err', ':=', 'json.Marshal(procJson.Trials)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
185,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
186,        log.Fatal(err),['log.Fatal(err)'],['FUNCTION_CALL']
187,    },['}'],['OPERATOR']
188,"    trainAns, err := json.Marshal(procJson.Answers.Training)","['trainAns', ',', 'err', ':=', 'json.Marshal(procJson.Answers.Training)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
189,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
190,        log.Fatal(err),['log.Fatal(err)'],['FUNCTION_CALL']
191,    },['}'],['OPERATOR']
192,"    testAns, err := json.Marshal(procJson.Answers.Test)","['testAns', ',', 'err', ':=', 'json.Marshal(procJson.Answers.Test)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
193,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
194,        log.Fatal(err),['log.Fatal(err)'],['FUNCTION_CALL']
195,    },['}'],['OPERATOR']
196,"    stimSeq, err := json.Marshal(procJson.Stim)","['stimSeq', ',', 'err', ':=', 'json.Marshal(procJson.Stim)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
197,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
198,        log.Fatal(err),['log.Fatal(err)'],['FUNCTION_CALL']
199,    },['}'],['OPERATOR']
200,"    userDetail, err := json.Marshal(procJson.User)","['userDetail', ',', 'err', ':=', 'json.Marshal(procJson.User)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
201,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
202,        log.Fatal(err),['log.Fatal(err)'],['FUNCTION_CALL']
203,    },['}'],['OPERATOR']
204,"    debriefingAns, err := json.Marshal(procJson.Debriefing)","['debriefingAns', ',', 'err', ':=', 'json.Marshal(procJson.Debriefing)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
205,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
206,        log.Fatal(err),['log.Fatal(err)'],['FUNCTION_CALL']
207,    },['}'],['OPERATOR']
208,"    rawJson, err := json.Marshal(procJson)","['rawJson', ',', 'err', ':=', 'json.Marshal(procJson)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
209,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
210,        log.Fatal(err),['log.Fatal(err)'],['FUNCTION_CALL']
211,    },['}'],['OPERATOR']
212,"    return procJson, trials, trainAns, testAns, stimSeq, userDetail, debriefingAns, rawJson","['return', 'procJson', ',', 'trials', ',', 'trainAns', ',', 'testAns', ',', 'stimSeq', ',', 'userDetail', ',', 'debriefingAns', ',', 'rawJson']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
213,},['}'],['OPERATOR']
214,func (d *saveData) createUserFolder(folderName string) {,"['func', '(', 'd', '*', 'saveData', ')', 'createUserFolder', '(', 'folderName', 'string', ')', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
215,"    fName := folderName + ""/""","['fName', ':=', 'folderName', '+', '""/""']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
216,"    wc := storage.NewWriter(d.ctx, bucket, fName)","['wc', ':=', 'storage.NewWriter(d.ctx, bucket, fName)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
217,"    wc.ContentType = ""text/plain""","['wc', '.', 'ContentType', '=', '""text/plain""']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
218,"    d.cleanUp = append(d.cleanUp, fName)","['d', '.', 'cleanUp', '=', 'append', '(', 'd', '.', 'cleanUp', ',', 'fName', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
219,    if err := wc.Close(); err != nil {,"['if', 'err', ':=', 'wc.Close()', ';', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
220,"        d.errorf(""createFile: unable to close bucket %q, file %q: %v"", bucket, fName, err)","['d.errorf(""createFile: unable to close bucket %q, file %q: %v"", bucket, fName, err)']",['FUNCTION_CALL']
221,        return,['return'],['KEYWORD']
222,    },['}'],['OPERATOR']
223,},['}'],['OPERATOR']
224,"func (d *saveData) saveJson(folderName string, fileName string, fileContent []byte) {","['func', '(', 'd', '*', 'saveData', ')', 'saveJson', '(', 'folderName', 'string', ',', 'fileName', 'string', ',', 'fileContent', '[]', 'byte', ')', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
225,"    fullName := folderName + ""/"" + fileName","['fullName', ':=', 'folderName', '+', '""/""', '+', 'fileName']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER']"
226,"    wc := storage.NewWriter(d.ctx, bucket, fullName)","['wc', ':=', 'storage.NewWriter(d.ctx, bucket, fullName)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
227,"    wc.ContentType = ""text/plain""","['wc', '.', 'ContentType', '=', '""text/plain""']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
228,"    d.cleanUp = append(d.cleanUp, fullName)","['d', '.', 'cleanUp', '=', 'append', '(', 'd', '.', 'cleanUp', ',', 'fullName', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
229,"    d.createFile(fullName, fileContent)","['d.createFile(fullName, fileContent)']",['FUNCTION_CALL']
230,},['}'],['OPERATOR']
231,"func (d *saveData) createFile(fileName string, content []byte) {","['func', '(', 'd', '*', 'saveData', ')', 'createFile', '(', 'fileName', 'string', ',', 'content', '[]', 'byte', ')', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
232,"    wc := storage.NewWriter(d.ctx, bucket, fileName)","['wc', ':=', 'storage.NewWriter(d.ctx, bucket, fileName)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
233,"    wc.ContentType = ""text/plain""","['wc', '.', 'ContentType', '=', '""text/plain""']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
234,"    d.cleanUp = append(d.cleanUp, fileName)","['d', '.', 'cleanUp', '=', 'append', '(', 'd', '.', 'cleanUp', ',', 'fileName', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
235,"    if _, err := wc.Write([]byte(content)); err != nil {","['if', '_', ',', 'err', ':=', 'wc.Write([]byte(content))', ';', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
236,"        d.errorf(""createFile: unable to write data to bucket %q, file %q: %v"", bucket, fileName, err)","['d.errorf(""createFile: unable to write data to bucket %q, file %q: %v"", bucket, fileName, err)']",['FUNCTION_CALL']
237,        return,['return'],['KEYWORD']
238,    },['}'],['OPERATOR']
239,    if err := wc.Close(); err != nil {,"['if', 'err', ':=', 'wc.Close()', ';', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
240,"        d.errorf(""createFile: unable to close bucket %q, file %q: %v"", bucket, fileName, err)","['d.errorf(""createFile: unable to close bucket %q, file %q: %v"", bucket, fileName, err)']",['FUNCTION_CALL']
241,        return,['return'],['KEYWORD']
242,    },['}'],['OPERATOR']
243,},['}'],['OPERATOR']
244,"func handleloadTrials(w http.ResponseWriter, r *http.Request) {","['func', 'handleloadTrials', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
245,    c := appengine.NewContext(r),"['c', ':=', 'appengine.NewContext(r)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
246,"    if bucket == """" {","['if', 'bucket', '==', '""""', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
247,        var err error,"['var', 'err', 'error']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
248,"        if bucket, err = file.DefaultBucketName(c); err != nil {","['if', 'bucket', ',', 'err', '=', 'file.DefaultBucketName(c)', ';', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
249,"            // log.Errorf(c, ""failed to get default GCS bucket name: %v"", err)","['//', 'log.Errorf(c,', '""failed', 'to', 'get', 'default', 'GCS', 'bucket', 'name:', '%v"",', 'err)']","['COMMENT', 'NN', 'VBD', 'TO', 'VB', 'NN', 'NNP', 'NN', 'NN', 'NNP', 'NN']"
250,            return,['return'],['KEYWORD']
251,        },['}'],['OPERATOR']
252,    },['}'],['OPERATOR']
253,    hc := &http.Client{,"['hc', ':=', '&', 'http', '.', 'Client', '{']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
254,        Transport: &oauth2.Transport{,"['Transport', ':', '&', 'oauth2', '.', 'Transport', '{']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
255,"            Source: google.AppEngineTokenSource(c, storage.ScopeFullControl),","['Source', ':', 'go', 'ogle.AppEngineTokenSource(c, storage.ScopeFullControl)', ',']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'FUNCTION_CALL', 'OPERATOR']"
256,"            Base:   &urlfetch.Transport{Context: c},","['Base', ':', '&', 'urlfetch', '.', 'Transport', '{', 'Context', ':', 'c', '},']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
257,"        },","['},']",['OPERATOR']
258,    },['}'],['OPERATOR']
259,"    ctx := cloud.NewContext(appengine.AppID(c), hc)","['ctx', ':=', 'cloud.NewContext(appengine.AppID(c), hc)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
260,    // structure to holds information needed to run the various saving functions,"['//', 'structure', 'to', 'holds', 'information', 'needed', 'to', 'run', 'the', 'various', 'saving', 'functions']","['COMMENT', 'NN', 'TO', 'VBZ', 'NN', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'VBG', 'NNS']"
261,    d := &saveData{,"['d', ':=', '&', 'saveData', '{']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
262,"        c:   c,","['c', ':', 'c', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
263,"        r:   r,","['r', ':', 'r', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
264,"        w:   w,","['w', ':', 'w', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
265,"        ctx: ctx,","['ctx', ':', 'ctx', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
266,    },['}'],['OPERATOR']
267,"    userID := r.URL.Query().Get(""id"")","['userID', ':=', 'r', '.', 'URL.Query().Get(""id"")']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
268,    log.Println(userID),['log.Println(userID)'],['FUNCTION_CALL']
269,    trialJson := d.readFile(userID),"['trialJson', ':=', 'd.readFile(userID)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
270,    w.Write(trialJson),['w.Write(trialJson)'],['FUNCTION_CALL']
271,},['}'],['OPERATOR']
272,// readFile reads the named file in Google Cloud Storage.,"['//', 'readFile', 'reads', 'the', 'named', 'file', 'in', 'Google', 'Cloud', 'Storage.']","['COMMENT', 'NN', 'VBZ', 'DT', 'VBN', 'NN', 'IN', 'NNP', 'NNP', 'NNP']"
273,func (d *saveData) readFile(fileName string) []byte {,"['func', '(', 'd', '*', 'saveData', ')', 'readFile', '(', 'fileName', 'string', ')', '[]', 'byte', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
274,"    trialName := fileName + ""/trials""","['trialName', ':=', 'fileName', '+', '""/trials""']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
275,"    rc, err := storage.NewReader(d.ctx, bucket, trialName)","['rc', ',', 'err', ':=', 'storage.NewReader(d.ctx, bucket, trialName)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
276,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
277,"        d.errorf(""readFile: unable to open file from bucket %q, file %q: %v"", bucket, trialName, err)","['d.errorf(""readFile: unable to open file from bucket %q, file %q: %v"", bucket, trialName, err)']",['FUNCTION_CALL']
278,    },['}'],['OPERATOR']
279,    defer rc.Close(),"['defer', 'rc.Close()']","['IDENTIFIER', 'FUNCTION_CALL']"
280,"    slurp, err := ioutil.ReadAll(rc)","['slurp', ',', 'err', ':=', 'ioutil.ReadAll(rc)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
281,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
282,"        d.errorf(""readFile: unable to read data from bucket %q, file %q: %v"", bucket, fileName, err)","['d.errorf(""readFile: unable to read data from bucket %q, file %q: %v"", bucket, fileName, err)']",['FUNCTION_CALL']
283,    },['}'],['OPERATOR']
284,    return slurp,"['return', 'slurp']","['KEYWORD', 'IDENTIFIER']"
285,},['}'],['OPERATOR']
286,"

The javascript code:

","['The', 'javascript', 'code:']","['DT', 'NN', 'NN']"
287,saveUserData : function saveUserData(data) {,"['saveUserData', ':', 'func', 'tion', 'saveUserData', '(', 'data', ')', '{']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
288,"  var _this = this,","['var', '_this', '=', 'this', ',']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
289,      save = this.shadowRoot.querySelector('#save-data');,"['save', '=', 'this', '.', ""shadowRoot.querySelector('#save-data')"", ';']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'OPERATOR']"
290,"  save.url=""http://galileoexp.appspot.com/saveUserData"";","['save.url=""http://galileoexp.appspot.com/saveUserData"";']",['DIRECTORY']
291,  save.body = JSON.stringify(data);,"['save', '.', 'body', '=', 'JSON.stringify(data)', ';']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'OPERATOR']"
292,  save.go();,"['save.go()', ';']","['FUNCTION_CALL', 'OPERATOR']"
293,},['}'],['OPERATOR']
294,"

The console does not give any error when it call /saveUserData so I really do no know where the problem is, it seems like the permission are wrong but I checked them and they look good.

Any idea?
thanks
","['The', 'console', 'does', 'not', 'give', 'any', 'error', 'when', 'it', 'call', '/saveUserData', 'so', 'I', 'really', 'do', 'no', 'know', 'where', 'the', 'problem', 'is,', 'it', 'seems', 'like', 'the', 'permission', 'are', 'wrong', 'but', 'I', 'checked', 'them', 'and', 'they', 'look', 'good.', 'Any', 'idea?', 'thanks']","['DT', 'NN', 'VBZ', 'RB', 'VB', 'DT', 'NN', 'WRB', 'PRP', 'VB', 'NNP', 'IN', 'PRP', 'RB', 'VBP', 'DT', 'VB', 'WRB', 'DT', 'NN', 'NN', 'PRP', 'VBZ', 'IN', 'DT', 'NN', 'VBP', 'JJ', 'CC', 'PRP', 'VBD', 'PRP', 'CC', 'PRP', 'VBP', 'JJ', 'NNP', 'NN', 'NNS']"
