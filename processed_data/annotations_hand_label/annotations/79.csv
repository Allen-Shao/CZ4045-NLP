,text,token,annotation
0,"I want to write three concurrent go routines that sends integers to each other. Now, my code is compiled properly, however after first execution it gives error ""throw: all goroutines are asleep - deadlock!"". I tried to find the error but I could not able to find any error in code logic.Can anybody help me to find the mistake with my code. My code is given below. 

","['I', 'want', 'to', 'write', 'three', 'concurrent', 'go', 'routines', 'that', 'sends', 'integers', 'to', 'each', 'other.', 'Now,', 'my', 'code', 'is', 'compiled', 'properly,', 'however', 'after', 'first', 'execution', 'it', 'gives', 'error', '""throw:', 'all', 'goroutines', 'are', 'asleep', '-', 'deadlock!"".', 'I', 'tried', 'to', 'find', 'the', 'error', 'but', 'I', 'could', 'not', 'able', 'to', 'find', 'any', 'error', 'in', 'code', 'logic.Can', 'anybody', 'help', 'me', 'to', 'find', 'the', 'mistake', 'with', 'my', 'code.', 'My', 'code', 'is', 'given', 'below.']","['PRP', 'VBP', 'TO', 'VB', 'CD', 'NN', 'VB', 'NNS', 'WDT', 'VBZ', 'NNS', 'TO', 'DT', 'NN', 'NNP', 'PRP$', 'NN', 'VBZ', 'VBN', 'NN', 'RB', 'IN', 'JJ', 'NN', 'PRP', 'VBZ', 'JJ', 'IN', 'DT', 'NNS', 'VBP', 'JJ', ':', 'NN', 'PRP', 'VBD', 'TO', 'VB', 'DT', 'NN', 'CC', 'PRP', 'MD', 'RB', 'JJ', 'TO', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NN', 'NN', 'VB', 'PRP', 'TO', 'VB', 'DT', 'NN', 'IN', 'PRP$', 'NN', 'PRP$', 'NN', 'VBZ', 'VBN', 'NNS']"
1,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
2,"import ""rand""","['import', '""rand""']","['KEYWORD', 'STRING_LITERAL']"
3,"func Routine1(command12 chan int, response12 chan int, command13 chan int, response13 chan int) {","['func', 'Routine1', '(', 'command12', 'chan', 'int', ',', 'response12', 'chan', 'int', ',', 'command13', 'chan', 'int', ',', 'response13', 'chan', 'int', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
4,    // z12 is a variable which stores the value comming from channel 2 and z13 is a variable which stores the value comming from channel 3.,"['//', 'z12', 'is', 'a', 'variable', 'which', 'stores', 'the', 'value', 'comming', 'from', 'channel', '2', 'and', 'z13', 'is', 'a', 'variable', 'which', 'stores', 'the', 'value', 'comming', 'from', 'channel', '3.']","['COMMENT', 'NN', 'VBZ', 'DT', 'JJ', 'WDT', 'NNS', 'DT', 'NN', 'VBG', 'IN', 'NN', 'CD', 'CC', 'NN', 'VBZ', 'DT', 'JJ', 'WDT', 'NNS', 'DT', 'NN', 'VBG', 'IN', 'NN', 'CD']"
5,    z12 := 200,"['z12', ':=', '200']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'DECIMAL_LITERAL']"
6,    z13 := 200,"['z13', ':=', '200']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'DECIMAL_LITERAL']"
7,    m12 := false,"['m12', ':=', 'false']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
8,    m13 := false,"['m13', ':=', 'false']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
9,    y := 0,"['y', ':=', '0']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'OCTAL_LITERAL']"
10,    for i := 0; i < 20; i++ {,"['for', 'i', ':=', '0', ';', 'i', '<', '20', ';', 'i', '++', '{']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'PUNCTUATION']"
11,        y = rand.Intn(100),"['y', '=', 'rand.Intn(100)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
12,        // If y's value is not 0 then the value will be sent to routine 2 or 3 according to   prime or not.,"['//', 'If', ""y's"", 'value', 'is', 'not', '0', 'then', 'the', 'value', 'will', 'be', 'sent', 'to', 'routine', '2', 'or', '3', 'according', 'to', 'prime', 'or', 'not.']","['COMMENT', 'IN', 'JJ', 'NN', 'VBZ', 'RB', 'CD', 'RB', 'DT', 'NN', 'MD', 'VB', 'VBN', 'TO', 'VB', 'CD', 'CC', 'CD', 'VBG', 'TO', 'JJ', 'CC', 'JJ']"
13,"        // If y's value is 0 then process state (the varibles used by it means z12, z13) and channel state will be saved.[routine 1 is initiator]","['//', 'If', ""y's"", 'value', 'is', '0', 'then', 'process', 'state', '(the', 'varibles', 'used', 'by', 'it', 'means', 'z12,', 'z13)', 'and', 'channel', 'state', 'will', 'be', 'saved.[routine', '1', 'is', 'initiator]']","['COMMENT', 'IN', 'JJ', 'NN', 'VBZ', 'CD', 'RB', 'NN', 'NN', 'NN', 'NNS', 'VBN', 'IN', 'PRP', 'VBZ', 'JJ', 'NN', 'CC', 'NN', 'NN', 'MD', 'VB', 'JJ', 'CD', 'VBZ', 'JJ']"
14,        if y == 0 {,"['if', 'y', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
15,"            print(z12, ""    z12 STATE SAVED\n"")","['print', '(', 'z12', ',', '""    z12 STATE SAVED\\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
16,"            print(z13, ""    z13 STATE SAVED\n"")","['print', '(', 'z13', ',', '""    z13 STATE SAVED\\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
17,"            // Routine 1 is initiator,  it sends 0 to make other process to save the state.","['//', 'Routine', '1', 'is', 'initiator,', 'it', 'sends', '0', 'to', 'make', 'other', 'process', 'to', 'save', 'the', 'state.']","['COMMENT', 'JJ', 'CD', 'VBZ', 'JJ', 'PRP', 'VBZ', 'CD', 'TO', 'VB', 'JJ', 'NN', 'TO', 'VB', 'DT', 'NN']"
18,            y = 0,"['y', '=', '0']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'OCTAL_LITERAL']"
19,            command12 <- y,"['command12', '<-', 'y']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
20,            command13 <- y,"['command13', '<-', 'y']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
21,"            // Untill routine 2 and 3 does not send 0, process 1 is on channel saving state (it's process state is already saved).","['//', 'Untill', 'routine', '2', 'and', '3', 'does', 'not', 'send', '0,', 'process', '1', 'is', 'on', 'channel', 'saving', 'state', ""(it's"", 'process', 'state', 'is', 'already', 'saved).']","['COMMENT', 'NNP', 'VBZ', 'CD', 'CC', 'CD', 'VBZ', 'RB', 'VB', 'CD', 'NN', 'CD', 'VBZ', 'IN', 'NN', 'VBG', 'NN', 'NN', 'NN', 'NN', 'VBZ', 'RB', 'JJ']"
22,"            // When routine 1 recives 0 from both other processes, channel is saved and routine 1 retuns to it's common routine procedure.","['//', 'When', 'routine', '1', 'recives', '0', 'from', 'both', 'other', 'processes,', 'channel', 'is', 'saved', 'and', 'routine', '1', 'retuns', 'to', ""it's"", 'common', 'routine', 'procedure.']","['COMMENT', 'WRB', 'JJ', 'CD', 'NNS', 'CD', 'IN', 'DT', 'JJ', 'NN', 'NN', 'VBZ', 'VBN', 'CC', 'JJ', 'CD', 'NNS', 'TO', 'VB', 'JJ', 'NN', 'NN']"
23,"            // When routine 1 recives 0 from any other processes, saving channel bettwen them is stopped.","['//', 'When', 'routine', '1', 'recives', '0', 'from', 'any', 'other', 'processes,', 'saving', 'channel', 'bettwen', 'them', 'is', 'stopped.']","['COMMENT', 'WRB', 'JJ', 'CD', 'NNS', 'CD', 'IN', 'DT', 'JJ', 'NN', 'VBG', 'NNS', 'IN', 'PRP', 'VBZ', 'JJ']"
24,"            // m12, m13 is used to mark whether 0 recived or not.","['//', 'm12,', 'm13', 'is', 'used', 'to', 'mark', 'whether', '0', 'recived', 'or', 'not.']","['COMMENT', 'NN', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'IN', 'CD', 'VBD', 'CC', 'NNS']"
25,            for m12 != true || m13 != true {,"['for', 'm12', '!=', 'true', '||', 'm13', '!=', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'LOGICAL_OPERATOR', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
26,                select {,"['select', '{']","['KEYWORD', 'PUNCTUATION']"
27,                case cmd1 := <-response12:,"['case', 'cmd1', ':=', '<-', 'response12', ':']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'CHANNEL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
28,                    {,['{'],['PUNCTUATION']
29,                        z12 = cmd1,"['z12', '=', 'cmd1']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
30,                        if z12 != 0 {,"['if', 'z12', '!=', '0', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
31,"                            print(z12, ""    z12  Channel Saving.... \n"")","['print', '(', 'z12', ',', '""    z12  Channel Saving.... \\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
32,                            y = rand.Intn(100),"['y', '=', 'rand.Intn(100)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
33,                            command12 <- y,"['command12', '<-', 'y']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
34,                        },['}'],['PUNCTUATION']
35,                        if z12 == 0 {,"['if', 'z12', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
36,                            m12 = true,"['m12', '=', 'true']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
37,"                            print("" z12  Channel Saving Stopped \n"")","['print', '(', '"" z12  Channel Saving Stopped \\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
38,                        },['}'],['PUNCTUATION']
39,                    },['}'],['PUNCTUATION']
40,                case cmd2 := <-response13:,"['case', 'cmd2', ':=', '<-', 'response13', ':']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'CHANNEL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
41,                    {,['{'],['PUNCTUATION']
42,                        z13 = cmd2,"['z13', '=', 'cmd2']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
43,                        if z13 != 0 {,"['if', 'z13', '!=', '0', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
44,"                            print(z13, ""    z13  Channel Saving.... \n"")","['print', '(', 'z13', ',', '""    z13  Channel Saving.... \\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
45,                            y = rand.Intn(100),"['y', '=', 'rand.Intn(100)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
46,                            command13 <- y,"['command13', '<-', 'y']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
47,                        },['}'],['PUNCTUATION']
48,                        if z13 == 0 {,"['if', 'z13', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
49,                            m13 = true,"['m13', '=', 'true']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
50,"                            print(""    z13  Channel Saving Stopped \n"")","['print', '(', '""    z13  Channel Saving Stopped \\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
51,                        },['}'],['PUNCTUATION']
52,                    },['}'],['PUNCTUATION']
53,                },['}'],['PUNCTUATION']
54,            },['}'],['PUNCTUATION']
55,            // After saving process state it retuns to it's normal behaviour.,"['//', 'After', 'saving', 'process', 'state', 'it', 'retuns', 'to', ""it's"", 'normal', 'behaviour.']","['COMMENT', 'IN', 'VBG', 'NN', 'NN', 'PRP', 'VBZ', 'TO', 'VB', 'JJ', 'NN']"
56,            m12 = false,"['m12', '=', 'false']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
57,            m13 = false,"['m13', '=', 'false']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
58,        },['}'],['PUNCTUATION']
59,        if y != 0 {,"['if', 'y', '!=', '0', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
60,"            // If y value is not 0, routine 1 just sends int to other process according to prime or not and recives int accordingly.","['//', 'If', 'y', 'value', 'is', 'not', '0,', 'routine', '1', 'just', 'sends', 'int', 'to', 'other', 'process', 'according', 'to', 'prime', 'or', 'not', 'and', 'recives', 'int', 'accordingly.']","['COMMENT', 'IN', 'JJ', 'NN', 'VBZ', 'RB', 'CD', 'JJ', 'CD', 'RB', 'NNS', 'VBP', 'TO', 'JJ', 'NN', 'VBG', 'TO', 'JJ', 'CC', 'RB', 'CC', 'VBZ', 'NN', 'NN']"
61,            if y%2 == 0 {,"['if', 'y', '%', '2', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
62,                command12 <- y,"['command12', '<-', 'y']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
63,            },['}'],['PUNCTUATION']
64,            if y%2 != 0 {,"['if', 'y', '%', '2', '!=', '0', '{']","['KEYWORD', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
65,                command13 <- y,"['command13', '<-', 'y']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
66,            },['}'],['PUNCTUATION']
67,            select {,"['select', '{']","['KEYWORD', 'PUNCTUATION']"
68,            case cmd1 := <-response12:,"['case', 'cmd1', ':=', '<-', 'response12', ':']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'CHANNEL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
69,                {,['{'],['PUNCTUATION']
70,                    z12 = cmd1,"['z12', '=', 'cmd1']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
71,"                    print(z12, ""    z12\n"")","['print', '(', 'z12', ',', '""    z12\\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
72,                },['}'],['PUNCTUATION']
73,            case cmd2 := <-response13:,"['case', 'cmd2', ':=', '<-', 'response13', ':']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'CHANNEL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
74,                {,['{'],['PUNCTUATION']
75,                    z13 = cmd2,"['z13', '=', 'cmd2']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
76,"                    print(z13, ""   z13\n"")","['print', '(', 'z13', ',', '""   z13\\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
77,                },['}'],['PUNCTUATION']
78,            },['}'],['PUNCTUATION']
79,        },['}'],['PUNCTUATION']
80,    },['}'],['PUNCTUATION']
81,    close(command12),"['close', '(', 'command12', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
82,    close(command13),"['close', '(', 'command13', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
83,},['}'],['PUNCTUATION']
84,//Routine 2 (or 3) is not an initiator (means it can't send 0). When it recives 0 (from routine 1 or 3) it save the state of process and the state of the channel from which it recived).,"['//', 'Routine', '2', '(or', '3)', 'is', 'not', 'an', 'initiator', '(means', 'it', ""can't"", 'send', '0).', 'When', 'it', 'recives', '0', '(from', 'routine', '1', 'or', '3)', 'it', 'save', 'the', 'state', 'of', 'process', 'and', 'the', 'state', 'of', 'the', 'channel', 'from', 'which', 'it', 'recived).']","['COMMENT', 'JJ', 'CD', 'JJ', 'CD', 'VBZ', 'RB', 'DT', 'NN', 'VBZ', 'PRP', 'JJ', 'VB', 'CD', 'WRB', 'PRP', 'VBZ', 'CD', 'NN', 'JJ', 'CD', 'CC', 'CD', 'PRP', 'VBD', 'DT', 'NN', 'IN', 'NN', 'CC', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'WDT', 'PRP', 'VBD']"
85,"// When it recives 0 from both other two routine, it saves all channel state and returns to it's common behaviour. [same in routine 3]","['//', 'When', 'it', 'recives', '0', 'from', 'both', 'other', 'two', 'routine,', 'it', 'saves', 'all', 'channel', 'state', 'and', 'returns', 'to', ""it's"", 'common', 'behaviour.', '[same', 'in', 'routine', '3]']","['COMMENT', 'WRB', 'PRP', 'VBZ', 'CD', 'IN', 'DT', 'JJ', 'CD', 'VBP', 'PRP', 'VBZ', 'DT', 'NN', 'NN', 'CC', 'NNS', 'TO', 'VB', 'JJ', 'NN', 'NN', 'IN', 'JJ', 'CD']"
86,"func Routine2(command12 chan int, response12 chan int, command23 chan int, response23 chan int) {","['func', 'Routine2', '(', 'command12', 'chan', 'int', ',', 'response12', 'chan', 'int', ',', 'command23', 'chan', 'int', ',', 'response23', 'chan', 'int', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
87,    z21 := 200,"['z21', ':=', '200']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'DECIMAL_LITERAL']"
88,    z23 := 200,"['z23', ':=', '200']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'DECIMAL_LITERAL']"
89,    m21 := false,"['m21', ':=', 'false']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
90,    m23 := false,"['m23', ':=', 'false']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
91,    for i := 0; i < 20; i++ {,"['for', 'i', ':=', '0', ';', 'i', '<', '20', ';', 'i', '++', '{']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'PUNCTUATION']"
92,        select {,"['select', '{']","['KEYWORD', 'PUNCTUATION']"
93,"        case x, open := <-command12:","['case', 'x', ',', 'open', ':=', '<-', 'command12', ':']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'CHANNEL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
94,            {,['{'],['PUNCTUATION']
95,                if !open {,"['if', '!', 'open', '{']","['KEYWORD', 'LOGICAL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
96,                    return,['return'],['KEYWORD']
97,                },['}'],['PUNCTUATION']
98,                if x != 0 && m23 != true {,"['if', 'x', '!=', '0', '&&', 'm23', '!=', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
99,                    z21 = x,"['z21', '=', 'x']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
100,"                    print(z21, ""   z21\n"")","['print', '(', 'z21', ',', '""   z21\\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
101,                },['}'],['PUNCTUATION']
102,                if x != 0 && m23 == true {,"['if', 'x', '!=', '0', '&&', 'm23', '==', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
103,                    z21 = x,"['z21', '=', 'x']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
104,"                    print(z21, ""   z21 Channel Saving \n"")","['print', '(', 'z21', ',', '""   z21 Channel Saving \\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
105,                },['}'],['PUNCTUATION']
106,                if x == 0 {,"['if', 'x', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
107,                    m21 = true,"['m21', '=', 'true']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
108,                    if m21 == true && m23 == true {,"['if', 'm21', '==', 'true', '&&', 'm23', '==', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
109,"                        print("" z21 and z23 Channel Saving Stopped \n"")","['print', '(', '"" z21 and z23 Channel Saving Stopped \\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
110,                        m23 = false,"['m23', '=', 'false']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
111,                        m21 = false,"['m21', '=', 'false']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
112,                    },['}'],['PUNCTUATION']
113,                    if m21 == true && m23 != true {,"['if', 'm21', '==', 'true', '&&', 'm23', '!=', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
114,                        z21 = x,"['z21', '=', 'x']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
115,"                        print(z21, ""   z21  Channel Saved \n"")","['print', '(', 'z21', ',', '""   z21  Channel Saved \\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
116,                    },['}'],['PUNCTUATION']
117,                },['}'],['PUNCTUATION']
118,            },['}'],['PUNCTUATION']
119,"        case x, open := <-response23:","['case', 'x', ',', 'open', ':=', '<-', 'response23', ':']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'CHANNEL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
120,            {,['{'],['PUNCTUATION']
121,                if !open {,"['if', '!', 'open', '{']","['KEYWORD', 'LOGICAL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
122,                    return,['return'],['KEYWORD']
123,                },['}'],['PUNCTUATION']
124,                if x != 0 && m21 != true {,"['if', 'x', '!=', '0', '&&', 'm21', '!=', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
125,                    z23 = x,"['z23', '=', 'x']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
126,"                    print(z23, ""   z21\n"")","['print', '(', 'z23', ',', '""   z21\\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
127,                },['}'],['PUNCTUATION']
128,                if x != 0 && m21 == true {,"['if', 'x', '!=', '0', '&&', 'm21', '==', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
129,                    z23 = x,"['z23', '=', 'x']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
130,"                    print(z23, ""   z23 Channel Saving \n"")","['print', '(', 'z23', ',', '""   z23 Channel Saving \\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
131,                },['}'],['PUNCTUATION']
132,                if x == 0 {,"['if', 'x', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
133,                    m23 = true,"['m23', '=', 'true']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
134,                    if m21 == true && m23 == true {,"['if', 'm21', '==', 'true', '&&', 'm23', '==', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
135,"                        print("" z23 Channel Saving Stopped \n"")","['print', '(', '"" z23 Channel Saving Stopped \\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
136,                        m23 = false,"['m23', '=', 'false']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
137,                        m21 = false,"['m21', '=', 'false']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
138,                    },['}'],['PUNCTUATION']
139,                    if m23 == true && m21 != true {,"['if', 'm23', '==', 'true', '&&', 'm21', '!=', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
140,                        z23 = x,"['z23', '=', 'x']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
141,"                        print(z23, ""   z23  Channel Saved \n"")","['print', '(', 'z23', ',', '""   z23  Channel Saved \\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
142,                    },['}'],['PUNCTUATION']
143,                },['}'],['PUNCTUATION']
144,            },['}'],['PUNCTUATION']
145,        },['}'],['PUNCTUATION']
146,        if m23 == false && m21 == false {,"['if', 'm23', '==', 'false', '&&', 'm21', '==', 'false', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
147,            y := rand.Intn(100),"['y', ':=', 'rand.Intn(100)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
148,            if y%2 == 0 {,"['if', 'y', '%', '2', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
149,                if y == 0 {,"['if', 'y', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
150,                    y = 10,"['y', '=', '10']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'DECIMAL_LITERAL']"
151,                    response12 <- y,"['response12', '<-', 'y']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
152,                },['}'],['PUNCTUATION']
153,            },['}'],['PUNCTUATION']
154,            if y%2 != 0 {,"['if', 'y', '%', '2', '!=', '0', '{']","['KEYWORD', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
155,                if y == 0 {,"['if', 'y', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
156,                    y = 10,"['y', '=', '10']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'DECIMAL_LITERAL']"
157,                    response23 <- y,"['response23', '<-', 'y']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
158,                },['}'],['PUNCTUATION']
159,            },['}'],['PUNCTUATION']
160,        },['}'],['PUNCTUATION']
161,        if m23 == true && m21 != true {,"['if', 'm23', '==', 'true', '&&', 'm21', '!=', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
162,            y := rand.Intn(100),"['y', ':=', 'rand.Intn(100)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
163,            response12 <- y,"['response12', '<-', 'y']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
164,        },['}'],['PUNCTUATION']
165,        if m23 != true && m21 == true {,"['if', 'm23', '!=', 'true', '&&', 'm21', '==', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
166,            y := rand.Intn(100),"['y', ':=', 'rand.Intn(100)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
167,            command23 <- y,"['command23', '<-', 'y']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
168,        },['}'],['PUNCTUATION']
169,    },['}'],['PUNCTUATION']
170,    close(response12),"['close', '(', 'response12', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
171,    close(command23),"['close', '(', 'command23', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
172,},['}'],['PUNCTUATION']
173,"func Routine3(command13 chan int, response13 chan int, command23 chan int, response23 chan int) {","['func', 'Routine3', '(', 'command13', 'chan', 'int', ',', 'response13', 'chan', 'int', ',', 'command23', 'chan', 'int', ',', 'response23', 'chan', 'int', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
174,    z31 := 200,"['z31', ':=', '200']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'DECIMAL_LITERAL']"
175,    z32 := 200,"['z32', ':=', '200']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'DECIMAL_LITERAL']"
176,    m31 := false,"['m31', ':=', 'false']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
177,    m32 := false,"['m32', ':=', 'false']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
178,    for i := 0; i < 20; i++ {,"['for', 'i', ':=', '0', ';', 'i', '<', '20', ';', 'i', '++', '{']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'PUNCTUATION']"
179,        select {,"['select', '{']","['KEYWORD', 'PUNCTUATION']"
180,"        case x, open := <-command13:","['case', 'x', ',', 'open', ':=', '<-', 'command13', ':']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'CHANNEL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
181,            {,['{'],['PUNCTUATION']
182,                if !open {,"['if', '!', 'open', '{']","['KEYWORD', 'LOGICAL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
183,                    return,['return'],['KEYWORD']
184,                },['}'],['PUNCTUATION']
185,                if x != 0 && m32 != true {,"['if', 'x', '!=', '0', '&&', 'm32', '!=', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
186,                    z31 = x,"['z31', '=', 'x']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
187,"                    print(z31, ""   z21\n"")","['print', '(', 'z31', ',', '""   z21\\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
188,                },['}'],['PUNCTUATION']
189,                if x != 0 && m32 == true {,"['if', 'x', '!=', '0', '&&', 'm32', '==', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
190,                    z31 = x,"['z31', '=', 'x']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
191,"                    print(z31, ""   z31 Channel Saving \n"")","['print', '(', 'z31', ',', '""   z31 Channel Saving \\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
192,                },['}'],['PUNCTUATION']
193,                if x == 0 {,"['if', 'x', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
194,                    m31 = true,"['m31', '=', 'true']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
195,                    if m31 == true && m32 == true {,"['if', 'm31', '==', 'true', '&&', 'm32', '==', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
196,"                        print("" z21 Channel Saving Stopped \n"")","['print', '(', '"" z21 Channel Saving Stopped \\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
197,                        m31 = false,"['m31', '=', 'false']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
198,                        m32 = false,"['m32', '=', 'false']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
199,                    },['}'],['PUNCTUATION']
200,                    if m31 == true && m32 != true {,"['if', 'm31', '==', 'true', '&&', 'm32', '!=', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
201,                        z31 = x,"['z31', '=', 'x']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
202,"                        print(z31, ""   z31  Channel Saved \n"")","['print', '(', 'z31', ',', '""   z31  Channel Saved \\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
203,                    },['}'],['PUNCTUATION']
204,                },['}'],['PUNCTUATION']
205,            },['}'],['PUNCTUATION']
206,"        case x, open := <-command23:","['case', 'x', ',', 'open', ':=', '<-', 'command23', ':']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'CHANNEL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
207,            {,['{'],['PUNCTUATION']
208,                if !open {,"['if', '!', 'open', '{']","['KEYWORD', 'LOGICAL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
209,                    return,['return'],['KEYWORD']
210,                },['}'],['PUNCTUATION']
211,                if x != 0 && m31 != true {,"['if', 'x', '!=', '0', '&&', 'm31', '!=', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
212,                    z32 = x,"['z32', '=', 'x']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
213,"                    print(z32, ""   z32\n"")","['print', '(', 'z32', ',', '""   z32\\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
214,                },['}'],['PUNCTUATION']
215,                if x != 0 && m31 == true {,"['if', 'x', '!=', '0', '&&', 'm31', '==', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
216,                    z32 = x,"['z32', '=', 'x']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
217,"                    print(z32, ""   z32 Channel Saving \n"")","['print', '(', 'z32', ',', '""   z32 Channel Saving \\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
218,                },['}'],['PUNCTUATION']
219,                if x == 0 {,"['if', 'x', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
220,                    m32 = true,"['m32', '=', 'true']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
221,                    if m31 == true && m32 == true {,"['if', 'm31', '==', 'true', '&&', 'm32', '==', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
222,"                        print("" z32 Channel Saving Stopped \n"")","['print', '(', '"" z32 Channel Saving Stopped \\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
223,                        m31 = false,"['m31', '=', 'false']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
224,                        m32 = false,"['m32', '=', 'false']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
225,                    },['}'],['PUNCTUATION']
226,                    if m32 == true && m31 != true {,"['if', 'm32', '==', 'true', '&&', 'm31', '!=', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
227,                        z32 = x,"['z32', '=', 'x']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
228,"                        print(z32, ""   z32  Channel Saved \n"")","['print', '(', 'z32', ',', '""   z32  Channel Saved \\n""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
229,                    },['}'],['PUNCTUATION']
230,                },['}'],['PUNCTUATION']
231,            },['}'],['PUNCTUATION']
232,        },['}'],['PUNCTUATION']
233,        if m31 == false && m32 == false {,"['if', 'm31', '==', 'false', '&&', 'm32', '==', 'false', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
234,            y := rand.Intn(100),"['y', ':=', 'rand.Intn(100)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
235,            if y%2 == 0 {,"['if', 'y', '%', '2', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
236,                response13 <- y,"['response13', '<-', 'y']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
237,            },['}'],['PUNCTUATION']
238,            if y%2 != 0 {,"['if', 'y', '%', '2', '!=', '0', '{']","['KEYWORD', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
239,                response23 <- y,"['response23', '<-', 'y']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
240,            },['}'],['PUNCTUATION']
241,        },['}'],['PUNCTUATION']
242,        if m31 == true && m32 != true {,"['if', 'm31', '==', 'true', '&&', 'm32', '!=', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
243,            y := rand.Intn(100),"['y', ':=', 'rand.Intn(100)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
244,            response13 <- y,"['response13', '<-', 'y']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
245,        },['}'],['PUNCTUATION']
246,        if m31 != true && m32 == true {,"['if', 'm31', '!=', 'true', '&&', 'm32', '==', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
247,            y := rand.Intn(100),"['y', ':=', 'rand.Intn(100)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
248,            response23 <- y,"['response23', '<-', 'y']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
249,        },['}'],['PUNCTUATION']
250,    },['}'],['PUNCTUATION']
251,    close(response13),"['close', '(', 'response13', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
252,    close(response23),"['close', '(', 'response23', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
253,},['}'],['PUNCTUATION']
254,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
255,    // Three concurrent channels are created to pass integers to each other.,"['//', 'Three', 'concurrent', 'channels', 'are', 'created', 'to', 'pass', 'integers', 'to', 'each', 'other.']","['COMMENT', 'CD', 'NN', 'NNS', 'VBP', 'VBN', 'TO', 'VB', 'NNS', 'TO', 'DT', 'NN']"
256,    // command 12 used to send int and response12 is used to receive int from routine 1 to routine 2.,"['//', 'command', '12', 'used', 'to', 'send', 'int', 'and', 'response12', 'is', 'used', 'to', 'receive', 'int', 'from', 'routine', '1', 'to', 'routine', '2.']","['COMMENT', 'NN', 'CD', 'VBN', 'TO', 'VB', 'NN', 'CC', 'NN', 'VBZ', 'VBN', 'TO', 'VB', 'NN', 'IN', 'JJ', 'CD', 'TO', 'VB', 'CD']"
257,    // response 12 used to send int and command 12 is used to receive int from routine 2 to routine 1. {so as for others},"['//', 'response', '12', 'used', 'to', 'send', 'int', 'and', 'command', '12', 'is', 'used', 'to', 'receive', 'int', 'from', 'routine', '2', 'to', 'routine', '1.', '{so', 'as', 'for', 'others}']","['COMMENT', 'NN', 'CD', 'VBN', 'TO', 'VB', 'NN', 'CC', 'NN', 'CD', 'VBZ', 'VBN', 'TO', 'VB', 'NN', 'IN', 'JJ', 'CD', 'TO', 'VB', 'CD', 'NN', 'IN', 'IN', 'NN']"
258,    command12 := make(chan int),"['command12', ':=', 'make', '(', 'chan', 'int', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
259,    response12 := make(chan int),"['response12', ':=', 'make', '(', 'chan', 'int', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
260,    command13 := make(chan int),"['command13', ':=', 'make', '(', 'chan', 'int', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
261,    response13 := make(chan int),"['response13', ':=', 'make', '(', 'chan', 'int', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
262,    command23 := make(chan int),"['command23', ':=', 'make', '(', 'chan', 'int', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
263,    response23 := make(chan int),"['response23', ':=', 'make', '(', 'chan', 'int', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
264,"    go Routine1(command12, response12, command13, response13)","['go', 'Routine1', '(', 'command12', ',', 'response12', ',', 'command13', ',', 'response13', ')']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
265,"    go Routine2(command12, response12, command23, response23)","['go', 'Routine2', '(', 'command12', ',', 'response12', ',', 'command23', ',', 'response23', ')']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
266,"    Routine3(command13, response13, command23, response23)","['Routine3', '(', 'command13', ',', 'response13', ',', 'command23', ',', 'response23', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
267,},['}'],['PUNCTUATION']
