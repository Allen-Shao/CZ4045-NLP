,text,token,annotation
0,"I'm trying to learn how to use channels to make a queue in Go for one of my other projects. My other project basically queues up database rows, and then does number crunching on the database using the details in the rows.

I don't want the same row to be processing in a worker at the same time, so it needs to check whether a worker is currently working on that specific row ID, and if so, wait for it to finish. If it's not the same row ID, it can run asynchronously, but I also want to limit the number of asynchronous workers that can run at the same time. In my code below, I'm trying to limit it to three workers at the moment.

Here's what I have:

","[""I'm"", 'trying', 'to', 'learn', 'how', 'to', 'use', 'channels', 'to', 'make', 'a', 'queue', 'in', 'Go', 'for', 'one', 'of', 'my', 'other', 'projects.', 'My', 'other', 'project', 'basically', 'queues', 'up', 'database', 'rows,', 'and', 'then', 'does', 'number', 'crunching', 'on', 'the', 'database', 'using', 'the', 'details', 'in', 'the', 'rows.', 'I', ""don't"", 'want', 'the', 'same', 'row', 'to', 'be', 'processing', 'in', 'a', 'worker', 'at', 'the', 'same', 'time,', 'so', 'it', 'needs', 'to', 'check', 'whether', 'a', 'worker', 'is', 'currently', 'working', 'on', 'that', 'specific', 'row', 'ID,', 'and', 'if', 'so,', 'wait', 'for', 'it', 'to', 'finish.', 'If', ""it's"", 'not', 'the', 'same', 'row', 'ID,', 'it', 'can', 'run', 'asynchronously,', 'but', 'I', 'also', 'want', 'to', 'limit', 'the', 'number', 'of', 'asynchronous', 'workers', 'that', 'can', 'run', 'at', 'the', 'same', 'time.', 'In', 'my', 'code', 'below,', ""I'm"", 'trying', 'to', 'limit', 'it', 'to', 'three', 'workers', 'at', 'the', 'moment.', ""Here's"", 'what', 'I', 'have:']","['NNP', 'VBG', 'TO', 'VB', 'WRB', 'TO', 'VB', 'NNS', 'TO', 'VB', 'DT', 'NN', 'IN', 'NNP', 'IN', 'CD', 'IN', 'PRP$', 'JJ', 'JJ', 'PRP$', 'JJ', 'NN', 'RB', 'VBZ', 'RP', 'NN', 'NN', 'CC', 'RB', 'VBZ', 'NN', 'VBG', 'IN', 'DT', 'NN', 'VBG', 'DT', 'NNS', 'IN', 'DT', 'NN', 'PRP', 'VBP', 'VBP', 'DT', 'JJ', 'NN', 'TO', 'VB', 'VBG', 'IN', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'PRP', 'VBZ', 'TO', 'VB', 'IN', 'DT', 'NN', 'VBZ', 'RB', 'VBG', 'IN', 'DT', 'JJ', 'NN', 'NNP', 'CC', 'IN', 'JJ', 'NN', 'IN', 'PRP', 'TO', 'VB', 'IN', 'JJ', 'RB', 'DT', 'JJ', 'NN', 'IN', 'PRP', 'MD', 'VB', 'RB', 'CC', 'PRP', 'RB', 'VBP', 'TO', 'VB', 'DT', 'NN', 'IN', 'JJ', 'NNS', 'WDT', 'MD', 'VB', 'IN', 'DT', 'JJ', 'NN', 'IN', 'PRP$', 'NN', 'NN', 'NNP', 'VBG', 'TO', 'VB', 'PRP', 'TO', 'CD', 'NNS', 'IN', 'DT', 'NN', 'NNP', 'WP', 'PRP', 'VBP']"
1,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
2,import (,"['import', '(']","['KEYWORD', 'OPERATOR']"
3,"    ""log""","['""log""']",['STRING_LITERAL']
4,"    ""strconv""","['""strconv""']",['STRING_LITERAL']
5,"    ""time""","['""time""']",['STRING_LITERAL']
6,),[')'],['OPERATOR']
7,// RowInfo holds the job info,"['//', 'RowInfo', 'holds', 'the', 'job', 'info']","['COMMENT', 'NNP', 'VBZ', 'DT', 'NN', 'NN']"
8,type RowInfo struct {,"['type', 'RowInfo', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
9,    id int,"['id', 'int']","['IDENTIFIER', 'IDENTIFIER']"
10,},['}'],['OPERATOR']
11,// WorkerCount holds how many workers are currently running,"['//', 'WorkerCount', 'holds', 'how', 'many', 'workers', 'are', 'currently', 'running']","['COMMENT', 'NNP', 'VBZ', 'WRB', 'JJ', 'NNS', 'VBP', 'RB', 'VBG']"
12,var WorkerCount int,"['var', 'WorkerCount', 'int']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
13,// WorkerLocked specifies whether a row ID is currently processing by a worker,"['//', 'WorkerLocked', 'specifies', 'whether', 'a', 'row', 'ID', 'is', 'currently', 'processing', 'by', 'a', 'worker']","['COMMENT', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NNP', 'VBZ', 'RB', 'VBG', 'IN', 'DT', 'NN']"
14,var WorkerLocked map[string]bool,"['var', 'WorkerLocked', 'map', '[', 'string', ']', 'bool']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
15,// Process the RowInfo,"['//', 'Process', 'the', 'RowInfo']","['COMMENT', 'NN', 'DT', 'NNP']"
16,func worker(row RowInfo) {,"['func', 'worker', '(', 'row', 'RowInfo', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
17,    rowID := strconv.Itoa(row.id),"['rowID', ':=', 'strconv.Itoa(row.id)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
18,    WorkerCount++,"['WorkerCount', '++']","['IDENTIFIER', 'OPERATOR']"
19,    WorkerLocked[rowID] = true,"['WorkerLocked', '[', 'rowID', ']', '=', 'true']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
20,    time.Sleep(1 * time.Second),['time.Sleep(1 * time.Second)'],['FUNCTION_CALL']
21,"    log.Printf(""ID rcvd: %d"", row.id)","['log.Printf(""ID rcvd: %d"", row.id)']",['FUNCTION_CALL']
22,    WorkerLocked[rowID] = false,"['WorkerLocked', '[', 'rowID', ']', '=', 'false']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
23,    WorkerCount--,"['WorkerCount', '--']","['IDENTIFIER', 'OPERATOR']"
24,},['}'],['OPERATOR']
25,// waiter will check if the row is already processing in a worker,"['//', 'waiter', 'will', 'check', 'if', 'the', 'row', 'is', 'already', 'processing', 'in', 'a', 'worker']","['COMMENT', 'NN', 'MD', 'VB', 'IN', 'DT', 'NN', 'VBZ', 'RB', 'VBG', 'IN', 'DT', 'NN']"
26,"// Block until it finishes completion, then dispatch","['//', 'Block', 'until', 'it', 'finishes', 'completion,', 'then', 'dispatch']","['COMMENT', 'NNP', 'IN', 'PRP', 'VBZ', 'JJ', 'RB', 'NN']"
27,func waiter(row RowInfo) {,"['func', 'waiter', '(', 'row', 'RowInfo', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
28,    rowID := strconv.Itoa(row.id),"['rowID', ':=', 'strconv.Itoa(row.id)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
29,    for WorkerLocked[rowID] == true {,"['for', 'WorkerLocked', '[', 'rowID', ']', '==', 'true', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
30,        time.Sleep(1 * time.Second),['time.Sleep(1 * time.Second)'],['FUNCTION_CALL']
31,    },['}'],['OPERATOR']
32,    go worker(row),"['go', 'worker', '(', 'row', ')']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
33,},['}'],['OPERATOR']
34,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
35,"    jobsQueue := make(chan RowInfo, 10)","['jobsQueue', ':=', 'make', '(', 'chan', 'RowInfo', ',', '10', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
36,    WorkerLocked = make(map[string]bool),"['WorkerLocked', '=', 'make', '(', 'map', '[', 'string', ']', 'bool', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
37,    // Dispatcher waits for jobs on the channel and dispatches to waiter,"['//', 'Dispatcher', 'waits', 'for', 'jobs', 'on', 'the', 'channel', 'and', 'dispatches', 'to', 'waiter']","['COMMENT', 'NNP', 'NNS', 'IN', 'NNS', 'IN', 'DT', 'NN', 'CC', 'NNS', 'TO', 'VB']"
38,    go func() {,"['go', 'func', '()', '{']","['KEYWORD', 'KEYWORD', 'OPERATOR', 'OPERATOR']"
39,        // Wait for a job,"['//', 'Wait', 'for', 'a', 'job']","['COMMENT', 'NNP', 'IN', 'DT', 'NN']"
40,        for {,"['for', '{']","['KEYWORD', 'OPERATOR']"
41,            // Only have a max of 3 workers running asynch at a time,"['//', 'Only', 'have', 'a', 'max', 'of', '3', 'workers', 'running', 'asynch', 'at', 'a', 'time']","['COMMENT', 'RB', 'VBP', 'DT', 'NN', 'IN', 'CD', 'NNS', 'VBG', 'NN', 'IN', 'DT', 'NN']"
42,            for WorkerCount > 3 {,"['for', 'WorkerCount', '>', '3', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
43,                time.Sleep(1 * time.Second),['time.Sleep(1 * time.Second)'],['FUNCTION_CALL']
44,            },['}'],['OPERATOR']
45,            job := <-jobsQueue,"['job', ':=', '<-', 'jobsQueue']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
46,            go waiter(job),"['go', 'waiter', '(', 'job', ')']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
47,        },['}'],['OPERATOR']
48,    }(),['}()'],['OPERATOR']
49,"    // Test the queue, send some data","['//', 'Test', 'the', 'queue,', 'send', 'some', 'data']","['COMMENT', 'VB', 'DT', 'NN', 'VB', 'DT', 'NNS']"
50,    for i := 0; i < 12; i++ {,"['for', 'i', ':=', '0', ';', 'i', '<', '12', ';', 'i', '++', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OCTAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
51,        r := RowInfo{,"['r', ':=', 'RowInfo', '{']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
52,"            id: i,","['id', ':', 'i', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
53,        },['}'],['OPERATOR']
54,        jobsQueue <- r,"['jobsQueue', '<-', 'r']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
55,    },['}'],['OPERATOR']
56,    // Prevent exit!,"['//', 'Prevent', 'exit!']","['COMMENT', 'NNP', 'NN']"
57,    for {,"['for', '{']","['KEYWORD', 'OPERATOR']"
58,        time.Sleep(1 * time.Second),['time.Sleep(1 * time.Second)'],['FUNCTION_CALL']
59,    },['}'],['OPERATOR']
60,},['}'],['OPERATOR']
61,"

And I'm getting this error, but it's an intermittent issue because sometimes when I run it it appears to work. Is there a race condition?:

","['And', ""I'm"", 'getting', 'this', 'error,', 'but', ""it's"", 'an', 'intermittent', 'issue', 'because', 'sometimes', 'when', 'I', 'run', 'it', 'it', 'appears', 'to', 'work.', 'Is', 'there', 'a', 'race', 'condition?:']","['CC', 'NNP', 'VBG', 'DT', 'NN', 'CC', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'RB', 'WRB', 'PRP', 'VBP', 'PRP', 'PRP', 'VBZ', 'TO', 'VB', 'NNP', 'EX', 'DT', 'NN', 'NN']"
62,go run main.go,"['go', 'run', 'main', '.', 'go']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'KEYWORD']"
63,panic: runtime error: invalid memory address or nil pointer dereference,"['panic', ':', 'runtime', 'error', ':', 'invalid', 'memory', 'address', 'or', 'nil', 'pointer', 'dereference']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER']"
64,[signal 0xb code=0x1 addr=0x8 pc=0x4565e7],"['[', 'signal', '0xb', 'code', '=', '0x1', 'addr', '=', '0x8', 'pc', '=', '0x4565e7', ']']","['OPERATOR', 'IDENTIFIER', 'HEX_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'IDENTIFIER', 'OPERATOR', 'HEX_LITERAL', 'OPERATOR']"
65,goroutine 37 [running]:,"['go', 'routine', '37', '[', 'running', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
66,main.worker(0x5),['main.worker(0x5)'],['FUNCTION_CALL']
67,    /home/piiz/go/src/github.com/zzz/asynch/main.go:25 +0x94,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:25', '+', '0x94']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
68,created by main.waiter,"['created', 'by', 'main', '.', 'waiter']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
69,    /home/piiz/go/src/github.com/zzz/asynch/main.go:42 +0xbb,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:42', '+', '0xbb']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
70,goroutine 1 [sleep]:,"['go', 'routine', '1', '[', 'sleep', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
71,time.Sleep(0x3b9aca00),['time.Sleep(0x3b9aca00)'],['FUNCTION_CALL']
72,    /usr/local/go/src/runtime/time.go:59 +0xf9,"['/usr/local/go/src/runtime/time.go:59', '+', '0xf9']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
73,main.main(),['main.main()'],['FUNCTION_CALL']
74,    /home/piiz/go/src/github.com/zzz/asynch/main.go:73 +0xf8,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:73', '+', '0xf8']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
75,goroutine 5 [sleep]:,"['go', 'routine', '5', '[', 'sleep', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
76,time.Sleep(0x3b9aca00),['time.Sleep(0x3b9aca00)'],['FUNCTION_CALL']
77,    /usr/local/go/src/runtime/time.go:59 +0xf9,"['/usr/local/go/src/runtime/time.go:59', '+', '0xf9']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
78,main.main.func1(0xc82008c000),"['main', '.', 'main.func1(0xc82008c000)']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
79,    /home/piiz/go/src/github.com/zzz/asynch/main.go:55 +0x2d,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:55', '+', '0x2d']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
80,created by main.main,"['created', 'by', 'main', '.', 'main']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
81,    /home/piiz/go/src/github.com/zzz/asynch/main.go:61 +0xa0,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:61', '+', '0xa', '0']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL']"
82,goroutine 35 [sleep]:,"['go', 'routine', '35', '[', 'sleep', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
83,time.Sleep(0x3b9aca00),['time.Sleep(0x3b9aca00)'],['FUNCTION_CALL']
84,    /usr/local/go/src/runtime/time.go:59 +0xf9,"['/usr/local/go/src/runtime/time.go:59', '+', '0xf9']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
85,main.worker(0x2),['main.worker(0x2)'],['FUNCTION_CALL']
86,    /home/piiz/go/src/github.com/zzz/asynch/main.go:27 +0xa1,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:27', '+', '0xa1']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
87,created by main.waiter,"['created', 'by', 'main', '.', 'waiter']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
88,    /home/piiz/go/src/github.com/zzz/asynch/main.go:42 +0xbb,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:42', '+', '0xbb']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
89,goroutine 36 [sleep]:,"['go', 'routine', '36', '[', 'sleep', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
90,time.Sleep(0x3b9aca00),['time.Sleep(0x3b9aca00)'],['FUNCTION_CALL']
91,    /usr/local/go/src/runtime/time.go:59 +0xf9,"['/usr/local/go/src/runtime/time.go:59', '+', '0xf9']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
92,main.worker(0x4),['main.worker(0x4)'],['FUNCTION_CALL']
93,    /home/piiz/go/src/github.com/zzz/asynch/main.go:27 +0xa1,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:27', '+', '0xa1']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
94,created by main.waiter,"['created', 'by', 'main', '.', 'waiter']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
95,    /home/piiz/go/src/github.com/zzz/asynch/main.go:42 +0xbb,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:42', '+', '0xbb']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
96,goroutine 34 [sleep]:,"['go', 'routine', '34', '[', 'sleep', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
97,time.Sleep(0x3b9aca00),['time.Sleep(0x3b9aca00)'],['FUNCTION_CALL']
98,    /usr/local/go/src/runtime/time.go:59 +0xf9,"['/usr/local/go/src/runtime/time.go:59', '+', '0xf9']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
99,main.worker(0x1),['main.worker(0x1)'],['FUNCTION_CALL']
100,    /home/piiz/go/src/github.com/zzz/asynch/main.go:27 +0xa1,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:27', '+', '0xa1']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
101,created by main.waiter,"['created', 'by', 'main', '.', 'waiter']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
102,    /home/piiz/go/src/github.com/zzz/asynch/main.go:42 +0xbb,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:42', '+', '0xbb']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
103,goroutine 12 [runnable]:,"['go', 'routine', '12', '[', 'runnable', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
104,runtime.goexit1(),['runtime.goexit1()'],['FUNCTION_CALL']
105,    /usr/local/go/src/runtime/proc1.go:1732,['/usr/local/go/src/runtime/proc1.go:1732'],['DIRECTORY']
106,runtime.goexit(),['runtime.goexit()'],['FUNCTION_CALL']
107,    /usr/local/go/src/runtime/asm_amd64.s:1697 +0x6,"['/usr/local/go/src/runtime/asm_amd64.s:1697', '+', '0x6']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
108,created by main.main.func1,"['created', 'by', 'main', '.', 'main', '.', 'func', '1']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'DECIMAL_LITERAL']"
109,    /home/piiz/go/src/github.com/zzz/asynch/main.go:59 +0x8c,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:59', '+', '0x8c']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
110,goroutine 19 [sleep]:,"['go', 'routine', '19', '[', 'sleep', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
111,time.Sleep(0x3b9aca00),['time.Sleep(0x3b9aca00)'],['FUNCTION_CALL']
112,    /usr/local/go/src/runtime/time.go:59 +0xf9,"['/usr/local/go/src/runtime/time.go:59', '+', '0xf9']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
113,main.worker(0x8),['main.worker(0x8)'],['FUNCTION_CALL']
114,    /home/piiz/go/src/github.com/zzz/asynch/main.go:27 +0xa1,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:27', '+', '0xa1']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
115,created by main.waiter,"['created', 'by', 'main', '.', 'waiter']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
116,    /home/piiz/go/src/github.com/zzz/asynch/main.go:42 +0xbb,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:42', '+', '0xbb']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
117,goroutine 20 [sleep]:,"['go', 'routine', '20', '[', 'sleep', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
118,time.Sleep(0x3b9aca00),['time.Sleep(0x3b9aca00)'],['FUNCTION_CALL']
119,    /usr/local/go/src/runtime/time.go:59 +0xf9,"['/usr/local/go/src/runtime/time.go:59', '+', '0xf9']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
120,main.worker(0x0),['main.worker(0x0)'],['FUNCTION_CALL']
121,    /home/piiz/go/src/github.com/zzz/asynch/main.go:27 +0xa1,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:27', '+', '0xa1']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
122,created by main.waiter,"['created', 'by', 'main', '.', 'waiter']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
123,    /home/piiz/go/src/github.com/zzz/asynch/main.go:42 +0xbb,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:42', '+', '0xbb']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
124,goroutine 16 [sleep]:,"['go', 'routine', '16', '[', 'sleep', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
125,time.Sleep(0x3b9aca00),['time.Sleep(0x3b9aca00)'],['FUNCTION_CALL']
126,    /usr/local/go/src/runtime/time.go:59 +0xf9,"['/usr/local/go/src/runtime/time.go:59', '+', '0xf9']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
127,main.worker(0x9),['main.worker(0x9)'],['FUNCTION_CALL']
128,    /home/piiz/go/src/github.com/zzz/asynch/main.go:27 +0xa1,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:27', '+', '0xa1']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
129,created by main.waiter,"['created', 'by', 'main', '.', 'waiter']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
130,    /home/piiz/go/src/github.com/zzz/asynch/main.go:42 +0xbb,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:42', '+', '0xbb']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
131,goroutine 33 [sleep]:,"['go', 'routine', '33', '[', 'sleep', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
132,time.Sleep(0x3b9aca00),['time.Sleep(0x3b9aca00)'],['FUNCTION_CALL']
133,    /usr/local/go/src/runtime/time.go:59 +0xf9,"['/usr/local/go/src/runtime/time.go:59', '+', '0xf9']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
134,main.worker(0x3),['main.worker(0x3)'],['FUNCTION_CALL']
135,    /home/piiz/go/src/github.com/zzz/asynch/main.go:27 +0xa1,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:27', '+', '0xa1']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
136,created by main.waiter,"['created', 'by', 'main', '.', 'waiter']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
137,    /home/piiz/go/src/github.com/zzz/asynch/main.go:42 +0xbb,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:42', '+', '0xbb']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
138,goroutine 18 [sleep]:,"['go', 'routine', '18', '[', 'sleep', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
139,time.Sleep(0x3b9aca00),['time.Sleep(0x3b9aca00)'],['FUNCTION_CALL']
140,    /usr/local/go/src/runtime/time.go:59 +0xf9,"['/usr/local/go/src/runtime/time.go:59', '+', '0xf9']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
141,main.worker(0x7),['main.worker(0x7)'],['FUNCTION_CALL']
142,    /home/piiz/go/src/github.com/zzz/asynch/main.go:27 +0xa1,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:27', '+', '0xa1']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
143,created by main.waiter,"['created', 'by', 'main', '.', 'waiter']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
144,    /home/piiz/go/src/github.com/zzz/asynch/main.go:42 +0xbb,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:42', '+', '0xbb']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
145,goroutine 22 [sleep]:,"['go', 'routine', '22', '[', 'sleep', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
146,time.Sleep(0x3b9aca00),['time.Sleep(0x3b9aca00)'],['FUNCTION_CALL']
147,    /usr/local/go/src/runtime/time.go:59 +0xf9,"['/usr/local/go/src/runtime/time.go:59', '+', '0xf9']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
148,main.worker(0xa),['main.worker(0xa)'],['FUNCTION_CALL']
149,    /home/piiz/go/src/github.com/zzz/asynch/main.go:27 +0xa1,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:27', '+', '0xa1']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
150,created by main.waiter,"['created', 'by', 'main', '.', 'waiter']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
151,    /home/piiz/go/src/github.com/zzz/asynch/main.go:42 +0xbb,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:42', '+', '0xbb']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
152,goroutine 49 [runnable]:,"['go', 'routine', '49', '[', 'runnable', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
153,main.worker(0x6),['main.worker(0x6)'],['FUNCTION_CALL']
154,    /home/piiz/go/src/github.com/zzz/asynch/main.go:21,['/home/piiz/go/src/github.com/zzz/asynch/main.go:21'],['DIRECTORY']
155,created by main.waiter,"['created', 'by', 'main', '.', 'waiter']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
156,    /home/piiz/go/src/github.com/zzz/asynch/main.go:42 +0xbb,"['/home/piiz/go/src/github.com/zzz/asynch/main.go:42', '+', '0xbb']","['DIRECTORY', 'OPERATOR', 'HEX_LITERAL']"
157,exit status 2,"['exit', 'status', '2']","['IDENTIFIER', 'IDENTIFIER', 'DECIMAL_LITERAL']"
158,"

Anyway, I am still learning, so if you look at my code and go ""what the hell"", well, I won't be surprised :) Maybe I'm approaching this problem entirely wrong. Thanks.
","['Anyway,', 'I', 'am', 'still', 'learning,', 'so', 'if', 'you', 'look', 'at', 'my', 'code', 'and', 'go', '""what', 'the', 'hell"",', 'well,', 'I', ""won't"", 'be', 'surprised', ':)', 'Maybe', ""I'm"", 'approaching', 'this', 'problem', 'entirely', 'wrong.', 'Thanks.']","['NNP', 'PRP', 'VBP', 'RB', 'VBN', 'RB', 'IN', 'PRP', 'VBP', 'IN', 'PRP$', 'NN', 'CC', 'VB', 'WP', 'DT', 'NN', 'NN', 'PRP', 'VBP', 'VB', 'VBN', 'NNP', 'NNP', 'NNP', 'VBG', 'DT', 'NN', 'RB', 'VBD', 'NNP']"
