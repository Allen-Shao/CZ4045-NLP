,text,token,annotation
0,"Say I have the following code:

","['Say', 'I', 'have', 'the', 'following', 'code', ':']","['NNP', 'PRP', 'VBP', 'DT', 'JJ', 'NN', ':']"
1,var x interface{},"['var', 'x', 'interface', '{}']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
2,y := 4,"['y', ':=', '4']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'DECIMAL_LITERAL']"
3,x = y,"['x', '=', 'y']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
4,fmt.Println(reflect.TypeOf(x)),['fmt.Println(reflect.TypeOf(x))'],['FUNCTION_CALL']
5,"

This will print int as the type. My question is how can I test for the type? I know there is the type switch which does this, so I could do:

","['This', 'will', 'print', 'int', 'as', 'the', 'type', '.', 'My', 'question', 'is', 'how', 'can', 'I', 'test', 'for', 'the', 'type', '?', 'I', 'know', 'there', 'is', 'the', ‘type', 'switch', 'which', 'does', 'this', ',', 'so', 'I', 'could', 'do', ':']","['DT', 'MD', 'VB', 'NN', 'IN', 'DT', 'NN', '.', 'PRP$', 'NN', 'VBZ', 'WRB', 'MD', 'PRP', 'VB', 'IN', 'DT', 'NN', '.', 'PRP', 'VBP', 'EX', 'VBZ', 'DT', ‘NN', 'NN', ’WDT', 'VBZ', 'DT', ',', 'IN', 'PRP', 'MD', 'VB', ':']"
6,switch x.(type) {,"['switch', 'x', '.(', 'type', ')', '{']","['IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'PUNCTUATION', 'PUNCTUATION']"
7,case int:,"['case', 'int', ':']","['KEYWORD', ‘RESERVED', 'PUNCTUATION']"
8,"    fmt.Println(""This is an int"")","['fmt.Println(""This is an int"")']",['FUNCTION_CALL']
9,},['}'],['PUNCTUATION']
10,"

But if I only want to check for just one specific type the switch seems like the wrong tool. Is there a more direct method of doing this like

","['But', 'if', 'I', 'only', 'want', 'to', 'check', 'for', 'just', 'one', 'specific', 'type', 'the', 'switch', 'seems', 'like', 'the', 'wrong', 'tool', '.', 'Is', 'there', 'a', 'more', 'direct', 'method', 'of', 'doing', 'this', 'like']","['CC', 'IN', 'PRP', 'RB', 'VBP', 'TO', 'VB', 'IN', 'RB', 'CD', 'JJ', 'VBZ', 'DT', 'NN', 'VBZ', 'IN', 'DT', 'JJ', 'NN', '.', 'VBZ', 'EX', 'DT', 'RBR', 'JJ', 'NN', 'IN', 'VBG', 'DT', 'IN']"
11,reflect.TypeOf(x) == int,"['reflect.TypeOf(x)', '==', 'int']","['FUNCTION_CALL', 'RELATION_OPERATOR', ‘RESERVED']"
12,"

or is the type switch the way to go?
","['or', 'is', 'the', 'type', 'switch', 'the', 'way', 'to', 'go', '?']","['CC', 'VBZ', 'DT', 'NN', 'NN', 'DT', 'NN', 'TO', 'VB', '.']"