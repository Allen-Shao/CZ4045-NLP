,text,token,annotation
0,"If I don't use a filter, I get results. If I use a filter (this record definitely exists), I don't get any results. It might be the lack of an index defined for that property, but, as I understand it, simple indices should automatically be created in the development server (and an index.yaml file created and populated with it). This is not happening.

","['If', 'I', ""don't"", 'use', 'a', 'filter,', 'I', 'get', 'results.', 'If', 'I', 'use', 'a', 'filter', '(this', 'record', 'definitely', 'exists),', 'I', ""don't"", 'get', 'any', 'results.', 'It', 'might', 'be', 'the', 'lack', 'of', 'an', 'index', 'defined', 'for', 'that', 'property,', 'but,', 'as', 'I', 'understand', 'it,', 'simple', 'indices', 'should', 'automatically', 'be', 'created', 'in', 'the', 'development', 'server', '(and', 'an', 'index.yaml', 'file', 'created', 'and', 'populated', 'with', 'it).', 'This', 'is', 'not', 'happening.']","['IN', 'PRP', 'VBP', 'VB', 'DT', 'NN', 'PRP', 'VBP', 'JJ', 'IN', 'PRP', 'VBP', 'DT', 'NN', 'NN', 'NN', 'RB', 'JJ', 'PRP', 'VBP', 'VB', 'DT', 'NN', 'PRP', 'MD', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN', 'VBD', 'IN', 'DT', 'NN', 'NN', 'IN', 'PRP', 'VBP', 'JJ', 'JJ', 'NNS', 'MD', 'RB', 'VB', 'VBN', 'IN', 'DT', 'NN', 'NN', 'VBP', 'DT', 'NN', 'NN', 'VBD', 'CC', 'VBD', 'IN', 'NN', 'DT', 'VBZ', 'RB', 'JJ']"
1,"query = datastore.NewQuery(""UserAccount"").Filter(""email ="", ""test@example.com"")","['query', '=', 'datastore.NewQuery(""UserAccount"").Filter(""email ="", ""test@example.com"")']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
2,ua := UserAccount{},"['ua', ':=', 'UserAccount', '{}']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
3,t := query.Run(ctx),"['t', ':=', 'query.Run(ctx)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
4,for ; ; {,"['for', ';', ';', '{']","['KEYWORD', 'PUNCTUATION', 'PUNCTUATION', 'PUNCTUATION']"
5,"    if _, err = t.Next(&ua); err == nil {","['if', '_', ',', 'err', '=', 't.Next(&ua)', ';', 'err', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
6,"        log.Debugf(ctx, ""Current: %s"", ua)","['log.Debugf(ctx, ""Current: %s"", ua)']",['FUNCTION_CALL']
7,    } else if err == datastore.Done {,"['}', 'else', 'if', 'err', '==', 'datastore', '.', 'Done', '{']","['PUNCTUATION', 'KEYWORD', 'KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
8,        break,['break'],['KEYWORD']
9,    } else {,"['}', 'else', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
10,        panic(err),"['panic', '(', 'err', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
11,    },['}'],['PUNCTUATION']
12,},['}'],['PUNCTUATION']
13,"

When the development server terminates, it states that it's ""saving search indexes"":

","['When', 'the', 'development', 'server', 'terminates,', 'it', 'states', 'that', ""it's"", '""saving', 'search', 'indexes"":']","['WRB', 'DT', 'NN', 'NN', 'VBP', 'PRP', 'VBZ', 'IN', 'NN', 'VBG', 'NN', 'NN']"
14,"INFO     2016-08-08 05:09:52,894 api_server.py:651] Saving search indexes","['INFO', '2016', '-', '0', '8', '-', '0', '8', '05', ':', '0', '9', ':', '52', ',', '894', 'api_server', '.', 'py', ':', '651', ']', 'Saving', 'search', 'indexes']","['IDENTIFIER', 'DECIMAL_LITERAL', 'ARITHMETIC_OPERATOR', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'ARITHMETIC_OPERATOR', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER']"
15,"

However, since an ""index.yaml"" file doesn't appear, I'm assuming that no indices needed to be created, which means that my query must not've had the desired effect?

What am I missing?

Edit:

Note that the record was previously created and the application stopped and started many times since. I sincerely doubt this is a eventual-consistency thing.

Edit 2:

For the purpose of testing, I've created the following model with the following code. They both exhibit the same behavior as my original model and code.

Definition:

","['However,', 'since', 'an', '""index.yaml""', 'file', ""doesn't"", 'appear,', ""I'm"", 'assuming', 'that', 'no', 'indices', 'needed', 'to', 'be', 'created,', 'which', 'means', 'that', 'my', 'query', 'must', ""not've"", 'had', 'the', 'desired', 'effect?', 'What', 'am', 'I', 'missing?', 'Edit:', 'Note', 'that', 'the', 'record', 'was', 'previously', 'created', 'and', 'the', 'application', 'stopped', 'and', 'started', 'many', 'times', 'since.', 'I', 'sincerely', 'doubt', 'this', 'is', 'a', 'eventual-consistency', 'thing.', 'Edit', '2:', 'For', 'the', 'purpose', 'of', 'testing,', ""I've"", 'created', 'the', 'following', 'model', 'with', 'the', 'following', 'code.', 'They', 'both', 'exhibit', 'the', 'same', 'behavior', 'as', 'my', 'original', 'model', 'and', 'code.', 'Definition:']","['NNP', 'IN', 'DT', 'NN', 'NN', 'NN', 'VBD', 'NNP', 'VBG', 'IN', 'DT', 'NNS', 'VBN', 'TO', 'VB', 'JJ', 'WDT', 'VBZ', 'IN', 'PRP$', 'NN', 'MD', 'VB', 'VBD', 'DT', 'VBN', 'NN', 'WP', 'VBP', 'PRP', 'VBP', 'JJ', 'NN', 'IN', 'DT', 'NN', 'VBD', 'RB', 'VBN', 'CC', 'DT', 'NN', 'VBD', 'CC', 'VBD', 'JJ', 'NNS', 'VBP', 'PRP', 'RB', 'VB', 'DT', 'VBZ', 'DT', 'JJ', 'NN', 'NNP', 'CD', 'IN', 'DT', 'NN', 'IN', 'NN', 'NNP', 'VBD', 'DT', 'JJ', 'NN', 'IN', 'DT', 'VBG', 'NN', 'PRP', 'DT', 'VBP', 'DT', 'JJ', 'NN', 'IN', 'PRP$', 'JJ', 'NN', 'CC', 'NN', 'NNP']"
16,type TestEntity struct {,"['type', 'TestEntity', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
17,    Email string,"['Email', 'string']","['IDENTIFIER', 'IDENTIFIER']"
18,},['}'],['PUNCTUATION']
19,"

Code:

",['Code:'],['NN']
20,"log.Debugf(ctx, ""Putting."")","['log.Debugf(ctx, ""Putting."")']",['FUNCTION_CALL']
21,"email := ""anothertest@a.b""","['email', ':=', '""anothertest@a.b""']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
22,te := &TestEntity{,"['te', ':=', '&', 'TestEntity', '{']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
23,"        Email: email,","['Email', ':', 'email', ',']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
24,},['}'],['PUNCTUATION']
25,"k := datastore.NewKey(ctx, ""TestEntity"", ""123"", 0, nil)","['k', ':=', 'datastore.NewKey(ctx, ""TestEntity"", ""123"", 0, nil)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
26,"_, err = datastore.Put(ctx, k, te)","['_', ',', 'err', '=', 'datastore.Put(ctx, k, te)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
27,if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
28,    panic(err),"['panic', '(', 'err', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
29,},['}'],['PUNCTUATION']
30,"log.Debugf(ctx, ""Waiting."")","['log.Debugf(ctx, ""Waiting."")']",['FUNCTION_CALL']
31,time.Sleep(1 * time.Second),['time.Sleep(1 * time.Second)'],['FUNCTION_CALL']
32,"query := datastore.NewQuery(""TestEntity"")","['query', ':=', 'datastore.NewQuery(""TestEntity"")']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
33,var results []TestEntity,"['var', 'results', '[]', 'TestEntity']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
34,"_, err = query.GetAll(ctx, &results)","['_', ',', 'err', '=', 'query.GetAll(ctx, &results)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
35,"log.Debugf(ctx, ""GetAll: %s"", results)","['log.Debugf(ctx, ""GetAll: %s"", results)']",['FUNCTION_CALL']
36,"log.Debugf(ctx, ""Running query."")","['log.Debugf(ctx, ""Running query."")']",['FUNCTION_CALL']
37,"query = datastore.NewQuery(""TestEntity"").Filter(""email ="", email)","['query', '=', 'datastore.NewQuery(""TestEntity"").Filter(""email ="", email)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
38,te = &TestEntity{},"['te', '=', '&', 'TestEntity', '{}']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
39,t := query.Run(ctx),"['t', ':=', 'query.Run(ctx)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
40,for ; ; {,"['for', ';', ';', '{']","['KEYWORD', 'PUNCTUATION', 'PUNCTUATION', 'PUNCTUATION']"
41,"    if _, err = t.Next(te); err == nil {","['if', '_', ',', 'err', '=', 't.Next(te)', ';', 'err', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
42,"        log.Debugf(ctx, ""Found: [%s]"", te.Email)","['log.Debugf(ctx, ""Found: [%s]"", te.Email)']",['FUNCTION_CALL']
43,    } else if err == datastore.Done {,"['}', 'else', 'if', 'err', '==', 'datastore', '.', 'Done', '{']","['PUNCTUATION', 'KEYWORD', 'KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
44,"        log.Debugf(ctx, ""Done."")","['log.Debugf(ctx, ""Done."")']",['FUNCTION_CALL']
45,        break,['break'],['KEYWORD']
46,    } else {,"['}', 'else', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
47,        panic(err),"['panic', '(', 'err', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
48,    },['}'],['PUNCTUATION']
49,},['}'],['PUNCTUATION']
50,"

Results:

",['Results:'],['NN']
51,2016/08/09 02:11:36 DEBUG: Putting.,"['2016/08/09', '02', ':', '11', ':', '36', 'DEBUG', ':', 'Putting', '.']","['DIRECTORY', 'OCTAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
52,2016/08/09 02:11:36 DEBUG: Waiting.,"['2016/08/09', '02', ':', '11', ':', '36', 'DEBUG', ':', 'Waiting', '.']","['DIRECTORY', 'OCTAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
53,2016/08/09 02:11:37 DEBUG: GetAll: [{anothertest@a.b}],"['2016/08/09', '02', ':', '11', ':', '37', 'DEBUG', ':', 'GetAll', ':', '[{', 'anothertest', 'a', '.', 'b', '}]']","['DIRECTORY', 'OCTAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
54,2016/08/09 02:11:37 DEBUG: Running query.,"['2016/08/09', '02', ':', '11', ':', '37', 'DEBUG', ':', 'Running', 'query', '.']","['DIRECTORY', 'OCTAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION']"
55,2016/08/09 02:11:37 DEBUG: Done.,"['2016/08/09', '02', ':', '11', ':', '37', 'DEBUG', ':', 'Done', '.']","['DIRECTORY', 'OCTAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
56,"

Screenshot of Viewer:


","['Screenshot', 'of', 'Viewer:']","['NNP', 'IN', 'NNP']"
