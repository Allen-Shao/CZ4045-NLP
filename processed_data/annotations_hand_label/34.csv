,text,token,annotation
0,"I am new to Go, and I am building a web API that uses data from the RDW in my Android Application. However I have trouble parsing JSON in Go, where as in Java I could easily use for example: jsonObject.getString(""AreaId"") it does not seem like I can do this in Go.

I am trying to parse the following JSON to save it in a MySQL db:

","['I', 'am', 'new', 'to', 'Go,', 'and', 'I', 'am', 'building', 'a', 'web', 'API', 'that', 'uses', 'data', 'from', 'the', 'RDW', 'in', 'my', 'Android', 'Application.', 'However', 'I', 'have', 'trouble', 'parsing', 'JSON', 'in', 'Go,', 'where', 'as', 'in', 'Java', 'I', 'could', 'easily', 'use', 'for', 'example:', 'jsonObject.getString(""AreaId"")', 'it', 'does', 'not', 'seem', 'like', 'I', 'can', 'do', 'this', 'in', 'Go.', 'I', 'am', 'trying', 'to', 'parse', 'the', 'following', 'JSON', 'to', 'save', 'it', 'in', 'a', 'MySQL', 'db:']","['PRP', 'VBP', 'JJ', 'TO', 'NNP', 'CC', 'PRP', 'VBP', 'VBG', 'DT', 'NN', 'NNP', 'WDT', 'VBZ', 'NNS', 'IN', 'DT', 'NNP', 'IN', 'PRP$', 'NNP', 'NNP', 'RB', 'PRP', 'VBP', 'NN', 'VBG', 'NNP', 'IN', 'NNP', 'WRB', 'IN', 'IN', 'NNP', 'PRP', 'MD', 'RB', 'VB', 'IN', 'NN', 'NN', 'PRP', 'VBZ', 'RB', 'VB', 'IN', 'PRP', 'MD', 'VB', 'DT', 'IN', 'NNP', 'PRP', 'VBP', 'VBG', 'TO', 'VB', 'DT', 'VBG', 'NNP', 'TO', 'VB', 'PRP', 'IN', 'DT', 'NNP', 'NN']"
1,{,['{'],['OPERATOR']
2,  'd': {,"[""'d'"", ':', '{']","['STRING_LITERAL', 'OPERATOR', 'OPERATOR']"
3,    'results': [,"[""'results'"", ':', '[']","['STRING_LITERAL', 'OPERATOR', 'OPERATOR']"
4,      {,['{'],['OPERATOR']
5,        '__metadata': {,"[""'__metadata'"", ':', '{']","['STRING_LITERAL', 'OPERATOR', 'OPERATOR']"
6,"          'id': 'https://api.datamarket.azure.com/Data.ashx/opendata.rdw/StatischParkeren.Open.Data/v1/AREAGEOMETRY(1)',","[""'id'"", ':', ""'https://api.datamarket.azure.com/Data.ashx/opendata.rdw/StatischParkeren.Open.Data/v1/AREAGEOMETRY(1)'"", ',']","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
7,"          'uri': 'https://api.datamarket.azure.com/Data.ashx/opendata.rdw/StatischParkeren.Open.Data/v1/AREAGEOMETRY(1)',","[""'uri'"", ':', ""'https://api.datamarket.azure.com/Data.ashx/opendata.rdw/StatischParkeren.Open.Data/v1/AREAGEOMETRY(1)'"", ',']","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
8,          'type': 'opendata.rdw.StatischParkeren.Open.Data.AREAGEOMETRY',"[""'type'"", ':', ""'opendata.rdw.StatischParkeren.Open.Data.AREAGEOMETRY'""]","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL']"
9,"        },","['},']",['OPERATOR']
10,"        'AREAGEOMETRY_ID': 1,","[""'AREAGEOMETRY_ID'"", ':', '1', ',']","['STRING_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
11,"        'AreaManagerId': '34',","[""'AreaManagerId'"", ':', ""'34'"", ',']","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
12,"        'AreaId': 'ALMBUITEN',","[""'AreaId'"", ':', ""'ALMBUITEN'"", ',']","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
13,"        'EndDateArea': null,","[""'EndDateArea'"", ':', 'null', ',']","['STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
14,"        'StartDateArea': '/Date(1330560000000)/',","[""'StartDateArea'"", ':', ""'/Date(1330560000000)/'"", ',']","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
15,"        'AreaGeometryTxt': 'POLYGON ((5.2736760005354881 52.391216600313783, 5.2752534225583076 52.392331821843982, 5.2771425843238831 52.391448376700282, 5.2795117920336709 52.392518069183787, 5.2794937640428543 52.392529543489218, 5.2795250192284584 52.392524041235447, 5.2795117920336709 52.392518069183787, 5.27959094196558 52.392467692494392, 5.28429589420557 52.394528595730662, 5.2830820381641388 52.3958012573421, 5.2826158106327057 52.396464187651873, 5.28216527402401 52.396755328401923, 5.2811877280473709 52.396325327456, 5.27938649058342 52.395481485873461, 5.2793451324105263 52.395514352247119, 5.2788525596261024 52.395813956856728, 5.278492659330368 52.39611235447228, 5.2776647135615349 52.396820867434144, 5.2777034044265747 52.396853528916836, 5.2768759876489639 52.397581102326512, 5.274177111685276 52.396415254101157, 5.2741994857788086 52.396424867212772, 5.2686141580343246 52.394008679315448, 5.26860549300909 52.394005045294762, 5.2691666409373283 52.39350445382297, 5.2705547362565994 52.392721636220813, 5.2723518460904533 52.392156438032842, 5.2723518460989 52.39215643890202, 5.272359311580658 52.392154090106487, 5.2723518460904533 52.392156438032842, 5.2723498195409775 52.391947904601693, 5.273051455616951 52.391403153538704, 5.2736760005354881 52.391216600313783))',","[""'AreaGeometryTxt'"", ':', ""'POLYGON ((5.2736760005354881 52.391216600313783, 5.2752534225583076 52.392331821843982, 5.2771425843238831 52.391448376700282, 5.2795117920336709 52.392518069183787, 5.2794937640428543 52.392529543489218, 5.2795250192284584 52.392524041235447, 5.2795117920336709 52.392518069183787, 5.27959094196558 52.392467692494392, 5.28429589420557 52.394528595730662, 5.2830820381641388 52.3958012573421, 5.2826158106327057 52.396464187651873, 5.28216527402401 52.396755328401923, 5.2811877280473709 52.396325327456, 5.27938649058342 52.395481485873461, 5.2793451324105263 52.395514352247119, 5.2788525596261024 52.395813956856728, 5.278492659330368 52.39611235447228, 5.2776647135615349 52.396820867434144, 5.2777034044265747 52.396853528916836, 5.2768759876489639 52.397581102326512, 5.274177111685276 52.396415254101157, 5.2741994857788086 52.396424867212772, 5.2686141580343246 52.394008679315448, 5.26860549300909 52.394005045294762, 5.2691666409373283 52.39350445382297, 5.2705547362565994 52.392721636220813, 5.2723518460904533 52.392156438032842, 5.2723518460989 52.39215643890202, 5.272359311580658 52.392154090106487, 5.2723518460904533 52.392156438032842, 5.2723498195409775 52.391947904601693, 5.273051455616951 52.391403153538704, 5.2736760005354881 52.391216600313783))'"", ',']","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
16,        'AreaGeometryGml': '5.2736760005354881 52.391216600313783 5.2752534225583076 52.392331821843982 5.2771425843238831 52.391448376700282 5.2795117920336709 52.392518069183787 5.2794937640428543 52.392529543489218 5.2795250192284584 52.392524041235447 5.2795117920336709 52.392518069183787 5.27959094196558 52.392467692494392 5.28429589420557 52.394528595730662 5.2830820381641388 52.3958012573421 5.2826158106327057 52.396464187651873 5.28216527402401 52.396755328401923 5.2811877280473709 52.396325327456 5.27938649058342 52.395481485873461 5.2793451324105263 52.395514352247119 5.2788525596261024 52.395813956856728 5.278492659330368 52.39611235447228 5.2776647135615349 52.396820867434144 5.2777034044265747 52.396853528916836 5.2768759876489639 52.397581102326512 5.274177111685276 52.396415254101157 5.2741994857788086 52.396424867212772 5.2686141580343246 52.394008679315448 5.26860549300909 52.394005045294762 5.2691666409373283 52.39350445382297 5.2705547362565994 52.392721636220813 5.2723518460904533 52.392156438032842 5.2723518460989 52.39215643890202 5.272359311580658 52.392154090106487 5.2723518460904533 52.392156438032842 5.2723498195409775 52.391947904601693 5.273051455616951 52.391403153538704 5.2736760005354881 52.391216600313783',"[""'AreaGeometryGml'"", ':', ""'5.2736760005354881 52.391216600313783 5.2752534225583076 52.392331821843982 5.2771425843238831 52.391448376700282 5.2795117920336709 52.392518069183787 5.2794937640428543 52.392529543489218 5.2795250192284584 52.392524041235447 5.2795117920336709 52.392518069183787 5.27959094196558 52.392467692494392 5.28429589420557 52.394528595730662 5.2830820381641388 52.3958012573421 5.2826158106327057 52.396464187651873 5.28216527402401 52.396755328401923 5.2811877280473709 52.396325327456 5.27938649058342 52.395481485873461 5.2793451324105263 52.395514352247119 5.2788525596261024 52.395813956856728 5.278492659330368 52.39611235447228 5.2776647135615349 52.396820867434144 5.2777034044265747 52.396853528916836 5.2768759876489639 52.397581102326512 5.274177111685276 52.396415254101157 5.2741994857788086 52.396424867212772 5.2686141580343246 52.394008679315448 5.26860549300909 52.394005045294762 5.2691666409373283 52.39350445382297 5.2705547362565994 52.392721636220813 5.2723518460904533 52.392156438032842 5.2723518460989 52.39215643890202 5.272359311580658 52.392154090106487 5.2723518460904533 52.392156438032842 5.2723498195409775 52.391947904601693 5.273051455616951 52.391403153538704 5.2736760005354881 52.391216600313783'""]","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL']"
17,"      },","['},']",['OPERATOR']
18,      {,['{'],['OPERATOR']
19,        '__metadata': {,"[""'__metadata'"", ':', '{']","['STRING_LITERAL', 'OPERATOR', 'OPERATOR']"
20,"          'id': 'https://api.datamarket.azure.com/Data.ashx/opendata.rdw/StatischParkeren.Open.Data/v1/AREAGEOMETRY(2)',","[""'id'"", ':', ""'https://api.datamarket.azure.com/Data.ashx/opendata.rdw/StatischParkeren.Open.Data/v1/AREAGEOMETRY(2)'"", ',']","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
21,"          'uri': 'https://api.datamarket.azure.com/Data.ashx/opendata.rdw/StatischParkeren.Open.Data/v1/AREAGEOMETRY(2)',","[""'uri'"", ':', ""'https://api.datamarket.azure.com/Data.ashx/opendata.rdw/StatischParkeren.Open.Data/v1/AREAGEOMETRY(2)'"", ',']","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
22,          'type': 'opendata.rdw.StatischParkeren.Open.Data.AREAGEOMETRY',"[""'type'"", ':', ""'opendata.rdw.StatischParkeren.Open.Data.AREAGEOMETRY'""]","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL']"
23,"        },","['},']",['OPERATOR']
24,"        'AREAGEOMETRY_ID': 2,","[""'AREAGEOMETRY_ID'"", ':', '2', ',']","['STRING_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
25,"        'AreaManagerId': '34',","[""'AreaManagerId'"", ':', ""'34'"", ',']","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
26,"        'AreaId': 'ALMTEGELZ',","[""'AreaId'"", ':', ""'ALMTEGELZ'"", ',']","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
27,"        'EndDateArea': null,","[""'EndDateArea'"", ':', 'null', ',']","['STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
28,"        'StartDateArea': '/Date(1330560000000)/',","[""'StartDateArea'"", ':', ""'/Date(1330560000000)/'"", ',']","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
29,"        'AreaGeometryTxt': 'POLYGON ((5.216308925 52.370733155, 5.216800447 52.370804276, 5.216837124 52.370755791, 5.217178542 52.370807152, 5.217373999 52.370322534, 5.217353484 52.370319431, 5.217371539 52.370274734, 5.216664547 52.370167441, 5.216571837 52.370396589, 5.216451509 52.370380301, 5.216308925 52.370733155))',","[""'AreaGeometryTxt'"", ':', ""'POLYGON ((5.216308925 52.370733155, 5.216800447 52.370804276, 5.216837124 52.370755791, 5.217178542 52.370807152, 5.217373999 52.370322534, 5.217353484 52.370319431, 5.217371539 52.370274734, 5.216664547 52.370167441, 5.216571837 52.370396589, 5.216451509 52.370380301, 5.216308925 52.370733155))'"", ',']","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
30,        'AreaGeometryGml': '5.216308925 52.370733155 5.216800447 52.370804276 5.216837124 52.370755791 5.217178542 52.370807152 5.217373999 52.370322534 5.217353484 52.370319431 5.217371539 52.370274734 5.216664547 52.370167441 5.216571837 52.370396589 5.216451509 52.370380301 5.216308925 52.370733155',"[""'AreaGeometryGml'"", ':', ""'5.216308925 52.370733155 5.216800447 52.370804276 5.216837124 52.370755791 5.217178542 52.370807152 5.217373999 52.370322534 5.217353484 52.370319431 5.217371539 52.370274734 5.216664547 52.370167441 5.216571837 52.370396589 5.216451509 52.370380301 5.216308925 52.370733155'""]","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL']"
31,"      },","['},']",['OPERATOR']
32," ],","['],']",['OPERATOR']
33,    '__next': 'https://api.datamarket.azure.com/Data.ashx/opendata.rdw/StatischParkeren.Open.Data/v1/AREAGEOMETRY?$skiptoken=100',"[""'__next'"", ':', ""'https://api.datamarket.azure.com/Data.ashx/opendata.rdw/StatischParkeren.Open.Data/v1/AREAGEOMETRY?$skiptoken=100'""]","['STRING_LITERAL', 'OPERATOR', 'STRING_LITERAL']"
34,  },['}'],['OPERATOR']
35,},['}'],['OPERATOR']
36,"

This is my code in Go:

","['This', 'is', 'my', 'code', 'in', 'Go:']","['DT', 'VBZ', 'PRP$', 'NN', 'IN', 'NNP']"
37,type Data struct {,"['type', 'Data', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
38,    Next string,"['Next', 'string']","['IDENTIFIER', 'IDENTIFIER']"
39,    Results Result,"['Results', 'Result']","['IDENTIFIER', 'IDENTIFIER']"
40,},['}'],['OPERATOR']
41,type Result struct {,"['type', 'Result', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
42,    Results []AreaGeometry,"['Results', '[]', 'AreaGeometry']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
43,},['}'],['OPERATOR']
44,type AreaGeometry struct {,"['type', 'AreaGeometry', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
45,    AREAGEOMETRY_ID int32,"['AREAGEOMETRY_ID', 'int32']","['IDENTIFIER', 'IDENTIFIER']"
46,    AreaManagerId int64,"['AreaManagerId', 'int64']","['IDENTIFIER', 'IDENTIFIER']"
47,    AreaId string,"['AreaId', 'string']","['IDENTIFIER', 'IDENTIFIER']"
48,    EndDateArea string,"['EndDateArea', 'string']","['IDENTIFIER', 'IDENTIFIER']"
49,    StartDateArea string,"['StartDateArea', 'string']","['IDENTIFIER', 'IDENTIFIER']"
50,    AreaGeometryTxt string,"['AreaGeometryTxt', 'string']","['IDENTIFIER', 'IDENTIFIER']"
51,},['}'],['OPERATOR']
52,// Synchronizes the AreaGeometry in our MySQL database with the AreaGeometry in the database from the RDW,"['//', 'Synchronizes', 'the', 'AreaGeometry', 'in', 'our', 'MySQL', 'database', 'with', 'the', 'AreaGeometry', 'in', 'the', 'database', 'from', 'the', 'RDW']","['COMMENT', 'VBZ', 'DT', 'NN', 'IN', 'PRP$', 'NNP', 'NN', 'IN', 'DT', 'NNP', 'IN', 'DT', 'NN', 'IN', 'DT', 'NNP']"
53,func retrieveData() {,"['func', 'retrieveData', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
54,"    resp, err := http.Get(""https://api.datamarket.azure.com/opendata.rdw/StatischParkeren.Open.Data/v1/AREAGEOMETRY?$format=json"")","['resp', ',', 'err', ':=', 'http.Get(""https://api.datamarket.azure.com/opendata.rdw/StatischParkeren.Open.Data/v1/AREAGEOMETRY?$format=json"")']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
55,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
56,        panic(err.Error()) // TODO: proper error handling,"['panic', '(', 'err.Error())', '//', 'TODO:', 'proper', 'error', 'handling']","['IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL', 'COMMENT', 'NNP', 'JJ', 'NN', 'NN']"
57,    },['}'],['OPERATOR']
58,"    body, err := ioutil.ReadAll(resp.Body)","['body', ',', 'err', ':=', 'ioutil.ReadAll(resp.Body)']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'FUNCTION_CALL']"
59,    var d Data,"['var', 'd', 'Data']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
60,"    json.Unmarshal(body, &d)","['json.Unmarshal(body, &d)']",['FUNCTION_CALL']
61,"    fmt.Println(""Next: "" + d.Next)","['fmt.Println(""Next: "" + d.Next)']",['FUNCTION_CALL']
62,},['}'],['OPERATOR']
63,"

However d.Next returns an empty string after unmarshaling. What am I doing wrong? What is to Go way of taking care of this?
","['However', 'd.Next', 'returns', 'an', 'empty', 'string', 'after', 'unmarshaling.', 'What', 'am', 'I', 'doing', 'wrong?', 'What', 'is', 'to', 'Go', 'way', 'of', 'taking', 'care', 'of', 'this?']","['RB', 'JJ', 'NNS', 'DT', 'JJ', 'NN', 'IN', 'JJ', 'WP', 'VBP', 'PRP', 'VBG', 'VB', 'WP', 'VBZ', 'TO', 'VB', 'NN', 'IN', 'VBG', 'NN', 'IN', 'NN']"
