,text,token,annotation
0,"I am trying to search youtube video by key like in the golang example. I modified that code a little to let it search by different keys several times. 
When I search once it is ok. 

","['I', 'am', 'trying', 'to', 'search', 'youtube', 'video', 'by', 'key', 'like', 'in', 'the', 'golang', 'example.', 'I', 'modified', 'that', 'code', 'a', 'little', 'to', 'let', 'it', 'search', 'by', 'different', 'keys', 'several', 'times.', 'When', 'I', 'search', 'once', 'it', 'is', 'ok.']","['PRP', 'VBP', 'VBG', 'TO', 'VB', 'NN', 'NN', 'IN', 'JJ', 'IN', 'IN', 'DT', 'NN', 'NN', 'PRP', 'VBD', 'IN', 'NN', 'DT', 'JJ', 'TO', 'VB', 'PRP', 'VB', 'IN', 'JJ', 'NNS', 'JJ', 'IN', 'WRB', 'PRP', 'VBP', 'IN', 'PRP', 'VBZ', 'JJ']"
1,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
2,"    result1, err1 := SearchYoutubeByKey(""hello"")","['result1', ',', 'err1', ':=', 'SearchYoutubeByKey', '(', '""hello""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
3,    if err1 != nil {,"['if', 'err1', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
4,        panic(err1),"['panic', '(', 'err1', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
5,    },['}'],['PUNCTUATION']
6,    fmt.Println(result1),['fmt.Println(result1)'],['FUNCTION_CALL']
7,"    // result2, err2 := SearchYoutubeByKey(""world"")","['//', 'result2,', 'err2', ':=', 'SearchYoutubeByKey(""world"")']","['COMMENT', 'NN', 'NN', 'NNP', 'NNP']"
8,    // if err2 != nil {,"['//', 'if', 'err2', '!=', 'nil', '{']","['COMMENT', 'IN', 'JJ', 'NNP', 'NN', '(']"
9,    //  panic(err2),"['//', 'panic(err2)']","['COMMENT', 'NN']"
10,    // },"['//', '}']","['COMMENT', ')']"
11,    // fmt.Println(result2),"['//', 'fmt.Println(result2)']","['COMMENT', 'NN']"
12,},['}'],['PUNCTUATION']
13,"

But if I search twice ...

","['But', 'if', 'I', 'search', 'twice', '...']","['CC', 'IN', 'PRP', 'VBP', 'RB', ':']"
14,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
15,"    result1, err1 := SearchYoutubeByKey(""hello"")","['result1', ',', 'err1', ':=', 'SearchYoutubeByKey', '(', '""hello""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
16,    if err1 != nil {,"['if', 'err1', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
17,        panic(err1),"['panic', '(', 'err1', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
18,    },['}'],['PUNCTUATION']
19,    fmt.Println(result1),['fmt.Println(result1)'],['FUNCTION_CALL']
20,"    result2, err2 := SearchYoutubeByKey(""world"")","['result2', ',', 'err2', ':=', 'SearchYoutubeByKey', '(', '""world""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
21,    if err2 != nil {,"['if', 'err2', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
22,        panic(err2),"['panic', '(', 'err2', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
23,    },['}'],['PUNCTUATION']
24,    fmt.Println(result2),['fmt.Println(result2)'],['FUNCTION_CALL']
25,},['}'],['PUNCTUATION']
26,"

... then it panics with error message ...

","['...', 'then', 'it', 'panics', 'with', 'error', 'message', '...']","[':', 'RB', 'PRP', 'VBZ', 'IN', 'NN', 'NN', ':']"
27,flag redefined: query,"['flag', 'redefined', ':', 'query']","['IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
28,"

... on line ...

","['...', 'on', 'line', '...']","[':', 'IN', 'NN', ':']"
29,"query := flag.String(""query"", str, ""Search term"")","['query', ':=', 'flag.String(""query"", str, ""Search term"")']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
30,"

Full code:

","['Full', 'code:']","['NNP', 'NN']"
31,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
32,import (,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
33,"    ""code.google.com/p/google-api-go-client/googleapi/transport""","['""code.google.com/p/google-api-go-client/googleapi/transport""']",['STRING_LITERAL']
34,"    ""code.google.com/p/google-api-go-client/youtube/v3""","['""code.google.com/p/google-api-go-client/youtube/v3""']",['STRING_LITERAL']
35,"    ""flag""","['""flag""']",['STRING_LITERAL']
36,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
37,"    ""net/http""","['""net/http""']",['STRING_LITERAL']
38,),[')'],['PUNCTUATION']
39,var (,"['var', '(']","['KEYWORD', 'PUNCTUATION']"
40,"    maxResults = flag.Int64(""max-results"", 25, ""Max YouTube results"")","['maxResults', '=', 'flag.Int64(""max-results"", 25, ""Max YouTube results"")']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
41,    service    *youtube.Service,"['service', '*', 'youtube', '.', 'Service']","['IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
42,    response   *youtube.SearchListResponse,"['response', '*', 'youtube', '.', 'SearchListResponse']","['IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
43,),[')'],['PUNCTUATION']
44,"const developerKey = ""youtube developer key""","['const', 'developerKey', '=', '""youtube developer key""']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
45,type YoutubeSearchResult struct {,"['type', 'YoutubeSearchResult', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
46,"    Title, YoutubeId string","['Title', ',', 'YoutubeId', 'string']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER']"
47,},['}'],['PUNCTUATION']
48,"func SearchYoutubeByKey(str string) (result []*YoutubeSearchResult, err error) {","['func', 'SearchYoutubeByKey', '(', 'str', 'string', ')', '(', 'result', '[]*', 'YoutubeSearchResult', ',', 'err', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
49,"    query := flag.String(""query"", str, ""Search term"")","['query', ':=', 'flag.String(""query"", str, ""Search term"")']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
50,    flag.Parse(),['flag.Parse()'],['FUNCTION_CALL']
51,    client := &http.Client{,"['client', ':=', '&', 'http', '.', 'Client', '{']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
52,"        Transport: &transport.APIKey{Key: developerKey},","['Transport', ':', '&', 'transport', '.', 'APIKey', '{', 'Key', ':', 'developerKey', '},']","['IDENTIFIER', 'PUNCTUATION', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
53,    },['}'],['PUNCTUATION']
54,"    service, err = youtube.New(client)","['service', ',', 'err', '=', 'youtube.New(client)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
55,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
56,        return,['return'],['KEYWORD']
57,    },['}'],['PUNCTUATION']
58,    // Make the API call to YouTube.,"['//', 'Make', 'the', 'API', 'call', 'to', 'YouTube.']","['COMMENT', 'VB', 'DT', 'NNP', 'NN', 'TO', 'VB']"
59,"    call := service.Search.List(""id,snippet"").","['call', ':=', 'service', '.', 'Search.List(""id,snippet"")', '.']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL', 'PUNCTUATION']"
60,        Q(*query).,"['Q', '(*', 'query', ').']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
61,        MaxResults(*maxResults),"['MaxResults', '(*', 'maxResults', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
62,"    response, err = call.Do()","['response', ',', 'err', '=', 'call.Do()']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
63,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
64,        return,['return'],['KEYWORD']
65,    },['}'],['PUNCTUATION']
66,    // Iterate through each item and add it to the correct list.,"['//', 'Iterate', 'through', 'each', 'item', 'and', 'add', 'it', 'to', 'the', 'correct', 'list.']","['COMMENT', 'NNP', 'IN', 'DT', 'NN', 'CC', 'VB', 'PRP', 'TO', 'DT', 'JJ', 'NN']"
67,"    for _, item := range response.Items {","['for', '_', ',', 'item', ':=', 'range', 'response', '.', 'Items', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
68,        switch item.Id.Kind {,"['switch', 'item', '.', 'Id', '.', 'Kind', '{']","['IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
69,"        case ""youtube#video"":","['case', '""youtube#video""', ':']","['KEYWORD', 'STRING_LITERAL', 'PUNCTUATION']"
70,"            result = append(result, &YoutubeSearchResult{Title: item.Snippet.Title, YoutubeId: item.Id.VideoId})","['result', '=', 'append', '(', 'result', ',', '&', 'YoutubeSearchResult', '{', 'Title', ':', 'item', '.', 'Snippet', '.', 'Title', ',', 'YoutubeId', ':', 'item', '.', 'Id', '.', 'VideoId', '})']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
71,        },['}'],['PUNCTUATION']
72,    },['}'],['PUNCTUATION']
73,    return,['return'],['KEYWORD']
74,},['}'],['PUNCTUATION']
75,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
76,"    result1, err1 := SearchYoutubeByKey(""hello"")","['result1', ',', 'err1', ':=', 'SearchYoutubeByKey', '(', '""hello""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
77,    if err1 != nil {,"['if', 'err1', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
78,        panic(err1),"['panic', '(', 'err1', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
79,    },['}'],['PUNCTUATION']
80,    fmt.Println(result1),['fmt.Println(result1)'],['FUNCTION_CALL']
81,"    result2, err2 := SearchYoutubeByKey(""world"")","['result2', ',', 'err2', ':=', 'SearchYoutubeByKey', '(', '""world""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
82,    if err2 != nil {,"['if', 'err2', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
83,        panic(err2),"['panic', '(', 'err2', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
84,    },['}'],['PUNCTUATION']
85,    fmt.Println(result2),['fmt.Println(result2)'],['FUNCTION_CALL']
86,},['}'],['PUNCTUATION']
87,"

So it is impossible to use this code on a website. Only the first user will be able to search first time, the others will fail.

I cannot change flag during runtime but how to search by 2 different keys in one program? 

Update

working solution:

","['So', 'it', 'is', 'impossible', 'to', 'use', 'this', 'code', 'on', 'a', 'website.', 'Only', 'the', 'first', 'user', 'will', 'be', 'able', 'to', 'search', 'first', 'time,', 'the', 'others', 'will', 'fail.', 'I', 'cannot', 'change', 'flag', 'during', 'runtime', 'but', 'how', 'to', 'search', 'by', '2', 'different', 'keys', 'in', 'one', 'program?', 'Update', 'working', 'solution:']","['IN', 'PRP', 'VBZ', 'JJ', 'TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN', 'RB', 'DT', 'JJ', 'NN', 'MD', 'VB', 'JJ', 'TO', 'VB', 'JJ', 'VB', 'DT', 'NNS', 'MD', 'VB', 'PRP', 'VBP', 'JJ', 'NN', 'IN', 'NN', 'CC', 'WRB', 'TO', 'VB', 'IN', 'CD', 'JJ', 'NNS', 'IN', 'CD', 'NN', 'NNP', 'NN', 'NN']"
88,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
89,import (,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
90,"    ""code.google.com/p/google-api-go-client/googleapi/transport""","['""code.google.com/p/google-api-go-client/googleapi/transport""']",['STRING_LITERAL']
91,"    ""code.google.com/p/google-api-go-client/youtube/v3""","['""code.google.com/p/google-api-go-client/youtube/v3""']",['STRING_LITERAL']
92,"    ""flag""","['""flag""']",['STRING_LITERAL']
93,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
94,"    ""net/http""","['""net/http""']",['STRING_LITERAL']
95,),[')'],['PUNCTUATION']
96,var (,"['var', '(']","['KEYWORD', 'PUNCTUATION']"
97,"    maxResults = flag.Int64(""max-results"", 25, ""Max YouTube results"")","['maxResults', '=', 'flag.Int64(""max-results"", 25, ""Max YouTube results"")']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
98,    service    *youtube.Service,"['service', '*', 'youtube', '.', 'Service']","['IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
99,    response   *youtube.SearchListResponse,"['response', '*', 'youtube', '.', 'SearchListResponse']","['IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
100,"    query      = flag.String(""query"", ""str"", ""Search term"")","['query', '=', 'flag.String(""query"", ""str"", ""Search term"")']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
101,),[')'],['PUNCTUATION']
102,"const developerKey = ""youtube api key""","['const', 'developerKey', '=', '""youtube api key""']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
103,type YoutubeSearchResult struct {,"['type', 'YoutubeSearchResult', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
104,"    Title, YoutubeId string","['Title', ',', 'YoutubeId', 'string']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER']"
105,},['}'],['PUNCTUATION']
106,"func SearchYoutubeByKey(str string) (result []*YoutubeSearchResult, err error) {","['func', 'SearchYoutubeByKey', '(', 'str', 'string', ')', '(', 'result', '[]*', 'YoutubeSearchResult', ',', 'err', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
107,    flag.Parse(),['flag.Parse()'],['FUNCTION_CALL']
108,    client := &http.Client{,"['client', ':=', '&', 'http', '.', 'Client', '{']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
109,"        Transport: &transport.APIKey{Key: developerKey},","['Transport', ':', '&', 'transport', '.', 'APIKey', '{', 'Key', ':', 'developerKey', '},']","['IDENTIFIER', 'PUNCTUATION', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
110,    },['}'],['PUNCTUATION']
111,"    service, err = youtube.New(client)","['service', ',', 'err', '=', 'youtube.New(client)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
112,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
113,        return,['return'],['KEYWORD']
114,    },['}'],['PUNCTUATION']
115,    // Make the API call to YouTube.,"['//', 'Make', 'the', 'API', 'call', 'to', 'YouTube.']","['COMMENT', 'VB', 'DT', 'NNP', 'NN', 'TO', 'VB']"
116,"    call := service.Search.List(""id,snippet"").","['call', ':=', 'service', '.', 'Search.List(""id,snippet"")', '.']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL', 'PUNCTUATION']"
117,        Q(str).,"['Q', '(', 'str', ').']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
118,        MaxResults(*maxResults),"['MaxResults', '(*', 'maxResults', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
119,"    response, err = call.Do()","['response', ',', 'err', '=', 'call.Do()']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
120,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
121,        return,['return'],['KEYWORD']
122,    },['}'],['PUNCTUATION']
123,    // Iterate through each item and add it to the correct list.,"['//', 'Iterate', 'through', 'each', 'item', 'and', 'add', 'it', 'to', 'the', 'correct', 'list.']","['COMMENT', 'NNP', 'IN', 'DT', 'NN', 'CC', 'VB', 'PRP', 'TO', 'DT', 'JJ', 'NN']"
124,"    for _, item := range response.Items {","['for', '_', ',', 'item', ':=', 'range', 'response', '.', 'Items', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
125,        switch item.Id.Kind {,"['switch', 'item', '.', 'Id', '.', 'Kind', '{']","['IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
126,"        case ""youtube#video"":","['case', '""youtube#video""', ':']","['KEYWORD', 'STRING_LITERAL', 'PUNCTUATION']"
127,"            result = append(result, &YoutubeSearchResult{Title: item.Snippet.Title, YoutubeId: item.Id.VideoId})","['result', '=', 'append', '(', 'result', ',', '&', 'YoutubeSearchResult', '{', 'Title', ':', 'item', '.', 'Snippet', '.', 'Title', ',', 'YoutubeId', ':', 'item', '.', 'Id', '.', 'VideoId', '})']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
128,        },['}'],['PUNCTUATION']
129,    },['}'],['PUNCTUATION']
130,    return,['return'],['KEYWORD']
131,},['}'],['PUNCTUATION']
132,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
133,"    result1, err1 := SearchYoutubeByKey(""hello"")","['result1', ',', 'err1', ':=', 'SearchYoutubeByKey', '(', '""hello""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
134,    if err1 != nil {,"['if', 'err1', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
135,        panic(err1),"['panic', '(', 'err1', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
136,    },['}'],['PUNCTUATION']
137,    fmt.Println(result1),['fmt.Println(result1)'],['FUNCTION_CALL']
138,"    result2, err2 := SearchYoutubeByKey(""world"")","['result2', ',', 'err2', ':=', 'SearchYoutubeByKey', '(', '""world""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
139,    if err2 != nil {,"['if', 'err2', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
140,        panic(err2),"['panic', '(', 'err2', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
141,    },['}'],['PUNCTUATION']
142,    fmt.Println(result2),['fmt.Println(result2)'],['FUNCTION_CALL']
143,},['}'],['PUNCTUATION']
