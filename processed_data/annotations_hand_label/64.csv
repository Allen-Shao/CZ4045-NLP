,text,token,annotation
0,"I was recently reading on testing and examples in the go testing framework and did not really understand what they were for. I see that the documentation says:


  The package also runs and verifies example code. Example functions may include a concluding line comment that begins with ""Output:"" and is compared with the standard output of the function when the tests are run. (The comparison ignores leading and trailing space.)


However, I don't really appreciate the reason that this would exist. As I write my tests, it seems that it should be more than clear how to use the code just by reading the unit tests and the benchmarks. What additional motivation does the example section provide? It seems redundant to me, however, I am sure that the inventors of go put it for a good reason, specially because they seem to empathizes good programming practice by the design of their language. I hope to understand either their motivation or how this part of language can be used in a positive way in a golang project! :) 
","['I', 'was', 'recently', 'reading', 'on', 'testing', 'and', 'examples', 'in', 'the', 'go', 'testing', 'framework', 'and', 'did', 'not', 'really', 'understand', 'what', 'they', 'were', 'for', '.', 'I', 'see', 'that', 'the', 'documentation', 'says', ':', 'The', 'package', 'also', 'runs', 'and', 'verifies', 'example', 'code', '.', 'Example', 'functions', 'may', 'include', 'a', 'concluding', 'line', 'comment', 'that', 'begins', 'with', '""', 'Output', ':', '""', 'and', 'is', 'compared', 'with', 'the', 'standard', 'output', 'of', 'the', 'function', 'when', 'the', 'tests', 'are', 'run', '.', '(', 'The', 'comparison', 'ignores', 'leading', 'and', 'trailing', 'space', '.', ')', 'However', ',', 'I', 'do', ""n't"", 'really', 'appreciate', 'the', 'reason', 'that', 'this', 'would', 'exist', '.', 'As', 'I', 'write', 'my', 'tests', ',', 'it', 'seems', 'that', 'it', 'should', 'be', 'more', 'than', 'clear', 'how', 'to', 'use', 'the', 'code', 'just', 'by', 'reading', 'the', 'unit', 'tests', 'and', 'the', 'benchmarks', '.', 'What', 'additional', 'motivation', 'does', 'the', 'example', 'section', 'provide', '?', 'It', 'seems', 'redundant', 'to', 'me', ',', 'however', ',', 'I', 'am', 'sure', 'that', 'the', 'inventors', 'of', 'go', 'put', 'it', 'for', 'a', 'good', 'reason', ',', 'specially', 'because', 'they', 'seem', 'to', 'empathizes', 'good', 'programming', 'practice', 'by', 'the', 'design', 'of', 'their', 'language', '.', 'I', 'hope', 'to', 'understand', 'either', 'their', 'motivation', 'or', 'how', 'this', 'part', 'of', 'language', 'can', 'be', 'used', 'in', 'a', 'positive', 'way', 'in', 'a', 'golang', 'project', '!', ':', ')']","['PRP', 'VBD', 'RB', 'VBG', 'IN', 'VBG', 'CC', 'NNS', 'IN', 'DT', 'NN', 'VBG', 'NN', 'CC', 'VBD', 'RB', 'RB', 'VB', 'WP', 'PRP', 'VBD', 'IN', '.', 'PRP', 'VBP', 'IN', 'DT', 'NN', 'VBZ', ':', 'DT', 'NN', 'RB', 'VBZ', 'CC', 'NNS', 'NN', 'NN', '.', 'JJ', 'NNS', 'MD', 'VB', 'DT', 'JJ', 'NN', 'NN', 'IN', 'VBZ', 'IN', '""', 'NN', ':', '""', 'CC', 'VBZ', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'WRB', 'DT', 'NNS', 'VBP', 'VBN', '.', '(', 'DT', 'NN', 'VBZ', 'VBG', 'CC', 'VBG', 'NN', '.', ')', 'RB', ',', 'PRP', 'VBP', 'RB', 'RB', 'VB', 'DT', 'NN', 'IN', 'DT', 'MD', 'VB', '.', 'IN', 'PRP', 'VBP', 'PRP$', 'NNS', ',', 'PRP', 'VBZ', 'IN', 'PRP', 'MD', 'VB', 'JJR', 'IN', 'JJ', 'WRB', 'TO', 'VB', 'DT', 'NN', 'RB', 'IN', 'VBG', 'DT', 'NN', 'NNS', 'CC', 'DT', 'NNS', '.', 'WP', 'JJ', 'NN', 'VBZ', 'DT', 'NN', 'NN', 'IN', '.', 'PRP', 'VBZ', 'JJ', 'TO', 'PRP', ',', 'RB', ',', 'PRP', 'VBP', 'JJ', 'IN', 'DT', 'NNS', 'IN', 'NN', 'VBD', 'PRP', 'IN', 'DT', 'JJ', 'NN', ',', 'RB', 'IN', 'PRP', 'VBP', 'TO', 'VB', 'JJ', 'NN', 'NN', 'IN', 'DT', 'NN', 'IN', 'PRP$', 'NN', '.', 'PRP', 'VBP', 'TO', 'VB', 'DT', 'PRP$', 'NN', 'CC', 'WRB', 'DT', 'NN', 'IN', 'NN', 'MD', 'VB', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', '.', ':', ')']"
