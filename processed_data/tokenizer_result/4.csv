,text,token
0,func init() {,"['func', 'init', '()', '{']"
1,"    http.HandleFunc(""/"", handler)","['http.HandleFunc(""/"", handler)']"
2,},['}']
3,"

In the handler function there is code iterating over a list of data, processing it, and aggregating a results.

Lets say for a given query there are 100 items that need to be processed.  For each item I write log to the Appengine console, ""Item n has been processed"".

Here is the problem:

The request does not return. The log message for the first 40 or so  items, and then it repeats, and repeats.  It always stops are the same item, and restarts.

My best guess is that the app is hitting a memory limit or something, and the Appengine Go runtime is just restarting, and re-executing the handler.  

For a small list of items, processing goes as expected, and the logs don't show any looping.

There are no errors in the request log, but another log shows:

","['In', 'the', 'handler', 'function', 'there', 'is', 'code', 'iterating', 'over', 'a', 'list', 'of', 'data,', 'processing', 'it,', 'and', 'aggregating', 'a', 'results.', 'Lets', 'say', 'for', 'a', 'given', 'query', 'there', 'are', '100', 'items', 'that', 'need', 'to', 'be', 'processed.', 'For', 'each', 'item', 'I', 'write', 'log', 'to', 'the', 'Appengine', 'console,', '""Item', 'n', 'has', 'been', 'processed"".', 'Here', 'is', 'the', 'problem:', 'The', 'request', 'does', 'not', 'return.', 'The', 'log', 'message', 'for', 'the', 'first', '40', 'or', 'so', 'items,', 'and', 'then', 'it', 'repeats,', 'and', 'repeats.', 'It', 'always', 'stops', 'are', 'the', 'same', 'item,', 'and', 'restarts.', 'My', 'best', 'guess', 'is', 'that', 'the', 'app', 'is', 'hitting', 'a', 'memory', 'limit', 'or', 'something,', 'and', 'the', 'Appengine', 'Go', 'runtime', 'is', 'just', 'restarting,', 'and', 're-executing', 'the', 'handler.', 'For', 'a', 'small', 'list', 'of', 'items,', 'processing', 'goes', 'as', 'expected,', 'and', 'the', 'logs', ""don't"", 'show', 'any', 'looping.', 'There', 'are', 'no', 'errors', 'in', 'the', 'request', 'log,', 'but', 'another', 'log', 'shows:']"
4,panic: poll_ctl,"['panic', ':', 'poll_ctl']"
5,goroutine 3 [running]:,"['go', 'routine', '3', '[', 'running', ']:']"
6,"runtime/eventloop.(*pollServer).ctlfd(0x9035f8, 0x204100000005, 0x3, 0x2041, 0x0, ...)","['runtime', 'eventloop', '.(*', 'pollServer', ').', 'ctlfd', '(', '0', 'x9035f8', ',', '0', 'x204100000005', ',', '0', 'x3', ',', '0', 'x2041', ',', '0', 'x0', ',', '...)']"
7,    go/src/pkg/runtime/eventloop/poll_linux_amd64.go:428 +0xdf,"['go', 'src', 'pkg', 'runtime', 'eventloop', 'poll_linux_amd64', '.', 'go', ':', '428', '+', '0', 'xdf']"
8,"runtime/eventloop.(*pollServer).loop(0x9035f8, 0x0)","['runtime', 'eventloop', '.(*', 'pollServer', ').', 'loop', '(', '0', 'x9035f8', ',', '0', 'x0', ')']"
9,    go/src/pkg/runtime/eventloop/poll_linux_amd64.go:411 +0x4d8,"['go', 'src', 'pkg', 'runtime', 'eventloop', 'poll_linux_amd64', '.', 'go', ':', '411', '+', '0', 'x4d8']"
10,created by runtime/eventloop.initÂ·1,"['created', 'by', 'runtime', 'eventloop', '.', 'init', '1']"
11,    go/src/pkg/runtime/eventloop/poll_linux_amd64.go:232 +0x40,"['go', 'src', 'pkg', 'runtime', 'eventloop', 'poll_linux_amd64', '.', 'go', ':', '232', '+', '0', 'x40']"
12,goroutine 1 [select (no cases)]:,"['go', 'routine', '1', '[', 'select', '(', 'no', 'case', 's', ')]:']"
13,"appengine_internal/fd_transport.serveHTTP(0x7fff76502f58, 0x70615f2f00000002, 0x7fff76502f5b, 0x3, 0x7fff76502f6c, ...)","['appengine_internal', 'fd_transport.serveHTTP(0x7fff76502f58, 0x70615f2f00000002, 0x7fff76502f5b, 0x3, 0x7fff76502f6c, ...)']"
14,    go/src/pkg/appengine_internal/fd_transport/fd_transport.go:44 +0x26b,"['go', 'src', 'pkg', 'appengine_internal', 'fd_transport', 'fd_transport', '.', 'go', ':', '44', '+', '0', 'x26b']"
15,appengine_internal.Main(),['appengine_internal.Main()']
16,    go/src/pkg/appengine_internal/internal.go:184 +0x1a8,"['go', 'src', 'pkg', 'appengine_internal', 'internal', '.', 'go', ':', '184', '+', '0', 'x1a8']"
17,main.main(),['main.main()']
18,    _go_main.go:16 +0x18,"['_go_main', '.', 'go', ':', '16', '+', '0', 'x18']"
19,goroutine 2 [select]:,"['go', 'routine', '2', '[', 'select', ']:']"
20,created by _,"['created', 'by', '_']"
21,    _.go:568 +0xd2,"['_', '.', 'go', ':', '568', '+', '0', 'xd2']"
22,goroutine 10 [chan receive]:,"['go', 'routine', '10', '[', 'chan', 'receive', ']:']"
23,"runtime/eventloop.(*pollServer).wait(0x9035f8, 0xf840095a60, 0xf84011ac30, 0xb, 0x1, ...)","['runtime', 'eventloop', '.(*', 'pollServer', ').', 'wait', '(', '0', 'x9035f8', ',', '0', 'xf840095a60', ',', '0', 'xf84011ac30', ',', '0', 'xb', ',', '0', 'x1', ',', '...)']"
24,    go/src/pkg/runtime/eventloop/poll_linux_amd64.go:472 +0x1a7,"['go', 'src', 'pkg', 'runtime', 'eventloop', 'poll_linux_amd64', '.', 'go', ':', '472', '+', '0', 'x1a7']"
25,"runtime/eventloop.(*FD).ReadFrom(0xf840095a50, 0xf840138000, 0x7d0000007d0, 0xf800000000, 0x0, ...)","['runtime', 'eventloop', '.(*', 'FD', ').', 'ReadFrom', '(', '0', 'xf840095a50', ',', '0', 'xf840138000', ',', '0', 'x7d0000007d0', ',', '0', 'xf800000000', ',', '0', 'x0', ',', '...)']"
26,    go/src/pkg/runtime/eventloop/fd.go:135 +0x1c2,"['go', 'src', 'pkg', 'runtime', 'eventloop', 'fd', '.', 'go', ':', '135', '+', '0', 'x1c2']"
27,created by _,"['created', 'by', '_']"
28,    _.go:144 +0x7a,"['_', '.', 'go', ':', '144', '+', '0', 'x7a']"
29,goroutine 5 [chan receive]:,"['go', 'routine', '5', '[', 'chan', 'receive', ']:']"
30,created by _,"['created', 'by', '_']"
31,    _.go:461 +0x3ca,"['_', '.', 'go', ':', '461', '+', '0', 'x3ca']"
32,goroutine 6 [semacquire]:,"['go', 'routine', '6', '[', 'semacquire', ']:']"
33,"sync.runtime_Semacquire(0xf8408034d8, 0xf8408034d8)","['sync.runtime_Semacquire(0xf8408034d8, 0xf8408034d8)']"
34,    go/src/pkg/runtime/zsema_amd64.c:146 +0x25,"['go', 'src', 'pkg', 'runtime', 'zsema_amd64', '.', 'c', ':', '146', '+', '0', 'x25']"
35,"sync.(*Cond).Wait(0xf840096bb0, 0x1)","['sync', '.(*', 'Cond', ').', 'Wait', '(', '0', 'xf840096bb0', ',', '0', 'x1', ')']"
36,    go/src/pkg/sync/cond.go:67 +0xaa,"['go', 'src', 'pkg', 'sync', 'cond', '.', 'go', ':', '67', '+', '0', 'xaa']"
37,created by _,"['created', 'by', '_']"
38,    _.go:462 +0x3e1,"['_', '.', 'go', ':', '462', '+', '0', 'x3e1']"
39,goroutine 7 [chan receive]:,"['go', 'routine', '7', '[', 'chan', 'receive', ']:']"
40,"runtime/eventloop.(*pollServer).wait(0x9035f8, 0xf840095c70, 0xf84011ac30, 0xb, 0x1, ...)","['runtime', 'eventloop', '.(*', 'pollServer', ').', 'wait', '(', '0', 'x9035f8', ',', '0', 'xf840095c70', ',', '0', 'xf84011ac30', ',', '0', 'xb', ',', '0', 'x1', ',', '...)']"
41,    go/src/pkg/runtime/eventloop/poll_linux_amd64.go:472 +0x1a7,"['go', 'src', 'pkg', 'runtime', 'eventloop', 'poll_linux_amd64', '.', 'go', ':', '472', '+', '0', 'x1a7']"
42,"runtime/eventloop.(*FD).Read(0xf840095c60, 0xf84113a000, 0x972a80000000c, 0x2b5800000000, 0xf84011ac30, ...)","['runtime', 'eventloop', '.(*', 'FD', ').', 'Read', '(', '0', 'xf840095c60', ',', '0', 'xf84113a000', ',', '0', 'x972a80000000c', ',', '0', 'x2b5800000000', ',', '0', 'xf84011ac30', ',', '...)']"
43,    go/src/pkg/runtime/eventloop/fd.go:93 +0x18c,"['go', 'src', 'pkg', 'runtime', 'eventloop', 'fd', '.', 'go', ':', '93', '+', '0', 'x18c']"
44,"io.ReadAtLeast(0xf84012c0c0, 0xf840095c60, 0xf84113a000, 0x972a80000000c, 0x2b580000000c, ...)","['io.ReadAtLeast(0xf84012c0c0, 0xf840095c60, 0xf84113a000, 0x972a80000000c, 0x2b580000000c, ...)']"
45,    go/src/pkg/io/io.go:254 +0xc3,"['go', 'src', 'pkg', 'io', 'io', '.', 'go', ':', '254', '+', '0', 'xc3']"
46,"io.ReadFull(0xf84012c0c0, 0xf840095c60, 0xf84113a000, 0x972a80000000c, 0xf840095c60, ...)","['io.ReadFull(0xf84012c0c0, 0xf840095c60, 0xf84113a000, 0x972a80000000c, 0xf840095c60, ...)']"
47,    go/src/pkg/io/io.go:273 +0x69,"['go', 'src', 'pkg', 'io', 'io', '.', 'go', ':', '273', '+', '0', 'x69']"
48,created by _,"['created', 'by', '_']"
49,    _.go:845 +0x2c6,"['_', '.', 'go', ':', '845', '+', '0', 'x2c6']"
50,goroutine 11 [runnable]:,"['go', 'routine', '11', '[', 'runnable', ']:']"
51,"runtime/eventloop.(*pollServer).wait(0x9035f8, 0xf840095b10, 0xf84011ac30, 0xb, 0x1, ...)","['runtime', 'eventloop', '.(*', 'pollServer', ').', 'wait', '(', '0', 'x9035f8', ',', '0', 'xf840095b10', ',', '0', 'xf84011ac30', ',', '0', 'xb', ',', '0', 'x1', ',', '...)']"
52,    go/src/pkg/runtime/eventloop/poll_linux_amd64.go:472 +0x1a7,"['go', 'src', 'pkg', 'runtime', 'eventloop', 'poll_linux_amd64', '.', 'go', ':', '472', '+', '0', 'x1a7']"
53,"runtime/eventloop.(*FD).Accept(0xf840095b00, 0x0, 0x0, 0xf84011ac30, 0xb, ...)","['runtime', 'eventloop', '.(*', 'FD', ').', 'Accept', '(', '0', 'xf840095b00', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'xf84011ac30', ',', '0', 'xb', ',', '...)']"
54,    go/src/pkg/runtime/eventloop/fd.go:72 +0x185,"['go', 'src', 'pkg', 'runtime', 'eventloop', 'fd', '.', 'go', ':', '72', '+', '0', 'x185']"
55,"net/http.(*Server).Serve(0xf840129f00, 0xf8400cfa80, 0xf840095b00, 0x0, 0x0, ...)","['net', 'http', '.(*', 'Server', ').', 'Serve', '(', '0', 'xf840129f00', ',', '0', 'xf8400cfa80', ',', '0', 'xf840095b00', ',', '0', 'x0', ',', '0', 'x0', ',', '...)']"
56,    go/src/pkg/net/http/server.go:1012 +0x88,"['go', 'src', 'pkg', 'net', 'http', 'server', '.', 'go', ':', '1012', '+', '0', 'x88']"
57,"net/http.Serve(0xf8400cfa80, 0xf840095b00, 0xf84012c090, 0xf8400e0b10, 0xf8400e0b10, ...)","['net', 'http.Serve(0xf8400cfa80, 0xf840095b00, 0xf84012c090, 0xf8400e0b10, 0xf8400e0b10, ...)']"
58,    go/src/pkg/net/http/server.go:977 +0x71,"['go', 'src', 'pkg', 'net', 'http', 'server', '.', 'go', ':', '977', '+', '0', 'x71']"
59,created by _,"['created', 'by', '_']"
60,    _.go:145 +0xe9,"['_', '.', 'go', ':', '145', '+', '0', 'xe9']"
61,goroutine 12 [timer goroutine (idle)]:,"['go', 'routine', '12', '[', 'timer', 'go', 'routine', '(', 'idle', ')]:']"
62,created by addtimer,"['created', 'by', 'addtimer']"
63,    go/src/pkg/runtime/ztime_amd64.c:70,"['go', 'src', 'pkg', 'runtime', 'ztime_amd64', '.', 'c', ':', '70']"
64,goroutine 13 [runnable]:,"['go', 'routine', '13', '[', 'runnable', ']:']"
65,"runtime/eventloop.(*pollServer).wait(0x9035f8, 0xf8400959b0, 0xf84011ac30, 0xb, 0x1, ...)","['runtime', 'eventloop', '.(*', 'pollServer', ').', 'wait', '(', '0', 'x9035f8', ',', '0', 'xf8400959b0', ',', '0', 'xf84011ac30', ',', '0', 'xb', ',', '0', 'x1', ',', '...)']"
66,    go/src/pkg/runtime/eventloop/poll_linux_amd64.go:472 +0x1a7,"['go', 'src', 'pkg', 'runtime', 'eventloop', 'poll_linux_amd64', '.', 'go', ':', '472', '+', '0', 'x1a7']"
67,"runtime/eventloop.(*FD).Read(0xf8400959a0, 0xf840139000, 0x100000001000, 0x0, 0xf84011ac30, ...)","['runtime', 'eventloop', '.(*', 'FD', ').', 'Read', '(', '0', 'xf8400959a0', ',', '0', 'xf840139000', ',', '0', 'x100000001000', ',', '0', 'x0', ',', '0', 'xf84011ac30', ',', '...)']"
68,    go/src/pkg/runtime/eventloop/fd.go:93 +0x18c,"['go', 'src', 'pkg', 'runtime', 'eventloop', 'fd', '.', 'go', ':', '93', '+', '0', 'x18c']"
69,"io.(*LimitedReader).Read(0xf840123580, 0xf840139000, 0x100000001000, 0xf8900000000, 0x0, ...)","['io', '.(*', 'LimitedReader', ').', 'Read', '(', '0', 'xf840123580', ',', '0', 'xf840139000', ',', '0', 'x100000001000', ',', '0', 'xf8900000000', ',', '0', 'x0', ',', '...)']"
70,    go/src/pkg/io/io.go:394 +0xc1,"['go', 'src', 'pkg', 'io', 'io', '.', 'go', ':', '394', '+', '0', 'xc1']"
71,"bufio.(*Reader).fill(0xf840129f80, 0x2b5853e92000)","['bufio', '.(*', 'Reader', ').', 'fill', '(', '0', 'xf840129f80', ',', '0', 'x2b5853e92000', ')']"
72,    go/src/pkg/bufio/bufio.go:77 +0xf0,"['go', 'src', 'pkg', 'bufio', 'bufio', '.', 'go', ':', '77', '+', '0', 'xf0']"
73,"bufio.(*Reader).Read(0xf840129f80, 0xf84013d000, 0x27100000000c, 0xc, 0x0, ...)","['bufio', '.(*', 'Reader', ').', 'Read', '(', '0', 'xf840129f80', ',', '0', 'xf84013d000', ',', '0', 'x27100000000c', ',', '0', 'xc', ',', '0', 'x0', ',', '...)']"
74,    go/src/pkg/bufio/bufio.go:142 +0x188,"['go', 'src', 'pkg', 'bufio', 'bufio', '.', 'go', ':', '142', '+', '0', 'x188']"
75,"io.ReadAtLeast(0xf84012c600, 0xf84012c570, 0xf84013d000, 0x27100000000c, 0xc, ...)","['io.ReadAtLeast(0xf84012c600, 0xf84012c570, 0xf84013d000, 0x27100000000c, 0xc, ...)']"
76,    go/src/pkg/io/io.go:254 +0xc3,"['go', 'src', 'pkg', 'io', 'io', '.', 'go', ':', '254', '+', '0', 'xc3']"
77,"io.ReadFull(0xf84012c600, 0xf84012c570, 0xf84013d000, 0x27100000000c, 0xf84012c570, ...)","['io.ReadFull(0xf84012c600, 0xf84012c570, 0xf84013d000, 0x27100000000c, 0xf84012c570, ...)']"
78,    go/src/pkg/io/io.go:273 +0x69,"['go', 'src', 'pkg', 'io', 'io', '.', 'go', ':', '273', '+', '0', 'x69']"
79,"net/http.(*conn).serve(0xf8401320c0, 0x0)","['net', 'http', '.(*', 'conn', ').', 'serve', '(', '0', 'xf8401320c0', ',', '0', 'x0', ')']"
80,    go/src/pkg/net/http/server.go:656 +0x621,"['go', 'src', 'pkg', 'net', 'http', 'server', '.', 'go', ':', '656', '+', '0', 'x621']"
81,created by net/http.(*Server).Serve,"['created', 'by', 'net', 'http', '.(*', 'Server', ').', 'Serve']"
82,    go/src/pkg/net/http/server.go:1040 +0x430,"['go', 'src', 'pkg', 'net', 'http', 'server', '.', 'go', ':', '1040', '+', '0', 'x430']"
83,goroutine 59 [sleep]:,"['go', 'routine', '59', '[', 'sleep', ']:']"
84,"time.Sleep(0x5dfdee1, 0xf8408034d0)","['time.Sleep(0x5dfdee1, 0xf8408034d0)']"
85,    go/src/pkg/runtime/ztime_amd64.c:22 +0x49,"['go', 'src', 'pkg', 'runtime', 'ztime_amd64', '.', 'c', ':', '22', '+', '0', 'x49']"
86,created by _,"['created', 'by', '_']"
87,    _.go:791 +0xc4,"['_', '.', 'go', ':', '791', '+', '0', 'xc4']"
88,goroutine 15 [chan receive]:,"['go', 'routine', '15', '[', 'chan', 'receive', ']:']"
89,"

Maybe I'm not logging all the errors, but even if, what could cause the looping?

Update
The near-endless-looping quickly drained my datastore write quota, now I'm getting a no-quote error, which is being logged.  After the Error logs the handler is invoked again. and again....

","['Maybe', ""I'm"", 'not', 'logging', 'all', 'the', 'errors,', 'but', 'even', 'if,', 'what', 'could', 'cause', 'the', 'looping?', 'Update', 'The', 'near-endless-looping', 'quickly', 'drained', 'my', 'datastore', 'write', 'quota,', 'now', ""I'm"", 'getting', 'a', 'no-quote', 'error,', 'which', 'is', 'being', 'logged.', 'After', 'the', 'Error', 'logs', 'the', 'handler', 'is', 'invoked', 'again.', 'and', 'again....']"
90,"func handleError(w http.ResponseWriter, c appengine.Context, err error) {","['func', 'handleError', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'c', 'appengine', '.', 'Context', ',', 'err', 'error', ')', '{']"
91,"    c.Infof(""ERROR"")","['c.Infof(""ERROR"")']"
92,"    c.Errorf(""ERROR datastore: %s"", err.Error())","['c.Errorf(""ERROR datastore: %s"", err.Error())']"
93,},['}']
94,...,['...']
95,"rk, err := datastore.Put(c, rk, e)","['rk', ',', 'err', ':=', 'datastore.Put(c, rk, e)']"
96,if err != nil {,"['if', 'err', '!=', 'nil', '{']"
97,"    handleError(w, c, err)","['handleError', '(', 'w', ',', 'c', ',', 'err', ')']"
98,    return,['return']
99,},['}']
100,"

UPDATE 2
After switching to an f4 instance the code runs as expected.  I still think the Appengine Go run time is silently failing for some reason, (memory), and restarting the handler execution. Thats my best guess, I have no idea.
","['UPDATE', '2', 'After', 'switching', 'to', 'an', 'f4', 'instance', 'the', 'code', 'runs', 'as', 'expected.', 'I', 'still', 'think', 'the', 'Appengine', 'Go', 'run', 'time', 'is', 'silently', 'failing', 'for', 'some', 'reason,', '(memory),', 'and', 'restarting', 'the', 'handler', 'execution.', 'Thats', 'my', 'best', 'guess,', 'I', 'have', 'no', 'idea.']"
