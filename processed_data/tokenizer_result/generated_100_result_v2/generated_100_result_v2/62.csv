,text,token
0,"Initialize the type as you would initialize the underlying type. In your example, the underlying type is an int. For example,

","['Initialize', 'the', 'type', 'as', 'you', 'would', 'initialize', 'the', 'underlying', 'type', '.', 'In', 'your', 'example', ',', 'the', 'underlying', 'type', 'is', 'an', 'int', '.', 'For', 'example', ',']"
1,package main,"['package', 'main']"
2,import (,"['import', '(']"
3,"    ""fmt""","['""fmt""']"
4,),[')']
5,type Num int,"['type', 'Num', 'int']"
6,func main() {,"['func', 'main()', '{']"
7,    var m Num = 7,"['var', 'm', 'Num', '=', '7']"
8,    n := Num(42),"['n', ':=', 'Num(42)']"
9,"    fmt.Println(m, n)","['fmt.Println(m, n)']"
10,},['}']
11,Output: 7 42,"['Output', ':', '7', '42']"
12,"

The built-in function make takes a type T, which must be a slice, map or channel type.
","['The', 'built-in', 'function', 'make', 'takes', 'a', 'type', 'T', ',', 'which', 'must', 'be', 'a', 'slice', ',', 'map', 'or', 'channel', 'type', '.']"
