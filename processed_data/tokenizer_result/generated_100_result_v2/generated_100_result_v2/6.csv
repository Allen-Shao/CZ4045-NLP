,text,token
0,"I try to write a function that validate data. Look at the following code:

","['I', 'try', 'to', 'write', 'a', 'function', 'that', 'validate', 'data', '.', 'Look', 'at', 'the', 'following', 'code', ':']"
1,"func Create(name, email, password, local string, termOf bool) map[string]string {","['func', 'Create(name, email, password, local string, termOf bool)', 'map', '[', 'string', ']', 'string', '{']"
2,    wait := new(sync.WaitGroup),"['wait', ':=', 'new(sync.WaitGroup)']"
3,    mutex := new(sync.Mutex),"['mutex', ':=', 'new(sync.Mutex)']"
4,    errMsg := make(map[string]string),"['errMsg', ':=', 'make(map[string]string)']"
5,    if !termOf {,"['if', '!', 'termOf', '{']"
6,        mutex.Lock(),['mutex.Lock()']
7,"        errMsg[""termOf""] = translate(local, ""text06"")","['errMsg', '[', '""termOf""', ']', '=', 'translate(local, ""text06"")']"
8,        mutex.Unlock(),['mutex.Unlock()']
9,    },['}']
10,    wait.Add(1),['wait.Add(1)']
11,    go func() {,"['go', 'func', '()', '{']"
12,"        err := ValidateName(name, local)","['err', ':=', 'ValidateName(name, local)']"
13,        mutex.Lock(),['mutex.Lock()']
14,"        errMsg[""name""] = err.Error()","['errMsg', '[', '""name""', ']', '=', 'err.Error()']"
15,        mutex.Unlock(),['mutex.Unlock()']
16,        wait.Done(),['wait.Done()']
17,    }(),['}()']
18,    wait.Add(1),['wait.Add(1)']
19,    go func() {,"['go', 'func', '()', '{']"
20,"        err := ValidateEmail(email, local)","['err', ':=', 'ValidateEmail(email, local)']"
21,        mutex.Lock(),['mutex.Lock()']
22,"        errMsg[""email""] = err.Error()","['errMsg', '[', '""email""', ']', '=', 'err.Error()']"
23,        mutex.Unlock(),['mutex.Unlock()']
24,        wait.Done(),['wait.Done()']
25,    }(),['}()']
26,    wait.Add(1),['wait.Add(1)']
27,    go func() {,"['go', 'func', '()', '{']"
28,"        err := ValidatePassword(password, local)","['err', ':=', 'ValidatePassword(password, local)']"
29,        mutex.Lock(),['mutex.Lock()']
30,"        errMsg[""password""] = err.Error()","['errMsg', '[', '""password""', ']', '=', 'err.Error()']"
31,        mutex.Unlock(),['mutex.Unlock()']
32,        wait.Done(),['wait.Done()']
33,    }(),['}()']
34,    wait.Wait(),['wait.Wait()']
35,    // If errors appear,"['//', 'If', 'errors', 'appear']"
36,    if len(errMsg) > 0 {,"['if', 'len(errMsg)', '>', '0', '{']"
37,        return errMsg,"['return', 'errMsg']"
38,    },['}']
39,    return nil,"['return', 'nil']"
40,},['}']
41,"

As you can see here, I use three goroutines and in the goroutine I lock it to change errMsg variable map type. When I run the function, I've got compiler error

","['As', 'you', 'can', 'see', 'here', ',', 'I', 'use', 'three', 'goroutines', 'and', 'in', 'the', 'goroutine', 'I', 'lock', 'it', 'to', 'change', 'errMsg', 'variable', 'map', 'type', '.', 'When', 'I', 'run', 'the', 'function', ',', 'I', ""'ve"", 'got', 'compiler', 'error']"
42,runtime error: invalid memory address or nil pointer dereference,"['runtime', 'error', ':', 'invalid', 'memory', 'address', 'or', 'nil', 'pointer', 'dereference']"
43,[signal 0xc0000005 code=0x0 addr=0x14 pc=0x44206a],"['[', 'signal', '0xc0000005', 'code', '=', '0x0', 'addr', '=', '0x14', 'pc', '=', '0x44206a', ']']"
44,"

But when I remove in the goroutine all errMsg inserts, then the function works. I do not know the reason what I do wrong.
","['But', 'when', 'I', 'remove', 'in', 'the', 'goroutine', 'all', 'errMsg', 'inserts', ',', 'then', 'the', 'function', 'works', '.', 'I', 'do', 'not', 'know', 'the', 'reason', 'what', 'I', 'do', 'wrong', '.']"
