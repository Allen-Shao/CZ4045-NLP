,text,token
0,"So I am trying to write some code that allows me to edit values in an array in a struct.  This example uses ""Status"" as a possible value to alter, but this is just a simplification to try to get my intent across.

","['So', 'I', 'am', 'trying', 'to', 'write', 'some', 'code', 'that', 'allows', 'me', 'to', 'edit', 'values', 'in', 'an', 'array', 'in', 'a', 'struct', '.', 'This', 'example', 'uses', '""Status""', 'as', 'a', 'possible', 'value', 'to', 'alter', ',', 'but', 'this', 'is', 'just', 'a', 'simplification', 'to', 'try', 'to', 'get', 'my', 'intent', 'across', '.']"
1,package main,"['package', 'main']"
2,import(,"['import', '(']"
3,"  ""fmt""","['""fmt""']"
4,),[')']
5,type Parent struct {,"['type', 'Parent', 'struct', '{']"
6,  Children []Child,"['Children', '[]', 'Child']"
7,},['}']
8,type Child struct {,"['type', 'Child', 'struct', '{']"
9,  Status string,"['Status', 'string']"
10,},['}']
11,func (p *Parent) Add() *Child {,"['func', '(', 'p', '*', 'Parent', ')', 'Add()', '*', 'Child', '{']"
12,  var child Child,"['var', 'child', 'Child']"
13,"  child.Status = ""1""","['child', '.', 'Status', '=', '""1""']"
14,"  p.Children = append(p.Children, child)","['p', '.', 'Children', '=', 'append(p.Children, child)']"
15,  return &p.Children[len(p.Children)-1],"['return', '&', 'p', '.', 'Children', '[', 'len(p.Children)', '-', '1', ']']"
16,},['}']
17,func main() {,"['func', 'main()', '{']"
18,  var p Parent,"['var', 'p', 'Parent']"
19,  child := p.Add(),"['child', ':=', 'p.Add()']"
20,"  child.Status = ""2""","['child', '.', 'Status', '=', '""2""']"
21,  fmt.Println(p),['fmt.Println(p)']
22,  fmt.Println(child),['fmt.Println(child)']
23,},['}']
24,"

This doesn't feel ""proper"".  How should I do this in golang?  Certainly I could pass the value in as a parameter, but in my particular case I would like to edit function pointers that are inside the Child struct (not in this code to keep it short) after having added the child.  That feels nicer, but maybe I just need to pass them as parameters to the Add method?

eg

","['This', 'does', ""n't"", 'feel', '""proper"".', 'How', 'should', 'I', 'do', 'this', 'in', 'golang', '?', 'Certainly', 'I', 'could', 'pass', 'the', 'value', 'in', 'as', 'a', 'parameter', ',', 'but', 'in', 'my', 'particular', 'case', 'I', 'would', 'like', 'to', 'edit', 'function', 'pointers', 'that', 'are', 'inside', 'the', 'Child', 'struct', '(', 'not', 'in', 'this', 'code', 'to', 'keep', 'it', 'short', ')', 'after', 'having', 'added', 'the', 'child', '.', 'That', 'feels', 'nicer', ',', 'but', 'maybe', 'I', 'just', 'need', 'to', 'pass', 'them', 'as', 'parameters', 'to', 'the', 'Add', 'method', '?', 'eg']"
25,"func (p *Parent) Add(fn1 func(), fn2 func()) *Child {","['func', '(', 'p', '*', 'Parent', ')', 'Add(fn1 func(), fn2 func())', '*', 'Child', '{']"
26,"

Anyway just wondering if anybody has any thoughts on this type of situation.
","['Anyway', 'just', 'wondering', 'if', 'anybody', 'has', 'any', 'thoughts', 'on', 'this', 'type', 'of', 'situation', '.']"
