,text,token
0,"The goroutines are only working on copies of the slice headers, the underlying arrays are the same. To make a copy of a slice, you need to use copy (or append to a different slice).

","['The', 'goroutines', 'are', 'only', 'working', 'on', 'copies', 'of', 'the', 'slice', 'headers,', 'the', 'underlying', 'arrays', 'are', 'the', 'same.', 'To', 'make', 'a', 'copy', 'of', 'a', 'slice,', 'you', 'need', 'to', 'use', 'copy', '(or', 'append', 'to', 'a', 'different', 'slice).']"
1,"buf_Seq = append(buf_Seq, line)","['buf_Seq', '=', 'append', '(', 'buf_Seq', ',', 'line', ')']"
2,"bufCopy := make([]string, len(buf_Seq))","['bufCopy', ':=', 'make', '([]', 'string', ',', 'len', '(', 'buf_Seq', '))']"
3,"copy(bufCopy, buf_Seq)","['copy', '(', 'bufCopy', ',', 'buf_Seq', ')']"
4,"

You can then safely pass bufCopy to the goroutines, or simply use it directly in the closure.
","['You', 'can', 'then', 'safely', 'pass', 'bufCopy', 'to', 'the', 'goroutines,', 'or', 'simply', 'use', 'it', 'directly', 'in', 'the', 'closure.']"
