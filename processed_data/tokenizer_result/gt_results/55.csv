,text,token
0,"Is it a good idea to create own type from a slice in Golang?

Example:

","['Is', 'it', 'a', 'good', 'idea', 'to', 'create', 'own', 'type', 'from', 'a', 'slice', 'in', 'Golang?', 'Example:']"
1,type Trip struct {,"['type', 'Trip', 'struct', '{']"
2,    From   string,"['From', 'string']"
3,    To     string,"['To', 'string']"
4,    Length int,"['Length', 'int']"
5,},['}']
6,type Trips []Trip // <-- is this a good idea?,"['type', 'Trips', '[]', 'Trip', '// <-- is this a good idea?']"
7,func (trips *Trips) TotalLength() int {,"['func', '(', 'trips', '*', 'Trips', ')', 'TotalLength', '()', 'int', '{']"
8,    ret := 0,"['ret', ':=', '0']"
9,"    for _, i := range *trips {","['for', '_', ',', 'i', ':=', 'range', '*', 'trips', '{']"
10,        ret += i.Length,"['ret', '+=', 'i', '.', 'Length']"
11,    },['}']
12,    return ret,"['return', 'ret']"
13,},['}']
14,"

Is it somehow a convention in Golang to create types like Trips in my example? Or it is better to use []Trip in the whole project? Any pros and cons?
","['Is', 'it', 'somehow', 'a', 'convention', 'in', 'Golang', 'to', 'create', 'types', 'like', 'Trips', 'in', 'my', 'example?', 'Or', 'it', 'is', 'better', 'to', 'use', '[]Trip', 'in', 'the', 'whole', 'project?', 'Any', 'pros', 'and', 'cons?']"
