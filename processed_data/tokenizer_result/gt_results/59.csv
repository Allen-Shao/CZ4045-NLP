,text,token
0,"Here's how you do it.


Assemble fromDate and toDate.
Create bson.ObjectId with ","[""Here's"", 'how', 'you', 'do', 'it.', 'Assemble', 'fromDate', 'and', 'toDate.', 'Create', 'bson.ObjectId', 'with']"
1,bson.NewObjectIdWithTime(),['bson.NewObjectIdWithTime()']
2,"
Query for date range


Example: Query for posts created 2015

","['Query', 'for', 'date', 'range', 'Example:', 'Query', 'for', 'posts', 'created', '2015']"
3,year := 2015,"['year', ':=', '2015']"
4,"fromDate := time.Date(year, time.January, 1, 0, 0, 0, 0, time.UTC)","['fromDate', ':=', 'time.Date(year, time.January, 1, 0, 0, 0, 0, time.UTC)']"
5,"toDate := time.Date(year+1, time.January, 1, 0, 0, 0, 0, time.UTC)","['toDate', ':=', 'time.Date(year+1, time.January, 1, 0, 0, 0, 0, time.UTC)']"
6,fromId := bson.NewObjectIdWithTime(fromDate),"['fromId', ':=', 'bson.NewObjectIdWithTime(fromDate)']"
7,toId := bson.NewObjectIdWithTime(toDate),"['toId', ':=', 'bson.NewObjectIdWithTime(toDate)']"
8,posts := []*Post{},"['posts', ':=', '[]*', 'Post', '{}']"
9,"if e := cPost.Find(bson.M{""_id"": bson.M{""$gte"": fromId, ""$lt"": toId}}).All(&posts); e != nil {","['if', 'e', ':=', 'cPost.Find(bson.M{""_id"": bson.M{""$gte"": fromId, ""$lt"": toId}}).All(&posts)', ';', 'e', '!=', 'nil', '{']"
10,},['}']
11,"

note: Because ObjectId isn't ISODate assemble ObjectId from ISODate
","['note:', 'Because', 'ObjectId', ""isn't"", 'ISODate', 'assemble', 'ObjectId', 'from', 'ISODate']"
