,PostId,Code,CodeLength
0,7692349,"WARNING  2011-10-07 20:01:01,252 urlfetch_stub.py:108] No ssl package found. urlfetch 

will not be able to validate SSL certificates.
INFO     2011-10-07 20:01:01,847 appengine_rpc.py:159] Server: appengine.google.com
INFO     2011-10-07 20:01:01,855 appcfg.py:463] Checking for updates to the SDK.
INFO     2011-10-07 20:01:04,625 appcfg.py:480] The SDK is up to date.
WARNING  2011-10-07 20:01:04,625 datastore_file_stub.py:512] Could not read datastore data from /var/folders/e0/e0U5NtMXFHOB6jVwkVhsnE+++TM/-Tmp-/dev_appserver.datastore
INFO     2011-10-07 20:01:04,627 rdbms_sqlite.py:58] Connecting to SQLite database '' with file '/var/folders/e0/e0U5NtMXFHOB6jVwkVhsnE+++TM/-Tmp-/dev_appserver.rdbms'
WARNING  2011-10-07 20:01:04,633 dev_appserver.py:4748] Could not initialize images API; you are likely missing the Python ""PIL"" module. ImportError: No module named _imaging
INFO     2011-10-07 20:01:04,641 dev_appserver_multiprocess.py:637] Running application tpbitblock on port 8080: http://localhost:8080
INFO     2011-10-07 20:01:08,448 __init__.py:365] building _go_app
INFO     2011-10-07 20:01:11,105 __init__.py:351] running _go_app
throw: init rescheduling

runtime.throw+0x40 /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/runtime.c:102
    runtime.throw(0x278c7f, 0xdc73)
schedule+0x3e /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/proc.c:535
    schedule(0x10803000, 0x10803000)
runtime.mcall+0x3a /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/386/asm.s:174
    runtime.mcall(0x10803000, 0x0)

goroutine 2 [1]:
net.*pollServer¬∑Run /private/tmp/appengine/google_appengine/goroot/src/pkg/net/fd.go:213
    net.*pollServer¬∑Run(0x10801c90, 0x0)
runtime.goexit /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/proc.c:178
    runtime.goexit()
----- goroutine created by -----
net.newPollServer+0x2dd /private/tmp/appengine/google_appengine/goroot/src/pkg/net/newpollserver.go:39

goroutine 1 [4]:
runtime.gosched+0x4d /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/proc.c:603
    runtime.gosched()
runtime.chanrecv+0x14d /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/chan.c:361
    runtime.chanrecv(0x1081d900, 0x30800e6c, 0x0, 0x0, 0x0, ...)
runtime.chanrecv1+0x3f /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/chan.c:424
    runtime.chanrecv1(0x1081d900, 0x1081e580)
net.*pollServer¬∑WaitRead+0x47 /private/tmp/appengine/google_appengine/goroot/src/pkg/net/fd.go:255
    net.*pollServer¬∑WaitRead(0x10801c90, 0x1081e580, 0x0)
net.*netFD¬∑accept+0x2ae /private/tmp/appengine/google_appengine/goroot/src/pkg/net/fd.go:605
    net.*netFD¬∑accept(0x1081e580, 0x45716, 0x0, 0x0, 0x0, ...)
net.*TCPListener¬∑AcceptTCP+0x53 /private/tmp/appengine/google_appengine/goroot/src/pkg/net/tcpsock.go:272
    net.*TCPListener¬∑AcceptTCP(0x108008b8, 0x30800f00, 0x0, 0x0)
net.*TCPListener¬∑Accept+0x36 /private/tmp/appengine/google_appengine/goroot/src/pkg/net/tcpsock.go:282
    net.*TCPListener¬∑Accept(0x108008b8, 0x0, 0x0, 0x0, 0x0, ...)
http.*Server¬∑Serve+0x96 /private/tmp/appengine/google_appengine/goroot/src/pkg/http/server.go:868
    http.*Server¬∑Serve(0x10839d20, 0x10839e20, 0x108008b8, 0x0, 0x0, ...)
http.*Server¬∑ListenAndServe+0x9c /private/tmp/appengine/google_appengine/goroot/src/pkg/http/server.go:855
    http.*Server¬∑ListenAndServe(0x10839d20, 0x10839d20, 0x406)
http.ListenAndServe+0x52 /private/tmp/appengine/google_appengine/goroot/src/pkg/http/server.go:920
    http.ListenAndServe(0x155640, 0x6, 0x0, 0x0, 0x0, ...)
BitBlock.init¬∑1+0x174 BitBlock/BitBlock.go:43
    BitBlock.init¬∑1()
BitBlock.init+0x70 BitBlock/BitBlock.go:0
    BitBlock.init()
main.init+0x39 _go_main.go:0
    main.init()
runtime.mainstart+0x5 /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/386/asm.s:91
    runtime.mainstart()
runtime.goexit /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/proc.c:178
    runtime.goexit()
----- goroutine created by -----
_rt0_386+0xbf /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/386/asm.s:80
ERROR    2011-10-07 20:01:12,196 dev_appserver.py:4200] Exception encountered handling request
Traceback (most recent call last):
  File ""/Google App Engine/google/appengine/tools/dev_appserver.py"", line 4143, in _HandleRequest
    self._Dispatch(dispatcher, self.rfile, outfile, env_dict)
  File ""/Google App Engine/google/appengine/tools/dev_appserver.py"", line 4049, in _Dispatch
    base_env_dict=env_dict)
  File ""/Google App Engine/google/appengine/tools/dev_appserver.py"", line 616, in Dispatch
    base_env_dict=base_env_dict)
  File ""/Google App Engine/google/appengine/tools/dev_appserver.py"", line 3120, in Dispatch
    self._module_dict)
  File ""/Google App Engine/google/appengine/tools/dev_appserver.py"", line 2972, in ExecuteCGI
    env, infile, outfile)
  File ""/Google App Engine/google/appengine/ext/go/__init__.py"", line 399, in execute_go_cgi
    GO_APP.make_and_run()
  File ""/Google App Engine/google/appengine/ext/go/__init__.py"", line 362, in make_and_run
    wait_until_go_app_ready(self.proc.pid)
  File ""/Google App Engine/google/appengine/ext/go/__init__.py"", line 285, in wait_until_go_app_ready
    raise Exception('unable to start ' + GO_APP_NAME)
Exception: unable to start _go_app
INFO     2011-10-07 20:01:12,242 dev_appserver.py:4247] ""GET / HTTP/1.1"" 500 -
INFO     2011-10-07 20:01:12,505 __init__.py:351] running _go_app
throw: init rescheduling

runtime.throw+0x40 /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/runtime.c:102
    runtime.throw(0x278c7f, 0xdc73)
schedule+0x3e /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/proc.c:535
    schedule(0x10803000, 0x10803000)
runtime.mcall+0x3a /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/386/asm.s:174
    runtime.mcall(0x10803000, 0x0)

goroutine 2 [1]:
net.*pollServer¬∑Run /private/tmp/appengine/google_appengine/goroot/src/pkg/net/fd.go:213
    net.*pollServer¬∑Run(0x10801c90, 0x0)
runtime.goexit /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/proc.c:178
    runtime.goexit()
----- goroutine created by -----
net.newPollServer+0x2dd /private/tmp/appengine/google_appengine/goroot/src/pkg/net/newpollserver.go:39

goroutine 1 [4]:
runtime.gosched+0x4d /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/proc.c:603
    runtime.gosched()
runtime.chanrecv+0x14d /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/chan.c:361
    runtime.chanrecv(0x1081d900, 0x30800e6c, 0x0, 0x0, 0x0, ...)
runtime.chanrecv1+0x3f /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/chan.c:424
    runtime.chanrecv1(0x1081d900, 0x1081e580)
net.*pollServer¬∑WaitRead+0x47 /private/tmp/appengine/google_appengine/goroot/src/pkg/net/fd.go:255
    net.*pollServer¬∑WaitRead(0x10801c90, 0x1081e580, 0x0)
net.*netFD¬∑accept+0x2ae /private/tmp/appengine/google_appengine/goroot/src/pkg/net/fd.go:605
    net.*netFD¬∑accept(0x1081e580, 0x45716, 0x0, 0x0, 0x0, ...)
net.*TCPListener¬∑AcceptTCP+0x53 /private/tmp/appengine/google_appengine/goroot/src/pkg/net/tcpsock.go:272
    net.*TCPListener¬∑AcceptTCP(0x108008b8, 0x30800f00, 0x0, 0x0)
net.*TCPListener¬∑Accept+0x36 /private/tmp/appengine/google_appengine/goroot/src/pkg/net/tcpsock.go:282
    net.*TCPListener¬∑Accept(0x108008b8, 0x0, 0x0, 0x0, 0x0, ...)
http.*Server¬∑Serve+0x96 /private/tmp/appengine/google_appengine/goroot/src/pkg/http/server.go:868
    http.*Server¬∑Serve(0x10839d20, 0x10839e20, 0x108008b8, 0x0, 0x0, ...)
http.*Server¬∑ListenAndServe+0x9c /private/tmp/appengine/google_appengine/goroot/src/pkg/http/server.go:855
    http.*Server¬∑ListenAndServe(0x10839d20, 0x10839d20, 0x406)
http.ListenAndServe+0x52 /private/tmp/appengine/google_appengine/goroot/src/pkg/http/server.go:920
    http.ListenAndServe(0x155640, 0x6, 0x0, 0x0, 0x0, ...)
BitBlock.init¬∑1+0x174 BitBlock/BitBlock.go:43
    BitBlock.init¬∑1()
BitBlock.init+0x70 BitBlock/BitBlock.go:0
    BitBlock.init()
main.init+0x39 _go_main.go:0
    main.init()
runtime.mainstart+0x5 /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/386/asm.s:91
    runtime.mainstart()
runtime.goexit /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/proc.c:178
    runtime.goexit()
----- goroutine created by -----
_rt0_386+0xbf /private/tmp/appengine/google_appengine/goroot/src/pkg/runtime/386/asm.s:80
ERROR    2011-10-07 20:01:13,530 dev_appserver.py:4200] Exception encountered handling request
Traceback (most recent call last):
  File ""/Google App Engine/google/appengine/tools/dev_appserver.py"", line 4143, in _HandleRequest
    self._Dispatch(dispatcher, self.rfile, outfile, env_dict)
  File ""/Google App Engine/google/appengine/tools/dev_appserver.py"", line 4049, in _Dispatch
    base_env_dict=env_dict)
  File ""/Google App Engine/google/appengine/tools/dev_appserver.py"", line 616, in Dispatch
    base_env_dict=base_env_dict)
  File ""/Google App Engine/google/appengine/tools/dev_appserver.py"", line 3120, in Dispatch
    self._module_dict)
  File ""/Google App Engine/google/appengine/tools/dev_appserver.py"", line 2972, in ExecuteCGI
    env, infile, outfile)
  File ""/Google App Engine/google/appengine/ext/go/__init__.py"", line 399, in execute_go_cgi
    GO_APP.make_and_run()
  File ""/Google App Engine/google/appengine/ext/go/__init__.py"", line 362, in make_and_run
    wait_until_go_app_ready(self.proc.pid)
  File ""/Google App Engine/google/appengine/ext/go/__init__.py"", line 285, in wait_until_go_app_ready
    raise Exception('unable to start ' + GO_APP_NAME)
Exception: unable to start _go_app
INFO     2011-10-07 20:01:13,531 dev_appserver.py:4247] ""GET /favicon.ico HTTP/1.1"" 500 -
",9707
1,8272760,"package main

import ""rand""

func Routine1(command12 chan int, response12 chan int, command13 chan int, response13 chan int) {

    // z12 is a variable which stores the value comming from channel 2 and z13 is a variable which stores the value comming from channel 3.

    z12 := 200
    z13 := 200
    m12 := false
    m13 := false
    y := 0

    for i := 0; i < 20; i++ {
        y = rand.Intn(100)

        // If y's value is not 0 then the value will be sent to routine 2 or 3 according to   prime or not.
        // If y's value is 0 then process state (the varibles used by it means z12, z13) and channel state will be saved.[routine 1 is initiator]

        if y == 0 {
            print(z12, ""    z12 STATE SAVED\n"")
            print(z13, ""    z13 STATE SAVED\n"")

            // Routine 1 is initiator,  it sends 0 to make other process to save the state.

            y = 0
            command12 <- y
            command13 <- y

            // Untill routine 2 and 3 does not send 0, process 1 is on channel saving state (it's process state is already saved).
            // When routine 1 recives 0 from both other processes, channel is saved and routine 1 retuns to it's common routine procedure.
            // When routine 1 recives 0 from any other processes, saving channel bettwen them is stopped.
            // m12, m13 is used to mark whether 0 recived or not.

            for m12 != true || m13 != true {
                select {
                case cmd1 := <-response12:
                    {
                        z12 = cmd1
                        if z12 != 0 {
                            print(z12, ""    z12  Channel Saving.... \n"")
                            y = rand.Intn(100)
                            command12 <- y
                        }
                        if z12 == 0 {
                            m12 = true
                            print("" z12  Channel Saving Stopped \n"")
                        }
                    }

                case cmd2 := <-response13:
                    {
                        z13 = cmd2
                        if z13 != 0 {
                            print(z13, ""    z13  Channel Saving.... \n"")
                            y = rand.Intn(100)
                            command13 <- y
                        }
                        if z13 == 0 {
                            m13 = true
                            print(""    z13  Channel Saving Stopped \n"")
                        }
                    }
                }

            }

            // After saving process state it retuns to it's normal behaviour.

            m12 = false
            m13 = false
        }

        if y != 0 {

            // If y value is not 0, routine 1 just sends int to other process according to prime or not and recives int accordingly.

            if y%2 == 0 {
                command12 <- y
            }

            if y%2 != 0 {
                command13 <- y
            }
            select {
            case cmd1 := <-response12:
                {
                    z12 = cmd1
                    print(z12, ""    z12\n"")
                }
            case cmd2 := <-response13:
                {
                    z13 = cmd2
                    print(z13, ""   z13\n"")
                }
            }
        }
    }
    close(command12)
    close(command13)
}


//Routine 2 (or 3) is not an initiator (means it can't send 0). When it recives 0 (from routine 1 or 3) it save the state of process and the state of the channel from which it recived).
// When it recives 0 from both other two routine, it saves all channel state and returns to it's common behaviour. [same in routine 3]

func Routine2(command12 chan int, response12 chan int, command23 chan int, response23 chan int) {
    z21 := 200
    z23 := 200
    m21 := false
    m23 := false

    for i := 0; i < 20; i++ {
        select {
        case x, open := <-command12:
            {
                if !open {
                    return
                }
                if x != 0 && m23 != true {
                    z21 = x
                    print(z21, ""   z21\n"")
                }
                if x != 0 && m23 == true {
                    z21 = x
                    print(z21, ""   z21 Channel Saving \n"")
                }
                if x == 0 {
                    m21 = true
                    if m21 == true && m23 == true {
                        print("" z21 and z23 Channel Saving Stopped \n"")
                        m23 = false
                        m21 = false
                    }
                    if m21 == true && m23 != true {
                        z21 = x
                        print(z21, ""   z21  Channel Saved \n"")

                    }

                }
            }

        case x, open := <-response23:
            {
                if !open {
                    return
                }
                if x != 0 && m21 != true {
                    z23 = x
                    print(z23, ""   z21\n"")
                }
                if x != 0 && m21 == true {
                    z23 = x
                    print(z23, ""   z23 Channel Saving \n"")
                }
                if x == 0 {
                    m23 = true
                    if m21 == true && m23 == true {
                        print("" z23 Channel Saving Stopped \n"")
                        m23 = false
                        m21 = false
                    }
                    if m23 == true && m21 != true {
                        z23 = x
                        print(z23, ""   z23  Channel Saved \n"")
                    }

                }
            }
        }

        if m23 == false && m21 == false {
            y := rand.Intn(100)
            if y%2 == 0 {
                if y == 0 {
                    y = 10
                    response12 <- y
                }
            }

            if y%2 != 0 {
                if y == 0 {
                    y = 10
                    response23 <- y
                }
            }
        }

        if m23 == true && m21 != true {
            y := rand.Intn(100)
            response12 <- y
        }

        if m23 != true && m21 == true {
            y := rand.Intn(100)
            command23 <- y
        }

    }
    close(response12)
    close(command23)
}

func Routine3(command13 chan int, response13 chan int, command23 chan int, response23 chan int) {
    z31 := 200
    z32 := 200
    m31 := false
    m32 := false

    for i := 0; i < 20; i++ {
        select {
        case x, open := <-command13:
            {
                if !open {
                    return
                }
                if x != 0 && m32 != true {
                    z31 = x
                    print(z31, ""   z21\n"")
                }
                if x != 0 && m32 == true {
                    z31 = x
                    print(z31, ""   z31 Channel Saving \n"")
                }
                if x == 0 {
                    m31 = true
                    if m31 == true && m32 == true {
                        print("" z21 Channel Saving Stopped \n"")
                        m31 = false
                        m32 = false
                    }
                    if m31 == true && m32 != true {
                        z31 = x
                        print(z31, ""   z31  Channel Saved \n"")

                    }

                }
            }

        case x, open := <-command23:
            {
                if !open {
                    return
                }
                if x != 0 && m31 != true {
                    z32 = x
                    print(z32, ""   z32\n"")
                }
                if x != 0 && m31 == true {
                    z32 = x
                    print(z32, ""   z32 Channel Saving \n"")
                }
                if x == 0 {
                    m32 = true
                    if m31 == true && m32 == true {
                        print("" z32 Channel Saving Stopped \n"")
                        m31 = false
                        m32 = false
                    }
                    if m32 == true && m31 != true {
                        z32 = x
                        print(z32, ""   z32  Channel Saved \n"")

                    }

                }
            }
        }
        if m31 == false && m32 == false {
            y := rand.Intn(100)
            if y%2 == 0 {
                response13 <- y
            }

            if y%2 != 0 {
                response23 <- y
            }
        }

        if m31 == true && m32 != true {
            y := rand.Intn(100)
            response13 <- y
        }

        if m31 != true && m32 == true {
            y := rand.Intn(100)
            response23 <- y
        }

    }
    close(response13)
    close(response23)
}


func main() {

    // Three concurrent channels are created to pass integers to each other.
    // command 12 used to send int and response12 is used to receive int from routine 1 to routine 2.
    // response 12 used to send int and command 12 is used to receive int from routine 2 to routine 1. {so as for others}

    command12 := make(chan int)
    response12 := make(chan int)
    command13 := make(chan int)
    response13 := make(chan int)
    command23 := make(chan int)
    response23 := make(chan int)

    go Routine1(command12, response12, command13, response13)
    go Routine2(command12, response12, command23, response23)
    Routine3(command13, response13, command23, response23)
}
",9500
2,10369513,"WORK=C:\Users\roxor\AppData\Local\Temp\go-build292908674
mkdir -p $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\
cd C:\Go\src\pkg\github.com\zombiezen\Go-GLUT\glut
C:\Go\pkg\tool\windows_amd64\cgo.exe -objdir $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\ -- -I $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\ glut.go
C:\Go\pkg\tool\windows_amd64\6c.exe -FVw -I $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\ -I C:\Go\pkg\windows_amd64 -o $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_cgo_defun.6 -DGOOS_windows -DGOARCH_amd64 $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_cgo_defun.c
gcc -I . -g -O2 -m64 -mthreads -I $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\ -o $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_cgo_main.o -c $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_cgo_main.c
gcc -I . -g -O2 -m64 -mthreads -I $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\ -o $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_cgo_export.o -c $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_cgo_export.c
gcc -I . -g -O2 -m64 -mthreads -I $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\ -o $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\glut.cgo2.o -c $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\glut.cgo2.c
gcc -I . -g -O2 -m64 -mthreads -I $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\ -o $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\support.o -c .\support.c
gcc -I . -g -O2 -m64 -mthreads -o $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_cgo_.o $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_cgo_main.o $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_cgo_export.o $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\glut.cgo2.o $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\support.o -lfreeglut
C:\Go\pkg\tool\windows_amd64\cgo.exe -objdir $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\ -dynimport $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_cgo_.o -dynout $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_cgo_import.c
C:\Go\pkg\tool\windows_amd64\6c.exe -FVw -I $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\ -I C:\Go\pkg\windows_amd64 -o $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_cgo_import.6 -DGOOS_windows -DGOARCH_amd64 $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_cgo_import.c
gcc -I . -g -O2 -m64 -mthreads -o $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_all.o $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_cgo_export.o $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\glut.cgo2.o $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\support.o -Wl,-r -nostdlib -lgcc -lmingwex -lmingw32
C:\Go\pkg\tool\windows_amd64\6g.exe -o $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_go_.6 -p github.com/zombiezen/Go-GLUT/glut -D _/C_/Go/src/pkg/github.com/zombiezen/Go-GLUT/glut -I $WORK $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_cgo_gotypes.go $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\glut.cgo1.go
C:\Go\pkg\tool\windows_amd64\pack.exe grc $WORK\github.com\zombiezen\Go-GLUT\glut.a $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_go_.6 $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_cgo_import.6 $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_cgo_defun.6 $WORK\github.com\zombiezen\Go-GLUT\glut\_obj\_all.o
mkdir -p C:\Go\pkg\windows_amd64\github.com\zombiezen\Go-GLUT\
cp $WORK\github.com\zombiezen\Go-GLUT\glut.a C:\Go\pkg\windows_amd64\github.com\zombiezen\Go-GLUT\glut.a
",3235
3,10369513,"// # include 
// #cgo windows LDFLAGS: -lfreeglut
// #include 
// #include ""support.h""
import ""C""
",98
4,10369513,"//#cgo windows LDFLAGS: -lglfwdll -lglu32 -lopengl32
//#include 
//#define GLFW_DLL
//#include 
import ""C""
",107
5,10369513,"WORK=C:\Users\roxor\AppData\Local\Temp\go-build499107422
mkdir -p $WORK\github.com\jteeuwen\glfw\_obj\
cd C:\Go\src\pkg\github.com\jteeuwen\glfw
C:\Go\pkg\tool\windows_amd64\cgo.exe -objdir $WORK\github.com\jteeuwen\glfw\_obj\ -- -I $WORK\github.com\jteeuwen\glfw\_obj\ callback.go glfw.go image.go vidmode.go
C:\Go\pkg\tool\windows_amd64\6c.exe -FVw -I $WORK\github.com\jteeuwen\glfw\_obj\ -I C:\Go\pkg\windows_amd64 -o $WORK\github.com\jteeuwen\glfw\_obj\_cgo_defun.6 -DGOOS_windows -DGOARCH_amd64 $WORK\github.com\jteeuwen\glfw\_obj\_cgo_defun.c
gcc -I . -g -O2 -m64 -mthreads -I $WORK\github.com\jteeuwen\glfw\_obj\ -o $WORK\github.com\jteeuwen\glfw\_obj\_cgo_main.o -c $WORK\github.com\jteeuwen\glfw\_obj\_cgo_main.c
gcc -I . -g -O2 -m64 -mthreads -I $WORK\github.com\jteeuwen\glfw\_obj\ -o $WORK\github.com\jteeuwen\glfw\_obj\_cgo_export.o -c $WORK\github.com\jteeuwen\glfw\_obj\_cgo_export.c
gcc -I . -g -O2 -m64 -mthreads -I $WORK\github.com\jteeuwen\glfw\_obj\ -o $WORK\github.com\jteeuwen\glfw\_obj\callback.cgo2.o -c $WORK\github.com\jteeuwen\glfw\_obj\callback.cgo2.c
gcc -I . -g -O2 -m64 -mthreads -I $WORK\github.com\jteeuwen\glfw\_obj\ -o $WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o -c $WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.c
gcc -I . -g -O2 -m64 -mthreads -I $WORK\github.com\jteeuwen\glfw\_obj\ -o $WORK\github.com\jteeuwen\glfw\_obj\image.cgo2.o -c $WORK\github.com\jteeuwen\glfw\_obj\image.cgo2.c
gcc -I . -g -O2 -m64 -mthreads -I $WORK\github.com\jteeuwen\glfw\_obj\ -o $WORK\github.com\jteeuwen\glfw\_obj\vidmode.cgo2.o -c $WORK\github.com\jteeuwen\glfw\_obj\vidmode.cgo2.c
gcc -I . -g -O2 -m64 -mthreads -I $WORK\github.com\jteeuwen\glfw\_obj\ -o $WORK\github.com\jteeuwen\glfw\_obj\callback.o -c .\callback.c
gcc -I . -g -O2 -m64 -mthreads -o $WORK\github.com\jteeuwen\glfw\_obj\_cgo_.o $WORK\github.com\jteeuwen\glfw\_obj\_cgo_main.o $WORK\github.com\jteeuwen\glfw\_obj\_cgo_export.o $WORK\github.com\jteeuwen\glfw\_obj\callback.cgo2.o $WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o $WORK\github.com\jteeuwen\glfw\_obj\image.cgo2.o $WORK\github.com\jteeuwen\glfw\_obj\vidmode.cgo2.o $WORK\github.com\jteeuwen\glfw\_obj\callback.o -lglfwdll -lglu32 -lopengl32
# github.com/jteeuwen/glfw
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwGetNumberOfProcessors':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:39: undefined reference to `__imp_glfwGetNumberOfProcessors'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwGetKey':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:51: undefined reference to `__imp_glfwGetKey'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwSetTime':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:60: undefined reference to `__imp_glfwSetTime'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwExtensionSupported':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:71: undefined reference to `__imp_glfwExtensionSupported'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwPollEvents':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:80: undefined reference to `__imp_glfwPollEvents'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwGetMousePos':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:90: undefined reference to `__imp_glfwGetMousePos'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwGetJoystickParam':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:102: undefined reference to `__imp_glfwGetJoystickParam'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwGetProcAddress':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:112: undefined reference to `__imp_glfwGetProcAddress'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwGetGLVersion':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:123: undefined reference to `__imp_glfwGetGLVersion'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwSetMouseWheel':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:133: undefined reference to `__imp_glfwSetMouseWheel'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwGetJoystickPos':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:148: undefined reference to `__imp_glfwGetJoystickPos'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwOpenWindow':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:168: undefined reference to `__imp_glfwOpenWindow'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwSetMousePos':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:178: undefined reference to `__imp_glfwSetMousePos'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwSwapInterval':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:188: undefined reference to `__imp_glfwSwapInterval'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwGetMouseButton':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:209: undefined reference to `__imp_glfwGetMouseButton'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwSetWindowTitle':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:218: undefined reference to `__imp_glfwSetWindowTitle'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwGetVideoModes':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:231: undefined reference to `__imp_glfwGetVideoModes'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwGetJoystickButtons':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:246: undefined reference to `__imp_glfwGetJoystickButtons'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwRestoreWindow':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:255: undefined reference to `__imp_glfwRestoreWindow'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwInit':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:265: undefined reference to `__imp_glfwInit'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwSwapBuffers':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:274: undefined reference to `__imp_glfwSwapBuffers'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwGetMouseWheel':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:284: undefined reference to `__imp_glfwGetMouseWheel'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwIconifyWindow':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:293: undefined reference to `__imp_glfwIconifyWindow'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwWaitEvents':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:302: undefined reference to `__imp_glfwWaitEvents'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwSetWindowPos':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:312: undefined reference to `__imp_glfwSetWindowPos'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwGetWindowSize':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:322: undefined reference to `__imp_glfwGetWindowSize'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwDisable':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:332: undefined reference to `__imp_glfwDisable'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwGetWindowParam':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:344: undefined reference to `__imp_glfwGetWindowParam'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwCloseWindow':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:353: undefined reference to `__imp_glfwCloseWindow'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwOpenWindowHint':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:363: undefined reference to `__imp_glfwOpenWindowHint'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwSleep':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:372: undefined reference to `__imp_glfwSleep'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwEnable':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:382: undefined reference to `__imp_glfwEnable'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwSetWindowSize':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:392: undefined reference to `__imp_glfwSetWindowSize'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwTerminate':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:411: undefined reference to `__imp_glfwTerminate'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwGetDesktopMode':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:420: undefined reference to `__imp_glfwGetDesktopMode'
$WORK\github.com\jteeuwen\glfw\_obj\glfw.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwGetTime':
C:\Go\src\pkg\github.com\jteeuwen\glfw/glfw.go:429: undefined reference to `__imp_glfwGetTime'
$WORK\github.com\jteeuwen\glfw\_obj\image.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwFreeImage':
C:\Go\src\pkg\github.com\jteeuwen\glfw/image.go:38: undefined reference to `__imp_glfwFreeImage'
$WORK\github.com\jteeuwen\glfw\_obj\image.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwReadImage':
C:\Go\src\pkg\github.com\jteeuwen\glfw/image.go:52: undefined reference to `__imp_glfwReadImage'
$WORK\github.com\jteeuwen\glfw\_obj\image.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwLoadTextureImage2D':
C:\Go\src\pkg\github.com\jteeuwen\glfw/image.go:65: undefined reference to `__imp_glfwLoadTextureImage2D'
$WORK\github.com\jteeuwen\glfw\_obj\image.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwLoadMemoryTexture2D':
C:\Go\src\pkg\github.com\jteeuwen\glfw/image.go:78: undefined reference to `__imp_glfwLoadMemoryTexture2D'
$WORK\github.com\jteeuwen\glfw\_obj\image.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwLoadTexture2D':
C:\Go\src\pkg\github.com\jteeuwen\glfw/image.go:91: undefined reference to `__imp_glfwLoadTexture2D'
$WORK\github.com\jteeuwen\glfw\_obj\image.cgo2.o: In function `_cgo_680190d759a2_Cfunc_glfwReadMemoryImage':
C:\Go\src\pkg\github.com\jteeuwen\glfw/image.go:107: undefined reference to `__imp_glfwReadMemoryImage'
$WORK\github.com\jteeuwen\glfw\_obj\callback.o: In function `setWindowSizeCB':
C:/Go/src/pkg/github.com/jteeuwen/glfw/callback.c:9: undefined reference to `__imp_glfwSetWindowSizeCallback'
$WORK\github.com\jteeuwen\glfw\_obj\callback.o: In function `setWindowCloseCB':
C:/Go/src/pkg/github.com/jteeuwen/glfw/callback.c:14: undefined reference to `__imp_glfwSetWindowCloseCallback'
$WORK\github.com\jteeuwen\glfw\_obj\callback.o: In function `setWindowRefreshCB':
C:/Go/src/pkg/github.com/jteeuwen/glfw/callback.c:19: undefined reference to `__imp_glfwSetWindowRefreshCallback'
$WORK\github.com\jteeuwen\glfw\_obj\callback.o: In function `setMouseButtonCB':
C:/Go/src/pkg/github.com/jteeuwen/glfw/callback.c:24: undefined reference to `__imp_glfwSetMouseButtonCallback'
$WORK\github.com\jteeuwen\glfw\_obj\callback.o: In function `setMousePosCB':
C:/Go/src/pkg/github.com/jteeuwen/glfw/callback.c:29: undefined reference to `__imp_glfwSetMousePosCallback'
$WORK\github.com\jteeuwen\glfw\_obj\callback.o: In function `setMouseWheelCB':
C:/Go/src/pkg/github.com/jteeuwen/glfw/callback.c:34: undefined reference to `__imp_glfwSetMouseWheelCallback'
$WORK\github.com\jteeuwen\glfw\_obj\callback.o: In function `setKeyCB':
C:/Go/src/pkg/github.com/jteeuwen/glfw/callback.c:39: undefined reference to `__imp_glfwSetKeyCallback'
$WORK\github.com\jteeuwen\glfw\_obj\callback.o: In function `setCharCB':
C:/Go/src/pkg/github.com/jteeuwen/glfw/callback.c:44: undefined reference to `__imp_glfwSetCharCallback'
collect2: ld returned 1 exit status
",12373
6,12482910,"$ go run objParser.go ak47.obj extincteur_obj.obj 
--Creating ak47.json3d from ak47.obj
--Exported 85772 faces with 89088 verticies
--Creating extincteur_obj.json3d from extincteur_obj.obj
--Exported 150316 faces with 151425 verticies
Parsed 2 files in 8.4963s
",261
7,12482910,"$ go run objParser.go ak47.obj extincteur_obj.obj 
--Creating ak47.json3d from ak47.obj
--Creating extincteur_obj.json3d from extincteur_obj.obj
--Exported 85772 faces with 89088 verticies
--Exported 150316 faces with 151425 verticies
Parsed 2 files in 10.23137s
",263
8,12482910,"package main

func parseFile(name string, finished chan int) {
    var Verts []*Vertex
    var Texs []*TexCoord
    var Faces []*Face

    var objFile, mtlFile, jsonFile *os.File
    var parseMaterial bool

    // Set up files and i/o
    inName := name
    outName := strings.Replace(inName, "".obj"", "".json3d"", -1)
    parseMaterial = false

    fmt.Printf(""--""+FgGreen+""Creating""+Reset+"" %s from %s\n"", outName, inName)

    var err error
    var part []byte
    var prefix bool

    if objFile, err = os.Open(inName); err != nil {
        fmt.Println(FgRed+""!!Failed to open input file!!""+Reset)
        return
    }

    if jsonFile, err = os.Create(outName); err != nil {
        fmt.Println(FgRed+""!!Failed to create output file!!""+Reset)
        return
    }

    reader := bufio.NewReader(objFile)
    writer := bufio.NewWriter(jsonFile)
    buffer := bytes.NewBuffer(make([]byte, 1024))

    // Read the file in and parse out what we need
    for {
        if part, prefix, err = reader.ReadLine(); err != nil {
            break
        }

        buffer.Write(part)
        if !prefix {
            line := buffer.String()
            if(strings.Contains(line, ""v "")) {
                Verts = append(Verts, parseVertex(line))
            } else if(strings.Contains(line, ""vt "")) {
                Texs = append(Texs, parseTexCoord(line))
            } else if(strings.Contains(line, ""f "")) {
                Faces = append(Faces, parseFace(line, Verts, Texs))
            } else if(strings.Contains(line, ""mtllib "")) {
                mtlName := strings.Split(line, "" "")[1]
                if mtlFile, err = os.Open(mtlName); err != nil {
                    fmt.Printf(""--""+FgRed+""Failed to find material file: %s\n""+Reset, mtlName)
                    parseMaterial = false
                } else {
                    parseMaterial = true
                }
            }
            buffer.Reset()
        }
    }

    if err == io.EOF {
        err = nil
    }

    objFile.Close()

    // Write out the data
    writer.WriteString(""{\""obj\"":[\n"");

    // Write out the verts
    writer.WriteString(""{\""vrt\"":[\n"");
    for i, vert := range Verts {
        writer.WriteString(vert.String())
        if i < len(Verts) - 1 { writer.WriteString("","") }
        writer.WriteString(""\n"")
    }

    // Write out the faces
    writer.WriteString(""],\""fac\"":[\n"")
    for i, face := range Faces {
        writer.WriteString(face.String(true))
        if i < len(Faces) - 1 { writer.WriteString("","") }
        writer.WriteString(""\n"")
    }

    // Write out the normals
    writer.WriteString(""],\""nrm\"":["")
    for i, face := range Faces {


        writer.WriteString(""["")
        for j, vert := range face.verts {
            length := math.Sqrt((vert.X * vert.X) + (vert.Y * vert.Y) + (vert.Z * vert.Z))
            x := vert.X / length
            y := vert.Y / length
            z := vert.Z / length
            normal := fmt.Sprintf(""[%f,%f,%f]"", x, y, z)
            writer.WriteString(normal)
            if(j < len(face.verts)-1) { writer.WriteString("","") }
        }
        writer.WriteString(""]"")




        //writer.WriteString(""[0, 1, 0]"")
        if i < len(Faces) - 1 { writer.WriteString("","") }
        writer.WriteString(""\n"")
    }

    // Write out the tex coords
    writer.WriteString(""],\""tex\"":["")
    for i, face := range Faces {
        writer.WriteString(""["")
        writer.WriteString(face.tex[0].String())
        writer.WriteString("","")
        writer.WriteString(face.tex[1].String())
        writer.WriteString("","")
        writer.WriteString(face.tex[2].String())
        writer.WriteString(""]"")
        if i < len(Faces) - 1 { writer.WriteString("","") }
        writer.WriteString(""\n"")
    }

    // Close obj block
    writer.WriteString(""]}]"");

    if parseMaterial {
        writer.WriteString("",mat:[{"");
        reader := bufio.NewReader(mtlFile)

        // Read the file in and parse out what we need
        for {
            if part, prefix, err = reader.ReadLine(); err != nil {
                break
            }

            buffer.Write(part)
            if !prefix {
                line := buffer.String()
                if(strings.Contains(line, ""map_Kd "")) {
                    parts := strings.Split(line, "" "")
                    entry := fmt.Sprintf(""\""t\"":\""%s\"","", parts[1])
                    writer.WriteString(entry)

                    width, height := 256, 256
                    var imageFile *os.File
                    if imageFile, err = os.Open(parts[1]); err != nil {
                        fmt.Printf(""--""+FgRed+""Failed to find %s, defaulting to 256x256""+Reset+""\n"", parts[1])
                        return
                    } else {
                        var config image.Config
                        imageReader := bufio.NewReader(imageFile)
                        config, err = jpeg.DecodeConfig(imageReader)
                        width, height = config.Width, config.Height
                        fmt.Printf(""--""+FgGreen+""Verifing""+Reset+"" that %s is %dpx x %dpx\n"", parts[1], width, height)
                    }

                    size := fmt.Sprintf(""\""w\"":%d,\""h\"":%d,"", width, height)
                    writer.WriteString(size)

                } else if(strings.Contains(line, ""Kd "")) {
                    parts := strings.Split(line, "" "")
                    entry := fmt.Sprintf(""\""r\"":%s, \""g\"":%s, \""b\"":%s,"", parts[1], parts[2], parts[3])
                    writer.WriteString(entry)
                }
                buffer.Reset()
            }
        }

        if err == io.EOF {
            err = nil
        }

        writer.WriteString(""\""res\"":100,\""uv\"":true}]"");
    }

    // Close json
    writer.WriteString(""}"");
    writer.Flush()
    jsonFile.Close()

    fmt.Printf(""--""+FgGreen+""Exported""+Reset+"" %d faces with %d verticies\n"", len(Faces), len(Verts))

    finished <- -1
}

func main(){
    // Verify we were called correctly
    if len(os.Args) < 2 {
        fmt.Println(""Usage: go run objParser.go "");
        return
    }

    files := len(os.Args)
    finished := make(chan int)

    now := time.Now()

    for i := 1; i < files; i++ {
        go parseFile(os.Args[i], finished)
    }

    for i := 1; i < files; i++ {
        <- finished
    }

    fmt.Printf(""Parsed %d files in %s\n"", files-1, time.Since(now))
}
",6363
9,12885235,"package hello

import (
    ""fmt""
    ""net/http""
)

func init() {
    http.HandleFunc(""/"", handler)
}

func handler(w http.ResponseWriter, r *http.Request) {
    fmt.Fprint(w, ""Hello, world!"")
}
",195
10,12885235,"application: helloworld
version: 1
runtime: go
api_version: go1
",64
11,12885235,"- url: /.*
  script: _go_app
",29
12,12885235,"Last login: Sun Oct 14 13:05:37 on ttys000
derek-etnyres-macbook-pro-2:~ dereketnyre$ dev_appserver.py myapp/
WARNING  2012-10-14 18:19:54,239 rdbms_mysqldb.py:74] The rdbms API is not available because the MySQLdb library could not be loaded.
Warning: You are using a Python runtime (2.7) that is more recent than the production runtime environment (2.5). Your application may use features that are not available in the production environment and may not work correctly when deployed to production.
CRITICAL 2012-10-14 18:19:54,686 appcfg.py:562] The api_version specified in app.yaml (go1) is not supported by this release of the SDK.  The supported api_versions are ['1'].
",676
13,12885235,"derek-etnyres-macbook-pro-2:~ dereketnyre$ dev_appserver.py myapp/
WARNING  2012-10-14 21:03:14,910 rdbms_mysqldb.py:74] The rdbms API is not available because the MySQLdb library could not be loaded.
Warning: You are using a Python runtime (2.7) that is more recent than the production runtime environment (2.5). Your application may use features that are not available in the production environment and may not work correctly when deployed to production.
INFO     2012-10-14 21:03:15,324 appcfg.py:585] Checking for updates to the SDK.
INFO     2012-10-14 21:03:15,551 appcfg.py:603] The SDK is up to date.
WARNING  2012-10-14 21:03:15,551 datastore_file_stub.py:518] Could not read datastore data from /var/folders/s0/095xdtkd3cgbjp73tpxx309r0000gn/T/dev_appserver.datastore
WARNING  2012-10-14 21:03:15,552 simple_search_stub.py:949] Could not read search indexes from /var/folders/s0/095xdtkd3cgbjp73tpxx309r0000gn/T/dev_appserver.searchindexes
WARNING  2012-10-14 21:03:15,562 dev_appserver.py:3621] Could not initialize images API; you are likely missing the Python ""PIL"" module. ImportError: No module named _imaging
INFO     2012-10-14 21:03:15,570 dev_appserver_multiprocess.py:655] Running application dev~helloworld on port 8080: http://localhost:8080
INFO     2012-10-14 21:03:15,570 dev_appserver_multiprocess.py:657] Admin console is available at: http://localhost:8080/_ah/admin
",1395
14,12885235,": no goroot found at /Applications/GoogleAppEngineLauncher.app/Contents/Resources/GoogleAppEngine-default.bundle/Contents/Resources/google_appengine/goroot 
      args = ('no goroot found at /Applications/GoogleAppEngine...bundle/Contents/Resources/google_appengine/goroot',) 
      message = 'no goroot found at /Applications/GoogleAppEngine...bundle/Contents/Resources/google_appengine/goroot'
",396
15,12885235,"pe 'exceptions.AttributeError'> Python 2.7.2: /usr/bin/python
Sun Oct 14 21:29:05 2012
A problem occurred in a Python script. Here is the sequence of function calls leading up to the error, in the order they occurred.

 /Applications/GoogleAppEngineLauncher.app/Contents/Resources/GoogleAppEngine-default.bundle/Contents/Resources/google_appengine/google/appengine/tools/dev_appserver.py in _HandleRequest(self=)
   2952         outfile = cStringIO.StringIO()
   2953         try:
=> 2954           self._Dispatch(dispatcher, self.rfile, outfile, env_dict)
   2955         finally:
   2956           self.module_manager.UpdateModuleFileModificationTimes()
self = , self._Dispatch = >, dispatcher = , self.rfile = , outfile = , env_dict = {'APPENGINE_RUNTIME': 'go', 'APPLICATION_ID': 'dev~helloworld', 'CURRENT_VERSION_ID': '1.1', 'DEFAULT_VERSION_HOSTNAME': 'localhost:8080', 'REMOTE_ADDR': '127.0.0.1', 'REQUEST_ID_HASH': 'C1DFD96E', 'REQUEST_METHOD': 'GET', 'SDK_VERSION': '1.7.2', 'SERVER_NAME': 'localhost', 'SERVER_PORT': '8080', ...}
 /Applications/GoogleAppEngineLauncher.app/Contents/Resources/GoogleAppEngine-default.bundle/Contents/Resources/google_appengine/google/appengine/tools/dev_appserver.py in _Dispatch(self=, dispatcher=, socket_infile=, outfile=, env_dict={'APPENGINE_RUNTIME': 'go', 'APPLICATION_ID': 'dev~helloworld', 'CURRENT_VERSION_ID': '1.1', 'DEFAULT_VERSION_HOSTNAME': 'localhost:8080', 'REMOTE_ADDR': '127.0.0.1', 'REQUEST_ID_HASH': 'C1DFD96E', 'REQUEST_METHOD': 'GET', 'SDK_VERSION': '1.7.2', 'SERVER_NAME': 'localhost', 'SERVER_PORT': '8080', ...})
   2822           dispatcher.Dispatch(app_server_request,
   2823                               outfile,
=> 2824                               base_env_dict=env_dict)
   2825         finally:
   2826           request_file.close()
base_env_dict undefined, env_dict = {'APPENGINE_RUNTIME': 'go', 'APPLICATION_ID': 'dev~helloworld', 'CURRENT_VERSION_ID': '1.1', 'DEFAULT_VERSION_HOSTNAME': 'localhost:8080', 'REMOTE_ADDR': '127.0.0.1', 'REQUEST_ID_HASH': 'C1DFD96E', 'REQUEST_METHOD': 'GET', 'SDK_VERSION': '1.7.2', 'SERVER_NAME': 'localhost', 'SERVER_PORT': '8080', ...}
 /Applications/GoogleAppEngineLauncher.app/Contents/Resources/GoogleAppEngine-default.bundle/Contents/Resources/google_appengine/google/appengine/tools/dev_appserver.py in Dispatch(self=, request= force_admin: False>, outfile=, base_env_dict={'APPENGINE_RUNTIME': 'go', 'APPLICATION_ID': 'dev~helloworld', 'CURRENT_VERSION_ID': '1.1', 'DEFAULT_VERSION_HOSTNAME': 'localhost:8080', 'REMOTE_ADDR': '127.0.0.1', 'REQUEST_ID_HASH': 'C1DFD96E', 'REQUEST_METHOD': 'GET', 'SDK_VERSION': '1.7.2', 'SERVER_NAME': 'localhost', 'SERVER_PORT': '8080', ...})
    705         forward_request = dispatcher.Dispatch(request,
    706                                               outfile,
=>  707                                               base_env_dict=base_env_dict)
    708 
    709         while forward_request:
base_env_dict = {'APPENGINE_RUNTIME': 'go', 'APPLICATION_ID': 'dev~helloworld', 'CURRENT_VERSION_ID': '1.1', 'DEFAULT_VERSION_HOSTNAME': 'localhost:8080', 'REMOTE_ADDR': '127.0.0.1', 'REQUEST_ID_HASH': 'C1DFD96E', 'REQUEST_METHOD': 'GET', 'SDK_VERSION': '1.7.2', 'SERVER_NAME': 'localhost', 'SERVER_PORT': '8080', ...}
 /Applications/GoogleAppEngineLauncher.app/Contents/Resources/GoogleAppEngine-default.bundle/Contents/Resources/google_appengine/google/appengine/tools/dev_appserver.py in Dispatch(self=, request= force_admin: False>, outfile=, base_env_dict={'APPENGINE_RUNTIME': 'go', 'APPLICATION_ID': 'dev~helloworld', 'CURRENT_VERSION_ID': '1.1', 'DEFAULT_VERSION_HOSTNAME': 'localhost:8080', 'REMOTE_ADDR': '127.0.0.1', 'REQUEST_ID_HASH': 'C1DFD96E', 'REQUEST_METHOD': 'GET', 'SDK_VERSION': '1.7.2', 'SERVER_NAME': 'localhost', 'SERVER_PORT': '8080', ...})
   1770                      memory_file,
   1771                      outfile,
=> 1772                      self._module_dict)
   1773     finally:
   1774       logging.root.level = before_level
self = , self._module_dict = {'codecs': , 'email': , 'email.Charset': , 'email.Encoders': , 'email.Errors': , 'email.FeedParser': , 'email.Generator': , 'email.Header': , 'email.Iterators': , 'email.MIMEAudio': , ...}
 /Applications/GoogleAppEngineLauncher.app/Contents/Resources/GoogleAppEngine-default.bundle/Contents/Resources/google_appengine/google/appengine/tools/dev_appserver.py in ExecuteCGI(config=, root_path='/Users/dereketnyre/myapp', handler_path='_go_app', cgi_path='/Users/dereketnyre/myapp/_go_app', env={'APPENGINE_RUNTIME': 'go', 'APPLICATION_ID': 'dev~helloworld', 'AUTH_DOMAIN': 'gmail.com', 'CONTENT_LENGTH': '', 'CONTENT_TYPE': 'application/x-www-form-urlencoded', 'CURRENT_VERSION_ID': '1.1', 'DEFAULT_VERSION_HOSTNAME': 'localhost:8080', 'GATEWAY_INTERFACE': 'CGI/1.1', 'HTTP_ACCEPT': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'HTTP_ACCEPT_LANGUAGE': 'en-us', ...}, infile=, outfile=, module_dict={'codecs': , 'email': , 'email.Charset': , 'email.Encoders': , 'email.Errors': , 'email.FeedParser': , 'email.Generator': , 'email.Header': , 'email.Iterators': , 'email.MIMEAudio': , ...}, exec_script=, exec_py27_handler=)
   1588     from google.appengine.ext.go import execute_go_cgi
   1589     return execute_go_cgi(root_path, config, handler_path, cgi_path,
=> 1590         env, infile, outfile)
   1591 
   1592 
env = {'APPENGINE_RUNTIME': 'go', 'APPLICATION_ID': 'dev~helloworld', 'AUTH_DOMAIN': 'gmail.com', 'CONTENT_LENGTH': '', 'CONTENT_TYPE': 'application/x-www-form-urlencoded', 'CURRENT_VERSION_ID': '1.1', 'DEFAULT_VERSION_HOSTNAME': 'localhost:8080', 'GATEWAY_INTERFACE': 'CGI/1.1', 'HTTP_ACCEPT': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'HTTP_ACCEPT_LANGUAGE': 'en-us', ...}, infile = , outfile = 
 /Applications/GoogleAppEngineLauncher.app/Contents/Resources/GoogleAppEngine-default.bundle/Contents/Resources/google_appengine/google/appengine/ext/go/__init__.py in execute_go_cgi(root_path='/Users/dereketnyre/myapp', config=, handler_path='_go_app', cgi_path='/Users/dereketnyre/myapp/_go_app', env={'APPENGINE_RUNTIME': 'go', 'APPLICATION_ID': 'dev~helloworld', 'AUTH_DOMAIN': 'gmail.com', 'CONTENT_LENGTH': '', 'CONTENT_TYPE': 'application/x-www-form-urlencoded', 'CURRENT_VERSION_ID': '1.1', 'DEFAULT_VERSION_HOSTNAME': 'localhost:8080', 'GATEWAY_INTERFACE': 'CGI/1.1', 'HTTP_ACCEPT': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'HTTP_ACCEPT_LANGUAGE': 'en-us', ...}, infile=, outfile=)
    519     RAPI_HANDLER = handler.ApiCallHandler()
    520     GO_APP = GoApp(root_path)
=>  521   GO_APP.make_and_run(env)
    522 
    523 
global GO_APP = None, GO_APP.make_and_run undefined, env = {'APPENGINE_RUNTIME': 'go', 'APPLICATION_ID': 'dev~helloworld', 'AUTH_DOMAIN': 'gmail.com', 'CONTENT_LENGTH': '', 'CONTENT_TYPE': 'application/x-www-form-urlencoded', 'CURRENT_VERSION_ID': '1.1', 'DEFAULT_VERSION_HOSTNAME': 'localhost:8080', 'GATEWAY_INTERFACE': 'CGI/1.1', 'HTTP_ACCEPT': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'HTTP_ACCEPT_LANGUAGE': 'en-us', ...}
: 'NoneType' object has no attribute 'make_and_run' 
      args = (""'NoneType' object has no attribute 'make_and_run'"",) 
      message = ""'NoneType' object has no attribute 'make_and_run'""
",7310
16,14080024,"  // Handle the reads
  var tbuf [81920]byte

  for {

    n, err := c.rwc.Read(tbuf[0:])

    // Was there an error in reading ?
    if err != nil {
        log.Printf(""Could not read packet : %s"", err.Error())
        break
    }

    log.Println(n)

}

return
",263
17,14080024,"2012/12/29 13:45:12 16384
2012/12/29 13:45:12 16018
2012/12/29 13:45:12 16384
2012/12/29 13:45:12 16016
2012/12/29 13:45:13 16384
2012/12/29 13:45:13 16016
2012/12/29 13:45:13 16384
2012/12/29 13:45:13 16016
2012/12/29 13:45:13 16384
2012/12/29 13:45:13 16016
2012/12/29 13:45:13 16384
2012/12/29 13:45:13 16016
2012/12/29 13:45:13 16384
2012/12/29 13:45:13 16016
2012/12/29 13:45:13 16384
2012/12/29 13:45:13 16016
2012/12/29 13:45:13 16384
2012/12/29 13:45:14 16016
2012/12/29 13:45:14 16384
2012/12/29 13:45:14 16016
2012/12/29 13:45:14 16384
2012/12/29 13:45:14 16016
2012/12/29 13:45:14 16384
2012/12/29 13:45:14 16016
2012/12/29 13:45:14 16384
2012/12/29 13:45:14 16016
2012/12/29 13:45:14 16384
2012/12/29 13:45:14 16016
2012/12/29 13:45:14 16384
2012/12/29 13:45:14 16016
2012/12/29 13:45:15 16384
2012/12/29 13:45:15 16016
2012/12/29 13:45:15 16384
2012/12/29 13:45:15 16016
2012/12/29 13:45:15 16384
2012/12/29 13:45:15 16016
2012/12/29 13:45:15 16384
2012/12/29 13:45:15 16016
2012/12/29 13:45:15 16384
2012/12/29 13:45:15 16016
2012/12/29 13:45:15 16384
2012/12/29 13:45:15 16016
2012/12/29 13:45:15 16384
2012/12/29 13:45:16 16016
2012/12/29 13:45:16 16384
2012/12/29 13:45:16 16016
2012/12/29 13:45:16 16384
2012/12/29 13:45:16 16016
2012/12/29 13:45:16 16384
2012/12/29 13:45:16 16016
2012/12/29 13:45:16 16384
2012/12/29 13:45:16 16016
2012/12/29 13:45:18 16384
2012/12/29 13:45:18 16016
2012/12/29 13:45:19 16384
2012/12/29 13:45:19 16016
2012/12/29 13:45:19 16384
2012/12/29 13:45:19 16016
2012/12/29 13:45:19 16384
2012/12/29 13:45:19 16016
2012/12/29 13:45:19 16384
2012/12/29 13:45:19 16016
2012/12/29 13:45:19 16384
2012/12/29 13:45:19 16016
2012/12/29 13:45:19 16384
2012/12/29 13:45:19 16016
2012/12/29 13:45:19 16384
2012/12/29 13:45:20 16016
2012/12/29 13:45:20 16384
2012/12/29 13:45:20 16016
2012/12/29 13:45:20 16384
2012/12/29 13:45:20 16016
2012/12/29 13:45:20 16384
2012/12/29 13:45:20 16016
2012/12/29 13:45:20 16384
2012/12/29 13:45:20 16016
2012/12/29 13:45:20 16384
2012/12/29 13:45:20 16016
2012/12/29 13:45:20 16384
2012/12/29 13:45:20 16016
2012/12/29 13:45:21 16384
2012/12/29 13:45:21 16016
2012/12/29 13:45:21 16384
2012/12/29 13:45:21 16016
2012/12/29 13:45:21 16384
2012/12/29 13:45:21 16016
2012/12/29 13:45:21 16384
2012/12/29 13:45:21 16016
2012/12/29 13:45:21 16384
2012/12/29 13:45:21 16016
2012/12/29 13:45:21 16384
2012/12/29 13:45:21 16016
2012/12/29 13:45:21 16384
2012/12/29 13:45:22 16016
2012/12/29 13:45:22 16384
2012/12/29 13:45:22 16016
2012/12/29 13:45:22 16384
2012/12/29 13:45:22 16016
2012/12/29 13:45:22 16384
2012/12/29 13:45:22 16016
2012/12/29 13:45:22 16384
2012/12/29 13:45:22 16016
2012/12/29 13:45:22 16384
2012/12/29 13:45:22 16016
2012/12/29 13:45:22 16384
2012/12/29 13:45:22 16016
2012/12/29 13:45:23 16384
2012/12/29 13:45:23 16016
2012/12/29 13:45:23 16384
2012/12/29 13:45:23 16016
2012/12/29 13:45:23 16384
2012/12/29 13:45:23 16016
2012/12/29 13:45:23 16384
2012/12/29 13:45:23 16016
2012/12/29 13:45:23 16384
2012/12/29 13:45:23 16016
2012/12/29 13:45:23 16384
2012/12/29 13:45:23 16016
2012/12/29 13:45:24 16384
2012/12/29 13:45:24 16016
2012/12/29 13:45:24 16384
2012/12/29 13:45:24 16016
2012/12/29 13:45:24 16384
2012/12/29 13:45:24 16016
2012/12/29 13:45:24 16384
2012/12/29 13:45:24 16016
2012/12/29 13:45:24 16384
2012/12/29 13:45:24 16016
2012/12/29 13:45:24 16384
2012/12/29 13:45:24 16016
2012/12/29 13:45:24 16384
2012/12/29 13:45:25 16016
2012/12/29 13:45:25 16384
2012/12/29 13:45:25 16016
2012/12/29 13:45:25 16384
2012/12/29 13:45:25 16016
2012/12/29 13:45:25 16384
2012/12/29 13:45:25 16016
2012/12/29 13:45:25 16384
2012/12/29 13:45:25 16016
2012/12/29 13:45:25 16384
2012/12/29 13:45:25 16016
2012/12/29 13:45:25 16384
2012/12/29 13:45:26 16016
2012/12/29 13:45:26 16384
2012/12/29 13:45:26 16016
2012/12/29 13:45:26 16384
2012/12/29 13:45:26 16016
2012/12/29 13:45:26 16384
2012/12/29 13:45:26 16016
2012/12/29 13:45:26 16384
2012/12/29 13:45:26 16016
2012/12/29 13:45:26 16384
2012/12/29 13:45:26 16016
2012/12/29 13:45:26 16384
2012/12/29 13:45:26 16016
2012/12/29 13:45:27 16384
2012/12/29 13:45:27 16016
2012/12/29 13:45:27 16384
2012/12/29 13:45:27 16016
2012/12/29 13:45:27 16384
2012/12/29 13:45:27 16016
2012/12/29 13:45:27 16384
2012/12/29 13:45:27 16016
2012/12/29 13:45:27 16384
2012/12/29 13:45:28 16016
2012/12/29 13:45:28 16384
2012/12/29 13:45:29 16016
2012/12/29 13:45:29 16384
2012/12/29 13:45:29 16016
2012/12/29 13:45:29 16384
2012/12/29 13:45:29 16016
2012/12/29 13:45:29 16384
2012/12/29 13:45:29 16016
2012/12/29 13:45:29 16384
2012/12/29 13:45:29 16016
2012/12/29 13:45:29 16384
2012/12/29 13:45:29 16016
2012/12/29 13:45:29 16384
2012/12/29 13:45:30 16016
2012/12/29 13:45:30 16384
2012/12/29 13:45:30 16016
2012/12/29 13:45:30 16384
2012/12/29 13:45:30 16016
2012/12/29 13:45:30 16384
2012/12/29 13:45:30 16016
2012/12/29 13:45:30 16384
2012/12/29 13:45:30 16016
2012/12/29 13:45:31 16384
2012/12/29 13:45:31 16016
2012/12/29 13:45:31 16384
2012/12/29 13:45:31 16016
2012/12/29 13:45:32 16384
2012/12/29 13:45:32 16016
2012/12/29 13:45:32 16384
2012/12/29 13:45:32 16016
2012/12/29 13:45:32 16384
2012/12/29 13:45:32 16016
2012/12/29 13:45:32 16384
2012/12/29 13:45:32 16016
2012/12/29 13:45:32 16384
2012/12/29 13:45:32 16016
2012/12/29 13:45:32 16384
2012/12/29 13:45:32 16016
2012/12/29 13:45:32 16384
2012/12/29 13:45:33 16016
2012/12/29 13:45:33 16384
2012/12/29 13:45:33 16016
2012/12/29 13:45:33 16384
2012/12/29 13:45:33 16016
2012/12/29 13:45:33 16384
2012/12/29 13:45:33 16016
2012/12/29 13:45:33 16384
2012/12/29 13:45:33 16016
2012/12/29 13:45:33 16384
2012/12/29 13:45:33 16016
2012/12/29 13:45:33 16384
2012/12/29 13:45:34 16016
2012/12/29 13:45:34 16384
2012/12/29 13:45:34 16016
2012/12/29 13:45:34 16384
2012/12/29 13:45:34 16016
2012/12/29 13:45:34 16384
2012/12/29 13:45:34 16016
2012/12/29 13:45:34 16384
2012/12/29 13:45:34 16016
2012/12/29 13:45:34 16384
2012/12/29 13:45:34 16016
2012/12/29 13:45:34 16384
2012/12/29 13:45:35 16016
2012/12/29 13:45:35 16384
2012/12/29 13:45:35 16016
2012/12/29 13:45:35 16384
2012/12/29 13:45:35 16016
2012/12/29 13:45:35 16384
2012/12/29 13:45:35 16016
2012/12/29 13:45:36 16384
2012/12/29 13:45:36 16016
2012/12/29 13:45:36 16384
2012/12/29 13:45:36 16016
2012/12/29 13:45:37 16384
2012/12/29 13:45:37 16016
2012/12/29 13:45:37 16384
2012/12/29 13:45:37 16016
2012/12/29 13:45:37 16384
2012/12/29 13:45:37 16016
2012/12/29 13:45:37 16384
2012/12/29 13:45:37 16016
2012/12/29 13:45:37 16384
2012/12/29 13:45:37 16016
2012/12/29 13:45:37 4048
",6525
18,14732354,glFinish(),10
19,14732354,glGetUniformLocation,20
20,14732354,glGetUniformLocation,20
21,14732354,"""dummy""",7
22,14732354,func main,9
23,14732354,"package main

import (
    ""fmt""
    ""github.com/0xe2-0x9a-0x9b/Go-SDL/sdl""
    gl ""github.com/chsc/gogl/gl33""
    ""math""
    ""time""
    ""unsafe""
)

const DEG_TO_RAD = math.Pi / 180

type GoMatrix [16]float64
type GlMatrix [16]gl.Float

var good_frames, bad_frames, sdl_events int

func main() {

    //=================================================================
    // Just opening a window, skip to the next part.

    if status := sdl.Init(sdl.INIT_VIDEO); status != 0 {
        panic(""Could not initialize SDL: "" + sdl.GetError())
    }
    defer sdl.Quit()

    sdl.GL_SetAttribute(sdl.GL_DOUBLEBUFFER, 1)
    const FLAGS = sdl.OPENGL
    if screen := sdl.SetVideoMode(640, 480, 32, FLAGS); screen == nil {
        panic(""Could not open SDL window: "" + sdl.GetError())
    }

    if err := gl.Init(); err != nil {
        panic(err)
    }

    gl.Viewport(0, 0, 640, 480)
    gl.ClearColor(.5, .5, .5, 1)

    //=================================================================
    // Simplest shaders ever.

    // A matrix to move the model, nothing else.
    vertex_code := gl.GLString(`
    #version 330 core
    in vec3 vpos;
    uniform mat4 MVP;
    void main() { 
        gl_Position = MVP * vec4(vpos, 1);
    }   
    `)
    // Everything is red.
    fragment_code := gl.GLString(`
    #version 330 core
    void main(){
        gl_FragColor = vec4(1,0,0,1);
    }
    `)
    vs := gl.CreateShader(gl.VERTEX_SHADER)
    fs := gl.CreateShader(gl.FRAGMENT_SHADER)
    gl.ShaderSource(vs, 1, &vertex_code, nil)
    gl.ShaderSource(fs, 1, &fragment_code, nil)
    gl.CompileShader(vs)
    gl.CompileShader(fs)
    prog := gl.CreateProgram()
    gl.AttachShader(prog, vs)
    gl.AttachShader(prog, fs)
    gl.LinkProgram(prog)
    // Did it compile?
    var link_status gl.Int
    gl.GetProgramiv(prog, gl.LINK_STATUS, &link_status)
    if link_status == gl.FALSE {
        var info_log_length gl.Int
        gl.GetProgramiv(prog, gl.INFO_LOG_LENGTH, &info_log_length)
        if info_log_length == 0 {
            panic(""Program linking failed but OpenGL has no log about it."")
        } else {
            info_log_gl := gl.GLStringAlloc(gl.Sizei(info_log_length))
            defer gl.GLStringFree(info_log_gl)
            gl.GetProgramInfoLog(prog, gl.Sizei(info_log_length), nil, info_log_gl)
            info_log := gl.GoString(info_log_gl)
            panic(info_log)
        }
    }
    gl.UseProgram(prog)
    attrib_vpos := gl.Uint(gl.GetAttribLocation(prog, gl.GLString(""vpos"")))

    //=================================================================
    // One triangle.

    positions := [...]gl.Float{-.5, -.5, 0, .5, -.5, 0, 0, .5, 0}

    var vao gl.Uint
    gl.GenVertexArrays(1, &vao)
    gl.BindVertexArray(vao)

    var vbo gl.Uint
    gl.GenBuffers(1, &vbo)
    gl.BindBuffer(gl.ARRAY_BUFFER, vbo)
    gl.BufferData(gl.ARRAY_BUFFER,
        gl.Sizeiptr(unsafe.Sizeof(positions)),
        gl.Pointer(&positions[0]),
        gl.STATIC_DRAW)

    gl.EnableVertexAttribArray(attrib_vpos)
    gl.VertexAttribPointer(attrib_vpos, 3, gl.FLOAT, gl.FALSE, 0, gl.Pointer(nil))

    //=================================================================

    Loop(prog)
    fmt.Println(""Good frames"", good_frames)
    fmt.Println(""Bad frames "", bad_frames)
    fmt.Println(""SDL events "", sdl_events)
}

func Loop(program gl.Uint) {
    start_time := time.Now()
    ticker := time.NewTicker(100 * time.Millisecond)
    defer ticker.Stop()
    running := true
    for running {
        select {
        case tick_time := <-ticker.C:
            OnTick(start_time, tick_time, program)
        case event := <-sdl.Events:
            running = OnSdlEvent(event)
        }
    }
}

func OnSdlEvent(event interface{}) bool {
    sdl_events++
    switch event.(type) {
    case sdl.QuitEvent:
        return false // Stop the main loop.
    }
    return true // Do not stop the main loop.
}

func OnTick(start_time, tick_time time.Time, program gl.Uint) {
    duration := tick_time.Sub(start_time).Seconds()
    speed := 10.
    angle := math.Mod(duration*speed, 360)
    gom := RotZ(angle)
    MVP := ToGlMatrix(gom)

    /* HERE, SOMETHING FISHY HAPPENS.

    Problem: sometimes, actually often, OpenGl returns 0 instead of -1 for
    the dummy parameter.  This is entirely correlated to the stuttering.

    With my implementation of OpenGl, swap buffer does a real swap.
    That means I get to see the last two pictures rendered.
    Thing is, I can see the swap, that means the pictures are different.
    That means that the call to DrawArrays is ignored.

    OpenGl is just crapping its pants.
    */
    matrix_loc := gl.GetUniformLocation(program, gl.GLString(""MVP""))
    dummy_matrix_loc := gl.GetUniformLocation(program, gl.GLString(""dummy""))
    if gl.GetError() != gl.NO_ERROR {
        fmt.Println(""Error get location"") // Never happens.
    }
    if dummy_matrix_loc == -1 {
        good_frames++ // Because is SHOULD fail.
    } else {
        bad_frames++ // That's not normal.
    }
    gl.UniformMatrix4fv(matrix_loc, 16, gl.TRUE, &MVP[0])
    if gl.GetError() != gl.NO_ERROR {
        fmt.Println(""Error send matrix"") // Never happens.
    }
    gl.Clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)
    if gl.GetError() != gl.NO_ERROR {
        fmt.Println(""Error clearing"") // Never happens.
    }
    gl.DrawArrays(gl.TRIANGLES, 0, 3)
    if gl.GetError() != gl.NO_ERROR {
        fmt.Println(""Error drawing"") // Never happens.
    }
    gl.Finish() // Does not seem to make anything work better.
    sdl.GL_SwapBuffers()
}

func RotZ(angle float64) GoMatrix {
    var gom GoMatrix
    a := angle * DEG_TO_RAD
    c := math.Cos(a)
    s := math.Sin(a)
    gom[0] = c
    gom[1] = s
    gom[4] = -s
    gom[5] = c
    gom[10] = 1
    gom[15] = 1
    return gom
}

func ToGlMatrix(gom GoMatrix) GlMatrix {
    var glm GlMatrix
    glm[0] = gl.Float(gom[0])
    glm[1] = gl.Float(gom[1])
    glm[2] = gl.Float(gom[2])
    glm[3] = gl.Float(gom[3])
    glm[4] = gl.Float(gom[4])
    glm[5] = gl.Float(gom[5])
    glm[6] = gl.Float(gom[6])
    glm[7] = gl.Float(gom[7])
    glm[8] = gl.Float(gom[8])
    glm[9] = gl.Float(gom[9])
    glm[10] = gl.Float(gom[10])
    glm[11] = gl.Float(gom[11])
    glm[12] = gl.Float(gom[12])
    glm[13] = gl.Float(gom[13])
    glm[14] = gl.Float(gom[14])
    glm[15] = gl.Float(gom[15])
    return glm
}
",6375
24,14732354,glxinfo,7
25,14732354,"> glxinfo
name of display: :0
display: :0  screen: 0
direct rendering: Yes
server glx vendor string: ATI
server glx version string: 1.4
server glx extensions:
    GLX_ARB_multisample, GLX_EXT_import_context, GLX_EXT_texture_from_pixmap, 
    GLX_EXT_visual_info, GLX_EXT_visual_rating, GLX_OML_swap_method, 
    GLX_SGI_make_current_read, GLX_SGI_swap_control, GLX_SGIS_multisample, 
    GLX_SGIX_fbconfig, GLX_SGIX_pbuffer, GLX_SGIX_visual_select_group
client glx vendor string: ATI
client glx version string: 1.4
client glx extensions:
    GLX_ARB_create_context, GLX_ARB_create_context_profile, 
    GLX_ARB_get_proc_address, GLX_ARB_multisample, GLX_EXT_import_context, 
    GLX_EXT_visual_info, GLX_EXT_visual_rating, GLX_MESA_allocate_memory, 
    GLX_MESA_copy_sub_buffer, GLX_MESA_swap_control, 
    GLX_MESA_swap_frame_usage, GLX_NV_swap_group, GLX_OML_swap_method, 
    GLX_SGI_make_current_read, GLX_SGI_swap_control, GLX_SGI_video_sync, 
    GLX_SGIS_multisample, GLX_SGIX_fbconfig, GLX_SGIX_pbuffer, 
    GLX_SGIX_swap_barrier, GLX_SGIX_swap_group, GLX_SGIX_visual_select_group, 
    GLX_EXT_texture_from_pixmap, GLX_EXT_framebuffer_sRGB, 
    GLX_ARB_fbconfig_float, GLX_AMD_gpu_association
GLX version: 1.4
GLX extensions:
    GLX_ARB_create_context, GLX_ARB_create_context_profile, 
    GLX_ARB_get_proc_address, GLX_ARB_multisample, GLX_EXT_import_context, 
    GLX_EXT_visual_info, GLX_EXT_visual_rating, GLX_MESA_swap_control, 
    GLX_NV_swap_group, GLX_OML_swap_method, GLX_SGI_make_current_read, 
    GLX_SGI_swap_control, GLX_SGI_video_sync, GLX_SGIS_multisample, 
    GLX_SGIX_fbconfig, GLX_SGIX_pbuffer, GLX_SGIX_swap_barrier, 
    GLX_SGIX_swap_group, GLX_SGIX_visual_select_group, 
    GLX_EXT_texture_from_pixmap
OpenGL vendor string: ATI Technologies Inc.
OpenGL renderer string: ATI Mobility Radeon HD 4500 Series
OpenGL version string: 3.3.11005 Compatibility Profile Context
OpenGL shading language version string: 3.30
OpenGL extensions:
    GL_AMDX_debug_output, GL_AMDX_vertex_shader_tessellator, 
    GL_AMD_conservative_depth, GL_AMD_debug_output, 
    GL_AMD_depth_clamp_separate, GL_AMD_draw_buffers_blend, 
    GL_AMD_name_gen_delete, GL_AMD_performance_monitor, GL_AMD_pinned_memory, 
    GL_AMD_sample_positions, GL_AMD_seamless_cubemap_per_texture, 
    GL_AMD_shader_stencil_export, GL_AMD_texture_cube_map_array, 
    GL_AMD_texture_texture4, GL_AMD_vertex_shader_tessellator, 
    GL_ARB_ES2_compatibility, GL_ARB_blend_func_extended, 
    GL_ARB_color_buffer_float, GL_ARB_copy_buffer, GL_ARB_depth_buffer_float, 
    GL_ARB_depth_clamp, GL_ARB_depth_texture, GL_ARB_draw_buffers, 
    GL_ARB_draw_buffers_blend, GL_ARB_draw_elements_base_vertex, 
    GL_ARB_draw_instanced, GL_ARB_explicit_attrib_location, 
    GL_ARB_fragment_coord_conventions, GL_ARB_fragment_program, 
    GL_ARB_fragment_program_shadow, GL_ARB_fragment_shader, 
    GL_ARB_framebuffer_object, GL_ARB_framebuffer_sRGB, 
    GL_ARB_geometry_shader4, GL_ARB_get_program_binary, 
    GL_ARB_half_float_pixel, GL_ARB_half_float_vertex, GL_ARB_imaging, 
    GL_ARB_instanced_arrays, GL_ARB_map_buffer_range, GL_ARB_multisample, 
    GL_ARB_multitexture, GL_ARB_occlusion_query, GL_ARB_occlusion_query2, 
    GL_ARB_pixel_buffer_object, GL_ARB_point_parameters, GL_ARB_point_sprite, 
    GL_ARB_provoking_vertex, GL_ARB_sample_shading, GL_ARB_sampler_objects, 
    GL_ARB_seamless_cube_map, GL_ARB_separate_shader_objects, 
    GL_ARB_shader_bit_encoding, GL_ARB_shader_objects, 
    GL_ARB_shader_precision, GL_ARB_shader_stencil_export, 
    GL_ARB_shader_texture_lod, GL_ARB_shading_language_100, GL_ARB_shadow, 
    GL_ARB_shadow_ambient, GL_ARB_sync, GL_ARB_texture_border_clamp, 
    GL_ARB_texture_buffer_object, GL_ARB_texture_buffer_object_rgb32, 
    GL_ARB_texture_compression, GL_ARB_texture_compression_rgtc, 
    GL_ARB_texture_cube_map, GL_ARB_texture_cube_map_array, 
    GL_ARB_texture_env_add, GL_ARB_texture_env_combine, 
    GL_ARB_texture_env_crossbar, GL_ARB_texture_env_dot3, 
    GL_ARB_texture_float, GL_ARB_texture_gather, 
    GL_ARB_texture_mirrored_repeat, GL_ARB_texture_multisample, 
    GL_ARB_texture_non_power_of_two, GL_ARB_texture_query_lod, 
    GL_ARB_texture_rectangle, GL_ARB_texture_rg, GL_ARB_texture_rgb10_a2ui, 
    GL_ARB_texture_snorm, GL_ARB_timer_query, GL_ARB_transform_feedback2, 
    GL_ARB_transform_feedback3, GL_ARB_transpose_matrix, 
    GL_ARB_uniform_buffer_object, GL_ARB_vertex_array_bgra, 
    GL_ARB_vertex_array_object, GL_ARB_vertex_buffer_object, 
    GL_ARB_vertex_program, GL_ARB_vertex_shader, 
    GL_ARB_vertex_type_2_10_10_10_rev, GL_ARB_viewport_array, 
    GL_ARB_window_pos, GL_ATI_draw_buffers, GL_ATI_envmap_bumpmap, 
    GL_ATI_fragment_shader, GL_ATI_meminfo, GL_ATI_separate_stencil, 
    GL_ATI_texture_compression_3dc, GL_ATI_texture_env_combine3, 
    GL_ATI_texture_float, GL_ATI_texture_mirror_once, GL_EXT_abgr, 
    GL_EXT_bgra, GL_EXT_bindable_uniform, GL_EXT_blend_color, 
    GL_EXT_blend_equation_separate, GL_EXT_blend_func_separate, 
    GL_EXT_blend_minmax, GL_EXT_blend_subtract, GL_EXT_compiled_vertex_array, 
    GL_EXT_copy_buffer, GL_EXT_copy_texture, GL_EXT_direct_state_access, 
    GL_EXT_draw_buffers2, GL_EXT_draw_instanced, GL_EXT_draw_range_elements, 
    GL_EXT_fog_coord, GL_EXT_framebuffer_blit, GL_EXT_framebuffer_multisample, 
    GL_EXT_framebuffer_object, GL_EXT_framebuffer_sRGB, 
    GL_EXT_geometry_shader4, GL_EXT_gpu_program_parameters, 
    GL_EXT_gpu_shader4, GL_EXT_histogram, GL_EXT_multi_draw_arrays, 
    GL_EXT_packed_depth_stencil, GL_EXT_packed_float, GL_EXT_packed_pixels, 
    GL_EXT_pixel_buffer_object, GL_EXT_point_parameters, 
    GL_EXT_provoking_vertex, GL_EXT_rescale_normal, GL_EXT_secondary_color, 
    GL_EXT_separate_specular_color, GL_EXT_shadow_funcs, GL_EXT_stencil_wrap, 
    GL_EXT_subtexture, GL_EXT_texgen_reflection, GL_EXT_texture3D, 
    GL_EXT_texture_array, GL_EXT_texture_buffer_object, 
    GL_EXT_texture_compression_latc, GL_EXT_texture_compression_rgtc, 
    GL_EXT_texture_compression_s3tc, GL_EXT_texture_cube_map, 
    GL_EXT_texture_edge_clamp, GL_EXT_texture_env_add, 
    GL_EXT_texture_env_combine, GL_EXT_texture_env_dot3, 
    GL_EXT_texture_filter_anisotropic, GL_EXT_texture_integer, 
    GL_EXT_texture_lod, GL_EXT_texture_lod_bias, GL_EXT_texture_mirror_clamp, 
    GL_EXT_texture_object, GL_EXT_texture_rectangle, GL_EXT_texture_sRGB, 
    GL_EXT_texture_shared_exponent, GL_EXT_texture_snorm, 
    GL_EXT_texture_swizzle, GL_EXT_timer_query, GL_EXT_transform_feedback, 
    GL_EXT_vertex_array, GL_EXT_vertex_array_bgra, 
    GL_IBM_texture_mirrored_repeat, GL_KTX_buffer_region, GL_NV_blend_square, 
    GL_NV_conditional_render, GL_NV_copy_depth_to_color, 
    GL_NV_explicit_multisample, GL_NV_float_buffer, GL_NV_half_float, 
    GL_NV_primitive_restart, GL_NV_texgen_reflection, GL_NV_texture_barrier, 
    GL_SGIS_generate_mipmap, GL_SGIS_texture_edge_clamp, GL_SGIS_texture_lod, 
    GL_SUN_multi_draw_arrays, GL_WIN_swap_hint, WGL_EXT_swap_control
",7039
26,14732354,"func Loop(program gl.Uint) {
    start_time := time.Now()
    stop_time := start_time.Add(time.Duration(30 * time.Second))
    running := true
    for running {
        tick_time := time.Now()
        OnTick(start_time, tick_time, program)
        time.Sleep(10 * time.Millisecond)
        if tick_time.After(stop_time) {
            running = false
        }
    }
}
",368
27,15674709,"$ go version
go version go1.0.3

$ go env
GOARCH=""amd64""
GOBIN=""""
GOCHAR=""6""
GOEXE=""""
GOGCCFLAGS=""-g -O2 -fPIC -m64 -pthread""
GOHOSTARCH=""amd64""
GOHOSTOS=""linux""
GOOS=""linux""
GOPATH=""/data/apps/go""
GOROOT=""/usr/local/go""
GOTOOLDIR=""/usr/local/go/pkg/tool/linux_amd64""
CGO_ENABLED=""1""
",284
28,15674709,"package main

import (
    ""bytes""
    ""database/sql""
    ""flag""
    ""fmt""
    _ ""github.com/Go-SQL-Driver/MySQL""
    ""ijinshan.com/cfg""
    ""log""
    ""net""
    ""net/http""
    ""net/smtp""
    ""os""
    ""strconv""
    ""strings""
    ""sync""
    ""time""
)

var (
    Log           *log.Logger
    Conf          cfg.KVConfig
    Debug         bool
    CpuCore       int
    HttpTransport = &http.Transport{
        Dial: func(netw, addr string) (net.Conn, error) {
            deadline := time.Now().Add(30 * time.Second)
            c, err := net.DialTimeout(netw, addr, 20*time.Second)
            if err != nil {
                return nil, err
            }

            c.SetDeadline(deadline)
            return c, nil
        },
        DisableKeepAlives: true,
    }
    HttpClient = &http.Client{
        Transport: HttpTransport,
    }
    WG            sync.WaitGroup
)

const (
    LogFileFlag   = os.O_WRONLY | os.O_CREATE | os.O_APPEND
    LogFileMode   = 0644
    LogFlag       = log.LstdFlags | log.Lshortfile
    GET_VIDEO_SQL = `SELECT B.Name, A.TSID, A.Chapter, A.ChapterNum, 
    IFNULL(A.Website, ''), IFNULL(A.Descr, ''), 
    IFNULL(A.VideoId, ''), IFNULL(AndroidWebURL, ''), IFNULL(IOSWebURL, ''), 
    IFNULL(AndroidURL, ''), IFNULL(AndroidURL2, ''), IFNULL(IOSURL, '')
    FROM Video A INNER JOIN TVS B ON A.TSID = B.ID LIMIT 200`

    HtmlHead = `节目名
    tsid章节章节号描述
    videoid网站地址`
    HtmlTail = """"
)

type videoInfo struct {
    name          string
    tsid          uint
    chapter       string
    chapterNum    uint
    descr         string
    videoId       string
    website       string
    androidWebUrl string
    iosWebUrl     string
    androidUrl    string
    androidUrl2   string
    iosUrl        string
}

func init() {
    var (
        confFile string
        err      error
    )

    // parse command argument:w
    flag.StringVar(&confFile, ""c"", ""./vsmonitor.conf"", "" set config file path"")
    flag.Parse()
    // read config
    if Conf, err = cfg.Read(confFile); err != nil {
        panic(fmt.Sprintf(""Read config file \""%s\"" failed (%s)"",
            confFile, err.Error()))
    }
    // open log file
    file, err := os.OpenFile(Conf[""log.file""], LogFileFlag, LogFileMode)
    if err != nil {
        panic(fmt.Sprintf(""OpenFile \""%s\"" failed (%s)"", Conf[""log.file""],
            err.Error()))
    }
    // init LOG
    Log = log.New(file, """", LogFlag)
    Debug = false
    i, err := strconv.ParseInt(Conf[""cpucore.num""], 10, 32)
    if err != nil {
        panic(fmt.Sprintf(""ParseInt \""%s\"" failed (%s)"", Conf[""cpucore.num""],
            err.Error()))
    }

    CpuCore = int(i)
}

func getHttpStatusCode(url string) int {
    if url == """" {
        return 200
    }

    req, err := http.NewRequest(""GET"", url, nil)
    if err != nil {
        return 0
    }

    req.Header.Add(""User-Agent"", ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.57 Safari/537.17"")
    req.Header.Add(""Connection"", ""close"")
    resp, err := HttpClient.Do(req)
    if err != nil {
        return 0
    }

    defer resp.Body.Close()
    return resp.StatusCode
}

func sendMail(host, user, pwd, from, to, subject, body, mailType string) error {
    auth := smtp.PlainAuth("""", user, pwd, strings.Split(host, "":"")[0])
    cntType := fmt.Sprintf(""Content-Type: text/%s;charset=UTF-8"", mailType)
    msg := fmt.Sprintf(""To: %s\r\nFrom: %s\r\nSubject: %s\r\n%s\r\n\r\n%s"",
        to, from, user, subject, cntType, body)

    return smtp.SendMail(host, auth, user, strings.Split(to, "",""), []byte(msg))
}

func getVideos(videoChan chan *videoInfo, htmlBuf *bytes.Buffer) error {
    defer HttpTransport.CloseIdleConnections()
    db, err := sql.Open(""mysql"", Conf[""weikan.mysql""])
    if err != nil {
        return err
    }

    rows, err := db.Query(GET_VIDEO_SQL)
    if err != nil {
        db.Close()
        return err
    }

    for rows.Next() {
        video := &videoInfo{}
        err = rows.Scan(&video.name, &video.tsid, &video.chapter,
            &video.chapterNum,
            &video.website, &video.descr, &video.videoId, &video.androidWebUrl,
            &video.iosWebUrl, &video.androidUrl, &video.androidUrl2,
            &video.iosUrl)
        if err != nil {
            db.Close()
            return err
        }

        videoChan <- video
        WG.Add(1)
    }

    db.Close()
    // wait check url finish
    WG.Wait()
    // send mail
    for {
        if htmlBuf.Len() == 0 {
            Log.Print(""no error found!!!!!!!!"")
            break
        }

        Log.Print(""found error !!!!!!!!"")
        /*
        err := sendMail(""smtp.gmail.com:587"", ""xxxx"",
            ""xxx"", ""xxx "",
            Conf[""mail.to""], ""xxxxx"",
            HtmlHead+htmlBuf.String()+HtmlTail, ""html"")
        if err != nil {
            Log.Printf(""sendMail failed (%s)"", err.Error())
            time.Sleep(10 * time.Second)
            continue
        }
        */

        Log.Print(""send mail"")
        break
    }

    Log.Print(""reset buf"")
    htmlBuf.Reset()
    return nil
}

func checkUrl(videoChan chan *videoInfo, errChan chan string) {
    defer func() {
        if err := recover(); err != nil {
            Log.Print(""rouintes failed : "", err)
        }
    }()

    for {
        video := <-videoChan
        ok := true
        errUrl := """"

        if code := getHttpStatusCode(video.androidWebUrl); code >= 400 {
            errUrl += fmt.Sprintf(""%s (%d)"",
                video.androidWebUrl, code)
            ok = false
        }

        if code := getHttpStatusCode(video.iosWebUrl); code >= 400 {
            errUrl += fmt.Sprintf(""%s (%d)"",
                video.iosWebUrl, code)
            ok = false
        }

        if code := getHttpStatusCode(video.androidUrl); code >= 400 {
            errUrl += fmt.Sprintf(""%s (%d)"",
                video.androidUrl, code)
            ok = false
        }

        if code := getHttpStatusCode(video.androidUrl2); code >= 400 {
            errUrl += fmt.Sprintf(""%s (%d)"",
                video.androidUrl2, code)
            ok = false
        }

        if code := getHttpStatusCode(video.iosUrl); code >= 400 {
            errUrl += fmt.Sprintf(""%s (%d)"",
                video.iosUrl, code)
            ok = false
        }

        if !ok {
            errChan %s%d%s
            %d%s%s%s%s`,
                video.name, video.tsid, video.chapter, video.chapterNum,
                video.descr, video.videoId,
                video.website, errUrl)
            Log.Printf(""\""%s\"" (%s) —— \""%s\"" checkurl err"", video.name,
                video.chapter, video.descr)
        } else {
            Log.Printf(""\""%s\"" (%s) —— \""%s\"" checkurl ok"", video.name,
                video.chapter, video.descr)
            WG.Done()
        }
    }
}

func mergeErr(errChan chan string, htmlBuf *bytes.Buffer) {
    defer func() {
        if err := recover(); err != nil {
            Log.Print(""rouintes failed : "", err)
        }
    }()

    for {
        html := <-errChan
        _, err := htmlBuf.WriteString(html)
        if err != nil {
            Log.Printf(""htmlBuf WriteString \""%s\"" failed (%s)"", html,
                err.Error())
            panic(err)
        }

        WG.Done()
    }
}

func main() {
    videoChan := make(chan *videoInfo, 100000)
    errChan := make(chan string, 100000)
    htmlBuf := &bytes.Buffer{}
    defer func() {
        if err := recover(); err != nil {
            Log.Print(""rouintes failed : "", err)
        }
    }()

    // check url
    for i := 0; i < CpuCore; i++ {
        go checkUrl(videoChan, errChan)
    }
    // merge error string then send mail
    go mergeErr(errChan, htmlBuf)

    for {
        // get Video and LiveSrc video source
        if err := getVideos(videoChan, htmlBuf); err != nil {
            Log.Printf(""getVideos failed (%s)"", err.Error())
            time.Sleep(10 * time.Second)
            continue
        }

        // time.Sleep(1 * time.Hour)
    }

    Log.Print(""exit..."")
}
",8026
29,15674709,funcs,5
30,15674709,"PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                                                                      
6451 root      20   0 3946m 115m 2808 S  0.7  0.2   6:11.20 vsmonitor
",255
31,15674709,"(pprof) top
Total: 10.8 MB
2.3  21.2%  21.2%      2.3  21.2% main.main
2.0  18.5%  39.8%      2.0  18.5% bufio.NewWriterSize
1.5  13.9%  53.7%      1.5  13.9% bufio.NewReaderSize
1.5  13.9%  67.6%      1.5  13.9% compress/flate.NewReader
0.5   4.6%  72.2%      0.5   4.6% net.newFD
0.5   4.6%  76.8%      0.5   4.6% net.sockaddrToTCP
0.5   4.6%  81.5%      4.5  41.7% net/http.(*Transport).getConn
0.5   4.6%  86.1%      2.5  23.2% net/http.(*persistConn).readLoop
0.5   4.6%  90.7%      0.5   4.6% net/textproto.(*Reader).ReadMIMEHeader
0.5   4.6%  95.4%      0.5   4.6% net/url.(*URL).ResolveReference
",604
32,15794113,bufio.Scanner,13
33,15794113,"package main

import (
    ""bufio""
    ""bytes""
    ""encoding/binary""
    ""fmt""
    ""os""
    ""runtime""
    ""unicode/utf16""
    ""unicode/utf8""
)

// UTF16BytesToString converts UTF-16 encoded bytes, in big or little endian byte order,
// to a UTF-8 encoded string.
func UTF16BytesToString(b []byte, o binary.ByteOrder) string {
    utf := make([]uint16, (len(b)+(2-1))/2)
    for i := 0; i+(2-1) < len(b); i += 2 {
        utf[i/2] = o.Uint16(b[i:])
    }
    if len(b)/2 < len(utf) {
        utf[len(utf)-1] = utf8.RuneError
    }
    return string(utf16.Decode(utf))
}

// UTF-16 endian byte order
const (
    unknownEndian = iota
    bigEndian
    littleEndian
)

// dropCREndian drops a terminal \r from the endian data.
func dropCREndian(data []byte, t1, t2 byte) []byte {
    if len(data) > 1 {
        if data[len(data)-2] == t1 && data[len(data)-1] == t2 {
            return data[0 : len(data)-2]
        }
    }
    return data
}

// dropCRBE drops a terminal \r from the big endian data.
func dropCRBE(data []byte) []byte {
    return dropCREndian(data, '\x00', '\r')
}

// dropCRLE drops a terminal \r from the little endian data.
func dropCRLE(data []byte) []byte {
    return dropCREndian(data, '\r', '\x00')
}

// dropCR drops a terminal \r from the data.
func dropCR(data []byte) ([]byte, int) {
    var endian = unknownEndian
    switch ld := len(data); {
    case ld != len(dropCRLE(data)):
        endian = littleEndian
    case ld != len(dropCRBE(data)):
        endian = bigEndian
    }
    return data, endian
}

// SplitFunc is a split function for a Scanner that returns each line of
// text, stripped of any trailing end-of-line marker. The returned line may
// be empty. The end-of-line marker is one optional carriage return followed
// by one mandatory newline. In regular expression notation, it is `\r?\n`.
// The last non-empty line of input will be returned even if it has no
// newline.
func ScanUTF16LinesFunc(byteOrder binary.ByteOrder) (bufio.SplitFunc, func() binary.ByteOrder) {

    // Function closure variables
    var endian = unknownEndian
    switch byteOrder {
    case binary.BigEndian:
        endian = bigEndian
    case binary.LittleEndian:
        endian = littleEndian
    }
    const bom = 0xFEFF
    var checkBOM bool = endian == unknownEndian

    // Scanner split function
    splitFunc := func(data []byte, atEOF bool) (advance int, token []byte, err error) {

        if atEOF && len(data) == 0 {
            return 0, nil, nil
        }

        if checkBOM {
            checkBOM = false
            if len(data) > 1 {
                switch uint16(bom) {
                case uint16(data[0])<<8 | uint16(data[1]):
                    endian = bigEndian
                    return 2, nil, nil
                case uint16(data[1])<<8 | uint16(data[0]):
                    endian = littleEndian
                    return 2, nil, nil
                }
            }
        }

        // Scan for newline-terminated lines.
        i := 0
        for {
            j := bytes.IndexByte(data[i:], '\n')
            if j < 0 {
                break
            }
            i += j
            switch e := i % 2; e {
            case 1: // UTF-16BE
                if endian != littleEndian {
                    if i > 1 {
                        if data[i-1] == '\x00' {
                            endian = bigEndian
                            // We have a full newline-terminated line.
                            return i + 1, dropCRBE(data[0 : i-1]), nil
                        }
                    }
                }
            case 0: // UTF-16LE
                if endian != bigEndian {
                    if i+1 < len(data) {
                        i++
                        if data[i] == '\x00' {
                            endian = littleEndian
                            // We have a full newline-terminated line.
                            return i + 1, dropCRLE(data[0 : i-1]), nil
                        }
                    }
                }
            }
            i++
        }

        // If we're at EOF, we have a final, non-terminated line. Return it.
        if atEOF {
            // drop CR.
            advance = len(data)
            switch endian {
            case bigEndian:
                data = dropCRBE(data)
            case littleEndian:
                data = dropCRLE(data)
            default:
                data, endian = dropCR(data)
            }
            if endian == unknownEndian {
                if runtime.GOOS == ""windows"" {
                    endian = littleEndian
                } else {
                    endian = bigEndian
                }
            }
            return advance, data, nil
        }

        // Request more data.
        return 0, nil, nil
    }

    // Endian byte order function
    orderFunc := func() (byteOrder binary.ByteOrder) {
        switch endian {
        case bigEndian:
            byteOrder = binary.BigEndian
        case littleEndian:
            byteOrder = binary.LittleEndian
        }
        return byteOrder
    }

    return splitFunc, orderFunc
}

func main() {
    file, err := os.Open(""utf16.le.txt"")
    if err != nil {
        fmt.Println(err)
        os.Exit(1)
    }
    defer file.Close()
    fmt.Println(file.Name())

    rdr := bufio.NewReader(file)
    scanner := bufio.NewScanner(rdr)
    var bo binary.ByteOrder // unknown, infer from data
    // bo = binary.LittleEndian // windows
    splitFunc, orderFunc := ScanUTF16LinesFunc(bo)
    scanner.Split(splitFunc)

    for scanner.Scan() {
        b := scanner.Bytes()
        s := UTF16BytesToString(b, orderFunc())
        fmt.Println(len(s), s)
        fmt.Println(len(b), b)
    }
    fmt.Println(orderFunc())

    if err := scanner.Err(); err != nil {
        fmt.Println(err)
    }
}
",5831
34,15794113,"utf16.le.txt
15 ""Hello, 世界""
22 [34 0 72 0 101 0 108 0 108 0 111 0 44 0 32 0 22 78 76 117 34 0]
0 
0 []
15 ""Hello, 世界""
22 [34 0 72 0 101 0 108 0 108 0 111 0 44 0 32 0 22 78 76 117 34 0]
LittleEndian

utf16.be.txt
15 ""Hello, 世界""
22 [0 34 0 72 0 101 0 108 0 108 0 111 0 44 0 32 78 22 117 76 0 34]
0 
0 []
15 ""Hello, 世界""
22 [0 34 0 72 0 101 0 108 0 108 0 111 0 44 0 32 78 22 117 76 0 34]
BigEndian
",394
35,17328798,"cc1: warnings being treated as errors
mgodbc.go: In function 'mSQLColAttribute':
mgodbc.go:31: warning: 'SQLColAttributeW' is deprecated (declared at /usr/include/sqlucode.h:128)
mgodbc.go: At top level:
mgodbc.go:44: warning: 'SQLDisconnect' is deprecated (declared at /usr/include/sql.h:896)
mgodbc.go:51: warning: 'SQLGetDiagRecW' is deprecated (declared at /usr/include/sqlucode.h:233)
mgodbc.go:62: warning: 'SQLGetInfoW' is deprecated (declared at /usr/include/sqlucode.h:273)
mgodbc.go:67: warning: 'SQLBindParameter' is deprecated (declared at /usr/include/sqlext.h:2519)
mgodbc.go:70: warning: 'SQLDriverConnectW' is deprecated (declared at /usr/include/sqlucode.h:336)
mgodbc.go:73: warning: 'SQLSetEnvAttr' is deprecated (declared at /usr/include/sql.h:1120)
mgodbc.go:74: warning: 'SQLFreeHandle' is deprecated (declared at /usr/include/sql.h:942)
mgodbc.go:75: warning: 'SQLSetConnectAttrW' is deprecated (declared at /usr/include/sqlucode.h:245)
mgodbc.go:78: warning: 'SQLGetDiagFieldW' is deprecated (declared at /usr/include/sqlucode.h:223)
mgodbc.go:82: warning: 'SQLRowCount' is deprecated (declared at /usr/include/sql.h:1076)
mgodbc.go:98: warning: 'SQLGetData' is deprecated (declared at /usr/include/sql.h:975)
mgodbc.go:99: warning: 'SQLEndTran' is deprecated (declared at /usr/include/sql.h:902)
mgodbc.go:102: warning: 'SQLCloseCursor' is deprecated (declared at /usr/include/sql.h:831)
mgodbc.go:103: warning: 'SQLPrepareW' is deprecated (declared at /usr/include/sqlucode.h:239)
mgodbc.go:107: warning: 'SQLNumResultCols' is deprecated (declared at /usr/include/sql.h:1058)
mgodbc.go:113: warning: 'SQLAllocHandle' is deprecated (declared at /usr/include/sql.h:799)
mgodbc.go:114: warning: 'SQLExecute' is deprecated (declared at /usr/include/sql.h:921)
mgodbc.go:115: warning: 'SQLFetch' is deprecated (declared at /usr/include/sql.h:924)
mgodbc.go:119: warning: 'SQLNumParams' is deprecated (declared at /usr/include/sqlext.h:2448)
",1962
36,17328798,"#pragma GCC diagnostic ignored ""-Wdeprecated-declarations""  
",61
37,17328798,"#cgo darwin CFLAGS: -I/opt/local/include 
",42
38,17328798,"# code.google.com/p/odbc/api
api/api.go:13: undefined: SQLSMALLINT  
api/api.go:14: undefined: SQLUSMALLINT  
api/api.go:15: undefined: SQLUSMALLINT  
api/api.go:19: undefined: SQLSMALLINT  
api/api.go:20: undefined: SQLUSMALLINT  
api/api.go:21: undefined: SQLUSMALLINT  
api/api.go:22: undefined: SQLUSMALLINT  
api/api.go:23: undefined: SQLUSMALLINT  
api/api.go:24: undefined: SQLUSMALLINT  
api/api.go:25: undefined: SQLUINTEGER  
api/api.go:25: too many errors  
",469
39,17328798,cgo,3
40,17328798,api_unix.go,11
41,17328798,"// Copyright 2012 The Go Authors. All rights reserved.  
// Use of this source code is governed by a BSD-style  
// license that can be found in the LICENSE file.  

// +build linux darwin  
// +build cgo  

package api  

// #cgo linux LDFLAGS: -lodbc  
// #cgo darwin LDFLAGS: -lodbc  
// #cgo darwin CFLAGS: -I /opt/local/include  
// #include   
// #include   
import ""C""  
",378
42,17328798,-I /opt/local/include,21
43,17328798,# go build -x,13
44,17328798,"WORK=/var/folders/z2/k9vxn7gn6395vb3y2qc7_1040000gn/T/go-build784364461  
mkdir -p $WORK/code.google.com/p/odbc/api/_obj/  
mkdir -p $WORK/code.google.com/p/odbc/  
cd /Users/jr/Development/go/src/code.google.com/p/odbc/api  
/usr/local/go/pkg/tool/darwin_amd64/cgo -objdir $WORK/code.google.com/p/odbc/api/_obj/ -- -I /opt/local/include -I $WORK/code.google.com/p/odbc/api/_obj/ api_unix.go  
/usr/local/go/pkg/tool/darwin_amd64/6c -F -V -w -I $WORK/code.google.com/p/odbc/api/_obj/ -I /usr/local/go/pkg/darwin_amd64 -o $WORK/code.google.com/p/odbc/api/_obj/_cgo_defun.6 -D GOOS_darwin -D GOARCH_amd64 $WORK/code.google.com/p/odbc/api/_obj/_cgo_defun.c  
gcc -I . -g -O2 -fPIC -m64 -pthread -fno-common -print-libgcc-file-name
gcc -I . -g -O2 -fPIC -m64 -pthread -fno-common -I /opt/local/include -I $WORK/code.google.com/p/odbc/api/_obj/ -o $WORK/code.google.com/p/odbc/api/_obj/_cgo_main.o -c $WORK/code.google.com/p/odbc/api/_obj/_cgo_main.c  
gcc -I . -g -O2 -fPIC -m64 -pthread -fno-common -I /opt/local/include -I $WORK/code.google.com/p/odbc/api/_obj/ -o $WORK/code.google.com/p/odbc/api/_obj/_cgo_export.o -c $WORK/code.google.com/p/odbc/api/_obj/_cgo_export.c  
gcc -I . -g -O2 -fPIC -m64 -pthread -fno-common -I /opt/local/include -I $WORK/code.google.com/p/odbc/api/_obj/ -o $WORK/code.google.com/p/odbc/api/_obj/api_unix.cgo2.o -c $WORK/code.google.com/p/odbc/api/_obj/api_unix.cgo2.c  
gcc -I . -g -O2 -fPIC -m64 -pthread -fno-common -o $WORK/code.google.com/p/odbc/api/_obj/_cgo_.o $WORK/code.google.com/p/odbc/api/_obj/_cgo_main.o $WORK/code.google.com/p/odbc/api/_obj/_cgo_export.o $WORK/code.google.com/p/odbc/api/_obj/api_unix.cgo2.o -lodbc
/usr/local/go/pkg/tool/darwin_amd64/cgo -objdir $WORK/code.google.com/p/odbc/api/_obj/ -dynimport $WORK/code.google.com/p/odbc/api/_obj/_cgo_.o -dynout $WORK/code.google.com/p/odbc/api/_obj/_cgo_import.c  
/usr/local/go/pkg/tool/darwin_amd64/6c -F -V -w -I $WORK/code.google.com/p/odbc/api/_obj/ -I /usr/local/go/pkg/darwin_amd64 -o $WORK/code.google.com/p/odbc/api/_obj/_cgo_import.6 -D GOOS_darwin -D GOARCH_amd64 $WORK/code.google.com/p/odbc/api/_obj/_cgo_import.c  
gcc -I . -g -O2 -fPIC -m64 -pthread -fno-common -o $WORK/code.google.com/p/odbc/api/_obj/_all.o $WORK/code.google.com/p/odbc/api/_obj/_cgo_export.o $WORK/code.google.com/p/odbc/api/_obj/api_unix.cgo2.o -Wl,-r -nostdlib /usr/llvm-gcc-4.2/bin/../lib/gcc/i686-apple-darwin11/4.2.1/x86_64/libgcc.a  
/usr/local/go/pkg/tool/darwin_amd64/6g -o $WORK/code.google.com/p/odbc/api/_obj/_go_.6 -p code.google.com/p/odbc/api -D _/Users/jr/Development/go/src/code.google.com/p/odbc/api -I $WORK ./api.go $WORK/code.google.com/p/odbc/api/_obj/_cgo_gotypes.go $WORK/code.google.com/p/odbc/api/_obj/api_unix.cgo1.go  
/usr/local/go/pkg/tool/darwin_amd64/pack grcP $WORK $WORK/code.google.com/p/odbc/api.a $WORK/code.google.com/p/odbc/api/_obj/_go_.6 $WORK/code.google.com/p/odbc/api/_obj/_cgo_import.6 $WORK/code.google.com/p/odbc/api/_obj/_cgo_defun.6 $WORK/code.google.com/p/odbc/api/_obj/_all.o  
mkdir -p $WORK/code.google.com/p/odbc/_obj/  
mkdir -p $WORK/code.google.com/p/  
cd /Users/jr/Development/go/src/code.google.com/p/odbc  
/usr/local/go/pkg/tool/darwin_amd64/6g -o $WORK/code.google.com/p/odbc/_obj/_go_.6 -p code.google.com/p/odbc -complete -D _/Users/jr/Development/go/src/code.google.com/p/odbc -I $WORK -I /Users/jr/Development/go/pkg/darwin_amd64 ./column.go ./conn.go ./driver.go ./error.go ./handle.go ./odbcstmt.go ./param.go ./result.go ./rows.go ./stats.go ./stmt.go ./tx.go  
# code.google.com/p/odbc  
./column.go:22: undefined: api.SQLGetData  
./column.go:28: undefined: api.SQLBindCol  
./column.go:47: undefined: api.SQLDescribeCol  
./conn.go:20: undefined: api.SQLAllocHandle  
./conn.go:28: undefined: api.SQLDriverConnect  
./conn.go:39: undefined: api.SQLDisconnect  
./driver.go:26: undefined: api.SQLAllocHandle  
./driver.go:34: undefined: api.SQLSetEnvAttr  
./driver.go:43: undefined: api.SQLSetEnvAttr  
./driver.go:50: undefined: api.SQLSetEnvAttr  
./driver.go:50: too many errors  
",4042
45,17328798,SQLGetData,10
46,17328798,//sys  SQLGetData...,20
47,17328798,api.go,6
48,17328798,/opt/local/include/sql.h,24
49,18817336,"package client                                                                                                                                                                                              
import (                                                                                                                                                                                                    
    ""encoding/base64""                                                                                                                                                                                       
    ""crypto/aes""                                                                                                                                                                                            
    ""crypto/cipher""                                                                                                                                                                                         
    ""fmt""                                                                                                                                                                                                   
) 

var iv = []byte{34, 35, 35, 57, 68, 4, 35, 36, 7, 8, 35, 23, 35, 86, 35, 23}

func encodeBase64(b []byte) string {                                                                                                                                                                        
    return base64.StdEncoding.EncodeToString(b)                                                                                                                                                             
}                                                                                                                                                                                                           

func decodeBase64(s string) []byte {                                                                                                                                                                        
    data, err := base64.StdEncoding.DecodeString(s)                                                                                                                                                         
    if err != nil { panic(err) }                                                                                                                                                                            
    return data                                                                                                                                                                                             
}                                                                                                                                                                                                           

func Encrypt(key, text string) string {                                                                                                                                                                     
    block, err := aes.NewCipher([]byte(key))                                                                                                                                                                
    if err != nil { panic(err) }                                                                                                                                                                            
    plaintext := []byte(text)                                                                                                                                                                               
    cfb := cipher.NewCFBEncrypter(block, iv)                                                                                                                                                                
    ciphertext := make([]byte, len(plaintext))                                                                                                                                                              
    cfb.XORKeyStream(ciphertext, plaintext)                                                                                                                                                                 
    return encodeBase64(ciphertext)                                                                                                                                                                         
}                                                                                                                                                                                                           

func Decrypt(key, text string) string {                                                                                                                                                                     
    block, err := aes.NewCipher([]byte(key))                                                                                                                                                                
    if err != nil { panic(err) }                                                                                                                                                                            
    ciphertext := decodeBase64(text)                                                                                                                                                                        
    cfb := cipher.NewCFBEncrypter(block, iv)                                                                                                                                                                
    plaintext := make([]byte, len(ciphertext))                                                                                                                                                              
    cfb.XORKeyStream(plaintext, ciphertext)                                                                                                                                                                 
}                          
",6263
50,20156775,"{
""RelatedTopics"" : [
      {
         ""Result"" : ""Criticism of Google - Criticism of Google includes possible misuse and manipulation of search results, its use of others' intellectual property, concerns that its compilation of data may violate people's privacy, cen..."",
         ""Icon"" : {
            ""URL"" : """",
            ""Height"" : """",
            ""Width"" : """"
         },
         ""FirstURL"" : ""http://duckduckgo.com/Criticism_of_Google"",
         ""Text"" : ""Criticism of Google - Criticism of Google includes possible misuse and manipulation of search results, its use of others' intellectual property, concerns that its compilation of data may violate people's privacy, cen...""
      },
      {
         ""Result"" : ""PRISM - PRISM is a clandestine mass electronic surveillance data mining program known to have been operated by the United States National Security Agency (NSA) since 2007."",
         ""Icon"" : {
            ""URL"" : """",
            ""Height"" : """",
            ""Width"" : """"
         },
         ""FirstURL"" : ""http://duckduckgo.com/PRISM_(surveillance_program)"",
         ""Text"" : ""PRISM - PRISM is a clandestine mass electronic surveillance data mining program known to have been operated by the United States National Security Agency (NSA) since 2007.""
      },
      {
         ""Result"" : ""Google Panda - Google Panda is a change to Google's search results ranking algorithm that was first released in February 2011."",
         ""Icon"" : {
            ""URL"" : """",
            ""Height"" : """",
            ""Width"" : """"
         },
         ""FirstURL"" : ""http://duckduckgo.com/Google_Panda"",
         ""Text"" : ""Google Panda - Google Panda is a change to Google's search results ranking algorithm that was first released in February 2011.""
      },
      {
         ""Result"" : ""Google Penguin - Google Penguin is a code name for a Google algorithm update that was first announced on April 24, 2012."",
         ""Icon"" : {
            ""URL"" : """",
            ""Height"" : """",
            ""Width"" : """"
         },
         ""FirstURL"" : ""http://duckduckgo.com/Google_Penguin"",
         ""Text"" : ""Google Penguin - Google Penguin is a code name for a Google algorithm update that was first announced on April 24, 2012.""
      },
      {
         ""Result"" : ""Google search features - The Google search features include more than 40 options or keywords to modify the type of search."",
         ""Icon"" : {
            ""URL"" : """",
            ""Height"" : """",
            ""Width"" : """"
         },
         ""FirstURL"" : ""http://duckduckgo.com/Google_search_features"",
         ""Text"" : ""Google search features - The Google search features include more than 40 options or keywords to modify the type of search.""
      },
      {
         ""Result"" : ""Google Searchology - Google Searchology 2009 witnessed several novel changes in the Google search options."",
         ""Icon"" : {
            ""URL"" : """",
            ""Height"" : """",
            ""Width"" : """"
         },
         ""FirstURL"" : ""http://duckduckgo.com/Google_Searchology"",
         ""Text"" : ""Google Searchology - Google Searchology 2009 witnessed several novel changes in the Google search options.""
      },
      {
         ""Result"" : ""Multilingual websites"",
         ""Icon"" : {
            ""URL"" : """",
            ""Height"" : """",
            ""Width"" : """"
         },
         ""FirstURL"" : ""http://duckduckgo.com/c/Multilingual_websites"",
         ""Text"" : ""Multilingual websites""
      },
      {
         ""Result"" : ""Google services"",
         ""Icon"" : {
            ""URL"" : """",
            ""Height"" : """",
            ""Width"" : """"
         },
         ""FirstURL"" : ""http://duckduckgo.com/c/Google_services"",
         ""Text"" : ""Google services""
      },
      {
         ""Result"" : ""Internet search engines"",
         ""Icon"" : {
            ""URL"" : """",
            ""Height"" : """",
            ""Width"" : """"
         },
         ""FirstURL"" : ""http://duckduckgo.com/c/Internet_search_engines"",
         ""Text"" : ""Internet search engines""
      },
      {
         ""Result"" : ""American websites"",
         ""Icon"" : {
            ""URL"" : """",
            ""Height"" : """",
            ""Width"" : """"
         },
         ""FirstURL"" : ""http://duckduckgo.com/c/American_websites"",
         ""Text"" : ""American websites""
      }
   ]
}
",4285
51,20156775,"{
""RelatedTopics"" : [
      {
         ""Result"" : ""Doctor Who is the title of a long-running British science fiction series."",
         ""Icon"" : {
            ""URL"" : ""https://i.duckduckgo.com/i/www.bbc.co.uk.ico"",
            ""Height"" : 16,
            ""Width"" : 16
         },
         ""FirstURL"" : ""http://duckduckgo.com/Doctor_Who"",
         ""Text"" : ""Doctor Who is the title of a long-running British science fiction series.""
      },
      {
         ""Result"" : ""Doctor (Doctor Who), the main character in the British television series"",
         ""Icon"" : {
            ""URL"" : ""https://i.duckduckgo.com/i/e32c2703.jpg"",
            ""Height"" : """",
            ""Width"" : """"
         },
         ""FirstURL"" : ""http://duckduckgo.com/Doctor_(Doctor_Who)"",
         ""Text"" : ""Doctor (Doctor Who), the main character in the British television series""
      },
      {
         ""Result"" : ""Doctor Who theme music, the theme music created for the television series, and has changed many times over the 50 years it has been running."",
         ""Icon"" : {
            ""URL"" : """",
            ""Height"" : """",
            ""Width"" : """"
         },
         ""FirstURL"" : ""http://duckduckgo.com/Doctor_Who_theme_music"",
         ""Text"" : ""Doctor Who theme music, the theme music created for the television series, and has changed many times over the 50 years it has been running.""
      },
      {
         ""Topics"" : [
            {
               ""Result"" : ""Doctor Who (film), the television movie starring Paul McGann, based on the television series"",
               ""Icon"" : {
                  ""URL"" : """",
                  ""Height"" : """",
                  ""Width"" : """"
               },
               ""FirstURL"" : ""http://duckduckgo.com/Doctor_Who_(film)"",
               ""Text"" : ""Doctor Who (film), the television movie starring Paul McGann, based on the television series""
            },
            {
               ""Result"" : ""Dr. Who (Dalek films), the human character played by Peter Cushing in two films based on the television series"",
               ""Icon"" : {
                  ""URL"" : ""https://i.duckduckgo.com/i/9f10647e.jpg"",
                  ""Height"" : """",
                  ""Width"" : """"
               },
               ""FirstURL"" : ""http://duckduckgo.com/Dr._Who_(Dalek_films)"",
               ""Text"" : ""Dr. Who (Dalek films), the human character played by Peter Cushing in two films based on the television series""
            },
            {
               ""Result"" : ""Doctor Who (pinball), pinball machine based on the television series"",
               ""Icon"" : {
                  ""URL"" : ""https://i.duckduckgo.com/i/eee6de34.jpg"",
                  ""Height"" : """",
                  ""Width"" : """"
               },
               ""FirstURL"" : ""http://duckduckgo.com/Doctor_Who_(pinball)"",
               ""Text"" : ""Doctor Who (pinball), pinball machine based on the television series""
            },
            {
               ""Result"" : ""Doctor Who theme music, the theme music created for the television series, and has changed many times over the 50 years it has been running."",
               ""Icon"" : {
                  ""URL"" : """",
                  ""Height"" : """",
                  ""Width"" : """"
               },
               ""FirstURL"" : ""http://duckduckgo.com/Doctor_Who_theme_music"",
               ""Text"" : ""Doctor Who theme music, the theme music created for the television series, and has changed many times over the 50 years it has been running.""
            },
            {
               ""Result"" : ""\""Doctor Who\"" (CSI), the 22nd episode of the 10th season of CSI: Crime Scene Investigation"",
               ""Icon"" : {
                  ""URL"" : """",
                  ""Height"" : """",
                  ""Width"" : """"
               },
               ""FirstURL"" : ""http://duckduckgo.com/Doctor_Who_(CSI)"",
               ""Text"" : ""\""Doctor Who\"" (CSI), the 22nd episode of the 10th season of CSI: Crime Scene Investigation""
            }
         ],
         ""Name"" : ""In media and entertainment""
      },
      {
         ""Topics"" : [
            {
               ""Result"" : ""Neoregelia 'Dr. Who', a hybrid cultivar of the genus Neoregelia in the Bromeliad family"",
               ""Icon"" : {
                  ""URL"" : """",
                  ""Height"" : """",
                  ""Width"" : """"
               },
               ""FirstURL"" : ""http://duckduckgo.com/Neoregelia_'Dr._Who'"",
               ""Text"" : ""Neoregelia 'Dr. Who', a hybrid cultivar of the genus Neoregelia in the Bromeliad family""
            }
         ],
         ""Name"" : ""In other uses""
      }
   ]
}
",4605
52,20156775,json.Unmarshal,14
53,21830447,"    package main

    import (
        ""encoding/json""

    )

    type LocationReadable struct {
        District string
        City     string
        State    string
    }

    type Locale struct {
        Location         string
        CountryCode      string
        CurrencyId       string
        CurrencySymbol   string
        LocationReadable LocationReadable
    }

    type Media struct {
        Image string
        Video string
    }

    type Variations struct {
        FixedPrice float64
        Media      Media
        Quantity   int
    }

    type PaymentData struct {
        PaymentName    string
        PaymentService string
    }

    type Payment struct {
        Online  PaymentData
        Offline PaymentData
    }

    type Shipping struct {
        ShippingService        string
        ShippingName           string
        ShippingCost           float64
        HandlingTimeMax        int
        DispatchTimeMin        int
        DispatchTimeMax        int
        ShippingAdditionalCost int
    }
    type Item []struct {
        _version    string
        CategoryId  string
        Title       string
        Media       Media
        SellerId    string
        Locale      Locale
        ListingType string
        Payment     Payment
        StartTime   string
        EndTime     string
        Shipping    Shipping
        TitleSlug   string
        Variations  Variations
        _fpaiStatus string
    }
    func main(){
     itemInfoR := `{""locale"":{""location"":""51.51121389999999,-0.11982439999997041"",""countryCode"":""GB"",""currencyId"":""GBP"",""currencySymbol"":""Â£"",""locationReadable"":{""district"":""City of Westminster"",""city"":""London"",""state"":""Greater London""}},""_version"":""serving"",""categoryId"":[""Root"",""Cameras \u0026 Photo"",""Digital Cameras""],""title"":""many pictures"",""media"":{""image"":[""//lh5.ggpht.com/O_o_N6CFkClY5AV0-LqntpyFjor7Of4u23ZcK7lYwc2uY1ea7GWi61VDJZCB7UCb79svkjKPHIenqwEUhjHi0jdIQnnl6z_p03yktPUB1FBHezIQ"",""//lh6.ggpht.com/ih3q2d7CenGLPyupH9FpfsoJQWQpw1i8wWA2Kd26bFnSF2fbnKyGU9WePIhCgEeqw5p6YMVmFi1c9oS0Ag93aF_oZ3ZiwK7fQuSYIrZ9VhgXbrTHkw"",""//lh6.ggpht.com/7RJRsapsnwWL3_KiLIjMz4QojDzUvsztXtvKTFvIfde_AHccDnOibAvXRN73tTB4SeHzlj8S1LWxbYwwWFGn9elfCKdSb8BUIU5QJY1LO791HutQ"",""//lh6.ggpht.com/qAtjgyHAB734Ox_4NC_fa-ZRqrCjCmJu0Tp8bo-HMO88duv8l4hhuv2REBkB--yneFzOL7annecVlGty-YsKouondiOFVnAZWzjpdrfsGfbL6wh2"",""//lh3.ggpht.com/dWUbASepwHF4lHaXIPnpv4BNm2pCml9MlJt7s86s1cpu-PsYNmS0yQmKFKTM38q_oMLW_YJMJ19civ2gVViKAGYcZylRW7jN3w77AJvhzS6JE2g"",""//lh6.ggpht.com/9aXLmPRVeZnxkwvNb3mWTF8kvfEY_lho_lOVVc9AbNqLb8GQmiS_XXVZ3OKqMv2pxgYSayMYPPRh6ACYyh0H8KtS8mPD6MKUkEajwxkTtp5Q4Lo"",""//lh3.ggpht.com/FG_QXZPHJ2tTYwI_t5Fg1KqivglVg9RlJn0JRsu9Ox8vJ7IcBirb2IV_I1LL_WVOMxfTuBBSDLMlrw9v0MCAdmnPCR29sCbRGjhm6zEfIH-3q2QSdw"",""//lh4.ggpht.com/Y23DqORrVkM2m55f-rq5_BBrlkvQg4uX7AsAt-ixhMobjK_SFgFaDfktgLhkNsyKwSr9HcF8iiGY3Nw0xOKXG1sn6wyAWg_qsolmKjVOrM5V5mIR"",""//lh6.ggpht.com/mQ62Ly-DjMKPMzU1OcSPJ7SLBqym0uBjawlkTHfmb-HOKaD56dnitk1duwPFJVdbi0GUpd63RQvr2VMpHp6S1OQ3di-hq4-JPeRoS5FJzksXSvW_"",""//lh3.ggpht.com/dqWjWPcNsvlR1tMC_agizX19f9MDiNGWFYTYVn4kjJxzIIkEe0mLzNcvS62zVJxAOaitT-IgaUfZ-Ze23BgzbqYY-l600i_LbVe35Uinz6sXIyoB"",""//lh6.ggpht.com/xhSdFc9uHgghs_6gf3seUWYM-PG2oLmjTrpF7ptEEMqaIrQIa8VPfC6tXE7f3M13eZvDXYqMW_k0AHO5vwCEPNp-iObixskd_lBaKNfz3MH3SNQ"",""//lh5.ggpht.com/kYeoKPoZGJCow-G1FhnD8kzVjNjbQA8-Kyj8eAh0HL-fMZX9tTeFPQikTZdSU0kks4-5Ui54cZF2CjGut9vfMJAVDKIq3T-bAQewCxvfl2120tH5zQ"",""//lh5.ggpht.com/4qUl3d-G9EPBzcYKrimNsWhQw7CmONV0jgfVhxFgB9mEU_QLRCyNJTWs2A3xf6wc7AUF2DXrKEkoX-SNLMZ6s-O4aXXV9WOjOPcWdAYreMRBld0E"",""//lh5.ggpht.com/z-0C4G6EWYkelAF1LjPfl_UQcsp92H4joIPt8NfsOl0nPJ2VpzZYahWadKqTLfl6kq3C6aDBcwfGQyMWSozYoZIAOAW0yRvZrwxia321PlsKTxbZ"",""//lh4.ggpht.com/U7I12JrDYmMC_pUXpw8DVBjBilU67BvbM8qT8gJE0bQfkhHo7FOdMttiz3syP5IR-LyO4J1WBlfmZjvMjRr4GIBt4o3Vqp-hKz7q2_OGwGtsN5s"",""//lh3.ggpht.com/fF2XWEtqG23ybhzClhC_p8gvKJalf1vg7k3H7UkuAaIVubil7EgOvJUCwAZk2KiCtlPYp1E5Ep2xaxZjJRmg5EFSEAjqlMHJS_Wd1Bcje6xre4s"",""//lh3.ggpht.com/jgOebMihBoIZvHE4EOklJvZ_k-9egjNIlUKfKFcLkvXJs8g2FXjPvdFUbwqGrkHrMtyis8uOvgt-E51Vm11hq4bieh7h0cegca0VI4vFtFaAemU"",""//lh3.ggpht.com/MOrI-zKNMNrQE_aHj5hzbojP3T0hEMJKK6K8UO3e1NBC-nkcQeIM1QnvtJdT_G-W4e7-qv4BiqwdWcNHBpZXOmmX3tcuYEV8u_ANEoa9_aUIfeyg"",""//lh6.ggpht.com/SyIS5sGOkTG7k_jFF14wzH9Evrblv6o4pHBI6z6X070-xhAeyut_kRO6xHtDID4KLcWFvItjQy-plPcJ6K1T9tlFOrtaryEPvuAYdMVx8e0TTw"",""//lh6.ggpht.com/2Pp9kLYFhDT3USwHinU5OxnzcWWOLI0nOWe29gOD5KMzyEcXoHkTN-AutJV9M8F_9eqAP379XB9O1d0BWPanhr-MguzKxfHeUvYTs6yHzDkxyfe0NA"",""//lh4.ggpht.com/7aofqklSkF3AMDfF19yqsA9J3EfEiKy1NdOelEGKNnW0Cv5tGEpq2PF_jZO1MVoBbrrmVVRv0Tdq7I8KyZbIlyHdbTs1jMl7dEFqVMvsPcyaORyHlQ"",""//lh4.ggpht.com/anYJHqkMCkuhmIHQTBspLtWcDTyx1ZRe84_q5pAgVEOVmsKkaKhS725N4YFoj2zpJrBP7iTC2vf1GUtrp6H7kkm8c1k6zkW6I_Gf5f9A3re_I8Ex"",""//lh3.ggpht.com/OtSw0rU-DvfoXgoWrQdkln6Kz7O14TF9qrPNJSGJnZLeDqUEctOn1DT09pdwwVpNQV-cXmVYQL-PX4XPhpZLWH1ciSkVT6WHNmTz1D9pHphBwJUv"",""//lh3.ggpht.com/cTCZnXPIjI-EO2bvQdLgeoSLOSlMFcv805n347Zyci9XDYUdcVDC_5H7SFVYDr4pC5HtQDYnrOHL6AinLW7hWtfSCLlvVhVUNQ-DlDn0NwZ-1iCO-g"",""//lh4.ggpht.com/i-mL_JcF9rwjQq6HnuKzuAHU41_UGxQ62IOPZvaDrATXaPFbhe-EbT7ZIpboyNA5PXRCsxNsZ9hu58edRvNs5ScgKN8Lg-00J2LhlwMAbdEsv7b0nw"",""//lh6.ggpht.com/D_YV2BG1WWwl67xNloP3sxzRkqhcVTgJi58L-A8nLrOcMR_tBqLz4fHEGQ-qiNcG_-32MNy3dlSPWrTBKzBcweJxgMnRVet5yuGfelUlwehDtXX_3w""],""video"":[]},""sellerId"":""mihai"",""listingType"":""fixedPrice"",""payment"":{""online"":[{""paymentName"":""PayPal"",""paymentService"":""paypal""}],""offline"":[{""paymentName"":""Pay on Pick-up"",""paymentService"":""payOnPickup""}]},""startTime"":""2014-01-04T10:02:18+00:00"",""endTime"":""2014-04-04T10:02:18+00:00"",""shipping"":[{""shippingService"":""economy"",""shippingName"":""Economy"",""shippingCost"":1.0,""handlingTimeMax"":4,""dispatchTimeMin"":1,""dispatchTimeMax"":10,""shippingAdditionalCost"":""2""},{""shippingService"":""localPickup"",""shippingName"":""Local Pick-Up"",""shippingCost"":0.0,""handlingTimeMax"":2,""dispatchTimeMin"":0,""dispatchTimeMax"":0,""shippingAdditionalCost"":""0""}],""titleSlug"":""many-pictures"",""variations"":[{""fixedPrice"":222999.0,""media"":{""image"":[""//lh6.ggpht.com/ih3q2d7CenGLPyupH9FpfsoJQWQpw1i8wWA2Kd26bFnSF2fbnKyGU9WePIhCgEeqw5p6YMVmFi1c9oS0Ag93aF_oZ3ZiwK7fQuSYIrZ9VhgXbrTHkw"",""//lh6.ggpht.com/9aXLmPRVeZnxkwvNb3mWTF8kvfEY_lho_lOVVc9AbNqLb8GQmiS_XXVZ3OKqMv2pxgYSayMYPPRh6ACYyh0H8KtS8mPD6MKUkEajwxkTtp5Q4Lo"",""//lh3.ggpht.com/FG_QXZPHJ2tTYwI_t5Fg1KqivglVg9RlJn0JRsu9Ox8vJ7IcBirb2IV_I1LL_WVOMxfTuBBSDLMlrw9v0MCAdmnPCR29sCbRGjhm6zEfIH-3q2QSdw""],""video"":[]},""quantity"":1121,""Brand"":""Bell \u0026 Howell""},{""fixedPrice"":211.0,""media"":{""image"":[""//lh6.ggpht.com/qAtjgyHAB734Ox_4NC_fa-ZRqrCjCmJu0Tp8bo-HMO88duv8l4hhuv2REBkB--yneFzOL7annecVlGty-YsKouondiOFVnAZWzjpdrfsGfbL6wh2"",""//lh3.ggpht.com/FG_QXZPHJ2tTYwI_t5Fg1KqivglVg9RlJn0JRsu9Ox8vJ7IcBirb2IV_I1LL_WVOMxfTuBBSDLMlrw9v0MCAdmnPCR29sCbRGjhm6zEfIH-3q2QSdw"",""//lh6.ggpht.com/9aXLmPRVeZnxkwvNb3mWTF8kvfEY_lho_lOVVc9AbNqLb8GQmiS_XXVZ3OKqMv2pxgYSayMYPPRh6ACYyh0H8KtS8mPD6MKUkEajwxkTtp5Q4Lo"",""//lh3.ggpht.com/MOrI-zKNMNrQE_aHj5hzbojP3T0hEMJKK6K8UO3e1NBC-nkcQeIM1QnvtJdT_G-W4e7-qv4BiqwdWcNHBpZXOmmX3tcuYEV8u_ANEoa9_aUIfeyg""],""video"":[]},""quantity"":2,""Brand"":""Fujifilm""},{""fixedPrice"":22.0,""media"":{""image"":[""//lh3.ggpht.com/jgOebMihBoIZvHE4EOklJvZ_k-9egjNIlUKfKFcLkvXJs8g2FXjPvdFUbwqGrkHrMtyis8uOvgt-E51Vm11hq4bieh7h0cegca0VI4vFtFaAemU"",""//lh3.ggpht.com/MOrI-zKNMNrQE_aHj5hzbojP3T0hEMJKK6K8UO3e1NBC-nkcQeIM1QnvtJdT_G-W4e7-qv4BiqwdWcNHBpZXOmmX3tcuYEV8u_ANEoa9_aUIfeyg"",""//lh4.ggpht.com/anYJHqkMCkuhmIHQTBspLtWcDTyx1ZRe84_q5pAgVEOVmsKkaKhS725N4YFoj2zpJrBP7iTC2vf1GUtrp6H7kkm8c1k6zkW6I_Gf5f9A3re_I8Ex""],""video"":[]},""quantity"":12,""Brand"":""Gateway""}],""_fpaiStatus"":""published""}`
    itemInfoBytes := []byte(itemInfoR)
var ItemInfo Item
        er := json.Unmarshal(itemInfoBytes, &ItemInfo)
            if er != nil {
                panic(er)
            }

        }
",7725
54,21895743,"{
    ""Ability1"": ""Noxious Fumes"",
    ""AbilityId1"": 7812,
    ""AttackSpeed"": 0.86,
    ""Cons"": """",
    ""HP5PerLevel"": 0.47,
    ""Health"": 360,
    ""Speed"": 350,
    ""abilityDescription1"": {
      ""itemDescription"": {
        ""cooldown"": ""12s"",
        ""cost"": ""60/70/80/90/100"",
        ""description"": ""Agni summons a cloud of noxious fumes at his ground target location, doing damage every second. Firing any of Agni's abilities into the fumes detonates the gas, stunning all enemies in the radius."",
        ""menuitems"": [
          {
            ""description"": ""Ability:"",
            ""value"": ""Ground Target""
          },
          {
            ""description"": ""Affects:"",
            ""value"": ""Enemy""
          },
          {
            ""description"": ""Damage:"",
            ""value"": ""Magical""
          },
          {
            ""description"": ""Radius:"",
            ""value"": ""20""
          }
        ],
        ""rankitems"": [
          {
            ""description"": ""Damage per Tick:"",
            ""value"": ""10/20/30/40/50 (+5% of your magical power)""
          },
          {
            ""description"": ""Fumes Duration:"",
            ""value"": ""10s""
          },
          {
            ""description"": ""Stun Duration:"",
            ""value"": ""1s""
          }
        ],
        ""secondaryDescription"": """"
      }
    },
    ""abilityDescription5"": {
      ""itemDescription"": {
        ""cooldown"": """",
        ""cost"": """",
        ""description"": ""After hitting with 4 basic attacks, Agni will gain a buff. On the next cast of Flame Wave or Rain Fire, all enemies hit by those abilities will be additionally set ablaze, taking damage every .5s for 3s."",
        ""menuitems"": [
          {
            ""description"": ""Affects:"",
            ""value"": ""Enemy""
          },
          {
            ""description"": ""Damage:"",
            ""value"": ""Magical""
          }
        ],
        ""rankitems"": [
          {
            ""description"": ""Damage per Tick:"",
            ""value"": ""5 (+10% of your magical power)""
          }
        ],
        ""secondaryDescription"": """"
      }
    },
    ""basicAttack"": {
      ""itemDescription"": {
        ""cooldown"": """",
        ""cost"": """",
        ""description"": """",
        ""menuitems"": [
          {
            ""description"": ""Damage:"",
            ""value"": ""34 + 1.5/Lvl (+20% of Magical Power)""
          },
          {
            ""description"": ""Progression:"",
            ""value"": ""None""
          }
        ],
        ""rankitems"": [],
        ""secondaryDescription"": """"
      }
    },
    ""id"": 1737,
    ""ret_msg"": null
  }
",2573
55,21895743,"type God struct {
    Ability1                      string
    Ability2                      string
    Ability3                      string
    Ability4                      string
    Ability5                      string
    AbilityId1                    int
    AbilityId2                    int
    AbilityId3                    int
    AbilityId4                    int
    AbilityId5                    int
    Attack_speed                  float64
    Attack_speed_per_level        float64
    Cons                          string
    Hp5_per_level                 float64
    Health                        int
    Health_per_five               int
    Health_per_level              int
    Item1                         string
    Item2                         string
    Item3                         string
    Item4                         string
    Item5                         string
    Item6                         string
    Item7                         string
    Item8                         string
    Item9                         string
    ItemId1                       int
    ItemId2                       int
    ItemId3                       int
    ItemId4                       int
    ItemId5                       int
    ItemId6                       int
    ItemId7                       int
    ItemId8                       int
    ItemId9                       int
    Lore                          string
    Mp5_per_level                 float64
    Magic_protection              int
    Magic_protection_per_level    int
    Mana                          int
    Mana_per_five                 float64
    Mana_per_level                int
    Name                          string
    On_free_rotation              string
    Pantheon                      string
    Physical_power                int
    Physical_power_per_level      int
    Physical_protection           int
    Physical_protection_per_level float64
    Pros                          string
    Roles                         string
    Speed                         int
    Title                         string
    Type                          string
    Abilitydescription1           struct {
        Item_description struct {
            Cooldown    string
            Cost        string
            Description string
            Menu_items  struct {
                Description string
                Value       string
            }
            Rank_items struct {
                Description string
                Value       string
            }
            Secondary_description string
        }
    }
    Ability_description2 struct {
        Item_description struct {
            Cooldown    string
            Cost        string
            Description string
            Menu_items  struct {
                Description string
                Value       string
            }
            Rank_items struct {
                Description string
                Value       string
            }
            Secondary_description string
        }
    }
    Ability_description3 struct {
        Item_description struct {
            Cooldown    string
            Cost        string
            Description string
            Menu_items  struct {
                Description string
                Value       string
            }
            Rank_items struct {
                Description string
                Value       string
            }
            Secondary_description string
        }
    }
    Ability_description4 struct {
        Item_description struct {
            Cooldown    string
            Cost        string
            Description string
            Menu_items  struct {
                Description string
                Value       string
            }
            Rank_items struct {
                Description string
                Value       string
            }
            Secondary_description string
        }
    }
    Ability_description5 struct {
        Item_description struct {
            Cooldown    string
            Cost        string
            Description string
            Menu_items  struct {
                Description string
                Value       string
            }
            Rank_items struct {
                Description string
                Value       string
            }
            Secondary_description string
        }
    }
    Basic_attack struct {
        Item_description struct {
            cooldown    string
            cost        string
            description string
            Menu_items  struct {
                Description string
                Value       string
            }
            Rank_items struct {
                Description string
                Value       string
            }
            Secondary_description string
        }
    }
    Id      int
    Ret_msg string
}
",4907
56,21895743,"var gods []God
json.Unmarshal(jsonResponse, &gods)
return gods
",63
57,21895743,"abilityDescription1(2,3,4,5)",28
58,23268356,http.HandleFunc,15
59,23268356,http.HandleFunc,15
60,23268356,"package main
import ""fmt""
import ""time""
import ""code.google.com/p/go-sqlite/go1/sqlite3""
import ""crypto/rand""
import ""encoding/base64"" 

func getrandomtext() (string) {
    b := make([]byte, 12)
    rand.Read(b)
    en := base64.StdEncoding // or URLEncoding
    enclen := en.EncodedLen(len(b))
    d := make([]byte, enclen)
    en.Encode(d, b)
    returntext := string(d[:enclen])
    //fmt.Printf(""getrandomtext() : '""+returntext+""'\n"")
    return returntext
}

func main() {
    dbname := ""multitasking.db""
    tablename := ""multiwrite""
    defer time.Sleep(5000 * time.Millisecond)
    db, err := sqlite3.Open(""file:""+dbname+""?file:locked.sqlite?cache=shared&mode=rwc"")
    defer db.Close()
    if err != nil {
        fmt.Printf(""failed to open database, error: "" + err.Error() + ""\n"") 
        return
    } 
    err = db.Exec(""DROP TABLE IF EXISTS ""+tablename+"";"")
    if err != nil {
        fmt.Printf(""error dropping table ""+tablename+"": ""+err.Error()+""\n"")
    }
    err = db.Exec(""CREATE TABLE ""+tablename+"" (id INTEGER PRIMARY KEY AUTOINCREMENT, text VARCHAR(200));"")
    if err != nil {
        fmt.Printf(""error creating table ""+tablename+"": ""+err.Error()+""\n"") 
        return
    } else {
        fmt.Printf(""successfully created table ""+tablename+""!\n"") 
    }
    var insertcount int = 128
    fmt.Printf(""inserting %d random text rows ...\n"", insertcount) 
    var counter int = 0
    insertloop:
    if counter < insertcount {
        counter++
        go func(count int) {
            if db.Exec(""INSERT INTO ""+tablename+""(text) VALUES(\""""+getrandomtext()+""\"");"") !=nil {
                fmt.Printf("" -%d"", count)
            } else {
                fmt.Printf("" +%d"", count)
            }
        }(counter)
        goto insertloop
    }
    fmt.Printf(""\nExecuted! Waiting some seconds...\n"")
    time.Sleep(3000 * time.Millisecond)         
    fmt.Printf(""\nRequesting...\n"")
    ReadTable, err := db.Prepare(""SELECT id, text FROM ""+tablename+"";"")
    err = ReadTable.Query()
    if err != nil {
        fmt.Printf(""failed to read '""+tablename+""' table, error: "" + err.Error() + ""\n"")
        return
    } 
    Readloop:
    var RowId int
    var RowText string
    err = ReadTable.Scan(&RowId, &RowText)
    if err == nil {
        fmt.Printf(""> %d | %s\n"", RowId, RowText)
        ReadTable.Next() 
        goto Readloop
    }
    fmt.Printf(""Sqlite3 test done! :)\n"")
}
",2399
61,23268356,multitasking.db,15
62,23268356,"C:\Documents and Settings\JekabsR>multitaskingdb
successfully created table multiwrite!
inserting 128 random text rows ...

Executed! Waiting some seconds...
 +2 +3 +4 +5 +6 +7 +8 +9 +10 +11 +57 +58 +59 +60 +61 +62 +63 +64 +65 +66 +67 +68
 +69 +70 +71 +72 +73 +74 +75 +76 +77 +78 +79 +80 +81 +82 +83 +84 +85 +86 +87 +88
 +89 +90 +91 +92 +93 +94 +95 +96 +97 +98 +117 +118 +119 +120 +121 +122 +123 +124
 +125 +126 +127 +128 +12 +13 +14 +15 +16 +17 +18 +19 +20 +21 +22 +23 +24 +25 +26
 +27 +28 +29 +30 +31 +32 +33 +34 +35 +36 +37 +38 +39 +40 +41 +42 +43 +44 +45 +46
 +47 +48 +49 +50 +51 +52 +53 +54 +55 +56 +99 +100 +101 +102 +103 +104 +105 +106
+107 +108 +109 +110 +111 +112 +113 +114 +115 +116 +1
Requesting...
> 1 | ScnK0DScszFPtNgY
> 2 | 8ALa+Dyk48PpJ4em
> 3 | hmEF4yINhg9SxlNy
...
> 127 | AAAAwNCvV/wd0/MR
> 128 | SEbPfK/XuVfgnxPj
Sqlite3 test done! :)
",855
63,23268356,multitaskingdb,14
64,23268356,"C:\Documents and Settings\JekabsR>multitaskingdb
successfully created table multiwrite!
inserting 128 random text rows ...

Executed! Waiting some seconds...
 +2 +3 +4 +5 +6 +7 +8 +9 +10panic: invalid memory address or nil pointer derefer
ence
fatal error: panic during malloc
[signal 0xc0000005 code=0x0 addr=0x20 pc=0x41b60a]

runtime stack:
runtime.panic(panic: invalid memory address or nil pointer dereference
 +11 -57 -58 -59 -60 -61 -62 -63 -64 -65 -66 -67 -68 -69 -700x520a80, 0x673aaf)
        C:/Program Files/Go/src/pkg/runtime/panic.c:233 +0x2b
invalid spdelta 363589 -1
runtime: unexpected return pc for  -71 -72 -73 -74 -75 -76 -77 -78 -79 -80 -81 -
82 -83 -84 -85 -86 -87 -88balance called from 0x200

goroutine 48 [syscall]:
runtime.cgocall(0x492817, 0x314476e8)
        C:/Program Files/Go/src/pkg/runtime/cgocall.c -89 -90 -91 -92 -93 -94 -9
5 -96 -97 -98 -99 -100 -101 -102 -103 -104 -105 -106:149 +0x10c fp=0x314476dc
code.google.com/p/go-sqlite/go1/sqlite3._Cfunc_sqlite3_exec(0x3d4258, 0x10f47480
, 0x0, 0x0, 0x0, ...)
        C:/DOCUME~1/JekabsR/LOCALS~1/Temp/go-build368528647/code.google.com/p/go
-sqlite/go1/sqlite3/_obj/_cgo_defun.c:456 +0x33 fp=0x314476e8
code.google.com/p/go-sqlite/go1/sqlite3.(*Conn).exec(0x10f2d6c0, 0x10f47480, 0x3
8 +13 +14 +15 +16 +17 +18 +19 +20 +21 +22 +23 +24 +25 +26 +27 +28 +29, 0x52f578)

        C:/ProgramFiles/Go/src/pkg/code.google.com/p/go-sqlite/go1/sqlite3/sqlit
e3.go:545 +0x4c fp=0x31447704
code.google.com/p/go-sqlite/go1/sqlite3.(*Conn).Exec(0x10f2d6c0, 0x10f47480,  +3
0 +31 +32 +33 +34 +35 +36 +37 +38 +39 +40 +41 +42 +43 +44 +47 -48 -490x39, 0x0,
0x0, ...)
        C:/ProgramFiles/Go/src/pkg/code.google.com/p/go-sqlite/go1/sqlite3/sqlit
e3.go:231 +0xd2 fp=0x31447764
main.func┬Ę001( -50 -51 -52 -53 -54 -55 -56 +1 -107 -108 -109 -110 -111 -112 -11
3 -114 -115 -1160x2d)
        C:/Program Files/Go/src/pkg/development/multitaskingdb/multitaskingdb.go
:52 +0xa2 fp=0x314477c4
runtime.goexit()
        C:/Program Files/Go/src/pkg/runtime/proc.c:1394 -117 -118 -119 -120 -121
 -122 -123 -124 -125 -126 -127 -128 +12 fp=0x314477c8
created by main.main
        C:/Program Files/Go/src/pkg/development/multitaskingdb/multitaskingdb.go
:57 +0x417

goroutine 1 [sleep]:
time.Sleep(0xb2d05e00, 0x0)
        C:/Program Files/Go/src/pkg/runtime/time.goc:31 +0x3b
main.main()
        C:/Program Files/Go/src/pkg/development/multitaskingdb/multitaskingdb.go
:61 +0x453

goroutine 3 [syscall]:
runtime.goexit()
        C:/Program Files/Go/src/pkg/runtime/proc.c:1394

goroutine 49 [syscall]:
code.google.com/p/go-sqlite/go1/sqlite3._Cfunc_sqlite3_exec(0x3d4258, 0x10f47500
, 0x0, 0x0, 0x0, ...)
        C:/DOCUME~1/JekabsR/LOCALS~1/Temp/go-build368528647/code.google.com/p/go
-sqlite/go1/sqlite3/_obj/_cgo_defun.c:456 +0x33
code.google.com/p/go-sqlite/go1/sqlite3.(*Conn).exec(0x10f2d6c0, 0x10f47500, 0x3
8, 0x52f578)
        C:/ProgramFiles/Go/src/pkg/code.google.com/p/go-sqlite/go1/sqlite3/sqlit
e3.go:545 +0x4c
code.google.com/p/go-sqlite/go1/sqlite3.(*Conn).Exec(0x10f2d6c0, 0x10f47500, 0x3
9, 0x0, 0x0, ...)
        C:/ProgramFiles/Go/src/pkg/code.google.com/p/go-sqlite/go1/sqlite3/sqlit
e3.go:231 +0xd2
main.func┬Ę001(0x2e)
        C:/Program Files/Go/src/pkg/development/multitaskingdb/multitaskingdb.go
:52 +0xa2
created by main.main
        C:/Program Files/Go/src/pkg/development/multitaskingdb/multitaskingdb.go
:57 +0x417
fatal error: panic during malloc
[signal 0xc0000005 code=0x0 addr=0x20 pc=0x41b60a]

runtime stack:
runtime.panic(0x520a80, 0x673aaf)
        C:/Program Files/Go/src/pkg/runtime/panic.c:233 +0x2b
invalid spdelta 364736 -1
runtime: unexpected return pc for sqlite3BtreeInsert called from 0x1500
",3689
65,23317191,"package main

import (
    ""encoding/json""
    ""fmt""
    ""io/ioutil""
    ""net/http""
    ""os""
)

const api_endpoint = ""http://www.reddit.com/r/%s/top.json?t=all&limit=100""

func main() {
    // Get console argument 'subreddit' and format the API endpoint URL.
    subreddit := os.Args[1]
    top_by_subreddit_endpoint := fmt.Sprintf(api_endpoint, subreddit)

    // Hit the API service.
    response, err := http.Get(top_by_subreddit_endpoint)
    if err != nil {
        //Perror(err)
    } else {
        defer response.Body.Close()
        content, err := ioutil.ReadAll(response.Body)
        if err != nil {
            //Perror(err)
        } else {
            var top_submissions Submission
            json.Unmarshal(content, &top_submissions)
        }
    }
}

type ByCreated []Submission

func (a ByCreated) Len() int           { return len(a) }
func (a ByCreated) Swap(i, j int)      { a[i], a[j] = a[j], a[i] }
func (a ByCreated) Less(i, j int) bool { return a[i].Created < a[j].Created }

type Submission struct {
    Domain              string `json:""domain""`
    BannedBy            string `json:""banned_by""`
    MediaEmbed          string `json:""media_embed""`
    Subreddit           string `json:""subreddit""`
    SelftextHtml        string `json:""selftext_html""`
    Selftext            string `json:""selftext""`
    Likes               bool   `json:""likes""`
    SecureMedia         string `json:""secure_media""`
    LinkFlairText       string `json:""link_flair_text""`
    Id                  string `json:""id""`
    Gilded              int    `json:""gilded""`
    SecureMediaEmbed    string `json:""secure_media_embed""`
    Clicked             bool   `json:""clicked""`
    Stickied            bool   `json:""stickied""`
    Author              string `json:""author""`
    Media               string `json:""media""`
    Score               int    `json:""score""`
    ApprovedBy          string `json:""approved_by""`
    Over18              bool   `json:""over_18""`
    Hidden              bool   `json:""hidden""`
    Thumbnail           string `json:""thumbnail""`
    SubredditId         string `json:""subreddit_id""`
    Edited              int    `json:""edited""`
    LinkFlairCssClass   string `json:""link_flair_css_class""`
    AuthorFlairCssClass string `json:""author_flair_css_class""`
    Downs               int    `json:""downs""`
    Saved               bool   `json:""saved""`
    IsSelf              bool   `json:""is_self""`
    Permalink           string `json:""permalink""`
    Name                string `json:""name""`
    Created             int    `json:""created""`
    Url                 string `json:""url""`
    AuthorFlairText     string `json:""author_flair_text""`
    Title               string `json:""title""`
    CreatedUtc          int    `json:""created_utc""`
    Ups                 int    `json:""ups""`
    NumComments         int    `json:""num_comments""`
    Visited             bool   `json:""visited""`
    NumReports          string `json:""num_reports""`
    Distinguished       string `json:""distinguished""`
}
",3027
66,23317191,children,8
67,23317191,Submission,10
68,23317191,"{
    ""kind"": ""Listing"",
    ""data"": {
        ""modhash"": ""1wcy5kngm9408522707f8e319ca825af342a5b3c460ca7c928"",
        ""children"": [
            {
                ""kind"": ""t3"",
                ""data"": {
                    ""domain"": ""self.Smite"",
                    ""banned_by"": null,
                    ""media_embed"": {},
                    ""subreddit"": ""Smite"",
                    ""selftext_html"": ""Hello Smite community - how&#39;s it going? My name is Steve, but you can just call me Proto. I&#39;m a forum moderator and content creator for Beyond Entertainment - a site which specializes in gaming news surrounding competitive console gaming and all around video games news. I&#39;ve been around competitive gaming since 2007 back in the Halo 2 MLG days and have been hooked ever since. I&#39;m not here to talk about myself though - and although I&#39;m not a Smite player - I&#39;m here to talk about a company who is becoming involved with the Smite community that goes by the name Bonafide Boarding https://twitter.com/LiveBNFD  \n\nNow you might be asking yourself why am I writing this? First, these 2 tweets drew my attention in regards to Bonafide Boarding https://twitter.com/BonafideBCC - as well as Billy and Brad - working with people in the competitive Smite community  \n\nhttps://twitter.com/LiveBNFD/status/441044741699149825  \n\nhttps://twitter.com/HiRezNabil (pictures with Brad under this Twitter user&#39;s photos - Brad confirmed in the AGL Facebook cover photo as well just for verification)  \n\nWell - I&#39;m writing this because the owners of the Bonafide Boarding Clothing company, Brad Weir and Billy Lutz https://twitter.com/MrBillyLutz have past experience in competitive gaming. including running their own league of Halo tournaments in 2012 and 2013. However, it&#39;s not a good past - and to put it as blunt as possible - the two together are frauds who stole money from the Halo community and owe professional Halo players thousands of dollars from their Halo events - at the time known as AGL (Arena Gaming League) https://www.facebook.com/ArenaGamingLeague (Brad Weir is in the cover photo, on the right, in the red t shirt interviewing the person on the left)  \n\nBrad and Billy had their first AGL Halo event in August of 2012 - and in 2013 is when the problems began. While there is a lot more to talk about then what can be posted here, I will basically go into how AGL ended and how Halo players were scammed out of thousands of dollars in owed prize money - and to this day, no one has received any money from AGL, Brad or Billy for most of the 2013 AGL Halo tournaments.  \n\nAGL had announced an event to held in Indianapolis, Indiana on November 1-3, 2013 called the &quot;AGL 10K&quot;. It was made out to be their biggest event yet - held at a brand new LAN center and promising the most prize money at any AGL event thus far at the time. However, just days before the event was scheduled to take place, it was cancelled as noted here with a direct quote from AGL/Brad in the article below  \n\nhttp://teambeyond.net/agl-10k-cancelled/  \n\nThis also led to players not being able to get refunds for their team passes which many had already purchased for the event (note the dates on the tweets shown below)  \n\nhttps://twitter.com/jCreelz/status/394116351402737664  \n\nhttps://twitter.com/Ninja_Invictus/status/393922514247643136  \n\nNot long after this event was cancelled, AGL completely shut down, seemingly out of nowhere - confirmed in this forum post by Brad himself on the Beyond Entertainment forums  \n\nhttp://teambeyond.net/forum/index.php?/topic/2238-agl-closes-down-statement/page-50?p=108159#entry108159  \n\nSince AGL has shut down, there has been little to absolutely no contact from Brad, Billy, or anyone associated with AGL in terms of paying not only the professional players who are owed prize money, but commentators and staff from the event as well who were not paid and had no travel costs covered.  \n\nThe following are all tweets from professional Halo players who have still NEVER been paid by Brad Weir, Billy Lutz, or AGL as a whole.  \n\nhttps://twitter.com/MLGACE/statuses/408356773037232128  \n\nhttps://twitter.com/FormaL_tK/statuses/408400562372108288  \n\nhttps://twitter.com/Naded_MLG/statuses/426908120879607808  \n\nhttps://twitter.com/xPROVERBx/statuses/426975901583425536  \n\nhttps://twitter.com/enable_/status/426952260317220864  \n\nhttps://twitter.com/BRIZZ_Legit/status/426959849729974272  \n\nThis recent tweet is also from someone who bought t shirts from Bonafide Boarding, Brad and Billy&#39;s clothing company, and it appears they were screwed as well.  \n\nhttps://twitter.com/shellyteachesk2/status/447432597288017920  \n\nThe reason I am writing all this is just to warn you guys as a community to not fall into the trap the Halo community fell into in 2013. Do not support these guys - and most importantly - do not give them your money. I have loved competitive gaming for a long time, and I want nothing more than to see it continue to grow. The last thing I want to see happen is what happened to the Halo community in 2013 at the hands of Brad Weir, Billy Lutz, and the AGL company as a whole. Brad, Billy, and Bonafide Boarding as a whole is nothing but a scam and these 2 owe a lot of people a lot of money. Hopefully you guys can take this to heart and not support these two scumbags who have still yet to pay thousands of dollars to people who rightfully won money in their tournaments. Thank you for reading.  \n\n\nProto\n\n"",
                    ""selftext"": ""Hello Smite community - how's it going? My name is Steve, but you can just call me Proto. I'm a forum moderator and content creator for Beyond Entertainment - a site which specializes in gaming news surrounding competitive console gaming and all around video games news. I've been around competitive gaming since 2007 back in the Halo 2 MLG days and have been hooked ever since. I'm not here to talk about myself though - and although I'm not a Smite player - I'm here to talk about a company who is becoming involved with the Smite community that goes by the name Bonafide Boarding https://twitter.com/LiveBNFD  \n\nNow you might be asking yourself why am I writing this? First, these 2 tweets drew my attention in regards to Bonafide Boarding https://twitter.com/BonafideBCC - as well as Billy and Brad - working with people in the competitive Smite community  \n\nhttps://twitter.com/LiveBNFD/status/441044741699149825  \n\nhttps://twitter.com/HiRezNabil (pictures with Brad under this Twitter user's photos - Brad confirmed in the AGL Facebook cover photo as well just for verification)  \n\nWell - I'm writing this because the owners of the Bonafide Boarding Clothing company, Brad Weir and Billy Lutz https://twitter.com/MrBillyLutz have past experience in competitive gaming. including running their own league of Halo tournaments in 2012 and 2013. However, it's not a good past - and to put it as blunt as possible - the two together are frauds who stole money from the Halo community and owe professional Halo players thousands of dollars from their Halo events - at the time known as AGL (Arena Gaming League) https://www.facebook.com/ArenaGamingLeague (Brad Weir is in the cover photo, on the right, in the red t shirt interviewing the person on the left)  \n\nBrad and Billy had their first AGL Halo event in August of 2012 - and in 2013 is when the problems began. While there is a lot more to talk about then what can be posted here, I will basically go into how AGL ended and how Halo players were scammed out of thousands of dollars in owed prize money - and to this day, no one has received any money from AGL, Brad or Billy for most of the 2013 AGL Halo tournaments.  \n\nAGL had announced an event to held in Indianapolis, Indiana on November 1-3, 2013 called the \""AGL 10K\"". It was made out to be their biggest event yet - held at a brand new LAN center and promising the most prize money at any AGL event thus far at the time. However, just days before the event was scheduled to take place, it was cancelled as noted here with a direct quote from AGL/Brad in the article below  \n\nhttp://teambeyond.net/agl-10k-cancelled/  \n\nThis also led to players not being able to get refunds for their team passes which many had already purchased for the event (note the dates on the tweets shown below)  \n\nhttps://twitter.com/jCreelz/status/394116351402737664  \n\nhttps://twitter.com/Ninja_Invictus/status/393922514247643136  \n\nNot long after this event was cancelled, AGL completely shut down, seemingly out of nowhere - confirmed in this forum post by Brad himself on the Beyond Entertainment forums  \n\nhttp://teambeyond.net/forum/index.php?/topic/2238-agl-closes-down-statement/page-50?p=108159#entry108159  \n\nSince AGL has shut down, there has been little to absolutely no contact from Brad, Billy, or anyone associated with AGL in terms of paying not only the professional players who are owed prize money, but commentators and staff from the event as well who were not paid and had no travel costs covered.  \n\nThe following are all tweets from professional Halo players who have still NEVER been paid by Brad Weir, Billy Lutz, or AGL as a whole.  \n\nhttps://twitter.com/MLGACE/statuses/408356773037232128  \n\nhttps://twitter.com/FormaL_tK/statuses/408400562372108288  \n\nhttps://twitter.com/Naded_MLG/statuses/426908120879607808  \n\nhttps://twitter.com/xPROVERBx/statuses/426975901583425536  \n\nhttps://twitter.com/enable_/status/426952260317220864  \n\nhttps://twitter.com/BRIZZ_Legit/status/426959849729974272  \n\nThis recent tweet is also from someone who bought t shirts from Bonafide Boarding, Brad and Billy's clothing company, and it appears they were screwed as well.  \n\nhttps://twitter.com/shellyteachesk2/status/447432597288017920  \n\nThe reason I am writing all this is just to warn you guys as a community to not fall into the trap the Halo community fell into in 2013. Do not support these guys - and most importantly - do not give them your money. I have loved competitive gaming for a long time, and I want nothing more than to see it continue to grow. The last thing I want to see happen is what happened to the Halo community in 2013 at the hands of Brad Weir, Billy Lutz, and the AGL company as a whole. Brad, Billy, and Bonafide Boarding as a whole is nothing but a scam and these 2 owe a lot of people a lot of money. Hopefully you guys can take this to heart and not support these two scumbags who have still yet to pay thousands of dollars to people who rightfully won money in their tournaments. Thank you for reading.  \n\n- Proto"",
                    ""likes"": true,
                    ""secure_media"": null,
                    ""link_flair_text"": null,
                    ""id"": ""21dp8c"",
                    ""gilded"": 0,
                    ""secure_media_embed"": {},
                    ""clicked"": false,
                    ""stickied"": false,
                    ""author"": ""Proto__"",
                    ""media"": null,
                    ""score"": 1038,
                    ""approved_by"": null,
                    ""over_18"": false,
                    ""hidden"": false,
                    ""thumbnail"": """",
                    ""subreddit_id"": ""t5_2stl8"",
                    ""edited"": 1395865323,
                    ""link_flair_css_class"": null,
                    ""author_flair_css_class"": null,
                    ""downs"": 274,
                    ""saved"": false,
                    ""is_self"": true,
                    ""permalink"": ""/r/Smite/comments/21dp8c/a_warning_to_the_smite_community_bonafide/"",
                    ""name"": ""t3_21dp8c"",
                    ""created"": 1395828838,
                    ""url"": ""http://www.reddit.com/r/Smite/comments/21dp8c/a_warning_to_the_smite_community_bonafide/"",
                    ""author_flair_text"": null,
                    ""title"": ""A warning to the Smite community (Bonafide Boarding Clothing company)"",
                    ""created_utc"": 1395800038,
                    ""ups"": 1312,
                    ""num_comments"": 200,
                    ""visited"": false,
                    ""num_reports"": null,
                    ""distinguished"": null
                }
            }],
        }
    }
}
",12314
69,23461346,"c:/go/bin/go.exe build  [C:/GoProjects/src/gtk_test]
# github.com/mattn/go-gtk/pango
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libpango-1.0.dll.a when searching for -lpango-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/pango-1.0.lib when searching for -lpango-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libpango-1.0.dll.a when searching for -lpango-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/pango-1.0.lib when searching for -lpango-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\pango-1.0.lib when searching for -lpango-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lpango-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgobject-2.0.dll.a when searching for -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gobject-2.0.lib when searching for -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgobject-2.0.dll.a when searching for -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gobject-2.0.lib when searching for -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\gobject-2.0.lib when searching for -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgmodule-2.0.dll.a when searching for -lgmodule-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gmodule-2.0.lib when searching for -lgmodule-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgmodule-2.0.dll.a when searching for -lgmodule-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gmodule-2.0.lib when searching for -lgmodule-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\gmodule-2.0.lib when searching for -lgmodule-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lgmodule-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgthread-2.0.dll.a when searching for -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gthread-2.0.lib when searching for -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgthread-2.0.dll.a when searching for -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gthread-2.0.lib when searching for -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\gthread-2.0.lib when searching for -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libglib-2.0.dll.a when searching for -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/glib-2.0.lib when searching for -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libglib-2.0.dll.a when searching for -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/glib-2.0.lib when searching for -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\glib-2.0.lib when searching for -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libintl.dll.a when searching for -lintl
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/intl.lib when searching for -lintl
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libintl.dll.a when searching for -lintl
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/intl.lib when searching for -lintl
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\intl.lib when searching for -lintl
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lintl
collect2.exe: error: ld returned 1 exit status
# github.com/mattn/go-gtk/glib
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgobject-2.0.dll.a when searching for -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gobject-2.0.lib when searching for -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgobject-2.0.dll.a when searching for -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gobject-2.0.lib when searching for -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\gobject-2.0.lib when searching for -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgthread-2.0.dll.a when searching for -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gthread-2.0.lib when searching for -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgthread-2.0.dll.a when searching for -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gthread-2.0.lib when searching for -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\gthread-2.0.lib when searching for -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libglib-2.0.dll.a when searching for -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/glib-2.0.lib when searching for -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libglib-2.0.dll.a when searching for -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/glib-2.0.lib when searching for -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\glib-2.0.lib when searching for -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libintl.dll.a when searching for -lintl
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/intl.lib when searching for -lintl
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libintl.dll.a when searching for -lintl
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/intl.lib when searching for -lintl
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\intl.lib when searching for -lintl
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lintl
collect2.exe: error: ld returned 1 exit status
# github.com/mattn/go-gtk/gdk
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgdk-win32-2.0.dll.a when searching for -lgdk-win32-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gdk-win32-2.0.lib when searching for -lgdk-win32-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgdk-win32-2.0.dll.a when searching for -lgdk-win32-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gdk-win32-2.0.lib when searching for -lgdk-win32-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\gdk-win32-2.0.lib when searching for -lgdk-win32-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lgdk-win32-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libpangowin32-1.0.dll.a when searching for -lpangowin32-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/pangowin32-1.0.lib when searching for -lpangowin32-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libpangowin32-1.0.dll.a when searching for -lpangowin32-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/pangowin32-1.0.lib when searching for -lpangowin32-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\pangowin32-1.0.lib when searching for -lpangowin32-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lpangowin32-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libpangocairo-1.0.dll.a when searching for -lpangocairo-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/pangocairo-1.0.lib when searching for -lpangocairo-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libpangocairo-1.0.dll.a when searching for -lpangocairo-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/pangocairo-1.0.lib when searching for -lpangocairo-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\pangocairo-1.0.lib when searching for -lpangocairo-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lpangocairo-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgdk_pixbuf-2.0.dll.a when searching for -lgdk_pixbuf-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gdk_pixbuf-2.0.lib when searching for -lgdk_pixbuf-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgdk_pixbuf-2.0.dll.a when searching for -lgdk_pixbuf-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gdk_pixbuf-2.0.lib when searching for -lgdk_pixbuf-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\gdk_pixbuf-2.0.lib when searching for -lgdk_pixbuf-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lgdk_pixbuf-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libpango-1.0.dll.a when searching for -lpango-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/pango-1.0.lib when searching for -lpango-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libpango-1.0.dll.a when searching for -lpango-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/pango-1.0.lib when searching for -lpango-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\pango-1.0.lib when searching for -lpango-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lpango-1.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libcairo.dll.a when searching for -lcairo
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/cairo.lib when searching for -lcairo
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libcairo.dll.a when searching for -lcairo
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/cairo.lib when searching for -lcairo
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\cairo.lib when searching for -lcairo
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lcairo
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgmodule-2.0.dll.a when searching for -lgmodule-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gmodule-2.0.lib when searching for -lgmodule-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgmodule-2.0.dll.a when searching for -lgmodule-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gmodule-2.0.lib when searching for -lgmodule-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\gmodule-2.0.lib when searching for -lgmodule-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lgmodule-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgobject-2.0.dll.a when searching for -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gobject-2.0.lib when searching for -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgobject-2.0.dll.a when searching for -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gobject-2.0.lib when searching for -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\gobject-2.0.lib when searching for -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lgobject-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgthread-2.0.dll.a when searching for -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gthread-2.0.lib when searching for -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libgthread-2.0.dll.a when searching for -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/gthread-2.0.lib when searching for -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\gthread-2.0.lib when searching for -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lgthread-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libglib-2.0.dll.a when searching for -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/glib-2.0.lib when searching for -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libglib-2.0.dll.a when searching for -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/glib-2.0.lib when searching for -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\glib-2.0.lib when searching for -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lglib-2.0
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libintl.dll.a when searching for -lintl
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/intl.lib when searching for -lintl
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/libintl.dll.a when searching for -lintl
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib/intl.lib when searching for -lintl
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: skipping incompatible C:/GTK/lib\intl.lib when searching for -lintl
c:/tdm-gcc-64/bin/../lib/gcc/x86_64-w64-mingw32/4.8.1/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lintl
collect2.exe: error: ld returned 1 exit status
Error: process exited with code 2.
",21591
70,24004951,Qhyper(),8
71,24004951,stirlerr(),10
72,24004951,lgammacor(),11
73,24004951,lbeta(),7
74,24004951,lbeta(),7
75,24004951,Qhyper(),8
76,24004951,"// Direct port of R code from nmath/{phyper,dbinom,stirlerr}.c and {dpq,nmath}.h.
// Code licensed under GPL for that reason (c) Dan Kortschak.
package main

import (
    ""errors""
    ""fmt""
    ""math""
)

func main() {
    // Example values come from:
    // http://stackoverflow.com/questions/8382806/r-hypergeometric-test-phyper
    fmt.Println(Phyper(62, 1998, 5260-1998, 131, true, false))

    for x := 0.; x < 10; x++ {
        fmt.Println(Phyper(x, 10, 7, 8, true, false))
    }
    fmt.Println()
    for x := 0.; x < 10; x++ {
        fmt.Println(Dhyper(x, 10, 7, 8, false))
    }
    fmt.Println()
    for x := 0.; x < 10; x++ {
        fmt.Println(Qhyper(x, 10, 7, 8, true, false))
    }
}

var ErrDomain = errors.New(""hyper: argument out of domain"")

const (
    epsilon = 2.2204460492503131e-16
    min     = 2.2250738585072014e-308
)

// Sample of n balls from r red and b black ones; x are red
func Phyper(x, r, b, n float64, lowerTail, logP bool) (float64, error) {
    x = math.Floor(x + 1e-7)
    r = round(r)
    b = round(b)
    n = round(n)

    if r  r+b {
        return math.NaN(), ErrDomain
    }

    if x*(r+b) > n*r {
        b, r = r, b
        x = n - x - 1
        lowerTail = !lowerTail
    }

    if x < 0 {
        return dt0(lowerTail, logP), nil
    }
    if x >= r || x >= n {
        return dt1(lowerTail, logP), nil
    }

    d, err := Dhyper(x, r, b, n, logP)
    if err != nil {
        return d, err
    }
    pd := pdhyper(x, r, b, n, logP)

    if logP {
        return log(d+pd, lowerTail), nil
    }
    res := d * pd
    if lowerTail {
        return res, nil
    }
    // Use 0.5 - p + 0.5 to perhaps gain 1 bit of accuracy
    res = 0.5 - res
    return res + 0.5, nil
}

func Dhyper(x, r, b, n float64, giveLog bool) (float64, error) {
    if negativeOrNotInteger(r) || negativeOrNotInteger(b) || negativeOrNotInteger(n) || n > r+b {
        return math.NaN(), ErrDomain
    }
    if x < 0 {
        return 0, nil
    }
    if x != math.Floor(x) {
        return 0, fmt.Errorf(""non-integer x = %f"", x)
    }

    x = round(x)
    r = round(r)
    b = round(b)
    n = round(n)

    if n  b {
        return 0, nil
    }
    if n == 0 {
        if x == 0 {
            return 1, nil
        }
        return 0, nil
    }

    p := n / (r + b)
    q := (r + b - n) / (r + b)

    p1, err := dbinom(x, r, p, q, giveLog)
    if err != nil {
        return math.NaN(), err
    }
    p2, err := dbinom(n-x, b, p, q, giveLog)
    if err != nil {
        return math.NaN(), err
    }
    p3, err := dbinom(n, r+b, p, q, giveLog)
    if err != nil {
        return math.NaN(), err
    }

    if giveLog {
        return p1 + p2 - p3, nil
    }
    return p1 * p2 / p3, nil
}

func Qhyper(p, NR, NB, n float64, lowerTail, logP bool) (float64, error) {
    if notFinite(p) || notFinite(NR) || notFinite(NB) || notFinite(n) {
        return math.NaN(), ErrDomain
    }

    NR = round(NR)
    NB = round(NB)
    N := NR + NB
    n = round(n)
    if NR  N {
        return math.NaN(), ErrDomain
    }

    /* Goal: Find xr (= #{red balls in sample}) such that
    * phyper(xr, NR,NB, n) >= p > phyper(xr - 1, NR,NB, n)
     */

    xstart := math.Max(0, n-NB)
    xend := math.Min(n, NR)

    if logP {
        if p > 0 {
            return math.NaN(), ErrDomain
        }
        if p == 0 { /* upper bound*/
            if lowerTail {
                return xend, nil
            }
            return xstart, nil
        }
        if math.IsInf(p, -1) {
            if lowerTail {
                return xstart, nil
            }
            return xend, nil
        }
    } else { /* !logP */
        if p  1 {
            return math.NaN(), ErrDomain
        }
        if p == 0 {
            if lowerTail {
                return xstart, nil
            }
            return xend, nil
        }
        if p == 1 {
            if lowerTail {
                return xend, nil
            }
            return xstart, nil
        }
    }

    xr := xstart
    xb := n - xr /* always ( = #{black balls in sample} ) */

    smallN := N < 1000 /* won't have underflow in product below */
    /* if N is small, term := product.ratio( bin.coef );
    otherwise work with its logarithm to protect against underflow */
    t1, err := lfastchoose(NR, xr)
    if err != nil {
        return 0, err
    }
    t2, err := lfastchoose(NB, xb)
    if err != nil {
        return 0, err
    }
    t3, err := lfastchoose(N, n)
    if err != nil {
        return 0, err
    }
    term := t1 + t2 - t3
    if smallN {
        term = math.Exp(term)
    }
    NR -= xr
    NB -= xb

    if !lowerTail || logP {
        p = qIv(p, lowerTail, logP)
    }
    p *= 1 - 1000*epsilon /* was 64, but failed on FreeBSD sometimes */
    var sum float64
    if smallN {
        sum = term
    } else {
        sum = math.Exp(term)
    }

    for sum < p && xr < xend {
        xr++
        NB++
        if smallN {
            term *= (NR / xr) * (xb / NB)
        } else {
            term += math.Log((NR / xr) * (xb / NB))
        }
        if smallN {
            sum += term
        } else {
            sum += math.Exp(term)
        }
        xb--
        NR--
    }
    return xr, nil
}

func lfastchoose(n, k float64) (float64, error) {
    lb, err := lbeta(n-k+1, k+1)
    if err != nil {
        return math.NaN(), err
    }
    return -math.Log(n+1) - lb, nil
}

func lbeta(a, b float64) (float64, error) {
    p := a
    q := a
    if b < p {
        p = b
    } /* := min(a,b) */
    if b > q {
        q = b
    } /* := max(a,b) */

    /* both arguments must be >= 0 */
    if p < 0 {
        return math.NaN(), ErrDomain
    } else if p == 0 {
        return math.Inf(1), nil
    } else if notFinite(q) { /* q == +Inf */
        return math.Inf(1), nil
    }

    if p >= 10 {
        /* p and q are big. */
        corr := stirlerr(p) + stirlerr(q) - stirlerr(p+q)
        return math.Log(q)*-0.5 + logSqrt2Pi + corr + (p-0.5)*math.Log(p/(p+q)) + q*math.Log1p(-p/(p+q)), nil
    } else if q >= 10 {
        /* p is small, but q is big. */
        corr := stirlerr(q) - stirlerr(p+q)
        return math.Gamma(p) + corr + p - p*math.Log(p+q) + (q-0.5)*math.Log1p(-p/(p+q)), nil
    } else {
        /* p and q are small: p <= q < 10. */
        /* R change for very small args */
        if p < min {
            return lgamma(p) + (lgamma(q) - lgamma(p+q)), nil
        }
    }
    return math.Log(math.Gamma(p) * (math.Gamma(q) / math.Gamma(p+q))), nil
}

func lgamma(p float64) float64 {
    r, _ := math.Lgamma(p)
    return r
}

func qIv(p float64, lowerTail, logP bool) float64 {
    if logP {
        if lowerTail {
            return math.Exp(p)
        }
        return -math.Expm1(p)
    }
    if lowerTail {
        return p
    }
    p = 0.5 - p
    return p + 0.5
}

// Calculate
//
// phyper (x, r, b, n, TRUE, FALSE)
// [log] ----------------------------------
// dhyper (x, r, b, n, FALSE)
//
// without actually calling phyper. This assumes that
//
// x * (r + b) <= n * r
func pdhyper(x, r, b, n float64, logP bool) float64 {

    sum := 0.
    term := 1.

    for x > 0 && term >= epsilon*sum {
        term *= x * (b - n + x) / (n + 1 - x) / (r + 1 - x)
        sum += term
        x--
    }

    if logP {
        return math.Log1p(sum)
    }
    return 1 + sum
}

var (
    ln2   = math.Log(2)
    ln2Pi = math.Log(2 * math.Pi)
)

func log(x float64, lowerTail bool) float64 {
    if lowerTail {
        return math.Log(x)
    }
    if x > -ln2 {
        return math.Log(-math.Expm1(x))
    }
    return math.Log1p(-math.Exp(x))
}

func dbinom(x, n, p, q float64, giveLog bool) (float64, error) {
    if p == 0 {
        if x == 0 {
            return 1, nil
        }
        return 0, nil
    }
    if q == 0 {
        if x == n {
            return 1, nil
        }
        return 0, nil
    }

    if x == 0 {
        if n == 0 {
            return 1, nil
        }
        if p < 0.1 {
            t, err := bd0(n, n*q)
            if err != nil {
                return math.NaN(), err
            }
            return exp(-t-n*p, giveLog), nil
        }
        return exp(n*math.Log(q), giveLog), nil
    }
    if x == n {
        if q < 0.1 {
            t, err := bd0(n, n*p)
            if err != nil {
                return math.NaN(), err
            }
            return exp(-t-n*q, giveLog), nil
        }
        return exp(n*math.Log(p), giveLog), nil
    }
    if x  n {
        return 0, nil
    }

    // n*p or n*q can underflow to zero if n and p or q are small. This
    // used to occur in dbeta, and gives NaN as from R 2.3.0.
    t1, err := bd0(x, n*p)
    if err != nil {
        return math.NaN(), err
    }
    t2, err := bd0(n-x, n*q)
    if err != nil {
        return math.NaN(), err
    }
    lc := stirlerr(n) - stirlerr(x) - stirlerr(n-x) - t1 - t2

    // f = (M_2PI*x*(n-x))/n; could overflow or underflow
    // Upto R 2.7.1:
    // lf = log(M_2PI) + log(x) + log(n-x) - log(n);
    // -- following is much better for x << n :
    lf := ln2Pi + math.Log(x) + math.Log1p(-x/n)

    return exp(lc-0.5*lf, giveLog), nil
}

func negativeOrNotInteger(x float64) bool {
    return x < 0 || x != math.Floor(x)
}

func notFinite(x float64) bool {
    return math.IsNaN(x) || math.IsInf(x, 0)
}

func round(x float64) float64 {
    if _, frac := math.Modf(x); frac >= 0.5 {
        return math.Ceil(x)
    }
    return math.Floor(x)
}

func exp(x float64, giveLog bool) float64 {
    if giveLog {
        return x
    }
    return math.Exp(x)
}

func dt0(lowerTail, logP bool) float64 {
    if lowerTail {
        return d0(logP)
    }
    return d1(logP)
}

func dt1(lowerTail, logP bool) float64 {
    if lowerTail {
        return d1(logP)
    }
    return d0(logP)
}

func d0(logP bool) float64 {
    if logP {
        return math.Inf(-1)
    }
    return 0
}

func d1(logP bool) float64 {
    if logP {
        return 0
    }
    return 1
}

// bd0(x,M) :=  M * D0(x/M) = M*[ x/M * log(x/M) + 1 - (x/M) ] =
//       =  x * log(x/M) + M - x
// where M = E[X] = n*p (or = lambda), for   x, M > 0
//
// in a manner that should be stable (with small relative error)
// for all x and M=np. In particular for x/np close to 1, direct
// evaluation fails, and evaluation is based on the Taylor series
// of log((1+v)/(1-v)) with v = (x-M)/(x+M) = (x-np)/(x+np).
//
func bd0(x, np float64) (float64, error) {
    if notFinite(x) || notFinite(np) || np == 0 {
        return math.NaN(), ErrDomain
    }

    if math.Abs(x-np) < 0.1*(x+np) {
        v := (x - np) / (x + np) // might underflow to 0
        s := (x - np) * v        // s using v -- change by MM
        if math.Abs(s) < min {
            return s, nil
        }
        ej := 2 * x * v
        v = v * v
        for j := 1; j < 1000; j++ {
            // Taylor series; 1000: no infinite loop
            // as |v| < .1,  v^2000 is ""zero""
            ej *= v // = v^(2j+1)
            s1 := s + ej/float64((j<<1)+1)
            if s1 == s { // last term was effectively 0
                return s1, nil
            }
            s = s1
        }
    }
    /* else:  | x - np |  is not too small */
    return x*math.Log(x/np) + np - x, nil
}

var (
    // error for 0, 0.5, 1.0, 1.5, ..., 14.5, 15.0.
    sfErrHalves = [31]float64{
        0.0, // n=0 - wrong, place holder only
        0.1534264097200273452913848,   // 0.5
        0.0810614667953272582196702,   // 1.0
        0.0548141210519176538961390,   // 1.5
        0.0413406959554092940938221,   // 2.0
        0.03316287351993628748511048,  // 2.5
        0.02767792568499833914878929,  // 3.0
        0.02374616365629749597132920,  // 3.5
        0.02079067210376509311152277,  // 4.0
        0.01848845053267318523077934,  // 4.5
        0.01664469118982119216319487,  // 5.0
        0.01513497322191737887351255,  // 5.5
        0.01387612882307074799874573,  // 6.0
        0.01281046524292022692424986,  // 6.5
        0.01189670994589177009505572,  // 7.0
        0.01110455975820691732662991,  // 7.5
        0.010411265261972096497478567, // 8.0
        0.009799416126158803298389475, // 8.5
        0.009255462182712732917728637, // 9.0
        0.008768700134139385462952823, // 9.5
        0.008330563433362871256469318, // 10.0
        0.007934114564314020547248100, // 10.5
        0.007573675487951840794972024, // 11.0
        0.007244554301320383179543912, // 11.5
        0.006942840107209529865664152, // 12.0
        0.006665247032707682442354394, // 12.5
        0.006408994188004207068439631, // 13.0
        0.006171712263039457647532867, // 13.5
        0.005951370112758847735624416, // 14.0
        0.005746216513010115682023589, // 14.5
        0.005554733551962801371038690, // 15.0
    }

    logSqrt2Pi = math.Log(math.Sqrt(2 * math.Pi))
)

// stirlerr(n) = log(n!) - log( sqrt(2*pi*n)*(n/e)^n )
//             = log Gamma(n+1) - 1/2 * [log(2*pi) + log(n)] - n*[log(n) - 1]
//             = log Gamma(n+1) - (n + 1/2) * log(n) + n - log(2*pi)/2
func stirlerr(n float64) float64 {
    const (
        S0 = 1. / 12.
        S1 = 1. / 360.
        S2 = 1. / 1260.
        S3 = 1. / 1680.
        S4 = 1. / 1188.
    )

    var nn float64

    if n <= 15.0 {
        nn = n + n
        if nn == math.Floor(nn) {
            return sfErrHalves[int(nn)]
        }
        lg, _ := math.Lgamma(n + 1)
        return lg - (n+0.5)*math.Log(n) + n - logSqrt2Pi
    }

    nn = n * n
    switch {
    case n > 500:
        return ((S0 - S1/nn) / n)
    case n > 80:
        return ((S0 - (S1-S2/nn)/nn) / n)
    case n > 35:
        return ((S0 - (S1-(S2-S3/nn)/nn)/nn) / n)
    default: // 15 < n <= 35
        return (S0 - (S1-(S2-(S3-S4/nn)/nn)/nn)/nn) / n
    }
}
",13684
77,24456511,"C:/Go/bin/go.exe build  [C:/Users/admins/Desktop/desktp/worm_scraper-master]
worm_scraper.go:11:2: cannot find package ""github.com/codegangsta/cli"" in any of:
    C:\Go\src\pkg\github.com\codegangsta\cli (from $GOROOT)
    C:\users\admins\gostuff\src\github.com\codegangsta\cli (from $GOPATH)
worm_scraper.go:12:2: cannot find package ""github.com/puerkitobio/goquery"" in any of:
    C:\Go\src\pkg\github.com\puerkitobio\goquery (from $GOROOT)
    C:\users\admins\gostuff\src\github.com\puerkitobio\goquery (from $GOPATH)
Error: process exited with code 1.
",556
78,24456511,"package main

import (
    ""errors""
    ""fmt""
    ""os""
    ""os/exec""
    ""regexp""
    ""strings""

    ""github.com/codegangsta/cli""
    ""github.com/puerkitobio/goquery""
)

const (
    MainSite        = ""https://parahumans.wordpress.com/""
    TableOfContents = ""https://parahumans.wordpress.com/table-of-contents/""
)

type Arc struct {
    Identifier string
    Title      string
    Chapters   []Chapter
}

type Chapter struct {
    Title      string
    Url        string
    Tags       []string
    Paragraphs []Paragraph
    Retries    int
    DatePosted string
}

type Paragraph string

// Format the paragraph
func (p *Paragraph) Format() {
    s := string(*p)

    // Handle emphasis
    s = strings.Replace(s, """", ""*"", -1)
    s = strings.Replace(s, """", ""*"", -1)
    s = strings.Replace(s, """", ""*"", -1)
    s = strings.Replace(s, """", ""*"", -1)

    // Handle bold
    s = strings.Replace(s, """", ""**"", -1)
    s = strings.Replace(s, """", ""**"", -1)
    s = strings.Replace(s, """", ""**"", -1)
    s = strings.Replace(s, """", ""**"", -1)

    // Remove new lines
    s = strings.Replace(s, ""\n"", """", -1)

    // And random double spaces
    s = strings.Replace(s, "".  "", "". "", -1)

    *p = Paragraph(s)
}

// Return the Arc that the given chapter belongs to
func (ch *Chapter) WhichArc(arcList []*Arc) (*Arc, error) {
    for _, arc := range arcList {
        if strings.Replace(ch.Title[:2], ""."", """", -1) == arc.Identifier {
            return arc, nil
        }
    }
    return &Arc{}, errors.New(""chapter '"" + ch.Title + ""' did not match any Arcs"")
}

// Parse a chapter and return it
func (ch *Chapter) Parse(done chan bool) {
    if ch.Retries > 3 {
        panic(""Chapter url '"" + ch.Url + ""' has timed out too many times"")
    }
    // Get the chapter
    if strings.HasPrefix(ch.Url, ""http"") == false {
        // Make sure it begins with http so goquery can use it
        ch.Url = ""https://"" + ch.Url
    }
    doc, err := goquery.NewDocument(ch.Url)
    if err != nil {
        // Try again
        ch.Retries++
        go ch.Parse(done)
        return
    }

    // Set the new chapter title
    ch.Title = doc.Find(""h1.entry-title"").Text()

    // Set the tags
    doc.Find("".entry-meta a[rel=tag]"").Each(func(_ int, s *goquery.Selection) {
        ch.Tags = append(ch.Tags, s.Text())
        if len(ch.Tags) == 0 {
            ch.Tags = append(ch.Tags, ""NONE"")
        }
    })

    // Get the date it was posted
    ch.DatePosted = doc.Find(""time.entry-date"").Text()

    // Now we'll get all the paragraphs
    doc.Find("".entry-content > p"").Each(func(_ int, s *goquery.Selection) {
        // Check for the previous/next links
        if len(s.Find(""a"").Nodes) > 0 {
            return
        }

        // Get the paragraph HTML
        st, _ := s.Html()
        para := Paragraph("""")

        // Get the actual paragraph
        if val, exists := s.Attr(""padding-left""); exists && val == ""30px"" {
            // Check to see if the paragraph is special (indented) block
            para = Paragraph(""    "" + st)
        } else if val, exists := s.Attr(""text-align""); exists && val == ""center"" {
            // Otherwise check to see if it's a separator paragraph
            para = Paragraph(""----------"")
        } else {
            // It's just a normal paragraph in this case
            para = Paragraph(st)
        }

        // And add the paragraph to the chapter
        para.Format()
        ch.Paragraphs = append(ch.Paragraphs, para)
    })

    // Finally, let's signal a success
    done <- true
}

// Return a slice of Arcs extracted from the table of contents
func ParseArcs(s string) []*Arc {
    arcs := []*Arc{}
    r, _ := regexp.Compile(`[0-9]+`)
    for _, line := range strings.Split(s, ""\n"") {
        line = strings.TrimSpace(line)
        if strings.HasPrefix(line, ""Arc"") {
            arcs = append(arcs, &Arc{
                Identifier: r.FindString(line),
                Title:      line,
            })
        } else if strings.HasPrefix(line, ""Epilogue"") {
            arcs = append(arcs, &Arc{
                Identifier: ""E"",
                Title:      line,
            })
        }
    }
    return arcs
}

func main() {
    // Define the app
    app := cli.NewApp()
    app.Name = ""Worm Scraper""
    app.Usage = ""A tool to let you get an updated EPUB copy of the serial web novel Worm, by Wildbow""
    app.Version = ""1.0""
    app.Author = ""Benjamin Harris""

    // Define the application flags
    app.Flags = []cli.Flag{
        cli.BoolFlag{""pdf"", ""Save the book as a PDF instead of an EPUB, if possible""},
        cli.BoolFlag{""with-link"", ""Include a link to the chapter online""},
        cli.BoolFlag{""with-tags"", ""Include the tags each chapter was posted under""},
        cli.BoolFlag{""with-date"", ""Include the date each chapter was posted""},
    }

    // The heart of the application
    app.Action = func(context *cli.Context) {
        // Starting the program
        fmt.Println(""Starting to scrape Worm"")

        // Get the list of arcs from the table of contents
        fmt.Println(""Gathering links from table of contents..."")
        contents, err := goquery.NewDocument(TableOfContents)
        if err != nil {
            panic(""Failed to get the table of contents! "" + err.Error())
        }

        // Parse the arcs
        arcs := ParseArcs(contents.Find("".entry-content"").Text())

        // Now get the links for the arc chapters
        contents.Find("".entry-content a:not([class*=share-icon])"").Each(func(_ int, s *goquery.Selection) {
            ch := Chapter{}
            ch.Title = strings.Replace(strings.TrimSpace(s.Text()), ""\n"", """", -1)
            ch.Url, _ = s.Attr(""href"")

            if ch.Title == """" {
                return
            }

            arc, _ := ch.WhichArc(arcs)
            arc.Chapters = append(arc.Chapters, ch)
        })

        // Manually add missing chapter in Epilogue
        c := Chapter{
            Title: ""E.2"",
            Url:   ""https://parahumans.wordpress.com/2013/11/05/teneral-e-2/"",
        }
        a, _ := c.WhichArc(arcs)
        a.Chapters = append(a.Chapters, c)
        copy(a.Chapters[1+1:], a.Chapters[1:])
        a.Chapters[1] = c

        // Now start getting the chapters
        chapters := 0
        done := make(chan bool)
        for _, arc := range arcs {
            for i, _ := range arc.Chapters {
                chapters++
                go arc.Chapters[i].Parse(done)
            }
        }

        fmt.Println(""Starting to parse"", chapters, ""chapters"")
        fmt.Print(""Finished: "")

        totalChapters := chapters
        for {
            select {
            case <-done:
                chapters--
                fmt.Print(totalChapters-chapters, "","")
            }
            if chapters == 0 {
                // We're done with all the chapters
                close(done)
                fmt.Println()
                break
            }
        }

        // And let's write all this stuff to a file now
        fmt.Println(""Saving results to file..."")
        f, err := os.OpenFile(""Worm.md"", os.O_RDWR|os.O_CREATE|os.O_EXCL, 0666)
        if err != nil {
            panic(err)
        }
        defer f.Close()

        // Define pagebreak
        PageBreak := ""\n\n""

        // Write the cover
        f.WriteString(""# Worm\n\n"")
        f.WriteString(""By Wildbow\n\n"")
        f.WriteString(""Website: "" + MainSite)

        // Now loop through the Arcs
        for _, arc := range arcs {
            f.WriteString(PageBreak + ""# "" + arc.Title)
            for _, chapter := range arc.Chapters {
                f.WriteString(""\n\n"")
                f.WriteString(""## "" + chapter.Title + ""\n\n"")
                if context.Bool(""with-tags"") {
                    f.WriteString(""**Tags:** "" + strings.Join(chapter.Tags, "", "") + ""  "")
                }
                if context.Bool(""with-date"") {
                    f.WriteString(""**Date:** "" + chapter.DatePosted + ""  "")
                }
                if context.Bool(""with-link"") {
                    f.WriteString(""**Link:** "" + chapter.Url + ""  "")
                }
                f.WriteString(""\n\n"")

                // Now save the chapter's paragraphs
                for _, p := range chapter.Paragraphs {
                    f.WriteString(string(p) + ""\n\n"")
                }
            }
        }

        // Now let's try to convert the markdown file into an ebook format (epub, pdf)
        fmt.Print(""Attempting to convert Markdown file... "")
        cmdText := []string{""-S"", ""Worm.md"", ""--epub-chapter-level"", ""2"", ""-o"", ""Worm.epub""}
        if context.Bool(""pdf"") {
            cmdText = []string{""Worm.md"", ""-o"", ""Worm.pdf""}
            PageBreak = ``
        }
        cmd := exec.Command(""pandoc"", cmdText...)
        err = cmd.Run()
        if err != nil {
            fmt.Println(""Conversion failed! Make sure you've installed Pandoc (http://johnmacfarlane.net/pandoc/installing.html) if you want to convert the generated Markdown file to an ebook compatible format. In the meantime, we've left you the Markdown file."")
        } else {
            _ = os.Remove(""Worm.md"")
            fmt.Println(""Completed!"")
        }
    }

    // Run the application
    app.Run(os.Args)
}
",9250
79,26353365,a.txt,5
80,26353365,"# 3072441,117185083
1,2
1,3
1,4
1,5
",36
81,26353365,"# Undirected graph: ../../data/output/orkut.txt
# Orkut
# Nodes: 3072441 Edges: 117185083
# FromNodeId    ToNodeId
1   2
1   3
1   4
1   5
",139
82,26353365,"1   2
1   3
1   4
1   5
",24
83,26353365,Edge,4
84,26353365,"type Edge struct {
    u, v int
}
",34
85,26353365,"type Edge struct {
    U, V uint32
}
",37
86,26353365,append,6
87,26353365,append,6
88,26353365,"make(T, n)",10
89,26353365,string,6
90,26353365,string,6
91,26353365,scanner.Text(),14
92,26353365,byte,4
93,26353365,strconv,7
94,26353365,scanner.Bytes(),15
95,26353365,strconv.ParseUint,17
96,26353365,bytconv,7
97,26353365,orkut.go,8
98,26353365,"package main

import (
    ""bufio""
    ""bytes""
    ""errors""
    ""fmt""
    ""os""
    ""runtime""
    ""sort""
    ""strconv""
)

type Edge struct {
    U, V uint32
}

func (e Edge) String() string {
    return fmt.Sprintf(""%d,%d"", e.U, e.V)
}

type ByKey []Edge

func (a ByKey) Len() int      { return len(a) }
func (a ByKey) Swap(i, j int) { a[i], a[j] = a[j], a[i] }
func (a ByKey) Less(i, j int) bool {
    if a[i].U < a[j].U {
        return true
    }
    if a[i].U == a[j].U && a[i].V < a[j].V {
        return true
    }
    return false
}

func countEdges(scanner *bufio.Scanner) int {
    var nNodes, nEdges int
    for scanner.Scan() {
        line := scanner.Bytes()
        if !(len(line) > 0 && line[0] == '#') {
            nEdges++
            continue
        }
        n, err := fmt.Sscanf(string(line), ""# Nodes: %d Edges: %d"", &nNodes, &nEdges)
        if err != nil || n != 2 {
            n, err = fmt.Sscanf(string(line), ""# %d,%d"", &nNodes, &nEdges)
            if err != nil || n != 2 {
                continue
            }
        }
        fmt.Println(string(line))
        break
    }
    if err := scanner.Err(); err != nil {
        panic(err.Error())
    }
    fmt.Println(nEdges)
    return nEdges
}

func loadEdges(filename string) []Edge {
    file, err := os.Open(filename)
    if err != nil {
        panic(err.Error())
    }
    defer file.Close()

    scanner := bufio.NewScanner(file)
    nEdges := countEdges(scanner)
    edges := make([]Edge, 0, nEdges)
    offset, err := file.Seek(0, os.SEEK_SET)
    if err != nil || offset != 0 {
        panic(err.Error())
    }

    var sep byte = '\t'
    scanner = bufio.NewScanner(file)
    for scanner.Scan() {
        line := scanner.Bytes()
        if len(line) > 0 && line[0] == '#' {
            continue
        }
        i := bytes.IndexByte(line, sep)
        if i = len(line) {
            sep = ','
            i = bytes.IndexByte(line, sep)
            if i = len(line) {
                err := errors.New(""Invalid line format: "" + string(line))
                panic(err.Error())
            }
        }
        u, err := ParseUint(line[:i], 10, 32)
        if err != nil {
            panic(err.Error())
        }
        v, err := ParseUint(line[i+1:], 10, 32)
        if err != nil {
            panic(err.Error())
        }
        if u > v {
            u, v = v, u
        }
        edges = append(edges, Edge{uint32(u), uint32(v)})
    }
    if err := scanner.Err(); err != nil {
        panic(err.Error())
    }

    if len(edges) <= 1 {
        return edges
    }
    sort.Sort(ByKey(edges))
    j := 0
    i := j + 1
    for ; i < len(edges); i, j = i+1, j+1 {
        if edges[i] == edges[j] {
            break
        }
    }
    for ; i < len(edges); i++ {
        if edges[i] != edges[j] {
            j++
            edges[j] = edges[i]
        }
    }
    edges = edges[:j+1]
    return edges
}

func main() {
    if len(os.Args) <= 1 {
        err := errors.New(""Missing file name"")
        panic(err.Error())
    }
    filename := os.Args[1]
    fmt.Println(filename)
    edges := loadEdges(filename)

    var ms runtime.MemStats
    runtime.ReadMemStats(&ms)
    fmt.Println(ms.Alloc, ms.TotalAlloc, ms.Sys, ms.Mallocs, ms.Frees)
    fmt.Println(len(edges), cap(edges))
    for i, e := range edges {
        fmt.Println(e)
        if i >= 10 {
            break
        }
    }
}

// bytconv from strconv

// Return the first number n such that n*base >= 1<<64.
func cutoff64(base int) uint64 {
    if base < 2 {
        return 0
    }
    return (1<<64-1)/uint64(base) + 1
}

// ParseUint is like ParseInt but for unsigned numbers.
func ParseUint(s []byte, base int, bitSize int) (n uint64, err error) {
    var cutoff, maxVal uint64

    if bitSize == 0 {
        bitSize = int(strconv.IntSize)
    }

    s0 := s
    switch {
    case len(s) < 1:
        err = strconv.ErrSyntax
        goto Error

    case 2 <= base && base <= 36:
        // valid base; nothing to do

    case base == 0:
        // Look for octal, hex prefix.
        switch {
        case s[0] == '0' && len(s) > 1 && (s[1] == 'x' || s[1] == 'X'):
            base = 16
            s = s[2:]
            if len(s) < 1 {
                err = strconv.ErrSyntax
                goto Error
            }
        case s[0] == '0':
            base = 8
        default:
            base = 10
        }

    default:
        err = errors.New(""invalid base "" + strconv.Itoa(base))
        goto Error
    }

    n = 0
    cutoff = cutoff64(base)
    maxVal = 1<<uint(bitSize) - 1

    for i := 0; i < len(s); i++ {
        var v byte
        d := s[i]
        switch {
        case '0' <= d && d <= '9':
            v = d - '0'
        case 'a' <= d && d <= 'z':
            v = d - 'a' + 10
        case 'A' <= d && d <= 'Z':
            v = d - 'A' + 10
        default:
            n = 0
            err = strconv.ErrSyntax
            goto Error
        }
        if int(v) >= base {
            n = 0
            err = strconv.ErrSyntax
            goto Error
        }

        if n >= cutoff {
            // n*base overflows
            n = 1<<64 - 1
            err = strconv.ErrRange
            goto Error
        }
        n *= uint64(base)

        n1 := n + uint64(v)
        if n1  maxVal {
            // n+v overflows
            n = 1<<64 - 1
            err = strconv.ErrRange
            goto Error
        }
        n = n1
    }

    return n, nil

Error:
    return n, &strconv.NumError{""ParseUint"", string(s0), err}
}
",5515
99,26353365,"$ go build orkut.go
$ time ./orkut ~/release-orkut-links.txt
/home/peter/release-orkut-links.txt
223534301
1788305680 1788327856 1904683256 135 50
117185083 223534301
1,2
1,3
1,4
1,5
1,6
1,7
1,8
1,9
1,10
1,11
1,12
real    2m53.203s
user    2m51.584s
sys 0m1.628s
$
",265
100,26353365,orkut.go,8
101,26353365,release-orkut-links.txt,23
102,26353365,com-orkut.ungraph.txt,21
103,27491738,"func IndexVehicle(client *elastic.Client, vehicle Vehicle) (bool, error) {
    // See if it exists already
    fetch, err := client.Get().
        Index(vehicleIndex).
        Type(""vehicle"").
        Id(vehicle.Id).
        Do()
    if err != nil || fetch.Found {
        return false, err
    }

    vehicleName := fmt.Sprintf(""%s %s (%s) %s"", vehicle.Make, vehicle.Model, vehicle.Model_year, vehicle.Primary_fuel)

    suggest := elastic.NewSuggestField()
    suggest.Input(vehicle.Make, vehicle.Model, vehicle.Primary_fuel, vehicle.Model_year).
        Output(vehicleName).
        Payload(vehicle)

    // Go forth and save
    put, err := client.Index().
        Index(vehicleIndex).
        Type(""vehicle"").
        Id(vehicle.Id).
        Debug(true).Pretty(true).
        BodyJson(indexBody{Name: vehicleName, Suggest: suggest}).
        Do()
    if err != nil {
        return false, err
    }
    return put.Created, nil
}
",934
104,27491738,"2014/12/15 14:11:37 PUT /vehicle/vehicle/369f96459b340507c4688740da3bfe1a?pretty=true HTTP/1.1
Host: localhost:9200
User-Agent: elastic/1.3.1 (darwin-amd64)
Transfer-Encoding: chunked
Accept: application/json
Content-Type: application/json
Accept-Encoding: gzip

{""name"":""American Motors Corporation Eagle 4WD (1986) regular"",""suggest"":{""input"":[""American Motors Corporation"",""Eagle 4WD"",""regular"",""1986""],""output"":""American Motors Corporation Eagle 4WD (1986) regular"",""payload"":{""make"":""American Motors Corporation"",""model_year"":""1986"",""model"":""Eagle 4WD"",""primary_fuel"":""regular"",""vehicle_class"":""Special Purpose Vehicle 4WD"",""transmission"":""Automatic 3-spd"",""displacement"":""4.2"",""drive"":""4-Wheel or All-Wheel Drive"",""city_mpg"":""15.0"",""highway_mpg"":""19.0"",""comb_mpg"":""17.0""}}}

2014/12/15 14:11:37 HTTP/1.1 201 Created
Content-Length: 134
Content-Type: application/json; charset=UTF-8

{
  ""_index"" : ""vehicle"",
  ""_type"" : ""vehicle"",
  ""_id"" : ""369f96459b340507c4688740da3bfe1a"",
  ""_version"" : 1,
  ""created"" : true
}
",1023
105,27491738,err,3
106,27491738,IndexVehicle(),14
107,27491738,"E
Errors:

  * /Users/phil/go/src/github.com/ride/autocomplete/vehicle_test.go 
  Line 79: - elastic: Error 400: ElasticsearchIllegalArgumentException[No feature for name [vehicle]] 
  goroutine 245 [running]:
  github.com/ride/autocomplete.func·033()
    /Users/phil/go/src/github.com/ride/autocomplete/vehicle_test.go:79 +0x249
  github.com/ride/autocomplete.useIndex(0x499e98)
    /Users/phil/go/src/github.com/ride/autocomplete/test_helper.go:18 +0x55
  github.com/ride/autocomplete.func·034()
    /Users/phil/go/src/github.com/ride/autocomplete/vehicle_test.go:96 +0x2a
  github.com/jtolds/gls._m(0x0, 0xc2080ae9e0)
    /Users/phil/go/src/github.com/jtolds/gls/stack_tags.go:70 +0x32
  github.com/jtolds/gls.markS(0x0, 0xc2080ae9e0)
    /Users/phil/go/src/github.com/jtolds/gls/stack_tags.go:21 +0x32
  github.com/jtolds/gls.addStackTag(0x0, 0xc2080ae9e0)
    /Users/phil/go/src/github.com/jtolds/gls/stack_tags.go:18 +0x3e
  github.com/jtolds/gls.(*ContextManager).SetValues(0xc20801e080, 0xc2080b31d0, 0xc2080ae9e0)
    /Users/phil/go/src/github.com/jtolds/gls/context.go:98 +0x503
  github.com/ride/autocomplete.TestSearchForVehicles(0xc20806a480)
    /Users/phil/go/src/github.com/ride/autocomplete/vehicle_test.go:97 +0x243
  testing.tRunner(0xc20806a480, 0x5be890)
    /opt/boxen/homebrew/Cellar/go/1.4/libexec/src/testing/testing.go:447 +0xbf
  created by testing.RunTests
    /opt/boxen/homebrew/Cellar/go/1.4/libexec/src/testing/testing.go:555 +0xa8b

  goroutine 1 [chan receive]:
  testing.RunTests(0x49a078, 0x5be800, 0x7, 0x7, 0x67c001)
    /opt/boxen/homebrew/Cellar/go/1.4/libexec/src/testing/testing.go:556 +0xad6
  testing.(*M).Run(0xc2080463c0, 0x5c9b20)
    /opt/boxen/homebrew/Cellar/go/1.4/libexec/src/testing/testing.go:485 +0x6c
  main.main()
    github.com/ride/autocomplete/_test/_testmain.go:64 +0x1d5

  goroutine 208 [chan receive]:
  github.com/olivere/elastic.(*Client).pinger(0xc208106d40)
    /Users/phil/go/src/github.com/olivere/elastic/client.go:79 +0x6b
  created by github.com/olivere/elastic.NewClient
    /Users/phil/go/src/github.com/olivere/elastic/client.go:60 +0x26e

  goroutine 248 [runnable]:
  net/http.(*persistConn).readLoop(0xc20802e4d0)
    /opt/boxen/homebrew/Cellar/go/1.4/libexec/src/net/http/transport.go:928 +0x9ce
  created by net/http.(*Transport).dialConn
    /opt/boxen/homebrew/Cellar/go/1.4/libexec/src/net/http/transport.go:660 +0xc9f

  goroutine 98 [chan receive]:
  github.com/olivere/elastic.(*Client).pinger(0xc208033e00)
    /Users/phil/go/src/github.com/olivere/elastic/client.go:79 +0x6b
  created by github.com/olivere/elastic.NewClient
    /Users/phil/go/src/github.com/olivere/elastic/client.go:60 +0x26e

  goroutine 17 [syscall, locked to thread]:
  runtime.goexit()
    /opt/boxen/homebrew/Cellar/go/1.4/libexec/src/runtime/asm_amd64.s:2232 +0x1

  goroutine 44 [chan receive]:
  github.com/olivere/elastic.(*Client).pinger(0xc2080332c0)
    /Users/phil/go/src/github.com/olivere/elastic/client.go:79 +0x6b
  created by github.com/olivere/elastic.NewClient
    /Users/phil/go/src/github.com/olivere/elastic/client.go:60 +0x26e

  goroutine 249 [select]:
  net/http.(*persistConn).writeLoop(0xc20802e4d0)
    /opt/boxen/homebrew/Cellar/go/1.4/libexec/src/net/http/transport.go:945 +0x41d
  created by net/http.(*Transport).dialConn
    /opt/boxen/homebrew/Cellar/go/1.4/libexec/src/net/http/transport.go:661 +0xcbc

  goroutine 54 [chan receive]:
  github.com/olivere/elastic.(*Client).pinger(0xc208032f80)
    /Users/phil/go/src/github.com/olivere/elastic/client.go:79 +0x6b
  created by github.com/olivere/elastic.NewClient
    /Users/phil/go/src/github.com/olivere/elastic/client.go:60 +0x26e

  goroutine 76 [chan receive]:
  github.com/olivere/elastic.(*Client).pinger(0xc208032e00)
    /Users/phil/go/src/github.com/olivere/elastic/client.go:79 +0x6b
  created by github.com/olivere/elastic.NewClient
    /Users/phil/go/src/github.com/olivere/elastic/client.go:60 +0x26e

  goroutine 250 [chan receive]:
  github.com/olivere/elastic.(*Client).pinger(0xc208106c40)
    /Users/phil/go/src/github.com/olivere/elastic/client.go:79 +0x6b
  created by github.com/olivere/elastic.NewClient
    /Users/phil/go/src/github.com/olivere/elastic/client.go:60 +0x26e

  goroutine 120 [chan receive]:
  github.com/olivere/elastic.(*Client).pinger(0xc208106b00)
    /Users/phil/go/src/github.com/olivere/elastic/client.go:79 +0x6b
  created by github.com/olivere/elastic.NewClient
    /Users/phil/go/src/github.com/olivere/elastic/client.go:60 +0x26e

  goroutine 142 [chan receive]:
  github.com/olivere/elastic.(*Client).pinger(0xc208106e00)
    /Users/phil/go/src/github.com/olivere/elastic/client.go:79 +0x6b
  created by github.com/olivere/elastic.NewClient
    /Users/phil/go/src/github.com/olivere/elastic/client.go:60 +0x26e

  goroutine 164 [chan receive]:
  github.com/olivere/elastic.(*Client).pinger(0xc208106b80)
    /Users/phil/go/src/github.com/olivere/elastic/client.go:79 +0x6b
  created by github.com/olivere/elastic.NewClient
    /Users/phil/go/src/github.com/olivere/elastic/client.go:60 +0x26e

  goroutine 186 [chan receive]:
  github.com/olivere/elastic.(*Client).pinger(0xc208106d00)
    /Users/phil/go/src/github.com/olivere/elastic/client.go:79 +0x6b
  created by github.com/olivere/elastic.NewClient
    /Users/phil/go/src/github.com/olivere/elastic/client.go:60 +0x26e

  goroutine 230 [chan receive]:
  github.com/olivere/elastic.(*Client).pinger(0xc208106dc0)
    /Users/phil/go/src/github.com/olivere/elastic/client.go:79 +0x6b
  created by github.com/olivere/elastic.NewClient
    /Users/phil/go/src/github.com/olivere/elastic/client.go:60 +0x26e
",5650
108,27491738,"func ResetVehicleIndex(client *elastic.Client) (err error) {

    if _, err = client.DeleteIndex(vehicleIndex).Do(); err != nil {
        return
    }
    if _, err = EnsureVehicleIndex(client); err != nil {
        return
    }

    // TODO: This is awful. Switch to ""wait for green"" when elastic client supports it
    time.Sleep(time.Second * 1)

    return nil
}
",367
109,27643234,"gcloud config set project 
gcloud components update app
gcloud components update gae-go
goapp get google.golang.org/appengine
# remove existing containers & images just to be sure
docker rm $(docker ps -a -q)
docker rmi $(docker images -q)
gcloud preview app setup-managed-vms
cd $GOPATH/src/google.golang.org/appengine/demos/helloworld
gcloud --verbosity debug preview app run --enable-mvm-logs .
",398
110,27643234,"DEBUG: Running gcloud.preview.app.run with _Args({'admin_host': None,
 'allow_skipped_files': False,
 'api_host': None,
 'appidentity_email_address': None,
 'appidentity_private_key_path': None,
 'auth_domain': 'gmail.com',
 'blobstore_path': None,
 'clear_datastore': False,
 'dart_dev_mode': None,
 'dart_pub_serve_host': None,
 'dart_sdk': None,
 'datastore_consistency_policy': 'time',
 'datastore_path': None,
 'default_gcs_bucket_name': None,
 'docker_host': None,
 'enable_cloud_datastore': False,
 'enable_mvm_logs': True,
 'enable_sendmail': False,
 'format': None,
 'h': None,
 'help': None,
 'host': None,
 'jvm_flag': None,
 'log_level': None,
 'logs_path': None,
 'markdown': None,
 'max_module_instances': None,
 'modules': ['.'],
 'php_executable_path': None,
 'project': None,
 'python_startup_script': None,
 'quiet': None,
 'require_indexes': False,
 'shell': None,
 'show_mail_body': False,
 'smtp_allow_tls': False,
 'smtp_host': None,
 'smtp_password': None,
 'smtp_user': None,
 'storage_path': None,
 'use_mtime_file_watcher': False,
 'user_output_enabled': None,
 'verbosity': 'debug'}).
WARNING: The [application] field is specified in file [/home/dallan/test/testvm3/src/google.golang.org/appengine/demos/helloworld/app.yaml].  This field is not used by gcloud and should be removed.
DEBUG: Found Cloud SDK root: /home/dallan/tools/google-cloud-sdk
DEBUG: Found App Engine SDK root: /home/dallan/tools/google-cloud-sdk/platform/google_appengine
DEBUG: Command sys.path: ['/home/dallan/tools/google-cloud-sdk/platform/google_appengine/lib/antlr3', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine/lib/fancy_urllib', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine/lib/ipaddr', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine/lib/yaml-3.10', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine/lib/rsa', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine/lib/pyasn1', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine/lib/pyasn1_modules', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine/lib/concurrent', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine/lib/cherrypy', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine/lib/distutils', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine/lib/requests', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine/lib/six', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine/lib/websocket', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine/lib/docker', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine/lib/jinja2-2.6', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine/lib/webob-1.2.3', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine/lib/webapp2-2.5.1', '/home/dallan/tools/google-cloud-sdk/./lib', '/home/dallan/tools/google-cloud-sdk/lib/googlecloudsdk/gcloud', '/home/dallan/tools/google-cloud-sdk/lib', '/usr/lib/python2.7/', '/usr/lib/python2.7/plat-x86_64-linux-gnu', '/usr/lib/python2.7/lib-tk', '/usr/lib/python2.7/lib-old', '/usr/lib/python2.7/lib-dynload']
Module [default] found in file [/home/dallan/test/testvm3/src/google.golang.org/appengine/demos/helloworld/app.yaml]
DEBUG: Detected docker environment variables: DOCKER_HOST=tcp:// localhost:2376, DOCKER_CERT_PATH=/home/dallan/.docker, DOCKER_TLS_VERIFY=1
DEBUG: Sent event: Event(category='Executions', action='gcloud', label=u'2014.12.19', value=0)
INFO: Looking for the Dockerfile in /home/dallan/test/testvm3/src/google.golang.org/appengine/demos/helloworld
INFO: Using Dockerfile found in /home/dallan/test/testvm3/src/google.golang.org/appengine/demos/helloworld
DEBUG: Found Cloud SDK root: /home/dallan/tools/google-cloud-sdk
DEBUG: Found images: [u'gcloud-credentials-image:latest', u'google/appengine-log-server:latest', u'google/appengine-log-processor:latest', u'google/appengine-go:latest', u'google/appengine-java:latest', u'google/appengine-python27:latest', u'busybox:latest', u'google/docker-registry:latest']
DEBUG: Found image: google/appengine-go
DEBUG: Running [dev_appserver.py] with: --allow_skipped_files=False --application=metal-shift-360 --auth_domain=gmail.com --clear_datastore=False --datastore_consistency_policy=time --dev_appserver_log_level=debug --enable_cloud_datastore=False --enable_mvm_logs=True --enable_sendmail=False --log_level=debug --require_indexes=False --show_mail_body=False --skip_sdk_update_check=True --smtp_allow_tls=False --use_mtime_file_watcher=False /home/dallan/test/testvm3/src/google.golang.org/appengine/demos/helloworld/app.yaml
INFO: Skipping SDK update check.
INFO: Starting API server at: http:// localhost:49580
DEBUG: Detected docker environment variables: DOCKER_HOST=tcp:// localhost:2376, DOCKER_CERT_PATH=/home/dallan/.docker, DOCKER_TLS_VERIFY=1
DEBUG: Sent event: Event(category='Commands', action='gcloud.preview.app.run', label='unknown', value=0)
DEBUG: _add_watch_for_path('/home/dallan/test/testvm3/src/google.golang.org/appengine/demos/helloworld')
INFO: Looking for image_id for image with tag google/appengine-log-server
INFO: Creating container...
INFO: Container f243742e897d9c38c7c075bf7a6eedd3c054d68c356018c0268ba421dcab477f created.
INFO: Health checks starting for instance 0.
DEBUG: Performing health check for instance 0.
INFO: Starting Go VM Deployment process
INFO: Starting module ""default"" running at: http:// localhost:8080
DEBUG: Dispatching request to  after 0.0000s pending
INFO: Starting admin server at: http:// localhost:8000
DEBUG: Starting process ['/home/dallan/tools/google-cloud-sdk/platform/google_appengine/goroot/bin/go-app-builder', '-app_base', '/home/dallan/test/testvm3/src/google.golang.org/appengine/demos/helloworld', '-arch', '6', '-dynamic', '-goroot', '/home/dallan/tools/google-cloud-sdk/platform/google_appengine/goroot', '-nobuild_files', '^^$', '-unsafe', '-gopath', '/home/dallan/test/testvm3', '-print_extras', '-vm', 'helloworld.go'] with input='', env={'GOARCH': 'amd64', 'GOOS': 'linux'}, cwd=None
INFO: Go VM Deployment process failed: [Errno 104] Connection reset by peer
ERROR: Internal error while starting instance.
Traceback (most recent call last):
  File ""/home/dallan/tools/google-cloud-sdk/platform/google_appengine/google/appengine/tools/devappserver2/module.py"", line 1823, in _start_instance
    if not inst.start():
  File ""/home/dallan/tools/google-cloud-sdk/platform/google_appengine/google/appengine/tools/devappserver2/instance.py"", line 274, in start
    self._runtime_proxy.start()
  File ""/home/dallan/tools/google-cloud-sdk/platform/google_appengine/google/appengine/tools/devappserver2/vm_runtime_proxy_go.py"", line 130, in start
    self._vm_runtime_proxy.start(dockerfile_dir=dst_deployment_dir)
  File ""/home/dallan/tools/google-cloud-sdk/platform/google_appengine/google/appengine/tools/devappserver2/vm_runtime_proxy.py"", line 196, in start
    self._module_configuration.major_version, runtime_config.instance_id)
  File ""/home/dallan/tools/google-cloud-sdk/platform/google_appengine/google/appengine/tools/devappserver2/log_manager.py"", line 172, in add
    _create_table(l)
  File ""/home/dallan/tools/google-cloud-sdk/platform/google_appengine/google/appengine/tools/devappserver2/log_manager.py"", line 138, in _create_table
    response = conn.getresponse()
  File ""/usr/lib/python2.7/httplib.py"", line 1045, in getresponse
    response.begin()
  File ""/usr/lib/python2.7/httplib.py"", line 409, in begin
    version, status, reason = self._read_status()
  File ""/usr/lib/python2.7/httplib.py"", line 365, in _read_status
    line = self.fp.readline(_MAXLINE + 1)
  File ""/usr/lib/python2.7/socket.py"", line 476, in readline
    data = self._sock.recv(self._rbufsize)
error: [Errno 104] Connection reset by peer
",7879
111,27643234,docker version,14
112,27643234,"Client version: 1.3.2
Client API version: 1.15
Go version (client): go1.3.3
Git commit (client): 39fa2fa
OS/Arch (client): linux/amd64
Server version: 1.3.2
Server API version: 1.15
Go version (server): go1.3.3
Git commit (server): 39fa2fa
",240
113,27643234,go version,10
114,27643234,"go version go1.4 linux/amd64
",29
115,27643234,gcloud preview app run,22
116,27643234,"FROM google/appengine-go
..snip..
ADD . /app
RUN /bin/bash /app/_ah/build.sh
",77
117,27643234,"docker run --rm -it --entrypoint /bin/bash google/appengine-go
",63
118,28301402,"WARNING: DATA RACE
Write by goroutine 18:
  runtime.mapassign1()
      c:/go/src/runtime/hashmap.go:383 +0x0
  net/textproto.MIMEHeader.Set()
      c:/go/src/net/textproto/header.go:22 +0xf4
  net/http.Header.Set()
      c:/go/src/net/http/header.go:31 +0x64
  project/middlewares/session.(*ctrl).setHttpHeader()
      D:/gocode/src/project/middlewares/session/ctrl.go:76 +0x9d
  project/middlewares/session.(*ctrl).evaluateJwt()
      D:/gocode/src/project/middlewares/session/ctrl.go:56 +0x31a
  project/middlewares/session.(*ctrl).serveHttp()
      D:/gocode/src/project/middlewares/session/ctrl.go:94 +0x8a
  project/middlewares/session.func┬À006()
      D:/gocode/src/project/middlewares/session/serve_http.go:23 +0x

Previous write by goroutine 17:
  runtime.mapassign1()
      c:/go/src/runtime/hashmap.go:383 +0x0
  net/textproto.MIMEHeader.Add()
      c:/go/src/net/textproto/header.go:15 +0x212
  net/http.Header.Add()
      c:/go/src/net/http/header.go:24 +0x64
  github.com/unrolled/secure.(*Secure).Process()
      D:/gocode/src/github.com/unrolled/secure/secure.go:177 +0xe5b
  project/middlewares/security.func┬À001()
      D:/gocode/src/project/middlewares/security/serve_http.go:33 +0

Goroutine 18 (running) created at:
  project/middlewares/session.ServeHttp()
      D:/gocode/src/project/middlewares/session/serve_http.go:29 +0x
  project/middlewares.New()
      D:/gocode/src/project/middlewares/ctrl.go:12 +0x99
  github.com/codegangsta/negroni.HandlerFunc.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:24 +0x5f
  github.com/codegangsta/negroni.middleware.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x114
  github.com/codegangsta/negroni.middleware.ServeHTTP┬Àfm()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x84
  github.com/codegangsta/negroni.(*Static).ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/static.go:30 +0xb71
  github.com/codegangsta/negroni.middleware.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x114
  github.com/codegangsta/negroni.middleware.ServeHTTP┬Àfm()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x84
  github.com/codegangsta/negroni.(*Logger).ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/logger.go:25 +0x249
  github.com/codegangsta/negroni.middleware.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x114
  github.com/codegangsta/negroni.middleware.ServeHTTP┬Àfm()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x84
  github.com/codegangsta/negroni.(*Recovery).ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/recovery.go:45 +0xd9
  github.com/codegangsta/negroni.middleware.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x114
  github.com/codegangsta/negroni.(*Negroni).ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:73 +0x1c7
  net/http/httptest.(*waitGroupHandler).ServeHTTP()
      c:/go/src/net/http/httptest/server.go:200 +0xfe
  net/http.serverHandler.ServeHTTP()
      c:/go/src/net/http/server.go:1703 +0x1fd
  net/http.(*conn).serve()
      c:/go/src/net/http/server.go:1204 +0x108e

Goroutine 17 (finished) created at:
  project/middlewares/security.ServeHttp()
      D:/gocode/src/project/middlewares/security/serve_http.go:37 +0
  project/middlewares.New()
      D:/gocode/src/project/middlewares/ctrl.go:12 +0x64
  github.com/codegangsta/negroni.HandlerFunc.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:24 +0x5f
  github.com/codegangsta/negroni.middleware.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x114
  github.com/codegangsta/negroni.middleware.ServeHTTP┬Àfm()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x84
  github.com/codegangsta/negroni.(*Static).ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/static.go:30 +0xb71
  github.com/codegangsta/negroni.middleware.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x114
  github.com/codegangsta/negroni.middleware.ServeHTTP┬Àfm()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x84
  github.com/codegangsta/negroni.(*Logger).ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/logger.go:25 +0x249
  github.com/codegangsta/negroni.middleware.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x114
  github.com/codegangsta/negroni.middleware.ServeHTTP┬Àfm()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x84
  github.com/codegangsta/negroni.(*Recovery).ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/recovery.go:45 +0xd9
  github.com/codegangsta/negroni.middleware.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x114
  github.com/codegangsta/negroni.(*Negroni).ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:73 +0x1c7
  net/http/httptest.(*waitGroupHandler).ServeHTTP()
      c:/go/src/net/http/httptest/server.go:200 +0xfe
  net/http.serverHandler.ServeHTTP()
      c:/go/src/net/http/server.go:1703 +0x1fd
  net/http.(*conn).serve()
      c:/go/src/net/http/server.go:1204 +0x108e
==================
2015/02/03 15:05:31 ctrl.go:17: End of process middlewares
2015/02/03 15:05:31 funcs.go:10: Create new user
2015/02/03 15:05:31 validate.go:14: Validate email thompson@example.com
2015/02/03 15:05:31 validate.go:100: Validate password Test!1234
2015/02/03 15:05:31 validate.go:52: Validate name:  ValidName
2015/02/03 15:05:31 create.go:120: Done
[negroni] Completed 0  in 197ms
PASS
ok      project/testing/account_test 0.664s
PS D:\gocode\src\project\testing\account_test> go test -race
2015/02/03 15:08:10 vs.go:50: Connect to neo4j db.
[negroni] Started POST /user
==================
WARNING: DATA RACE
Write by goroutine 18:
  net/http.(*response).Header()
      c:/go/src/net/http/server.go:615 +0x11a
  github.com/codegangsta/negroni.(*responseWriter).Header()
      :42 +0x78
  project/middlewares/session.(*ctrl).setHttpHeader()
      D:/gocode/src/project/middlewares/session/ctrl.go:76 +0x68
  project/middlewares/session.(*ctrl).evaluateJwt()
      D:/gocode/src/project/middlewares/session/ctrl.go:56 +0x31a
  project/middlewares/session.(*ctrl).serveHttp()
      D:/gocode/src/project/middlewares/session/ctrl.go:94 +0x8a
  project/middlewares/session.func┬À006()
      D:/gocode/src/project/middlewares/session/serve_http.go:23 +0x

Previous write by goroutine 17:
  net/http.(*response).Header()
      c:/go/src/net/http/server.go:615 +0x11a
  github.com/codegangsta/negroni.(*responseWriter).Header()
      :42 +0x78
  github.com/unrolled/secure.(*Secure).Process()
      D:/gocode/src/github.com/unrolled/secure/secure.go:177 +0xe24
  project/middlewares/security.func┬À001()
      D:/gocode/src/project/middlewares/security/serve_http.go:33 +0
",6964
119,28301402,"func New(res http.ResponseWriter, req *http.Request, next http.HandlerFunc) {

    if err := process(security.ServeHttp(res, req), session.ServeHttp(res, req)); err != nil {
        res.WriteHeader(http.StatusInternalServerError)
        return
    }

    log.Println(""End of process middlewares"")
    next(res, req)

}

// Process all middlewares
func process(chErrs ...<-chan error) error {

    for _, chErr := range chErrs {

        // Will abort the loop, when error occurs
        if err := <-chErr; err != nil {
            return err
        }

    }
    return nil
}
",577
120,28301402,"func Config() *negroni.Negroni {
    n := negroni.Classic()
    n.Use(negroni.HandlerFunc(middlewares.New))
    n.UseHandler(routes.Set())
    return n

}
",155
121,28353607,"// +build windows

/*
Package wmi provides a WQL interface for WMI on Windows.

Example code to print names of running processes:

    type Win32_Process struct {
        Name string
    }

    func main() {
        var dst []Win32_Process
        q := wmi.CreateQuery(&dst, """")
        err := wmi.Query(q, &dst)
        if err != nil {
            log.Fatal(err)
        }
        for i, v := range dst {
            println(i, v.Name)
        }
    }

*/
package wmi

import (
    ""bytes""
    ""errors""
    ""fmt""
    ""log""
    ""os""
    ""reflect""
    ""runtime""
    ""strconv""
    ""strings""
    ""sync""
    ""time""

    ""github.com/mattn/go-ole""
    ""github.com/mattn/go-ole/oleutil""
)

var l = log.New(os.Stdout, """", log.LstdFlags)

var (
    ErrInvalidEntityType = errors.New(""wmi: invalid entity type"")
    lock                 sync.Mutex
)

// QueryNamespace invokes Query with the given namespace on the local machine.
func QueryNamespace(query string, dst interface{}, namespace string) error {
    return Query(query, dst, nil, namespace)
}

// Query runs the WQL query and appends the values to dst.
//
// dst must have type *[]S or *[]*S, for some struct type S. Fields selected in
// the query must have the same name in dst. Supported types are all signed and
// unsigned integers, time.Time, string, bool, or a pointer to one of those.
// Array types are not supported.
//
// By default, the local machine and default namespace are used. These can be
// changed using connectServerArgs. See
// http://msdn.microsoft.com/en-us/library/aa393720.aspx for details.
func Query(query string, dst interface{}, connectServerArgs ...interface{}) error {
    dv := reflect.ValueOf(dst)
    if dv.Kind() != reflect.Ptr || dv.IsNil() {
        return ErrInvalidEntityType
    }
    dv = dv.Elem()
    mat, elemType := checkMultiArg(dv)
    if mat == multiArgTypeInvalid {
        return ErrInvalidEntityType
    }

    lock.Lock()
    defer lock.Unlock()
    runtime.LockOSThread()
    defer runtime.UnlockOSThread()

    err := ole.CoInitializeEx(0, ole.COINIT_MULTITHREADED)
    if err != nil {
        oleerr := err.(*ole.OleError)
        // S_FALSE           = 0x00000001 // CoInitializeEx was already called on this thread
        if oleerr.Code() != ole.S_OK && oleerr.Code() != 0x00000001 {
            return err
        }
    } else {
        // Only invoke CoUninitialize if the thread was not initizlied before.
        // This will allow other go packages based on go-ole play along
        // with this library.
        defer ole.CoUninitialize()
    }

    unknown, err := oleutil.CreateObject(""WbemScripting.SWbemLocator"")
    if err != nil {
        return err
    }
    defer unknown.Release()

    wmi, err := unknown.QueryInterface(ole.IID_IDispatch)
    if err != nil {
        return err
    }
    defer wmi.Release()

    // service is a SWbemServices
    serviceRaw, err := oleutil.CallMethod(wmi, ""ConnectServer"", connectServerArgs...)
    if err != nil {
        return err
    }
    service := serviceRaw.ToIDispatch()
    defer serviceRaw.Clear()

    // result is a SWBemObjectSet
    resultRaw, err := oleutil.CallMethod(service, ""ExecQuery"", query)
    if err != nil {
        return err
    }
    result := resultRaw.ToIDispatch()
    defer resultRaw.Clear()

    count, err := oleInt64(result, ""Count"")
    if err != nil {
        return err
    }

    // Initialize a slice with Count capacity
    dv.Set(reflect.MakeSlice(dv.Type(), 0, int(count)))

    var errFieldMismatch error
    for i := int64(0); i < count; i++ {
        err := func() error {
            // item is a SWbemObject, but really a Win32_Process
            itemRaw, err := oleutil.CallMethod(result, ""ItemIndex"", i)
            if err != nil {
                return err
            }
            item := itemRaw.ToIDispatch()
            defer itemRaw.Clear()

            ev := reflect.New(elemType)
            if err = loadEntity(ev.Interface(), item); err != nil {
                if _, ok := err.(*ErrFieldMismatch); ok {
                    // We continue loading entities even in the face of field mismatch errors.
                    // If we encounter any other error, that other error is returned. Otherwise,
                    // an ErrFieldMismatch is returned.
                    errFieldMismatch = err
                } else {
                    return err
                }
            }
            if mat != multiArgTypeStructPtr {
                ev = ev.Elem()
            }
            dv.Set(reflect.Append(dv, ev))
            return nil
        }()
        if err != nil {
            return err
        }
    }
    return errFieldMismatch
}

// ErrFieldMismatch is returned when a field is to be loaded into a different
// type than the one it was stored from, or when a field is missing or
// unexported in the destination struct.
// StructType is the type of the struct pointed to by the destination argument.
type ErrFieldMismatch struct {
    StructType reflect.Type
    FieldName  string
    Reason     string
}

func (e *ErrFieldMismatch) Error() string {
    return fmt.Sprintf(""wmi: cannot load field %q into a %q: %s"",
        e.FieldName, e.StructType, e.Reason)
}

var timeType = reflect.TypeOf(time.Time{})

// loadEntity loads a SWbemObject into a struct pointer.
func loadEntity(dst interface{}, src *ole.IDispatch) (errFieldMismatch error) {
    v := reflect.ValueOf(dst).Elem()
    for i := 0; i < v.NumField(); i++ {
        f := v.Field(i)
        isPtr := f.Kind() == reflect.Ptr
        if isPtr {
            ptr := reflect.New(f.Type().Elem())
            f.Set(ptr)
            f = f.Elem()
        }
        n := v.Type().Field(i).Name
        if !f.CanSet() {
            return &ErrFieldMismatch{
                StructType: f.Type(),
                FieldName:  n,
                Reason:     ""CanSet() is false"",
            }
        }
        prop, err := oleutil.GetProperty(src, n)
        if err != nil {
            errFieldMismatch = &ErrFieldMismatch{
                StructType: f.Type(),
                FieldName:  n,
                Reason:     ""no such struct field"",
            }
            continue
        }
        defer prop.Clear()

        switch val := prop.Value().(type) {
        case int, int64:
            var v int64
            switch val := val.(type) {
            case int:
                v = int64(val)
            case int64:
                v = val
            default:
                panic(""unexpected type"")
            }
            switch f.Kind() {
            case reflect.Int, reflect.Int8, reflect.Int16, reflect.Int32, reflect.Int64:
                f.SetInt(v)
            case reflect.Uint, reflect.Uint8, reflect.Uint16, reflect.Uint32, reflect.Uint64:
                f.SetUint(uint64(v))
            default:
                return &ErrFieldMismatch{
                    StructType: f.Type(),
                    FieldName:  n,
                    Reason:     ""not an integer class"",
                }
            }
        case string:
            iv, err := strconv.ParseInt(val, 10, 64)
            switch f.Kind() {
            case reflect.String:
                f.SetString(val)
            case reflect.Int, reflect.Int8, reflect.Int16, reflect.Int32, reflect.Int64:
                if err != nil {
                    return err
                }
                f.SetInt(iv)
            case reflect.Uint, reflect.Uint8, reflect.Uint16, reflect.Uint32, reflect.Uint64:
                if err != nil {
                    return err
                }
                f.SetUint(uint64(iv))
            case reflect.Struct:
                switch f.Type() {
                case timeType:
                    if len(val) == 25 {
                        mins, err := strconv.Atoi(val[22:])
                        if err != nil {
                            return err
                        }
                        val = val[:22] + fmt.Sprintf(""%02d%02d"", mins/60, mins%60)
                    }
                    t, err := time.Parse(""20060102150405.000000-0700"", val)
                    if err != nil {
                        return err
                    }
                    f.Set(reflect.ValueOf(t))
                }
            }
        case bool:
            switch f.Kind() {
            case reflect.Bool:
                f.SetBool(val)
            default:
                return &ErrFieldMismatch{
                    StructType: f.Type(),
                    FieldName:  n,
                    Reason:     ""not a bool"",
                }
            }
        default:
            typeof := reflect.TypeOf(val)
            if isPtr && typeof == nil {
                break
            }
            return &ErrFieldMismatch{
                StructType: f.Type(),
                FieldName:  n,
                Reason:     fmt.Sprintf(""unsupported type (%T)"", val),
            }
        }
    }
    return errFieldMismatch
}

type multiArgType int

const (
    multiArgTypeInvalid multiArgType = iota
    multiArgTypeStruct
    multiArgTypeStructPtr
)

// checkMultiArg checks that v has type []S, []*S for some struct type S.
//
// It returns what category the slice's elements are, and the reflect.Type
// that represents S.
func checkMultiArg(v reflect.Value) (m multiArgType, elemType reflect.Type) {
    if v.Kind() != reflect.Slice {
        return multiArgTypeInvalid, nil
    }
    elemType = v.Type().Elem()
    switch elemType.Kind() {
    case reflect.Struct:
        return multiArgTypeStruct, elemType
    case reflect.Ptr:
        elemType = elemType.Elem()
        if elemType.Kind() == reflect.Struct {
            return multiArgTypeStructPtr, elemType
        }
    }
    return multiArgTypeInvalid, nil
}

func oleInt64(item *ole.IDispatch, prop string) (int64, error) {
    v, err := oleutil.GetProperty(item, prop)
    if err != nil {
        return 0, err
    }
    defer v.Clear()

    i := int64(v.Val)
    return i, nil
}

// CreateQuery returns a WQL query string that queries all columns of src. where
// is an optional string that is appended to the query, to be used with WHERE
// clauses. In such a case, the ""WHERE"" string should appear at the beginning.
func CreateQuery(src interface{}, where string) string {
    var b bytes.Buffer
    b.WriteString(""SELECT "")
    s := reflect.Indirect(reflect.ValueOf(src))
    t := s.Type()
    if s.Kind() == reflect.Slice {
        t = t.Elem()
    }
    if t.Kind() != reflect.Struct {
        return """"
    }
    var fields []string
    for i := 0; i < t.NumField(); i++ {
        fields = append(fields, t.Field(i).Name)
    }
    b.WriteString(strings.Join(fields, "", ""))
    b.WriteString("" FROM "")
    b.WriteString(t.Name())
    b.WriteString("" "" + where)
    return b.String()
}
",10800
122,28416900,"package main

/*
#cgo LDFLAGS: -lbluetooth

#include 
#include 
#include 
*/
import ""C""

func main() {
        C.hci_get_route(nil)
}
",134
123,28416900,"CC=arm-linux-gnueabihf-gcc
CGO_ENABLED=1
GOARCH=arm
GOARM=6
",60
124,28416900,Segmentation fault,18
125,28416900,"LD_PRELOAD=/lib/arm-linux-gnueabihf/libSegFault.so
SEGFAULT_USE_ALTSTACK=1
",75
126,28416900,"*** Segmentation fault
Register dump:
 R0: 00000000   R1: 00000001   R2: bebf37f4   R3: bebf37fc
 R4: 00000000   R5: 00000000   R6: 00010c59   R7: 00000000
 R8: 00000000   R9: 00000000   SL: b6f33000   FP: 00000000
 IP: 0000004f   SP: bebf37ec   LR: 00010c6b   PC: 0005d7f4
 CPSR: 40000030
 Trap: 0000000e   Error: 00000817   OldMask: 00000000
 Addr: 00000001
Backtrace:
Memory map:
00010000-00125000 r-xp 00000000 b3:02 16193      /home/pi/test
00135000-0013b000 rw-p 00115000 b3:02 16193      /home/pi/test
0013b000-0014a000 rw-p 00000000 00:00 0 
0026b000-00290000 rw-p 00000000 00:00 0          [heap]
b6d53000-b6d73000 r-xp 00000000 b3:02 16080      /lib/arm-linux-gnueabihf/libgcc_s.so.1
b6d73000-b6d7a000 ---p 00020000 b3:02 16080      /lib/arm-linux-gnueabihf/libgcc_s.so.1
b6d7a000-b6d7b000 rw-p 0001f000 b3:02 16080      /lib/arm-linux-gnueabihf/libgcc_s.so.1
b6d7b000-b6e9f000 r-xp 00000000 b3:02 4254       /lib/arm-linux-gnueabihf/libc-2.13.so
b6e9f000-b6ea6000 ---p 00124000 b3:02 4254       /lib/arm-linux-gnueabihf/libc-2.13.so
b6ea6000-b6ea8000 r--p 00123000 b3:02 4254       /lib/arm-linux-gnueabihf/libc-2.13.so
b6ea8000-b6ea9000 rw-p 00125000 b3:02 4254       /lib/arm-linux-gnueabihf/libc-2.13.so
b6ea9000-b6eac000 rw-p 00000000 00:00 0 
b6eac000-b6ec0000 r-xp 00000000 b3:02 4247       /lib/arm-linux-gnueabihf/libpthread-2.13.so
b6ec0000-b6ec7000 ---p 00014000 b3:02 4247       /lib/arm-linux-gnueabihf/libpthread-2.13.so
b6ec7000-b6ec8000 r--p 00013000 b3:02 4247       /lib/arm-linux-gnueabihf/libpthread-2.13.so
b6ec8000-b6ec9000 rw-p 00014000 b3:02 4247       /lib/arm-linux-gnueabihf/libpthread-2.13.so
b6ec9000-b6ecb000 rw-p 00000000 00:00 0 
b6ecb000-b6ee0000 r-xp 00000000 b3:02 44311      /usr/lib/arm-linux-gnueabihf/libbluetooth.so.3.12.0
b6ee0000-b6ee7000 ---p 00015000 b3:02 44311      /usr/lib/arm-linux-gnueabihf/libbluetooth.so.3.12.0
b6ee7000-b6ee8000 r--p 00014000 b3:02 44311      /usr/lib/arm-linux-gnueabihf/libbluetooth.so.3.12.0
b6ee8000-b6eea000 rw-p 00015000 b3:02 44311      /usr/lib/arm-linux-gnueabihf/libbluetooth.so.3.12.0
b6ef8000-b6efa000 r-xp 00000000 b3:02 25761      /usr/lib/arm-linux-gnueabihf/libcofi_rpi.so
b6efa000-b6f01000 ---p 00002000 b3:02 25761      /usr/lib/arm-linux-gnueabihf/libcofi_rpi.so
b6f01000-b6f02000 rw-p 00001000 b3:02 25761      /usr/lib/arm-linux-gnueabihf/libcofi_rpi.so
b6f02000-b6f04000 r-xp 00000000 b3:02 4246       /lib/arm-linux-gnueabihf/libSegFault.so
b6f04000-b6f0b000 ---p 00002000 b3:02 4246       /lib/arm-linux-gnueabihf/libSegFault.so
b6f0b000-b6f0c000 r--p 00001000 b3:02 4246       /lib/arm-linux-gnueabihf/libSegFault.so
b6f0c000-b6f0d000 rw-p 00002000 b3:02 4246       /lib/arm-linux-gnueabihf/libSegFault.so
b6f0d000-b6f2a000 r-xp 00000000 b3:02 4248       /lib/arm-linux-gnueabihf/ld-2.13.so
b6f2e000-b6f32000 rw-p 00000000 00:00 0 
b6f32000-b6f33000 r--p 0001d000 b3:02 4248       /lib/arm-linux-gnueabihf/ld-2.13.so
b6f33000-b6f34000 rw-p 0001e000 b3:02 4248       /lib/arm-linux-gnueabihf/ld-2.13.so
bebd3000-bebf4000 rw-p 00000000 00:00 0 
bee7f000-bee80000 r-xp 00000000 00:00 0          [sigpage]
ffff0000-ffff1000 r-xp 00000000 00:00 0          [vectors]
Segmentation fault
",3185
127,28416900,/usr/lib/arm-linux-gnueabihf/libcofi_rpi.so,43
128,28416900,/etc/ld.so.preload,18
129,28416900,libcofi_rpi.so,14
130,28416900,"-tags netgo -a -ldflags ""-linkmode external -extldflags -static""",64
131,28416900,Illegal instruction,19
132,28416900,Segmentation fault,18
133,28416900,"$ docker run -it golang:1.4.1-cross bash
",41
134,28416900,"echo ""deb http://emdebian.org/tools/debian/ jessie main"" >/etc/apt/sources.list.d/crosstools.list
curl -s http://emdebian.org/tools/debian/emdebian-toolchain-archive.key | apt-key add -
dpkg --add-architecture armhf
apt-get update
apt-get install -y crossbuild-essential-armhf libbluetooth-dev:armhf
export CC=arm-linux-gnueabihf-gcc
export CGO_ENABLED=1
export GOARCH=arm
export GOARM=6
go build -o test test.go
",413
135,28416900,"$ uname -a
Linux raspberrypi 3.18.5+ #744 PREEMPT Fri Jan 30 18:19:07 GMT 2015 armv6l GNU/Linux

$ cat /proc/cpuinfo
processor       : 0
model name      : ARMv6-compatible processor rev 7 (v6l)
BogoMIPS        : 2.00
Features        : half thumb fastmult vfp edsp java tls 
CPU implementer : 0x41
CPU architecture: 7
CPU variant     : 0x0
CPU part        : 0xb76
CPU revision    : 7
Hardware        : BCM2708
Revision        : 0010
Serial          : 000000002a69d702

$ ldd test
        /usr/lib/arm-linux-gnueabihf/libcofi_rpi.so (0xb6f01000)
        libbluetooth.so.3 => /usr/lib/arm-linux-gnueabihf/libbluetooth.so.3 (0xb6ed4000)
        libpthread.so.0 => /lib/arm-linux-gnueabihf/libpthread.so.0 (0xb6eb5000)
        libc.so.6 => /lib/arm-linux-gnueabihf/libc.so.6 (0xb6d84000)
        /lib/ld-linux-armhf.so.3 (0xb6f0e000) 
",830
136,28416900,"$ dpkg -s libbluetooth3

Package: libbluetooth3
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 172
Maintainer: Debian Bluetooth Maintainers 
Architecture: armhf
Multi-Arch: same
Source: bluez
Version: 4.99-2
Replaces: libsdp2 (<= 1.5-2)
Depends: libc6 (>= 2.13-28)
Pre-Depends: multiarch-support
Conflicts: libsdp2 (<= 1.5-2)
Description: Library to use the BlueZ Linux Bluetooth stack
 BlueZ is the official Linux Bluetooth protocol stack. It is an Open Source
 project distributed under GNU General Public License (GPL).
Homepage: http://www.bluez.org
",585
137,28416900,"$ uname -a
Linux alarm 3.10.66-1-ARCH #1 SMP PREEMPT Wed Jan 28 18:12:35 MST 2015 armv7l GNU/Linux

$ cat /proc/cpuinfo
Processor       : ARMv7 Processor rev 1 (v7l)
processor       : 0
BogoMIPS        : 3.27

processor       : 1
BogoMIPS        : 3.27

processor       : 2
BogoMIPS        : 3.27

processor       : 3
BogoMIPS        : 3.27

Features        : swp half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 
CPU implementer : 0x41
CPU architecture: 7
CPU variant     : 0x0
CPU part        : 0xc05
CPU revision    : 1

Hardware        : ODROIDC
Revision        : 000a
Serial          : 1b00000000000000

$ ldd test
       libbluetooth.so.3 => /usr/lib/libbluetooth.so.3 (0xb6eaf000)
       libpthread.so.0 => /usr/lib/libpthread.so.0 (0xb6e87000)
       libc.so.6 => /usr/lib/libc.so.6 (0xb6d48000)
       /lib/ld-linux-armhf.so.3 (0xb6ed1000)
",850
138,28416900,"$ pacman -Qe bluez
bluez 5.27-1
",32
139,28416900,"$ uname -a
Linux 094aa2ed34a5 3.18.5-gentoo-tp #1 SMP Fri Feb 6 20:14:55 CET 2015 x86_64 GNU/Linux
",99
140,28416900,"$ dpkg -s libbluetooth-dev:armhf
Package: libbluetooth-dev
Status: install ok installed
Priority: extra
Section: libdevel
Installed-Size: 429
Maintainer: Debian Bluetooth Maintainers 
Architecture: armhf
Source: bluez (5.23-2)
Version: 5.23-2+b1
Replaces: libsdp2-dev (<= 1.5.2)
Provides: libbluetooth3-dev
Depends: libbluetooth3 (= 5.23-2+b1), libc6-dev | libc-dev
Suggests: pkg-config
Conflicts: bluez-pan, libbluetooth-dev, libsdp2-dev (<= 1.5.2)
Description: Development files for using the BlueZ Linux Bluetooth library
 BlueZ is the official Linux Bluetooth protocol stack. It is an Open Source
 project distributed under GNU General Public License (GPL).
Homepage: http://www.bluez.org
",693
141,28416900,libbluetooth-dev,16
142,28416900,libbluetooth.so,15
143,28416900,"./test: /lib/arm-linux-gnueabihf/libc.so.6: version `GLIBC_2.15' not found (required by /home/pi/libbluetooth.so.3.17.11)
",122
144,28416900,Illegal instruction (core dumped),33
145,28416900,GOARM=5,7
146,28416900,6,1
147,28416900,7,1
148,28416900,libbluetooth,12
149,28767067,varbinary(2000),15
150,28767067,"var charData CharacterData
db.Where(CharacterData{CharId: charId, Segment: 0}).FirstOrInit(&charData)
charData.Data = data[16:]
db.Save(&charData)
",147
151,28767067,len(data[16:]),14
152,28767067," type CharacterData struct {
  CharId    uint32
  Data      []byte
  Segment   uint8
  SegmentId uint16

  CreatedAt time.Time
  UpdatedAt time.Time
  DeletedAt time.Time
 }
",174
153,28767067,"fmt.Println(string(charData0))
fmt.Println(len(charData0))
fmt.Println(len(string(charData0)))

0uyuyuyyuyuyuyy���������������������������� // only this gets inserted to the db which is short of the actual 1587
1587
1587
",221
154,28767067,"INSERT INTO character_data (char_id, data, segment) VALUES ('2', '0tututututt����������������������������', '0')
",113
155,28767067,data[16:],9
156,28767067,"[0 0 48 6 1 0 1 0 104 101 104 101 104 101 104 101 104 101 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
",3253
157,28767067,"0tututututtÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ
",40
158,28767067,"pdukelÐÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ2ÿÿÿÿÿÿÿÿÿÿ1ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿHHllbÍfÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿúúúúúúúÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿþ  ú
úúþ
þþþþÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ'ÿÿ
",1044
159,28767067,"var charData0 []byte = data[16:]
hexData := fmt.Sprintf(""%x"", charData0)
fmt.Println(hexData)
db.Exec(""INSERT INTO character_data (char_id, data, segment) VALUES (?, UNHEX(?), ?)"", charId, hexData, 0)

=> 000030060100010079697969796979697979697900000000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff
",3380
160,28767067,"0yiyiyiyiyyiyÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ
",42
161,28767067,"INSERT INTO character_data (char_id, data, segment) VALUES ('4', UNHEX('000030060100010074757475747574757475740000000000050000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff0000000000000000000000000000ffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'), '0')
",3255
162,30478485,app.go,6
163,30478485,"""github.com/go-martini/martini""
""github.com/martini-contrib/binding""
""github.com/martini-contrib/render""
""github.com/moovweb/gokogiri""
""github.com/moovweb/gokogiri/xml""
",169
164,30478485,app.yaml,8
165,30478485,"application: app
version: 1
runtime: go
api_version: go1

handlers:
- url: /.*
  script: _go_app
",97
166,30478485,godep save,10
167,30478485,goapp serve,11
168,30478485,"SRSLY-2:app bezigon$ goapp serve
INFO     2015-05-27 09:11:22,645 devappserver2.py:745] Skipping SDK update check.
INFO     2015-05-27 09:11:23,048 api_server.py:190] Starting API server at: http://localhost:57449
INFO     2015-05-27 09:11:23,071 dispatcher.py:192] Starting module ""default"" running at: http://localhost:8080
INFO     2015-05-27 09:11:23,073 admin_server.py:118] Starting admin server at: http://localhost:8000
ERROR    2015-05-27 09:11:24,772 go_runtime.py:180] Failed to build Go application: (Executed command: /Users/bezigon/google-cloud-sdk/platform/google_appengine/goroot/bin/go-app-builder -app_base /Users/bezigon/go/src/github.com/bezigon/app -arch 6 -dynamic -goroot /Users/bezigon/google-cloud-sdk/platform/google_appengine/goroot -nobuild_files ^^$ -unsafe -gopath /Users/bezigon/go -print_extras_hash Godeps/_workspace/src/github.com/moovweb/gokogiri/html/xpath_test.go Godeps/_workspace/src/github.com/martini-contrib/binding/validate_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xml/attribute.go Godeps/_workspace/src/github.com/martini-contrib/binding/file_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xml/document_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xpath/util.go Godeps/_workspace/src/github.com/go-martini/martini/logger.go Godeps/_workspace/src/github.com/martini-contrib/binding/misc_test.go Godeps/_workspace/src/github.com/go-martini/martini/response_writer_test.go Godeps/_workspace/src/github.com/codegangsta/inject/inject_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xml/text.go Godeps/_workspace/src/github.com/go-martini/martini/go_version.go Godeps/_workspace/src/github.com/go-martini/martini/router_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xml/nodeset.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xpath/xpath_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xpath/xpath.go Godeps/_workspace/src/github.com/martini-contrib/binding/errors.go Godeps/_workspace/src/github.com/moovweb/gokogiri/mem/mem_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/help/help_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/html/fragment_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/html/node_test.go Godeps/_workspace/src/github.com/martini-contrib/render/render.go Godeps/_workspace/src/github.com/moovweb/gokogiri/help/help.go Godeps/_workspace/src/github.com/moovweb/gokogiri/mem/mem.go Godeps/_workspace/src/github.com/go-martini/martini/recovery.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xml/document.go Godeps/_workspace/src/github.com/moovweb/gokogiri/html/document.go Godeps/_workspace/src/github.com/moovweb/gokogiri/gokogiri.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xml/element.go Godeps/_workspace/src/github.com/martini-contrib/binding/errors_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/util/util_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xml/fragment.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xml/attribute_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/css/css_test.go Godeps/_workspace/src/github.com/oxtoacart/bpool/bytepool.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xml/fragment_test.go Godeps/_workspace/src/github.com/martini-contrib/binding/errorhandler_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xml/utils_test.go Godeps/_workspace/src/github.com/oxtoacart/bpool/bpool.go Godeps/_workspace/src/github.com/moovweb/gokogiri/util/util.go Godeps/_workspace/src/github.com/moovweb/gokogiri/html/utils_test.go Godeps/_workspace/src/github.com/go-martini/martini/response_writer.go Godeps/_workspace/src/github.com/moovweb/gokogiri/css/css.go Godeps/_workspace/src/github.com/go-martini/martini/env.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xml/search_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/gokogiri_test.go Godeps/_workspace/src/github.com/go-martini/martini/static_test.go Godeps/_workspace/src/github.com/codegangsta/inject/inject.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xpath/expression.go Godeps/_workspace/src/github.com/martini-contrib/binding/form_test.go Godeps/_workspace/src/github.com/go-martini/martini/static.go Godeps/_workspace/src/github.com/go-martini/martini/martini.go Godeps/_workspace/src/github.com/moovweb/gokogiri/html/fragment.go Godeps/_workspace/src/github.com/martini-contrib/binding/bind_test.go app.go Godeps/_workspace/src/github.com/martini-contrib/render/render_test.go Godeps/_workspace/src/github.com/martini-contrib/binding/binding.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xml/cdata.go Godeps/_workspace/src/github.com/go-martini/martini/martini_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xml/node_test.go Godeps/_workspace/src/github.com/oxtoacart/bpool/bufferpool.go Godeps/_workspace/src/github.com/martini-contrib/binding/json_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xpath/util_test.go Godeps/_workspace/src/github.com/go-martini/martini/router.go Godeps/_workspace/src/github.com/martini-contrib/binding/common_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xml/pi.go Godeps/_workspace/src/github.com/go-martini/martini/logger_test.go Godeps/_workspace/src/github.com/go-martini/martini/recovery_test.go Godeps/_workspace/src/github.com/go-martini/martini/return_handler.go Godeps/_workspace/src/github.com/moovweb/gokogiri/help/util_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/html/document_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/html/crash_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xml/comment.go Godeps/_workspace/src/github.com/martini-contrib/binding/multipart_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/xml/node.go Godeps/_workspace/src/github.com/go-martini/martini/env_test.go Godeps/_workspace/src/github.com/moovweb/gokogiri/html/encoding_test.go)

2015/05/27 12:11:24 go-app-builder: Failed parsing input: package github.com/moovweb/gokogiri/html required, but all its files were excluded by nobuild_files
",6095
169,30580746,"package galileo

import (
    ""encoding/json""
    ""golang.org/x/net/context""
    ""golang.org/x/oauth2""
    ""golang.org/x/oauth2/google""
    ""google.golang.org/appengine""
    ""google.golang.org/appengine/file""
    ""google.golang.org/appengine/urlfetch""
    ""google.golang.org/cloud""
    ""google.golang.org/cloud/storage""
    ""io""
    ""io/ioutil""
    ""log""
    ""net/http""
)

var bucket = ""prod_agl_expt""

// saveData struct holds information needed to run the various saving functions.
type saveData struct {
    c       context.Context
    r       *http.Request       //http response
    w       http.ResponseWriter //http writer
    ctx     context.Context
    cleanUp []string // cleanUp is a list of filenames that need cleaning up at the end of the saving.
    failed  bool     // failed indicates that one or more of the saving steps failed.
}

// saveData struct holds information needed to run the various saving functions.
type loadData struct {
    c       context.Context
    r       *http.Request       //http response
    w       http.ResponseWriter //http writer
    ctx     context.Context
    cleanUp []string // cleanUp is a list of filenames that need cleaning up at the end of the saving.
    failed  bool     // failed indicates that one or more of the saving steps failed.
}

type jsonStruct struct {
    User struct {
        Gender string `json:""gender""`
        Age    string `json:""age""`
        ID     string `json:""id""`
    } `json:""user""`
    Stim map[string]struct {
        Index           int    `json:""index""`
        Word            string `json:""word""`
        WordDisplayTime int    `json:""wordDisplayTime""`
        AnswerMaxTime   int    `json:""answerMaxTime""`
        FixationTime    int    `json:""fixationTime""`
        Train           bool   `json:""train""`
        Test            bool   `json:""test""`
        Grammatical     bool   `json:""grammatical""`
        Grammar         string `json:""grammar""`
        Keyboard        bool   `json:""keyboard""`
        TestSeq         int    `json:""testSeq""`
    } `json:""viewedTrials""`
    Answers struct {
        Training []struct {
            Answer   string  `json:""ans""`
            RT       float32 `json:""RT""`
            GtAnswer string  `json:""gtAns""`
            Correct  int     `json:""correct""`
        } `json:""training""`
        Test []struct {
            Answer   string  `json:""ans""`
            RT       float32 `json:""RT""`
            GtAnswer bool    `json:""gtAns""`
            Correct  int     `json:""correct""`
        } `json:""test""`
    } `json:""answers""`
    Trials []struct {
        Trial struct {
            Index           int    `json:""index""`
            Word            string `json:""word""`
            WordDisplayTime int    `json:""wordDisplayTime""`
            AnswerMaxTime   int    `json:""answerMaxTime""`
            FixationTime    int    `json:""fixationTime""`
            Train           bool   `json:""train""`
            Test            bool   `json:""test""`
            Grammatical     bool   `json:""grammatical""`
            Grammar         string `json:""grammar""`
            Keyboard        bool   `json:""keyboard""`
            TestSeq         int    `json:""testSeq""`
        } `json:""trial""`
        Metadata struct {
            Instructions string `json:""instructions""`
            SubmitUrl    string `json:""submitUrl""`
        } `json:""metadata""`
    } `json:""shuffledTrials""`
    Debriefing []struct {
        Type             string `json:""type""`
        RadioWithTextAns string `json:""radioWithTextAns""`
        TextAns          string `json:""textAns""`
        Rating           int    `json:""rating""`
        RadioOnlyAns     string `json:""radioOnlyAns""`
    } `json:""debriefingAns""`
}

type trialStruct []struct {
    Trial struct {
        Index           int    `json:""index""`
        Word            string `json:""word""`
        WordDisplayTime int    `json:""wordDisplayTime""`
        AnswerMaxTime   int    `json:""answerMaxTime""`
        FixationTime    int    `json:""fixationTime""`
        Train           bool   `json:""train""`
        Test            bool   `json:""test""`
        Grammatical     bool   `json:""grammatical""`
        Grammar         string `json:""grammar""`
        Keyboard        bool   `json:""keyboard""`
        TestSeq         int    `json:""testSeq""`
    } `json:""trial""`
    Metadata struct {
        Instructions string `json:""instructions""`
        SubmitUrl    string `json:""submitUrl""`
    } `json:""metadata""`
}

func fromJSON(r io.Reader) (jsonStruct, error) {
    var x jsonStruct
    dec := json.NewDecoder(r)
    err := dec.Decode(&x)
    return x, err
}

func toJSON(b io.Writer, trial trialStruct) (io.Writer, error) {
    enc := json.NewEncoder(b)
    err := enc.Encode(&trial)
    return b, err
}

func init() {
    http.HandleFunc(""/"", handleStatic)
    http.HandleFunc(""/saveUserData"", handleSaveUser)
    http.HandleFunc(""/loadTrials"", handleloadTrials)
}

func handleStatic(w http.ResponseWriter, r *http.Request) {
    w.Header().Set(""Cache-Control"", ""no-cache"")
    http.ServeFile(w, r, ""static/""+r.URL.Path)
}

// testSave is the main saving entry point that calls the GCS operations.
func handleSaveUser(w http.ResponseWriter, r *http.Request) {

    c := appengine.NewContext(r)
    if bucket == """" {
        var err error
        if bucket, err = file.DefaultBucketName(c); err != nil {
            // log.Errorf(c, ""failed to get default GCS bucket name: %v"", err)
            return
        }
    }
    hc := &http.Client{
        Transport: &oauth2.Transport{
            Source: google.AppEngineTokenSource(c, storage.ScopeFullControl),
            Base:   &urlfetch.Transport{Context: c},
        },
    }
    ctx := cloud.NewContext(appengine.AppID(c), hc)

    // structure to holds information needed to run the various saving functions
    d := &saveData{
        c:   c,
        r:   r,
        w:   w,
        ctx: ctx,
    }

    // retrieve data
    processedJson, trials, trainAns, testAns, stimSeq, userDetails, debriefingAns, rawJson := getJsonUserData(d.r, d.w)
    //
    d.createUserFolder(processedJson.User.ID)
    // d.saveJson(k.User.ID, ""raw"", z)
    d.saveJson(processedJson.User.ID, ""trials"", trials)
    d.saveJson(processedJson.User.ID, ""train"", trainAns)
    d.saveJson(processedJson.User.ID, ""test"", testAns)
    d.saveJson(processedJson.User.ID, ""stim"", stimSeq)
    d.saveJson(processedJson.User.ID, ""user"", userDetails)
    d.saveJson(processedJson.User.ID, ""debriefing"", debriefingAns)
    d.saveJson(processedJson.User.ID, ""raw"", rawJson)
}

// Deal with error
func (d *saveData) errorf(format string, args ...interface{}) {
    d.failed = true
}

func getJsonUserData(r *http.Request, w http.ResponseWriter) (jsonStruct, []byte, []byte, []byte, []byte, []byte, []byte, []byte) {
    defer r.Body.Close()

    procJson, err := fromJSON(r.Body)
    if err != nil {
        log.Fatal(err)
    }
    log.Printf(""initial structure: "", procJson)
    log.Printf(""%+v\n"", procJson)
    trials, err := json.Marshal(procJson.Trials)
    if err != nil {
        log.Fatal(err)
    }
    trainAns, err := json.Marshal(procJson.Answers.Training)
    if err != nil {
        log.Fatal(err)
    }
    testAns, err := json.Marshal(procJson.Answers.Test)
    if err != nil {
        log.Fatal(err)
    }
    stimSeq, err := json.Marshal(procJson.Stim)
    if err != nil {
        log.Fatal(err)
    }
    userDetail, err := json.Marshal(procJson.User)
    if err != nil {
        log.Fatal(err)
    }
    debriefingAns, err := json.Marshal(procJson.Debriefing)
    if err != nil {
        log.Fatal(err)
    }
    rawJson, err := json.Marshal(procJson)
    if err != nil {
        log.Fatal(err)
    }
    return procJson, trials, trainAns, testAns, stimSeq, userDetail, debriefingAns, rawJson
}

func (d *saveData) createUserFolder(folderName string) {
    fName := folderName + ""/""
    wc := storage.NewWriter(d.ctx, bucket, fName)
    wc.ContentType = ""text/plain""
    d.cleanUp = append(d.cleanUp, fName)

    if err := wc.Close(); err != nil {
        d.errorf(""createFile: unable to close bucket %q, file %q: %v"", bucket, fName, err)
        return
    }

}

func (d *saveData) saveJson(folderName string, fileName string, fileContent []byte) {
    fullName := folderName + ""/"" + fileName
    wc := storage.NewWriter(d.ctx, bucket, fullName)
    wc.ContentType = ""text/plain""
    d.cleanUp = append(d.cleanUp, fullName)
    d.createFile(fullName, fileContent)

}

func (d *saveData) createFile(fileName string, content []byte) {

    wc := storage.NewWriter(d.ctx, bucket, fileName)
    wc.ContentType = ""text/plain""
    d.cleanUp = append(d.cleanUp, fileName)

    if _, err := wc.Write([]byte(content)); err != nil {
        d.errorf(""createFile: unable to write data to bucket %q, file %q: %v"", bucket, fileName, err)
        return
    }
    if err := wc.Close(); err != nil {
        d.errorf(""createFile: unable to close bucket %q, file %q: %v"", bucket, fileName, err)
        return
    }
}

func handleloadTrials(w http.ResponseWriter, r *http.Request) {
    c := appengine.NewContext(r)
    if bucket == """" {
        var err error
        if bucket, err = file.DefaultBucketName(c); err != nil {
            // log.Errorf(c, ""failed to get default GCS bucket name: %v"", err)
            return
        }
    }
    hc := &http.Client{
        Transport: &oauth2.Transport{
            Source: google.AppEngineTokenSource(c, storage.ScopeFullControl),
            Base:   &urlfetch.Transport{Context: c},
        },
    }
    ctx := cloud.NewContext(appengine.AppID(c), hc)

    // structure to holds information needed to run the various saving functions
    d := &saveData{
        c:   c,
        r:   r,
        w:   w,
        ctx: ctx,
    }

    userID := r.URL.Query().Get(""id"")
    log.Println(userID)
    trialJson := d.readFile(userID)
    w.Write(trialJson)
}

// readFile reads the named file in Google Cloud Storage.
func (d *saveData) readFile(fileName string) []byte {
    trialName := fileName + ""/trials""
    rc, err := storage.NewReader(d.ctx, bucket, trialName)
    if err != nil {
        d.errorf(""readFile: unable to open file from bucket %q, file %q: %v"", bucket, trialName, err)

    }
    defer rc.Close()
    slurp, err := ioutil.ReadAll(rc)
    if err != nil {
        d.errorf(""readFile: unable to read data from bucket %q, file %q: %v"", bucket, fileName, err)
    }
    return slurp
}
",10424
170,30580746,"saveUserData : function saveUserData(data) {
  var _this = this,
      save = this.shadowRoot.querySelector('#save-data');

  save.url=""http://galileoexp.appspot.com/saveUserData"";
  save.body = JSON.stringify(data);
  save.go();
}
",232
171,31088111,"2015-06-27T10:43:06.839094+00:00 heroku[web.1]: Starting process with command `FlickrImage`
2015-06-27T10:43:08.998400+00:00 heroku[web.1]: State changed from starting to crashed
2015-06-27T10:43:08.998400+00:00 heroku[web.1]: State changed from crashed to starting
2015-06-27T10:43:08.985737+00:00 heroku[web.1]: Process exited with status 0
2015-06-27T10:43:10.795684+00:00 heroku[web.1]: Starting process with command `FlickrImage`
2015-06-27T10:43:13.837301+00:00 heroku[web.1]: Process exited with status 0
2015-06-27T10:43:13.850141+00:00 heroku[web.1]: State changed from starting to crashed
2015-06-27T10:44:41.914412+00:00 heroku[router]: at=error code=H10 desc=""App crashed"" method=GET path=""/Index"" host=morning-ridge-1365.herokuapp.com request_id=89d2e794-a725-4ddf-b437-dbcbd988428c fwd=""202.12.83.44"" dyno= connect= service= status=503 bytes=
",857
172,31088111,"package main

import (
    ""encoding/json""
    ""fmt""
    ""io/ioutil""
    ""log""
    ""net/http""
    ""os""
    ""reflect""
    ""strconv""
    ""strings""

    ""github.com/gorilla/mux""
    ""gopkg.in/mgo.v2""
    ""gopkg.in/mgo.v2/bson""
)

type imageLinks struct {
    Link     string `bson:""link""`
    Upvote   int    `bson:""upvote""`
    Downvote int    `bson:""downvote""`
}

type Result struct {
    Photos struct {
        Page    int    `json: ""page""`
        Pages   int    `json: ""pages""`
        PerPage int    `json: ""perpage""`
        Total   string `json: ""total""`
        Photo   []struct {
            Id       string `json: ""id""`
            Owner    string `json: ""owner""`
            Secret   string `json: ""secret""`
            Server   string `json: ""server""`
            Farm     int    `json: ""farm""`
            Title    string `json: ""title""`
            IsPublic int    `json: ""ispublic""`
            IsFriend int    `json: ""isfriend""`
            IsFamily int    `json: ""isfamily`
        } `json: ""photo""`
    } `json: ""photos""`
    Stat string `json: ""stat""`
}

func main() {

    router := mux.NewRouter().StrictSlash(true)
    router.HandleFunc(""/Index"", Index)
    router.HandleFunc(""/UpVote"", UpVoteRoute)
    router.HandleFunc(""/DownVote"", DownVoteRoute)
    log.Fatal(http.ListenAndServe("":8080"", router))
}

func UpVoteRoute(w http.ResponseWriter, r *http.Request) {

    link := r.URL.Query().Get(""imagelink"")
    w.Header().Set(""Content-Type"", ""application/json"")
    session, err := mgo.Dial(""mongodb://:@ds061631.mongolab.com:61631/flickrimagedb"")
    if err != nil {
        fmt.Printf(""%s"", err)
        os.Exit(1)
    }
    defer session.Close()

    session.SetMode(mgo.Monotonic, true)
    c := session.DB(""flickrimagedb"").C(""image_links_votes"")

    err = c.Update(bson.M{""link"": link}, bson.M{""$inc"": bson.M{""upvote"": 1}})
    if err != nil {
        fmt.Printf(""Can't update document %v\n"", err)
        os.Exit(1)
    }
}

func DownVoteRoute(w http.ResponseWriter, r *http.Request) {

    link := r.URL.Query().Get(""imagelink"")
    w.Header().Set(""Content-Type"", ""application/json"")
    session, err := mgo.Dial(""mongodb://*********:*******@ds061631.mongolab.com:61631/flickrimagedb"")
    if err != nil {
        fmt.Printf(""%s"", err)
        os.Exit(1)
    }
    defer session.Close()

    session.SetMode(mgo.Monotonic, true)
    c := session.DB(""flickrimagedb"").C(""image_links_votes"")

    err = c.Update(bson.M{""link"": link}, bson.M{""$inc"": bson.M{""downvote"": 1}})
    if err != nil {
        fmt.Printf(""Can't update document %v\n"", err)
        os.Exit(1)
    }
}

func Index(w http.ResponseWriter, r *http.Request) {

    w.Header().Set(""Content-Type"", ""application/json"")
    session, err := mgo.Dial(""mongodb://*********:*********@ds061631.mongolab.com:61631/flickrimagedb"")
    if err != nil {
        fmt.Printf(""%s"", err)
        os.Exit(1)
    }

    defer session.Close()

    session.SetMode(mgo.Monotonic, true)
    c := session.DB(""flickrimagedb"").C(""image_links_votes"")

    checkResult := &imageLinks{}
    // Create a slice to begin with
    myType := reflect.TypeOf(checkResult)
    slice := reflect.MakeSlice(reflect.SliceOf(myType), 10, 10)
    // Create a pointer to a slice value and set it to the slice
    x := reflect.New(slice.Type())
    x.Elem().Set(slice)
    err = c.Find(bson.M{}).All(x.Interface())
    if err != nil {
        response, err := json.Marshal(x.Interface())
        if err != nil {
            fmt.Printf(""%s"", err)
            os.Exit(2)
        }
        fmt.Fprintf(w, string(response))
    } else {
        url := ""https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=*****************************&text=cute+puppies&per_page=12&format=json&nojsoncallback=1""
        res, err := http.Get(url)
        if err != nil {
            fmt.Printf(""%s"", err)
            os.Exit(3)
        }
        body, err := ioutil.ReadAll(res.Body)
        if err != nil {
            fmt.Printf(""%s"", err)
            os.Exit(4)
        }

        jsonData := &Result{}
        err = json.Unmarshal(body, jsonData)

        for value := range jsonData.Photos.Photo {
            s1 := []string{""https://farm"", "".staticflickr.com/""}
            s2 := []string{strings.Join(s1, strconv.Itoa(jsonData.Photos.Photo[value].Farm)), ""/""}
            s3 := []string{strings.Join(s2, jsonData.Photos.Photo[value].Server), ""_""}
            s4 := []string{strings.Join(s3, jsonData.Photos.Photo[value].Id), "".jpg""}
            s := strings.Join(s4, jsonData.Photos.Photo[value].Secret)
            singleReuslt := imageLinks{}
            err = c.Find(bson.M{""link"": s}).One(&singleReuslt)
            if err != nil {
                err = c.Insert(&imageLinks{Link: s, Upvote: 0, Downvote: 0})
                if err != nil {
                    fmt.Printf(""%s"", err)
                    os.Exit(5)
                }
            }
        }

        allResult := &imageLinks{}
        // Create a slice to begin with
        myType := reflect.TypeOf(allResult)
        slice := reflect.MakeSlice(reflect.SliceOf(myType), 10, 10)
        // Create a pointer to a slice value and set it to the slice
        x := reflect.New(slice.Type())
        x.Elem().Set(slice)
        err = c.Find(bson.M{}).All(x.Interface())
        response, err := json.Marshal(x.Interface())
        if err != nil {
            fmt.Printf(""%s"", err)
            os.Exit(6)
        }
        fmt.Fprintf(w, string(response))
    }
}
",5484
173,31279557,"e := expression.(type) // Line 73
",34
174,31279557,.(type),7
175,31279557,"switch p := procedure.(type) {
case func(...scmer) scmer:
    value = p(args...)
case proc:
    en := &env{make(vars), p.en}
    switch params := p.params.(type) {
    case []scmer:
        for i, param := range params {
            en.vars[param.(symbol)] = args[i]
        }
    default:
        en.vars[params.(symbol)] = args
    }
    value = eval(p.body, en)
",365
176,31279557,"*tokens = (*tokens)[1:] // Line 208
",36
177,31279557,"token := (*tokens)[0]
*tokens = (*tokens)[1:]
switch token {
case ""("": //a list begins
    L := make([]scmer, 0)
    for (*tokens)[0] != "")"" {
        if i := readFrom(tokens); i != symbol("""") {
            L = append(L, i)
        }
    }
    *tokens = (*tokens)[1:]
    return L
",281
178,31279557,"/*
 * A minimal Scheme interpreter, as seen in lis.py and SICP
 * http://norvig.com/lispy.html
 * http://mitpress.mit.edu/sicp/full-text/sicp/book/node77.html
 *
 * Pieter Kelchtermans 2013
 * LICENSE: WTFPL 2.0
 */
package main

import (
    ""bufio""
    ""fmt""
    ""log""
    ""os""
    ""reflect""
    ""strconv""
    ""strings""
)

func main() {
    Repl()
}

/*
 Eval / Apply
*/

func eval(expression scmer, en *env) (value scmer) {
    switch e := expression.(type) {
    case number:
        value = e
    case symbol:
        value = en.Find(e).vars[e]
    case []scmer:
        switch car, _ := e[0].(symbol); car {
        case ""quote"":
            value = e[1]
        case ""if"":
            if eval(e[1], en).(bool) {
                value = eval(e[2], en)
            } else {
                value = eval(e[3], en)
            }
        case ""set!"":
            v := e[1].(symbol)
            en.Find(v).vars[v] = eval(e[2], en)
            value = ""ok""
        case ""define"":
            en.vars[e[1].(symbol)] = eval(e[2], en)
            value = ""ok""
        case ""lambda"":
            value = proc{e[1], e[2], en}
        case ""begin"":
            for _, i := range e[1:] {
                value = eval(i, en)
            }
        default:
            operands := e[1:]
            values := make([]scmer, len(operands))
            for i, x := range operands {
                values[i] = eval(x, en)
            }
            value = apply(eval(e[0], en), values)
        }
    default:
        log.Println(""Unknown expression type - EVAL"", e)
    }
    return
}

func apply(procedure scmer, args []scmer) (value scmer) {
    switch p := procedure.(type) {
    case func(...scmer) scmer:
        value = p(args...)
    case proc:
        en := &env{make(vars), p.en}
        switch params := p.params.(type) {
        case []scmer:
            for i, param := range params {
                en.vars[param.(symbol)] = args[i]
            }
        default:
            en.vars[params.(symbol)] = args
        }
        value = eval(p.body, en)
    default:
        log.Println(""Unknown procedure type - APPLY"", p)
    }
    return
}

type proc struct {
    params, body scmer
    en           *env
}

/*
 Environments
*/

type vars map[symbol]scmer
type env struct {
    vars
    outer *env
}

func (e *env) Find(s symbol) *env {
    if _, ok := e.vars[s]; ok {
        return e
    } else {
        return e.outer.Find(s)
    }
}

/*
 Primitives
*/

var globalenv env

func init() {
    globalenv = env{
        vars{ //aka an incomplete set of compiled-in functions
            ""+"": func(a ...scmer) scmer {
                v := a[0].(number)
                for _, i := range a[1:] {
                    v += i.(number)
                }
                return v
            },
            ""-"": func(a ...scmer) scmer {
                v := a[0].(number)
                for _, i := range a[1:] {
                    v -= i.(number)
                }
                return v
            },
            ""*"": func(a ...scmer) scmer {
                v := a[0].(number)
                for _, i := range a[1:] {
                    v *= i.(number)
                }
                return v
            },
            ""/"": func(a ...scmer) scmer {
                v := a[0].(number)
                for _, i := range a[1:] {
                    v /= i.(number)
                }
                return v
            },
            ""<="": func(a ...scmer) scmer {
                return a[0].(number) <= a[1].(number)
            },
            ""equal?"": func(a ...scmer) scmer {
                return reflect.DeepEqual(a[0], a[1])
            },
            ""cons"": func(a ...scmer) scmer {
                switch car := a[0]; cdr := a[1].(type) {
                case []scmer:
                    return append([]scmer{car}, cdr...)
                default:
                    return []scmer{car, cdr}
                }
            },
            ""car"": func(a ...scmer) scmer {
                return a[0].([]scmer)[0]
            },
            ""cdr"": func(a ...scmer) scmer {
                return a[0].([]scmer)[1:]
            },
            ""list"": eval(read(
                ""(lambda z z)""),
                &globalenv),
        },
        nil}
}

/*
 Parsing
*/

//symbols, numbers, expressions, procedures, lists, ... all implement this interface, which enables passing them along in the interpreter
type scmer interface{}

type symbol string  //symbols are represented by strings
type number float64 //numbers by float64

func read(s string) (expression scmer) {
    tokens := tokenize(s)
    return readFrom(&tokens)
}

//Syntactic Analysis
func readFrom(tokens *[]string) (expression scmer) {
    //pop first element from tokens
    token := (*tokens)[0]
    *tokens = (*tokens)[1:]
    switch token {
    case ""("": //a list begins
        L := make([]scmer, 0)
        for (*tokens)[0] != "")"" {
            if i := readFrom(tokens); i != symbol("""") {
                L = append(L, i)
            }
        }
        *tokens = (*tokens)[1:]
        return L
    default: //an atom occurs
        if f, err := strconv.ParseFloat(token, 64); err == nil {
            return number(f)
        } else {
            return symbol(token)
        }
    }
}

//Lexical Analysis
func tokenize(s string) []string {
    return strings.Split(
        strings.Replace(strings.Replace(s, ""("", ""( "",
            -1), "")"", "" )"",
            -1), "" "")
}

/*
 Interactivity
*/

func String(v scmer) string {
    switch v := v.(type) {
    case []scmer:
        l := make([]string, len(v))
        for i, x := range v {
            l[i] = String(x)
        }
        return ""("" + strings.Join(l, "" "") + "")""
    default:
        return fmt.Sprint(v)
    }
}

func Repl() {
    scanner := bufio.NewScanner(os.Stdin)
    for fmt.Print(""> ""); scanner.Scan(); fmt.Print(""> "") {
        fmt.Println(""==>"", String(eval(read(scanner.Text()), &globalenv)))
    }
}
",5962
179,31286087,"package main

import (
    ""reflect""
    ""fmt""
    ""log""
    ""os""
    ""encoding/json""
    ""sort""

    ""github.com/lxn/walk""
    . ""github.com/lxn/walk/declarative""
    //""strings""
)

type Task struct {
    TaskId string
    TaskNo string
    TaskName string
    ManDay string
    Term string
    ManDayDay string
    StartDate string
    EndDate string
    Progress string
}

type TaskModel struct {
    walk.TableModelBase
    walk.SorterBase
    sortColumn int
    sortOrder walk.SortOrder
    items []Task
}

func NewTaskModel() *TaskModel {
    t := new(TaskModel)

    t.items = make([]Task, 3)

    var tasks []Task
    tasks = read("""")

    for i := 0; i < len(tasks); i++ {
        var task Task
        task = tasks[i]
        t.items[i] = task
    }

    t.PublishRowsReset()

    return t
}

func (m *TaskModel) RowCount() int {
    return len(m.items)
}

func (m *TaskModel) Len() int {
    return len(m.items)
}

func (m *TaskModel) Value(row, col int) interface{} {
    item := m.items[row]

    switch col {
        case 0:
            return item.TaskId
        case 1:
            return item.TaskNo
        case 2:
            return item.TaskName
        case 3:
            return item.ManDay
        case 4:
            return item.Term
        case 5:
            return item.ManDayDay
        case 6:
            return item.StartDate
        case 7:
            return item.EndDate
        case 8:
            return item.Progress
    }

    panic(""unexpected col"")
}

func (m *TaskModel) Sort(col int, order walk.SortOrder) error {
    m.sortColumn, m.sortOrder = col, order

    sort.Sort(m)

    return m.SorterBase.Sort(col, order)
}

func (m *TaskModel) Less(i, j int) bool {
    a, b := m.items[i], m.items[j]

    c := func(ls bool) bool {
        if m.sortOrder == walk.SortAscending {
            return ls
        }

        return !ls
    }

    switch m.sortColumn {
        case 0:
            return c(a.TaskId < b.TaskId)
        case 1:
            return c(a.TaskNo < b.TaskNo)
        case 2:
            return c(a.TaskName < b.TaskName)
        case 3:
            return c(a.ManDay < b.ManDay)
        case 4:
            return c(a.Term < b.Term)
        case 5:
            return c(a.ManDayDay < b.ManDayDay)
        case 6:
            return c(a.StartDate < b.StartDate)
        case 7:
            return c(a.EndDate < b.EndDate)
        case 8:
            return c(a.Progress < b.Progress)
    }

    panic(""error"")
}

func (m *TaskModel) Swap(i, j int) {
    m.items[i], m.items[j] = m.items[j], m.items[i]
}

func read(filePath string) []Task{

    file, err := os.Open(""C:/Dev/xampp/htdocs/workspace/SampleGoProject/src/main/task.json"")
    //file, err := os.Open(filePath)

    if err != nil {
        log.Fatal(err)
    }

    defer file.Close()

    var tasks []Task

    decoder := json.NewDecoder(file)
    //json.NewDecoder(file)

    //fmt.Print(tasks)

    //err = decoder.Decode(&tasks)
    decoder.Decode(&tasks)
    if err != nil {
        log.Fatal(err)
    }

    //fmt.Print(tasks)

    return tasks;
}

func write(filePath string, mw *MyMainWindow) {

    var children *walk.WidgetList
    children = mw.MainWindow.Children()

    var child walk.Widget
    child = children.At(0)

    to := reflect.TypeOf(child)
    fv := reflect.ValueOf(child).Convert(to).Interface()

    //tableview := fv.Type().In(0)
    //var tableview TableView
    //tableview := child.Cursor()

    //fmt.Print(child)

    //fmt.Println(tableview)

    fmt.Println(to)
    fmt.Println(fv)



    //r := fv.InterfaceData()
    //fmt.Println(r)
    //fmt.Println(reflect.ValueOf(child).Convert(fv))

    file, err := os.Create(""C:/Dev/xampp/htdocs/workspace/SampleGoProject/src/main/task2.json"")
    if err != nil {
        log.Fatal(err)
    }

    defer file.Close()

    //var tasks []Task

    encoder := json.NewEncoder(file)

    err = encoder.Encode(fv)
    if err != nil {
        log.Fatal(err)
    }

}

type MyMainWindow struct {
    *walk.MainWindow
    prevFilePath string
}

func main() {

    model := NewTaskModel()

    mw := new (MyMainWindow)

    var openAction, saveAction *walk.Action

    if err:= (MainWindow{
        AssignTo: &mw.MainWindow,
        Title: ""WBS"",
        MenuItems: []MenuItem{
            Menu {
                Text: ""&File"",
                Items: []MenuItem{
                    Action{
                        AssignTo: &openAction,
                        Text: ""&Open"",
                        OnTriggered: mw.openAction_Triggered,
                    },
                    Action{
                        AssignTo: &saveAction,
                        Text: ""&Save"",
                        OnTriggered: mw.saveAction_Triggered,
                    },
                    Separator{},
                    Action{
                        Text: ""&Exit"",
                        OnTriggered: func() {
                            mw.Close()  
                        },
                    },
                },
            },
        },
        MinSize: Size{800, 400},
        Layout: VBox{},
        Children: []Widget{
            TableView {
                Columns: []TableViewColumn{
                    {Title: ""Task Id""},
                    {Title: ""Task No""},
                    {Title: ""Task Name""},
                    {Title: ""Man Day""},
                    {Title: ""Term""},
                    {Title: ""Man Day Day""},
                    {Title: ""Start Date""},
                    {Title: ""End Date""},
                    {Title: ""Progress""},
                },
                Model: model,
            },
        },
    }.Create()); err != nil {
        //fmt.Print(err)
        //log.Fatal(err)

    }

    mw.Run()
}

func (mw *MyMainWindow) openAction_Triggered() {
    if err := mw.openFile(); err != nil {
        log.Print(err)
    }
}

func (mw *MyMainWindow) openFile() error {
    dlg := new(walk.FileDialog)

    dlg.FilePath = mw.prevFilePath
    dlg.Filter = ""JSON Files|*.json""
    dlg.Title = ""Select a json file""

    if ok, err := dlg.ShowOpen(mw); err != nil {
        return err
    } else if !ok {
        return nil
    }

    mw.prevFilePath = dlg.FilePath

    read(mw.prevFilePath)

    return nil
}

func (mw *MyMainWindow) saveAction_Triggered() {
    if err := mw.saveFile(); err != nil {
        log.Print(err)
    }
}

func (mw *MyMainWindow) saveFile() error {
    dlg := new(walk.FileDialog)

    dlg.FilePath = mw.prevFilePath
    dlg.Filter = ""JSON Files|*.json""
    dlg.Title = ""Input a json file name""

    if ok, err := dlg.ShowSave(mw); err != nil {
        return err
    } else if !ok {
        return nil
    }

    mw.prevFilePath = dlg.FilePath

    write(mw.prevFilePath, mw)

    return nil
}
",6747
180,31516808,ctrl+shift+p,12
181,31516808,cmd+shift+p,11
182,31516808,Package Control: Install Package,32
183,31516808,GoSublime,9
184,31516808,"MarGo: Missing required environment variables: GOPATH
See the `Quirks` section of USAGE.md for info 
",101
185,31516808,usage.md,8
186,31516808,"Usage
=====

Note
----

* Unless otherwise mentioned, `super` replaces `ctrl` in key bindings on OS X.
* A mention of a (GO)PATH variable uses a colon(`:`) as the separator.
This is the PATH separator on Linux and OS X, Windows uses a semi-colon(`;`)

Settings
--------

You may customize GoSublime's behaviour by (creating and) customizing the file `Packages/User/GoSublime.sublime-settings`. Default settings are documented in `Packages/GoSublime/GoSublime.sublime-settings`. **WARNING** Do not edit any package file outside of `Packages/User/`, including files inside `Packages/GoSublime/` unless you have a reason to. These files are subject to being overwritten on update of the respective package and/or Sublime Text itself. You may also inadvertently prevent the respective package from being able to update via git etc.

Quirks
------

This section assumes you know what `GOPATH` is and how to set it. If you don't, please see http://golang.org/doc/code.html

In some systems, environment variables are not passed around as expected.
The result of which is that some commands e.g `go build` don't work
as the command cannot be found or `GOPATH` is not set. To get around this
the simplest thing to do is to set these variables in the settings file.
See the documentation for the `env` and/or `shell` setting, both documented in the default
settings file `Packages/User/GoSublime.sublime-settings`

Code Completion
---------------

Completion can be accessed by typing the (default) key combination `CTRL+[SPACE]` inside a Golang file.

Key Bindings
------------

By default, a number of key bindings are provided. They can be viewed by opening the command palette
and typing `GoSublime:` or via the key binding `ctrl+dot`,`ctrl+dot` (or `super+dot`,`super+dot` on OS X).
Wherever I refer to a key binding with `ctrl+` it is by default defined as `super+` on OS X unless stated otherwise.

Useful Key Bindings
-------------------

Often when commenting out a line, the immediate action following this is to move the cursor to the next line either to continue working or comment out the following line.

With this key binding, you can have the line commented out and the cursor automatically moved to the next line.

{ ""keys"": [""ctrl+/""], ""command"": ""gs_comment_forward"", ""context"": [{ ""key"": ""selector"", ""operator"": ""equal"", ""operand"": ""source.go"" }] },

Package Imports
---------------

Pressing `ctrl+dot`,`ctrl+p` will open the package list from which you can quickly import or delete a package import.
The usage is the same for both operations. If the package is already imported then it will appear near the top
and be marked as a *delete* operation, so in effect it is a toggle. If you want to edit the alias of a package e.g
a database driver: first import the package as normal and then press `ctrl+dot`,`ctrl+i` to quickly jump
the last imported package. Once edited you can return to where you were by pressing `ctrl+dot`,`ctrl+[`

Building, Testing and the Go command
------------------------------------

GoSublime comes with partial command/shell integration `9o`. For more information about 9o, see Packages/GoSublime/9o.md
or from within Sublime Text press `ctrl+9` or `super+9` and type `help`.

To run package tests you have 3 options.

* press `ctrl+dot`,`ctrl+t` to open the testing quick panel. This offers basic/common options such
as running all benchmark functions or running a single test function.

* inside a `_test.go` file, press `ctrl+shift` and left-click on the name of a Test, Benchmark or Example
function e.g. `TestAbc` to execute that function only.

* if the above options are too minimalistic or you would otherwise like to call `go test` with your own options,
open 9o by pressing `ctrl+9` where you have access to the `go` command.

In the case of building a package, 9o provides a replay command (see 9o.md for details) that will execute
the command if the pkg is a command pkg (package main) or run all tests if it's a normal pkg.
The replay command is bound to `ctrl+dot`,`ctrl+r` for easy access.

GoSublime provides an override for the Sublime Text build-system via `ctrl+b`. In the menu `Tools > Build System` it's named `GoSublime`.
`ctrl+b` is automatically handled by Sublime Text, so if you have another `Go` build system chosen, `ctrl+b`
will execute that instead. To access the `GoSublime` build system directly press `ctrl+dot`,`ctrl+b`.
This build system simply opens 9o and expand the last command. i.e. executes the 9o command `^1`.

Per-project Settings & Project-based GOPATH
-------------------------------------------

If you have a settings object called `GoSublime` in your project settings its values will override those
inside the `GoSublime.sublime-settings` file. As a side-effect you may set a specific GOPATH for a single
project.

`my-project.sublime-project`

    {
        ""settings"": {
            ""GoSublime"": {
                ""env"": {
                    ""GOPATH"": ""$HOME/my-project""
                }
            }
        },
        ""folders"": []
    }

If the only setting you use this functionality to change is the GOPATH, then you may be able to find
success by adding the string `$GS_GOPATH` to your global `GOPATH` setting e.g.

    {
        ""env"": { ""GOPATH"": ""$HOME/go:$GS_GOPATH"" }
    }


`GS_GOPATH` is a pseudo-environment-variable. It's changed to match a possible GOPATH based on:

* the current working directory, e.g. `~/go/src/pkg` then `$GS_GOPATH` will be `~/go/`

* or the path the current `.go` file (or last activated `.go` file if the current file is not `.go`) e.g. if your file path is `/tmp/go/src/hello/main.go` then it will be `/tmp/go`

If you would like to use `GS_GOPATH` exclusively, you may set the option `use_gs_gopath` to true.
This automatically changes `GOPATH` to the value of `$GS_GOPATH` if `$GS_GOPATH` is not empty.
This allows you to e.g. automatically adapt `GOPATH` to your current project rather than
reverting to your normal `GOPATH`.

Lint/Syntax Check
-----------------

The source is continuously scanned for syntax errors. GoSublime will try to catch some common errors, like
forgetting to call flag.Parse (if this causes false positives, please file a bug report).

Apart from the highlighting in the view using a dot icon in the gutter and usually underlining the
first character of an error region. You are given an entry in the status bar in the form: `GsLint (N)`
where `N` is the number of errors found in that file. You can show the list of errors and navigate to
them by pressing `ctrl+dot`,`ctrl+e`. Errors for the current line are shown in the status bar.

Fmt
---

By default `ctrl+s` and `ctrl+shift+s` are overridden to fmt the the file before saving it. You may also
fmt a file without saving it by pressing `ctrl+dot`,`ctrl+f`

Godoc/Goto Definition
---------------------

To show the source and associated comments(documentation) of a variable press `ctrl+dot`,`ctrl+h` or
using the mouse `ctrl+shift+right-click`. This will show an output panel that presents the full
definition of the variable or function under the (first) cursor along with its comments.
To goto the definition instead, press `ctrl+dot`,`ctrl+g` or alternatively using the mouse `ctrl+shift+left-click`.

Declarations/Code Outline?
--------------------------

A very minimal form of code outline is provided. You can press `ctrl+dot`,`ctrl+d` to list all the declarations
in the current file.

New File
--------

Pressing `ctrl+dot`,`ctrl+n` will create a new Go file with the package declaration filled out.
It will try to be intelligent about it, so if the current directory contains package `mypkg` it will use that as the package name.

Misc. Helper Commands
---------------------

The following commands can be assigned key bindings to further improve your editing experience.

* gs_fmt - this command runs `gofmt` on the current buffer. Also available via the key binding `ctrl+dot`,`ctrl+f`.

* gs_fmt_save, gs_fmt_prompt_save_as - these commands will run the `go_fmt` followed by `save` or `prompt_save_as` - these are bound to `ctrl+s` and `ctrl+shift+s` respectively, by default.

* gs_comment_forward - this command will activate the `ctrl+/` commenting and move the cursor to the next line, allowing you to comment/uncomment multiple lines in sequence without breaking to move the cursor. You can replace the default behaviour by overriding it in your user key bindings (Preferences > Key Bindings - User) with `{ ""keys"": [""ctrl+/""], ""command"": ""gs_comment_forward"", ""context"": [{ ""key"": ""selector"", ""operator"": ""equal"", ""operand"": ""source.go"" }] }`
",8584
187,31516808,export GOPATH=$HOME/code/go,27
188,31708934,Accept(),8
189,31708934,"package main

import (
    ""crypto/tls""
    ""fmt""
    ""net""
    ""time""
)

type Service struct {
    listener net.Listener
}

func (serv *Service)Listen(port int64) (err error) {
    rsaCertPEM := `-----BEGIN CERTIFICATE-----
MIIGKjCCBBKgAwIBAgIJAOaBs5/Gdk7RMA0GCSqGSIb3DQEBBQUAMGsxHzAdBgNV
BAMTFlhhdmllcnMtTUJQIGhlbGxvd29ybGQxEjAQBgNVBAoTCVNDQU1QIEluYzEL
MAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExEjAQBgNVBAcTCVNhbiBE
aWVnbzAeFw0xNTA3MjcxNzMyNDNaFw0yNTA3MjQxNzMyNDNaMGsxHzAdBgNVBAMT
FlhhdmllcnMtTUJQIGhlbGxvd29ybGQxEjAQBgNVBAoTCVNDQU1QIEluYzELMAkG
A1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExEjAQBgNVBAcTCVNhbiBEaWVn
bzCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAOMiK19vGbRH7Y40jC3E
B+r2NNeEO9BIB8umzAs0uh1hRxEWYgdYwOvmEeuUQgimHbJ7Neh8IKjUiD529Ir0
rxNwhmu3AxFJf5hBC9Ix5nO2oVjIPdCVX+1CL9BJvmYyRlV5cq5WukTeYuSLG/tB
h9fARwIhcR9HrjYYb6LtMUX0oIlHQytDRn9pM27TfoR6ad3dwZdRpf9kQH4x467d
rBiRvRnBx5JBCE/cpFg7fQtrsrurn6tmMR/WMpv8GU0dLGEMCs/Te1bwH3XHDwNZ
mLVukfIhyWU/hXNzbggar0wk3ZqJrEeDm8zQJ73ywhs4D8AY+UX3V+1SBah45U+f
S9fZi7yi8XoCuEHTZoYU3hVcSP3Yqx1aZS5D7rx2X+T5XrJxy8FHiRX1LEPWKzz+
3x3+s9UcCIFz9xlAm0tM6ZjzeOcXhadSd+zTNngfQcwOPbPbyTM4Z9RD2VDPtfvV
eqJ82ZOGVWWkBFElZV6I5idRDph4/eEvO1Ij02C6oJJbyfbXzuMAgGVch8oMd65S
mVLppAT2uiNYebWp2Q2TleShNiv7AhvnV0saEfuCtX6fsryzogOMsEXiK+EqAZ3c
QUT+9hdIrwGWEOcx4Dpm2Tzh2QDIzmPVKIJ/PHPZgVq/zkc03ThuSRGYiNgz0YY4
AWsPtAVVZafh3ZcnPjP8OocxAgMBAAGjgdAwgc0wHQYDVR0OBBYEFOePjJeN13Rm
AzPVb/Tcp8x1gGh6MIGdBgNVHSMEgZUwgZKAFOePjJeN13RmAzPVb/Tcp8x1gGh6
oW+kbTBrMR8wHQYDVQQDExZYYXZpZXJzLU1CUCBoZWxsb3dvcmxkMRIwEAYDVQQK
EwlTQ0FNUCBJbmMxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRIw
EAYDVQQHEwlTYW4gRGllZ2+CCQDmgbOfxnZO0TAMBgNVHRMEBTADAQH/MA0GCSqG
SIb3DQEBBQUAA4ICAQDTlOdkKl1VT+VleeORUU3vVfeNGmiWrd88v6JlUxdYBU2o
YfQgVzPijxy9EGdgdaw/BPI0ypMn/DQ5hOcAHtHWCn7hHnRGTM4GMqZ6TOwexUyh
W02QFdwnB5jKQ3HNokp43NnoxAxEFnd6m27O39unwbq49Tt16HfEeUXMbXQabV6I
fZy7YsulamH0M5eZ2qtX25BkuYV1d4PpnahKWGRRvdg9jEszMfksI/tmv8CDmCi4
3cOS2c6i86XF3Cx+SlNPhJ7YpQK8IVxE3xzRMCf2kiA2vdb7DhVz4N5ZBzZYX5qD
HkYdjTdj4I6jtdeeNKqrEMV2Q3/X2Mdp0jp8dcK8WO7jXSIBvo4GO5797ok5mbQT
om0xvBljFkkyTuWJLUJslg9N7IyXCYZXLXpUvm40J+fXMNnd6lGbygNSrKFyjdDX
x5r9XCAKmtRteZSVpknN1eE5Gl5naY6iZrxXeeNlCG8x6a2XaQM6/0/XhSEZnGog
XiiirE3s5xZnWVRqOwx7iihs9I4mdHNj9kFdsB3vPjlMfbiQl+GbLIaF16H+LFP2
ArBiqwKM5kOcA3kT0XMm1rvxHZrpEACGf2zRhuBlZRyP96KPp49A4FpVHjsYweI8
DkIeTJpAsCXxgqDCw0P8xfhM5gP/ILmWgOIGj0+E/8OTgL3J85Jg8rmIo86mSg==
-----END CERTIFICATE-----`

 var rsaKeyPEM = `-----BEGIN RSA PRIVATE KEY-----
MIIJKQIBAAKCAgEA4yIrX28ZtEftjjSMLcQH6vY014Q70EgHy6bMCzS6HWFHERZi
B1jA6+YR65RCCKYdsns16HwgqNSIPnb0ivSvE3CGa7cDEUl/mEEL0jHmc7ahWMg9
0JVf7UIv0Em+ZjJGVXlyrla6RN5i5Isb+0GH18BHAiFxH0euNhhvou0xRfSgiUdD
K0NGf2kzbtN+hHpp3d3Bl1Gl/2RAfjHjrt2sGJG9GcHHkkEIT9ykWDt9C2uyu6uf
q2YxH9Yym/wZTR0sYQwKz9N7VvAfdccPA1mYtW6R8iHJZT+Fc3NuCBqvTCTdmoms
R4ObzNAnvfLCGzgPwBj5RfdX7VIFqHjlT59L19mLvKLxegK4QdNmhhTeFVxI/dir
HVplLkPuvHZf5PlesnHLwUeJFfUsQ9YrPP7fHf6z1RwIgXP3GUCbS0zpmPN45xeF
p1J37NM2eB9BzA49s9vJMzhn1EPZUM+1+9V6onzZk4ZVZaQEUSVlXojmJ1EOmHj9
4S87UiPTYLqgklvJ9tfO4wCAZVyHygx3rlKZUumkBPa6I1h5tanZDZOV5KE2K/sC
G+dXSxoR+4K1fp+yvLOiA4ywReIr4SoBndxBRP72F0ivAZYQ5zHgOmbZPOHZAMjO
Y9Uogn88c9mBWr/ORzTdOG5JEZiI2DPRhjgBaw+0BVVlp+Hdlyc+M/w6hzECAwEA
AQKCAgEAvOnVo1m3yl+s8QM5uHL8luvSxZJBYZoXicYgng1r4zXesxKn1C54v3wr
WYKFbcYkmyepjcV4MJQdAb9U5CJhX8zOsNaWIZG9I3iuiVRhtcqn5j0eVNd44tCT
Di3XxA56u2r4/JI7+T3yiN4/FrrJbqSJKvd/rCGlf27Ro3Se7+1ofOWds2UQRLbO
RZZ4+10JorRn6SDK7WGH1q5ODkpnckP9QWgQQs/+RtZghtZrycz46ujzM88aer1g
eKa0sJPcLpeignsGcifkMsSu8v1Za0Yc84QwixrLN1xBn1H6jV14R6nMdeq78h0L
gQxhb9wwFXlwE0aHhmcbN6XeLFx06fCSskpu8AoBRC1acOEY1uiF3NVAdw3bILX+
jxUh0Qhsb3JoAAIPwqV3SDnqiQi40k8hv6MfCw3Xn6UhyYNHGQBn7cX7llSvo0wF
DvQd0dJHmfBXXldVnhruH2275aqu1qVbPlNmoA6+2gChfOPgSUO9xNQXYc0dvgbl
7UBX/MR8SJlawptb3pwfTv+fBioSodWwfhkbZ0TMVGwSFUHXDN/+VeHoZsafZIog
knyKeE587y4aDcaYsHYYgz/WLjGMfROeUoplZQoBLfis+nTVBA6gCUGOFKynB5/b
ZpoqXxfkroYClVpiDrbJlCzwjnb1CBC49m+fTC4meX4EhqL7ZLECggEBAPvFxenW
GRC6fe05fWJwNi47Qf49Ll2BXipeq9NZlL3Z1j4V/DTcB9xw9HvuilsY4Hy+jQZM
mNOw8xPcPQLZxuG5HKAkuy/YOzWfgQCthAM+9ewQfcg8yEGv4qUx+iMxbR67SW0n
oOK5xGEOyIhnyywhcuicJecoK/8m4mZXryJTZced9oAiGXziEVcPVYqe+JLAea8G
3fqvHQj5EF5IC7q9sohSqSvnILukFmhgdG5xDvNGcVwczw8EO/hzDGT7ZAT1EheA
r29bnn6rxDYWsatOUeXx7qLjPJcH1ZEoQF8YdWvUu4v0wHwIZRB+Ul0soMS1KvP8
RlT5VuspRkby8a0CggEBAObyfKlBWiZWMu4iLxySHoAvxuAVI/7UJI5SCwMLZOtZ
FvNumPfVAS9YdJNnV44en368b8Lk+oBahlrgssTTIHN6eFlS/b7okHlkb6O2ED0v
LingYZ8iELAxeBEhM0sLthjXV2GzshqGTLDSc/SbInKtIZKY9mwAEQn75WH1sGbX
GPixZpS64f3fzV5lXZSb39gx/YAKn6LlrM6pxrOKA947ZIYpCCx+2vVeYS2tWl23
iJaKCdy5GMKb/BOhBA08zWMYVmejB+hRtaFz1wcloDQJvyu3SL2mMV/mU3ERDG2R
+o6K9EEmMnB8xci40EOCMETDXxmeMGnsXQf5bEVeBBUCggEAHtw6CxR8FAnX35j5
XnSEn5wR1bjoEvwFb8oU454KVk76LLgDJvOFXybVQM+XU90zvvaYUJpY7TG2Scvo
Co5pC0fmU1bNPusRLtxzMoMSOFeiSyImWMHihfKqJDeBAolPZ8HrGR8PYFsG0CLA
v7+BLtKWxB5HoxLQecDpZUQAKoPwaMxa54/GcgE/wN0XTht4OnyvLZ343X5TX8Mv
l27bSTNxS7ZeGAyHfZh6Sqbv/o2LGJSc1n6Nfri1JRns/f+2XckwQ4M5fbvMLJif
P0X+1xGNhlLmPj7+MUD7k4RMh5t24RW9O0VvxoQ85w2kyNjsh8/xCOD2OfoqBj8T
5yRmLQKCAQBZA6Wg5xuEIz1GI87cyEURS1jwDbXuBn6AjIbKCZ5AR/pcoYg8HdFz
Gjj0h6RrlsoK4z6AdBlJV5rpdCnzSxz65X11kFNVPfZRk7Cj/QyNSJ4WbfGykEK2
ZprMn2tRxZXORVHcypIfPxxYGwWuhgzk/m4uPt7cCbqHipuDAluXh9iMInRTZySr
4ZMaix9ipCHHBp2auH2HH9dXYIDBurR695FrVG1eGRbz9AiovmRSMudmfpYGiSFO
ASlLt4gEQic3xq2nDGOD29qR/EAo9Qumgws4IlDbKC9nszL+JYAQy28zecNjSQGv
8aeaEgHTw14vYs5I5Xvrl7rT1AMzSWVxAoIBAQCaDhdF/OyysP5WuQYd3v0J1yBM
bYc3y+RxdzCHtdxor5fQvTAN0gtp1KhrCmfoYdW4yUnOQZ6YoRzllERcQyoD2tGm
nEWm5YXQU8WZBGvCNfcL2qAVKZ3g498NJ3NqFMW9u2O1OlCSTRzLYp5Hdsx/7kl/
rzuo3vqtgYQqUkWDps6gjGkr55ztZHMoV6wGH9nf8tD0kqk+U6zIzaxiDj0U8+nr
xtEY4RYeEg1LV1I+kKvhEXx2mlyw7EbHTBXsfr7NdW3i7jFGN+mYywEhAqTlxJds
/IIDg+agTUeg+vYYbPA9nAwlTU1nzkhE3x3Aix/YRrtM70xFEF1v/sg4Oot/
-----END RSA PRIVATE KEY-----`

    cert, err := tls.X509KeyPair([]byte(rsaCertPEM), []byte(rsaKeyPEM))

    config := &tls.Config{
        Certificates: []tls.Certificate{ cert },
    }

    serv.listener,err = tls.Listen(""tcp"", ""127.0.0.1:30101"", config)
    if err != nil {
        return err
    }

    return
}

func (serv *Service)AcceptRequests() {
    for {
        netConn,_ := serv.listener.Accept()
        var tlsConn (*tls.Conn) = netConn.(*tls.Conn)

        certs := tlsConn.ConnectionState().PeerCertificates

        fmt.Printf(""got certs: `%s`\n"", certs)
    }
}

func main() {
    serv := new(Service)
    err := serv.Listen(30100)
    if err != nil {
        fmt.Printf(""go err: `%s`"", err)
        return
    }
    go serv.AcceptRequests()

    time.Sleep(1)

    tlsConn, _ := tls.Dial(""tcp"",""127.0.0.1:30101"", &tls.Config{
        InsecureSkipVerify: true,
    })
    tlsConn.Write([]byte(""hey""))
}
",6551
190,31744832,"package main

import (
    ""code.google.com/p/gcfg""
    ""database/sql""
    ""flag""
    ""fmt""
    _ ""github.com/go-sql-driver/mysql""
    ""github.com/parnurzeal/gorequest""
    ""log""
    ""strconv""
    ""time""
)

func main() {
    t := time.Now()
    initConfig()
    initRoundRobin()

    for i := vStart; i <= vStop; i++ {
        cache(""https://site.ru/url/""+strconv.Itoa(i), ""url"", i)
    }

    fmt.Println(""Time: "", time.Since(t))
}

var (
    db                  *sql.DB
    config              ConfigStruct
    configFile          = ""config.gcfg""
    roundRobin          map[int]string
    roundRobinNextId    int
    roundRobinMaxId     int
    vStart              int
    vStop               int
    vPart               int
    vScriptCount        int
    roundRobinShift     int
    failedRequestCount  int
    successRequestCount int
)

type ConfigStruct struct {
    Database struct {
        ConnectionString string
        TableNameCache   string
    }
    Part struct {
        CurrentPart             int
        CurrentProxyCheckerPart int
    }
}

type ProxyAddress struct {
    Id int
    Ip string
}

func check(e error) {
    if e != nil {
        panic(e)
        log.Fatal(e)
    }
}
",1202
191,31744832,"func initConfig() {
    if err := gcfg.ReadFileInto(&config, configFile); err != nil {
        check(err)
    }

    connect, err := sql.Open(""mysql"", config.Database.ConnectionString)
    check(err)
    db = connect
    vScriptCount = 100000
    flag.IntVar(&roundRobinShift, ""shift"", 0, """")
    flag.IntVar(&vPart, ""part"", 0, ""select part"")
    flag.IntVar(&vStart, ""start"", (vPart*vScriptCount)+1, ""select start id"")
    flag.IntVar(&vStop, ""stop"", (vPart+1)*vScriptCount, ""select stop id"")

    flag.Parse()
    vStart = vStart + (vPart * vScriptCount)
    vStop = vStop + (vPart * vScriptCount)
    successRequestCount = 0
}
",630
192,31744832,"func initRoundRobin() {
    roundRobin = make(map[int]string)
    rows, err := db.Query(""SELECT id, ip FROM proxies WHERE status = 1 order by id asc"")
    check(err)
    defer rows.Close()
    for rows.Next() {
        pa := new(ProxyAddress)
        if err := rows.Scan(&pa.Id, &pa.Ip); err != nil {
            check(err)
        }
        roundRobin[pa.Id] = pa.Ip
        roundRobinMaxId = pa.Id
    }
    roundRobinNextId = roundRobinShift + successRequestCount
    if roundRobinNextId > roundRobinMaxId {
        roundRobinNextId = 0
    }
    failedRequestCount = 0

}
",576
193,31744832,"func cache(url string, tag string, url_id int) ([]byte, error) {
    var data string
    err := db.QueryRow(""SELECT data FROM cache WHERE url_id=? AND tag=?"", url_id, tag).Scan(&data)
    if err == sql.ErrNoRows {
        data, err := proxyRequest(url)
        check(err)
        insert, err := db.Prepare(""INSERT cache SET url_id=?, url=?, tag=?, data=?, datetime=?"")
        datetime, err := strconv.ParseInt(time.Now().Format(""20060102150405""), 10, 64)
        check(err)
        insert.Exec(url_id, url, tag, data, datetime)
        return []byte(data), nil
    }
    return []byte(data), nil
}
",599
194,31744832,"func proxyRequest(url string) ([]byte, error) {
    for {
        roundRobinCurrentId := getNextRoundRobinId()
        proxy := roundRobin[roundRobinCurrentId]
        request := gorequest.New().Timeout(10000 * time.Millisecond).Proxy(""http://"" + proxy)
        _, body, err := request.Get(url).End()
        if err != nil {
            deleteRoundRobinId(roundRobinCurrentId, err[0].Error())
            continue
        } else {
            successRequestCount++
        }
        return []byte(body), nil
        break
    }
    return []byte(""""), nil
}
",557
195,31744832,"func getNextRoundRobinId() int {
    for {
        if len(roundRobin) == 0 {
            initRoundRobin()
            if len(roundRobin) == 0 {
                fmt.Println(""proxy is ended"")
                time.Sleep(30 * time.Second)
                initRoundRobin()
            }
        }
        if roundRobinNextId == roundRobinMaxId {
            roundRobinNextId = 0
        }
        roundRobinNextId++
        _, ok := roundRobin[roundRobinNextId]
        if ok {
            break
        }
    }
    return roundRobinNextId
}
",537
196,31744832,"func deleteRoundRobinId(roundRobinId int, result string) {
    db.Exec(""update proxies set status = 0, response =? where id=?"", result, roundRobinId)
    delete(roundRobin, roundRobinId)
    failedRequestCount++
    if failedRequestCount == 5 {
        initRoundRobin()
    }
}
",278
197,31744832,"database/sql.(*Stmt).Exec(0x0, 0xc20842be38, 0x5, 0x5, 0x0, 0x0, 0x0, 0x0)
    /usr/local/go/src/database/sql/sql.go:1302 +0x3e1
main.cache(0xc2082f0690, 0x23, 0x355910, 0x9, 0x12775b, 0x0, 0x0, 0x0, 0x0, 0x0)
    /var/go/src/parser/index.go:148 +0x702
main.main()
    /var/go/src/parser/index.go:31 +0x26c

goroutine 5 [chan receive, 213 minutes]:
database/sql.(*DB).connectionOpener(0xc2080446e0)
    /usr/local/go/src/database/sql/sql.go:589 +0x4c
created by database/sql.Open
    /usr/local/go/src/database/sql/sql.go:452 +0x31c

goroutine 17 [syscall, 213 minutes, locked to thread]:
runtime.goexit()
    /usr/local/go/src/runtime/asm_amd64.s:2232 +0x1

goroutine 10854 [IO wait]:
net.(*pollDesc).Wait(0xc2081f2990, 0x72, 0x0, 0x0)
    /usr/local/go/src/net/fd_poll_runtime.go:84 +0x47
net.(*pollDesc).WaitRead(0xc2081f2990, 0x0, 0x0)
    /usr/local/go/src/net/fd_poll_runtime.go:89 +0x43
net.(*netFD).Read(0xc2081f2930, 0xc20844e800, 0x400, 0x400, 0x0, 0x584b70, 0xc2081f7ae8)
    /usr/local/go/src/net/fd_unix.go:242 +0x40f
net.(*conn).Read(0xc208038390, 0xc20844e800, 0x400, 0x400, 0x0, 0x0, 0x0)
    /usr/local/go/src/net/net.go:121 +0xdc
crypto/tls.(*block).readFromUntil(0xc20857dfb0, 0x5860a8, 0xc208038390, 0x5, 0x0, 0x0)
    /usr/local/go/src/crypto/tls/conn.go:454 +0xe6
crypto/tls.(*Conn).readRecord(0xc208484b00, 0x17, 0x0, 0x0)
    /usr/local/go/src/crypto/tls/conn.go:539 +0x2da
crypto/tls.(*Conn).Read(0xc208484b00, 0xc20834e000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    /usr/local/go/src/crypto/tls/conn.go:904 +0x166
net/http.noteEOFReader.Read(0x58c488, 0xc208484b00, 0xc208263398, 0xc20834e000, 0x1000, 0x1000, 0x2a0300, 0x0, 0x0)
    /usr/local/go/src/net/http/transport.go:1270 +0x6e
net/http.(*noteEOFReader).Read(0xc2082a4460, 0xc20834e000, 0x1000, 0x1000, 0xc208012000, 0x0, 0x0)
    :125 +0xd4
bufio.(*Reader).fill(0xc2080fc060)
    /usr/local/go/src/bufio/bufio.go:97 +0x1ce
bufio.(*Reader).Peek(0xc2080fc060, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)
    /usr/local/go/src/bufio/bufio.go:132 +0xf0
net/http.(*persistConn).readLoop(0xc208263340)
    /usr/local/go/src/net/http/transport.go:842 +0xa4
created by net/http.(*Transport).dialConn
    /usr/local/go/src/net/http/transport.go:660 +0xc9f

goroutine 10863 [select]:
net/http.(*persistConn).writeLoop(0xc208263ad0)
    /usr/local/go/src/net/http/transport.go:945 +0x41d
created by net/http.(*Transport).dialConn
    /usr/local/go/src/net/http/transport.go:661 +0xcbc

goroutine 10855 [select]:
net/http.(*persistConn).writeLoop(0xc208263340)
    /usr/local/go/src/net/http/transport.go:945 +0x41d
created by net/http.(*Transport).dialConn
    /usr/local/go/src/net/http/transport.go:661 +0xcbc

goroutine 10862 [IO wait]:
net.(*pollDesc).Wait(0xc208010b50, 0x72, 0x0, 0x0)
    /usr/local/go/src/net/fd_poll_runtime.go:84 +0x47
net.(*pollDesc).WaitRead(0xc208010b50, 0x0, 0x0)
    /usr/local/go/src/net/fd_poll_runtime.go:89 +0x43
net.(*netFD).Read(0xc208010af0, 0xc20852c800, 0x400, 0x400, 0x0, 0x584b70, 0xc2081af168)
    /usr/local/go/src/net/fd_unix.go:242 +0x40f
net.(*conn).Read(0xc208038488, 0xc20852c800, 0x400, 0x400, 0x0, 0x0, 0x0)
    /usr/local/go/src/net/net.go:121 +0xdc
crypto/tls.(*block).readFromUntil(0xc2085597a0, 0x5860a8, 0xc208038488, 0x5, 0x0, 0x0)
    /usr/local/go/src/crypto/tls/conn.go:454 +0xe6
crypto/tls.(*Conn).readRecord(0xc2084858c0, 0x17, 0x0, 0x0)
    /usr/local/go/src/crypto/tls/conn.go:539 +0x2da
crypto/tls.(*Conn).Read(0xc2084858c0, 0xc208415000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    /usr/local/go/src/crypto/tls/conn.go:904 +0x166
net/http.noteEOFReader.Read(0x58c488, 0xc2084858c0, 0xc208263b28, 0xc208415000, 0x1000, 0x1000, 0x2a0300, 0x0, 0x0)
    /usr/local/go/src/net/http/transport.go:1270 +0x6e
net/http.(*noteEOFReader).Read(0xc20825bce0, 0xc208415000, 0x1000, 0x1000, 0xc208012000, 0x0, 0x0)
    :125 +0xd4
bufio.(*Reader).fill(0xc2080fd740)
    /usr/local/go/src/bufio/bufio.go:97 +0x1ce
bufio.(*Reader).Peek(0xc2080fd740, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)
    /usr/local/go/src/bufio/bufio.go:132 +0xf0
net/http.(*persistConn).readLoop(0xc208263ad0)
    /usr/local/go/src/net/http/transport.go:842 +0xa4
created by net/http.(*Transport).dialConn
    /usr/local/go/src/net/http/transport.go:660 +0xc9f

goroutine 10867 [select]:
net/http.(*persistConn).writeLoop(0xc208263ef0)
    /usr/local/go/src/net/http/transport.go:945 +0x41d
created by net/http.(*Transport).dialConn
    /usr/local/go/src/net/http/transport.go:661 +0xcbc

goroutine 10866 [IO wait]:
net.(*pollDesc).Wait(0xc2084be1b0, 0x72, 0x0, 0x0)
    /usr/local/go/src/net/fd_poll_runtime.go:84 +0x47
net.(*pollDesc).WaitRead(0xc2084be1b0, 0x0, 0x0)
    /usr/local/go/src/net/fd_poll_runtime.go:89 +0x43
net.(*netFD).Read(0xc2084be150, 0xc208465000, 0x1000, 0x1000, 0x0, 0x584b70, 0xc2081602f0)
    /usr/local/go/src/net/fd_unix.go:242 +0x40f
net.(*conn).Read(0xc208038540, 0xc208465000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    /usr/local/go/src/net/net.go:121 +0xdc
crypto/tls.(*block).readFromUntil(0xc2080cc180, 0x5860a8, 0xc208038540, 0x5, 0x0, 0x0)
    /usr/local/go/src/crypto/tls/conn.go:454 +0xe6
crypto/tls.(*Conn).readRecord(0xc2082cc000, 0x17, 0x0, 0x0)
    /usr/local/go/src/crypto/tls/conn.go:539 +0x2da
crypto/tls.(*Conn).Read(0xc2082cc000, 0xc2082cf000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    /usr/local/go/src/crypto/tls/conn.go:904 +0x166
net/http.noteEOFReader.Read(0x58c488, 0xc2082cc000, 0xc208263f48, 0xc2082cf000, 0x1000, 0x1000, 0x2a0300, 0x0, 0x0)
    /usr/local/go/src/net/http/transport.go:1270 +0x6e
net/http.(*noteEOFReader).Read(0xc20820ed60, 0xc2082cf000, 0x1000, 0x1000, 0xc208012000, 0x0, 0x0)
    :125 +0xd4
bufio.(*Reader).fill(0xc208326240)
    /usr/local/go/src/bufio/bufio.go:97 +0x1ce
bufio.(*Reader).Peek(0xc208326240, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)
    /usr/local/go/src/bufio/bufio.go:132 +0xf0
net/http.(*persistConn).readLoop(0xc208263ef0)
    /usr/local/go/src/net/http/transport.go:842 +0xa4
created by net/http.(*Transport).dialConn
    /usr/local/go/src/net/http/transport.go:660 +0xc9f

goroutine 10859 [select]:
net/http.(*persistConn).writeLoop(0xc208263760)
    /usr/local/go/src/net/http/transport.go:945 +0x41d
created by net/http.(*Transport).dialConn
    /usr/local/go/src/net/http/transport.go:661 +0xcbc

goroutine 10858 [IO wait]:
net.(*pollDesc).Wait(0xc2081f3790, 0x72, 0x0, 0x0)
    /usr/local/go/src/net/fd_poll_runtime.go:84 +0x47
net.(*pollDesc).WaitRead(0xc2081f3790, 0x0, 0x0)
    /usr/local/go/src/net/fd_poll_runtime.go:89 +0x43
net.(*netFD).Read(0xc2081f3730, 0xc208418000, 0x1000, 0x1000, 0x0, 0x584b70, 0xc2081c53e8)
    /usr/local/go/src/net/fd_unix.go:242 +0x40f
net.(*conn).Read(0xc208038400, 0xc208418000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    /usr/local/go/src/net/net.go:121 +0xdc
crypto/tls.(*block).readFromUntil(0xc208458510, 0x5860a8, 0xc208038400, 0x5, 0x0, 0x0)
    /usr/local/go/src/crypto/tls/conn.go:454 +0xe6
crypto/tls.(*Conn).readRecord(0xc208485340, 0x17, 0x0, 0x0)
    /usr/local/go/src/crypto/tls/conn.go:539 +0x2da
crypto/tls.(*Conn).Read(0xc208485340, 0xc2082f6000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    /usr/local/go/src/crypto/tls/conn.go:904 +0x166
net/http.noteEOFReader.Read(0x58c488, 0xc208485340, 0xc2082637b8, 0xc2082f6000, 0x1000, 0x1000, 0x2a0300, 0x0, 0x0)
    /usr/local/go/src/net/http/transport.go:1270 +0x6e
net/http.(*noteEOFReader).Read(0xc20827a1a0, 0xc2082f6000, 0x1000, 0x1000, 0xc208012000, 0x0, 0x0)
    :125 +0xd4
bufio.(*Reader).fill(0xc2080fcc00)
    /usr/local/go/src/bufio/bufio.go:97 +0x1ce
bufio.(*Reader).Peek(0xc2080fcc00, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)
    /usr/local/go/src/bufio/bufio.go:132 +0xf0
net/http.(*persistConn).readLoop(0xc208263760)
    /usr/local/go/src/net/http/transport.go:842 +0xa4
created by net/http.(*Transport).dialConn
    /usr/local/go/src/net/http/transport.go:660 +0xc9f
exit status 2
",7796
198,32078061,ps aux,6
199,32078061,pprof top,9
200,32078061,"ps aux |grep android
root      4584  3.4  0.1 500244 29536 pts/1    Sl+  17:21   0:38 ./android -logtostderr
",109
201,32078061,"/pprof.localhost:6060.inuse_objects.inuse_space.008.pb.gz
Entering interactive mode (type ""help"" for commands)
(pprof) top
512.19kB of 512.19kB total (  100%)
Dropped 19 nodes (cum <= 2.56kB)
      flat  flat%   sum%        cum   cum%
  512.19kB   100%   100%   512.19kB   100%  runtime.malg
         0     0%   100%   512.19kB   100%  runtime.mcommoninit
         0     0%   100%   512.19kB   100%  runtime.mpreinit
         0     0%   100%   512.19kB   100%  runtime.rt0_go
         0     0%   100%   512.19kB   100%  runtime.schedinit
(pprof) 
",547
202,32078061,"heap profile: 3: 49632 [3: 49632] @ heap/1048576
1: 49152 [1: 49152] @ 0x412c62 0x411bc9 0x6fd8c8 0x649c40 0x5497e6 0x409ad2 0x43615f 0x4669c1
#   0x6fd8c8    html.init+0xe8          /usr/local/gosrc/src/html/entity.go:2154
#   0x649c40    html/template.init+0x70     /usr/local/gosrc/src/html/template/url.go:105
#   0x5497e6    net/http/pprof.init+0x56    /usr/local/gosrc/src/net/http/pprof/pprof.go:239
#   0x409ad2    main.init+0x92          /root/go/src/github.com/ginkoob/devmg/local/android/local.go:236
#   0x43615f    runtime.main+0x27f      /usr/local/gosrc/src/runtime/proc.go:100

1: 384 [1: 384] @ 0x43d0e7 0x4317ef 0x437700 0x4372a9 0x464182
#   0x43d0e7    runtime.malg+0x27       /usr/local/gosrc/src/runtime/proc1.go:2172
#   0x4317ef    runtime.mpreinit+0x1f       /usr/local/gosrc/src/runtime/os1_linux.go:197
#   0x437700    runtime.mcommoninit+0x100   /usr/local/gosrc/src/runtime/proc1.go:114
#   0x4372a9    runtime.schedinit+0x79      /usr/local/gosrc/src/runtime/proc1.go:57
#   0x464182    runtime.rt0_go+0x132        /usr/local/gosrc/src/runtime/asm_amd64.s:109

1: 96 [1: 96] @ 0x449005 0x46a114 0x468625 0x467e71 0x4069d5 0x436190 0x4669c1
#   0x46a114    golang.org/x/mobile/gl.DoWork+0x54  /root/go/src/golang.org/x/mobile/gl/work.go:82
#   0x468625    golang.org/x/mobile/app.main+0x1d5  /root/go/src/golang.org/x/mobile/app/x11.go:65
#   0x467e71    golang.org/x/mobile/app.Main+0x21   /root/go/src/golang.org/x/mobile/app/app.go:22
#   0x4069d5    main.main+0x75              /root/go/src/github.com/ginkoob/devmg/local/android/local.go:65
#   0x436190    runtime.main+0x2b0          /usr/local/gosrc/src/runtime/proc.go:111

0: 0 [0: 0] @ 0x449005 0x6529f5 0x652936 0x64e2c4 0x54932e 0x549540 0x5222aa 0x523b0d 0x52457e 0x521d6e 0x4669c1
#   0x6529f5    runtime/pprof.writeGoroutineStacks+0x45 /usr/local/gosrc/src/runtime/pprof/pprof.go:514
#   0x652936    runtime/pprof.writeGoroutine+0x46   /usr/local/gosrc/src/runtime/pprof/pprof.go:505
#   0x64e2c4    runtime/pprof.(*Profile).WriteTo+0xd4   /usr/local/gosrc/src/runtime/pprof/pprof.go:236
#   0x54932e    net/http/pprof.handler.ServeHTTP+0x37e  /usr/local/gosrc/src/net/http/pprof/pprof.go:199
#   0x549540    net/http/pprof.Index+0x200      /usr/local/gosrc/src/net/http/pprof/pprof.go:211
#   0x5222aa    net/http.HandlerFunc.ServeHTTP+0x3a /usr/local/gosrc/src/net/http/server.go:1422
#   0x523b0d    net/http.(*ServeMux).ServeHTTP+0x17d    /usr/local/gosrc/src/net/http/server.go:1699
#   0x52457e    net/http.serverHandler.ServeHTTP+0x19e  /usr/local/gosrc/src/net/http/server.go:1862
#   0x521d6e    net/http.(*conn).serve+0xbee        /usr/local/gosrc/src/net/http/server.go:1361


# runtime.MemStats
# Alloc = 2701264
# TotalAlloc = 2701264
# Sys = 7145720
# Lookups = 18
# Mallocs = 19841
# Frees = 0
# HeapAlloc = 2701264
# HeapSys = 3637248
# HeapIdle = 262144
# HeapInuse = 3375104
# HeapReleased = 0
# HeapObjects = 19841
# Stack = 557056 / 557056
# MSpan = 28896 / 32768
# MCache = 4832 / 16384
# BuckHashSys = 1443979
# NextGC = 4194304
# PauseNs = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
# NumGC = 0
# EnableGC = true
# DebugGC = false
",3619
203,32078061,"goroutine profile: total 31
1 @ 0x652ba8 0x652983 0x64e2c4 0x54932e 0x549540 0x5222aa 0x523b0d 0x52457e 0x521d6e 0x4669c1
#   0x652ba8    runtime/pprof.writeRuntimeProfile+0xb8  /usr/local/gosrc/src/runtime/pprof/pprof.go:545
#   0x652983    runtime/pprof.writeGoroutine+0x93   /usr/local/gosrc/src/runtime/pprof/pprof.go:507
#   0x64e2c4    runtime/pprof.(*Profile).WriteTo+0xd4   /usr/local/gosrc/src/runtime/pprof/pprof.go:236
#   0x54932e    net/http/pprof.handler.ServeHTTP+0x37e  /usr/local/gosrc/src/net/http/pprof/pprof.go:199
#   0x549540    net/http/pprof.Index+0x200      /usr/local/gosrc/src/net/http/pprof/pprof.go:211
#   0x5222aa    net/http.HandlerFunc.ServeHTTP+0x3a /usr/local/gosrc/src/net/http/server.go:1422
#   0x523b0d    net/http.(*ServeMux).ServeHTTP+0x17d    /usr/local/gosrc/src/net/http/server.go:1699
#   0x52457e    net/http.serverHandler.ServeHTTP+0x19e  /usr/local/gosrc/src/net/http/server.go:1862
#   0x521d6e    net/http.(*conn).serve+0xbee        /usr/local/gosrc/src/net/http/server.go:1361

1 @ 0x436573 0x444ce4 0x444242 0x46871a 0x467e71 0x4069d5 0x436190 0x4669c1
#   0x46871a    golang.org/x/mobile/app.main+0x2ca  /root/go/src/golang.org/x/mobile/app/x11.go:61
#   0x467e71    golang.org/x/mobile/app.Main+0x21   /root/go/src/golang.org/x/mobile/app/app.go:22
#   0x4069d5    main.main+0x75              /root/go/src/github.com/nme/devmg/local/android/local.go:65
#   0x436190    runtime.main+0x2b0          /usr/local/gosrc/src/runtime/proc.go:111

1 @ 0x4669c1

1 @ 0x436573 0x436634 0x436378 0x4669c1
#   0x436573    runtime.gopark+0x163        /usr/local/gosrc/src/runtime/proc.go:186
#   0x436634    runtime.goparkunlock+0x54   /usr/local/gosrc/src/runtime/proc.go:191
#   0x436378    runtime.forcegchelper+0xb8  /usr/local/gosrc/src/runtime/proc.go:152

1 @ 0x436573 0x436634 0x42630d 0x4669c1
#   0x436573    runtime.gopark+0x163        /usr/local/gosrc/src/runtime/proc.go:186
#   0x436634    runtime.goparkunlock+0x54   /usr/local/gosrc/src/runtime/proc.go:191
#   0x42630d    runtime.bgsweep+0x14d       /usr/local/gosrc/src/runtime/mgcsweep.go:67

1 @ 0x436573 0x436634 0x41e04a 0x4669c1
#   0x436573    runtime.gopark+0x163        /usr/local/gosrc/src/runtime/proc.go:186
#   0x436634    runtime.goparkunlock+0x54   /usr/local/gosrc/src/runtime/proc.go:191
#   0x41e04a    runtime.runfinq+0xaa        /usr/local/gosrc/src/runtime/mfinal.go:154

1 @ 0x436573 0x444ce4 0x444242 0x4691e7 0x4669c1
#   0x4691e7    golang.org/x/mobile/app.pump.func1+0x527    /root/go/src/golang.org/x/mobile/app/app.go:138

1 @ 0x436573 0x436634 0x40d611 0x40ccfb 0x4acb57 0x4669c1
#   0x4acb57    github.com/golang/glog.(*loggingT).flushDaemon+0x67 /root/go/src/github.com/golang/glog/glog.go:882

1 @ 0x4173be 0x45142e 0x4669c1
#   0x4173be    runtime.notetsleepg+0x4e    /usr/local/gosrc/src/runtime/lock_futex.go:203
#   0x45142e    runtime.timerproc+0xde      /usr/local/gosrc/src/runtime/time.go:209

1 @ 0x436573 0x444ce4 0x444242 0x533327 0x4669c1
#   0x533327    net/http.(*persistConn).readLoop+0xac7  /usr/local/gosrc/src/net/http/transport.go:983

1 @ 0x436573 0x43069e 0x42fb60 0x4cd99a 0x4cda06 0x4d158c 0x4ef94d 0x5254d1 0x524853 0x524716 0x524daf 0x408e1c 0x4669c1
#   0x42fb60    net.runtime_pollWait+0x60           /usr/local/gosrc/src/runtime/netpoll.go:157
#   0x4cd99a    net.(*pollDesc).Wait+0x3a           /usr/local/gosrc/src/net/fd_poll_runtime.go:73
#   0x4cda06    net.(*pollDesc).WaitRead+0x36           /usr/local/gosrc/src/net/fd_poll_runtime.go:78
#   0x4d158c    net.(*netFD).accept+0x27c           /usr/local/gosrc/src/net/fd_unix.go:408
#   0x4ef94d    net.(*TCPListener).AcceptTCP+0x4d       /usr/local/gosrc/src/net/tcpsock_posix.go:254
#   0x5254d1    net/http.tcpKeepAliveListener.Accept+0x41   /usr/local/gosrc/src/net/http/server.go:2138
#   0x524853    net/http.(*Server).Serve+0xb3           /usr/local/gosrc/src/net/http/server.go:1887
#   0x524716    net/http.(*Server).ListenAndServe+0x136     /usr/local/gosrc/src/net/http/server.go:1877
#   0x524daf    net/http.ListenAndServe+0x8f            /usr/local/gosrc/src/net/http/server.go:1967
#   0x408e1c    main.main.func1+0x3c                /root/go/src/github.com/nme/devmg/local/android/local.go:40

1 @ 0x436573 0x43069e 0x42fb60 0x4cd99a 0x4cda06 0x4cf74a 0x4e3c34 0x5c0c39 0x5c14aa 0x4b0cee 0x4b5b43 0x49e028 0x49a8d0 0x49b173 0x49cf47 0x4669c1
#   0x42fb60    net.runtime_pollWait+0x60                       /usr/local/gosrc/src/runtime/netpoll.go:157
#   0x4cd99a    net.(*pollDesc).Wait+0x3a                       /usr/local/gosrc/src/net/fd_poll_runtime.go:73
#   0x4cda06    net.(*pollDesc).WaitRead+0x36                       /usr/local/gosrc/src/net/fd_poll_runtime.go:78
#   0x4cf74a    net.(*netFD).Read+0x23a                         /usr/local/gosrc/src/net/fd_unix.go:232
#   0x4e3c34    net.(*conn).Read+0xe4                           /usr/local/gosrc/src/net/net.go:132
#   0x5c0c39    bufio.(*Reader).fill+0x1e9                      /usr/local/gosrc/src/bufio/bufio.go:97
#   0x5c14aa    bufio.(*Reader).ReadByte+0x7a                       /usr/local/gosrc/src/bufio/bufio.go:229
#   0x4b0cee    golang.org/x/net/websocket.hybiFrameReaderFactory.NewFrameReader+0xbe   /root/go/src/golang.org/x/net/websocket/hybi.go:126
#   0x4b5b43    golang.org/x/net/websocket.Codec.Receive+0x183              /root/go/src/golang.org/x/net/websocket/websocket.go:315
#   0x49e028    golang.org/x/net/websocket.(Codec).Receive-fm+0x58          /root/go/src/github.com/nme/socks/ws.go:420
#   0x49a8d0    github.com/nme/socks.(*WSConn).execute+0x210            /root/go/src/github.com/nme/socks/ws.go:389
#   0x49b173    github.com/nme/socks.(*WSConn).receiveMessage+0x203         /root/go/src/github.com/nme/socks/ws.go:420
#   0x49cf47    github.com/nme/socks.(*WSConn).Setup.func3+0x117            /root/go/src/github.com/nme/socks/ws.go:221

1 @ 0x436573 0x436634 0x40d611 0x40ccfb 0x4080af 0x406fd8 0x4092e7 0x46937f 0x4669c1
#   0x4080af    main.startSocks+0x3bf           /root/go/src/github.com/nme/devmg/local/android/local.go:151
#   0x406fd8    main.startClient+0x5d8          /root/go/src/github.com/nme/devmg/local/android/local.go:82
#   0x4092e7    main.main.func2+0x227           /root/go/src/github.com/nme/devmg/local/android/local.go:64
#   0x46937f    golang.org/x/mobile/app.main.func1+0x6f /root/go/src/golang.org/x/mobile/app/x11.go:51

1 @ 0x436573 0x444ce4 0x444242 0x533c4c 0x4669c1
#   0x533c4c    net/http.(*persistConn).writeLoop+0x40c /usr/local/gosrc/src/net/http/transport.go:1016

1 @ 0x436573 0x436634 0x40d182 0x40ccfb 0x408f63 0x4669c1
#   0x408f63    main.main.func2.1+0x73  /root/go/src/github.com/nme/devmg/local/android/local.go:47

1 @ 0x436573 0x444ce4 0x444242 0x49dcee 0x4669c1
#   0x49dcee    github.com/nme/socks.(*WSConn).Setup.func4+0x86e    /root/go/src/github.com/nme/socks/ws.go:256

1 @ 0x436573 0x444ce4 0x444242 0x49c7a5 0x4669c1
#   0x49c7a5    github.com/nme/socks.SetKeepAlive.func1+0x215   /root/go/src/github.com/nme/socks/ws.go:32

1 @ 0x436573 0x436634 0x40d611 0x40ccfb 0x4072c6 0x4669c1
#   0x4072c6    main.WaitCmd+0xc6   /root/go/src/github.com/nme/devmg/local/android/local.go:95

1 @ 0x436573 0x444ce4 0x444242 0x4998aa 0x4669c1
#   0x4998aa    github.com/nme/socks.(*Router).ListenAndServe+0x91a /root/go/src/github.com/nme/socks/ws.go:124

1 @ 0x436573 0x444ce4 0x444242 0x49a173 0x4669c1
#   0x49a173    github.com/nme/socks.(*WSConn).Setup+0x753  /root/go/src/github.com/nme/socks/ws.go:186

1 @ 0x436573 0x436634 0x40d611 0x40ccfb 0x49b3ea 0x4669c1
#   0x49b3ea    github.com/nme/socks.(*Nic).Dial.func1+0x9a /root/go/src/github.com/nme/socks/conn.go:34

3 @ 0x436573 0x444ce4 0x444242 0x49cd50 0x4669c1
#   0x49cd50    github.com/nme/socks.(*Router).ListenAndServe.func1+0x590   /root/go/src/github.com/nme/socks/ws.go:96

1 @ 0x436573 0x43069e 0x42fb60 0x4cd99a 0x4cda06 0x4cf74a 0x4e3c34 0x51a734 0x581f7d 0x5c0c39 0x5c1aaa 0x5c1b23 0x6285f1 0x628360 0x515496 0x51d83f 0x5218a7 0x4669c1
#   0x42fb60    net.runtime_pollWait+0x60           /usr/local/gosrc/src/runtime/netpoll.go:157
#   0x4cd99a    net.(*pollDesc).Wait+0x3a           /usr/local/gosrc/src/net/fd_poll_runtime.go:73
#   0x4cda06    net.(*pollDesc).WaitRead+0x36           /usr/local/gosrc/src/net/fd_poll_runtime.go:78
#   0x4cf74a    net.(*netFD).Read+0x23a             /usr/local/gosrc/src/net/fd_unix.go:232
#   0x4e3c34    net.(*conn).Read+0xe4               /usr/local/gosrc/src/net/net.go:132
#   0x51a734    net/http.(*liveSwitchReader).Read+0xa4      /usr/local/gosrc/src/net/http/server.go:219
#   0x581f7d    io.(*LimitedReader).Read+0xbd           /usr/local/gosrc/src/io/io.go:427
#   0x5c0c39    bufio.(*Reader).fill+0x1e9          /usr/local/gosrc/src/bufio/bufio.go:97
#   0x5c1aaa    bufio.(*Reader).ReadSlice+0x21a         /usr/local/gosrc/src/bufio/bufio.go:328
#   0x5c1b23    bufio.(*Reader).ReadLine+0x53           /usr/local/gosrc/src/bufio/bufio.go:357
#   0x6285f1    net/textproto.(*Reader).readLineSlice+0x81  /usr/local/gosrc/src/net/textproto/reader.go:55
#   0x628360    net/textproto.(*Reader).ReadLine+0x40       /usr/local/gosrc/src/net/textproto/reader.go:36
#   0x515496    net/http.ReadRequest+0xb6           /usr/local/gosrc/src/net/http/request.go:653
#   0x51d83f    net/http.(*conn).readRequest+0x32f      /usr/local/gosrc/src/net/http/server.go:633
#   0x5218a7    net/http.(*conn).serve+0x727            /usr/local/gosrc/src/net/http/server.go:1319

1 @ 0x436573 0x43069e 0x42fb60 0x4cd99a 0x4cda06 0x4cf74a 0x4e3c34 0x51a734 0x581f7d 0x5c0c39 0x5c0e5c 0x51d7cb 0x5218a7 0x4669c1
#   0x42fb60    net.runtime_pollWait+0x60       /usr/local/gosrc/src/runtime/netpoll.go:157
#   0x4cd99a    net.(*pollDesc).Wait+0x3a       /usr/local/gosrc/src/net/fd_poll_runtime.go:73
#   0x4cda06    net.(*pollDesc).WaitRead+0x36       /usr/local/gosrc/src/net/fd_poll_runtime.go:78
#   0x4cf74a    net.(*netFD).Read+0x23a         /usr/local/gosrc/src/net/fd_unix.go:232
#   0x4e3c34    net.(*conn).Read+0xe4           /usr/local/gosrc/src/net/net.go:132
#   0x51a734    net/http.(*liveSwitchReader).Read+0xa4  /usr/local/gosrc/src/net/http/server.go:219
#   0x581f7d    io.(*LimitedReader).Read+0xbd       /usr/local/gosrc/src/io/io.go:427
#   0x5c0c39    bufio.(*Reader).fill+0x1e9      /usr/local/gosrc/src/bufio/bufio.go:97
#   0x5c0e5c    bufio.(*Reader).Peek+0xcc       /usr/local/gosrc/src/bufio/bufio.go:132
#   0x51d7cb    net/http.(*conn).readRequest+0x2bb  /usr/local/gosrc/src/net/http/server.go:629
#   0x5218a7    net/http.(*conn).serve+0x727        /usr/local/gosrc/src/net/http/server.go:1319

1 @ 0x436573 0x436634 0x42051b 0x4669c1
#   0x436573    runtime.gopark+0x163        /usr/local/gosrc/src/runtime/proc.go:186
#   0x436634    runtime.goparkunlock+0x54   /usr/local/gosrc/src/runtime/proc.go:191
#   0x42051b    runtime.backgroundgc+0x8b   /usr/local/gosrc/src/runtime/mgc.go:894

4 @ 0x436573 0x421717 0x4669c1
#   0x436573    runtime.gopark+0x163        /usr/local/gosrc/src/runtime/proc.go:186
#   0x421717    runtime.gcBgMarkWorker+0xf7 /usr/local/gosrc/src/runtime/mgc.go:1283
",11104
204,32078061,"Name:   android
State:  S (sleeping)
Tgid:   4584
Ngid:   0
Pid:    4584
PPid:   2776
TracerPid:  0
Uid:    0   0   0   0
Gid:    0   0   0   0
FDSize: 256
Groups: 0 
NStgid: 4584
NSpid:  4584
NSpgid: 4584
NSsid:  2776
VmPeak:   631316 kB
VmSize:   573976 kB
VmLck:         0 kB
VmPin:         0 kB
VmHWM:     30060 kB
VmRSS:     29344 kB
VmData:   487492 kB
VmStk:       136 kB
VmExe:      6704 kB
VmLib:     13404 kB
VmPTE:       288 kB
VmPMD:        20 kB
VmSwap:        0 kB
Threads:    10
SigQ:   3/62942
SigPnd: 0000000000000000
ShdPnd: 0000000000000000
SigBlk: 0000000000000000
SigIgn: 0000000000000000
SigCgt: ffffffffffc1feff
CapInh: 0000000000000000
CapPrm: 0000003fffffffff
CapEff: 0000003fffffffff
CapBnd: 0000003fffffffff
Seccomp:    0
Cpus_allowed:   f
Cpus_allowed_list:  0-3
Mems_allowed:   00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000001
Mems_allowed_list:  0
voluntary_ctxt_switches:    531158
nonvoluntary_ctxt_switches: 13254
",1042
205,32176276,"dev_appserver.py goapprtc --host 0.0.0.0
",41
206,32176276,"""appengine""
""appengine/channel""
""appengine/datastore""
""appengine/urlfetch""
",75
207,32176276,"C:\>dev_appserver.py goapprtc.appspot.com-master --host 0.0.0.0
INFO     2015-08-24 16:14:08,477 sdk_update_checker.py:229] Checking for updates
 to the SDK.
INFO     2015-08-24 16:14:10,634 sdk_update_checker.py:257] The SDK is up to dat
e.
INFO     2015-08-24 16:14:10,711 api_server.py:205] Starting API server at: http
://localhost:49641
INFO     2015-08-24 16:14:10,727 dispatcher.py:197] Starting module ""default"" ru
nning at: http://0.0.0.0:8080
INFO     2015-08-24 16:14:10,727 admin_server.py:118] Starting admin server at:
http://localhost:8000
2015/08/24 16:15:02 INFO: Applying media constraints: &{true true}
2015/08/24 16:15:02 INFO: User 66666666 added to room 1234
2015/08/24 16:15:02 INFO: Room 1234 has state &{66666666  false false}
INFO     2015-08-24 16:15:02,305 module.py:808] default: ""GET /?r=1234 HTTP/1.1""
 200 1681
INFO     2015-08-24 16:15:02,384 module.py:808] default: ""GET /css/main.css HTTP
/1.1"" 304 -
INFO     2015-08-24 16:15:02,390 module.py:808] default: ""GET /js/main.js HTTP/1
.1"" 304 -
INFO     2015-08-24 16:15:02,391 module.py:808] default: ""GET /js/adapter.js HTT
P/1.1"" 304 -
INFO     2015-08-24 16:15:02,394 module.py:808] default: ""GET /images/goapprtc.g
if HTTP/1.1"" 304 -
2015/08/24 16:15:03 INFO: User 66666666 connected to room 1234
2015/08/24 16:15:03 INFO: Room 1234 has state &{66666666  true false}
INFO     2015-08-24 16:15:03,486 module.py:808] default: ""POST /_ah/channel/conn
ected/ HTTP/1.1"" 200 -
2015/08/24 16:15:26 INFO: Applying media constraints: &{true true}
2015/08/24 16:15:26 INFO: User 44444444 added to room 1234
2015/08/24 16:15:26 INFO: Room 1234 has state &{66666666 44444444 true false}
INFO     2015-08-24 16:15:26,638 module.py:808] default: ""GET /?r=1234 HTTP/1.1""
 200 1691
INFO     2015-08-24 16:15:26,796 module.py:808] default: ""GET /css/main.css HTTP
/1.1"" 304 -
INFO     2015-08-24 16:15:26,801 module.py:808] default: ""GET /js/main.js HTTP/1
.1"" 304 -
INFO     2015-08-24 16:15:26,802 module.py:808] default: ""GET /js/adapter.js HTT
P/1.1"" 304 -
INFO     2015-08-24 16:15:26,805 module.py:808] default: ""GET /images/goapprtc.g
if HTTP/1.1"" 304 -
2015/08/24 16:15:28 INFO: User 44444444 connected to room 1234
2015/08/24 16:15:28 INFO: Room 1234 has state &{66666666 44444444 true true}
INFO     2015-08-24 16:15:28,387 module.py:808] default: ""POST /_ah/channel/conn
ected/ HTTP/1.1"" 200 -
2015/08/24 16:15:29 INFO: Delivered message to user 66666666
INFO     2015-08-24 16:15:29,716 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
2015/08/24 16:15:29 INFO: Delivered message to user 66666666
INFO     2015-08-24 16:15:29,806 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
2015/08/24 16:15:30 INFO: Delivered message to user 66666666
INFO     2015-08-24 16:15:30,772 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
2015/08/24 16:15:30 INFO: Delivered message to user 66666666
INFO     2015-08-24 16:15:30,871 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
2015/08/24 16:15:30 INFO: Delivered message to user 66666666
INFO     2015-08-24 16:15:30,938 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
2015/08/24 16:15:30 INFO: Delivered message to user 66666666
2015/08/24 16:15:30 INFO: Delivered message to user 66666666
2015/08/24 16:15:30 INFO: Delivered message to user 66666666
INFO     2015-08-24 16:15:30,967 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:30,970 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:30,970 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
2015/08/24 16:15:31 INFO: Delivered message to user 66666666
INFO     2015-08-24 16:15:31,825 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
2015/08/24 16:15:31 INFO: Delivered message to user 66666666
INFO     2015-08-24 16:15:31,927 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
2015/08/24 16:15:31 INFO: Delivered message to user 66666666
INFO     2015-08-24 16:15:31,996 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
2015/08/24 16:15:32 INFO: Delivered message to user 66666666
2015/08/24 16:15:32 INFO: Delivered message to user 66666666
INFO     2015-08-24 16:15:32,065 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
2015/08/24 16:15:32 INFO: Delivered message to user 66666666
INFO     2015-08-24 16:15:32,069 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:32,075 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
2015/08/24 16:15:32 INFO: Delivered message to user 44444444
INFO     2015-08-24 16:15:32,104 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
2015/08/24 16:15:32 INFO: Delivered message to user 44444444
INFO     2015-08-24 16:15:32,121 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
2015/08/24 16:15:32 INFO: Delivered message to user 44444444
INFO     2015-08-24 16:15:32,147 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
2015/08/24 16:15:32 INFO: Delivered message to user 44444444
2015/08/24 16:15:32 INFO: Delivered message to user 44444444
2015/08/24 16:15:32 INFO: Delivered message to user 44444444
INFO     2015-08-24 16:15:32,188 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:32,190 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:32,191 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
2015/08/24 16:15:32 INFO: User 44444444 removed from room 1234
2015/08/24 16:15:32 INFO: Room 1234 has state &{66666666  true false}
2015/08/24 16:15:32 INFO: Sent BYE to 66666666
2015/08/24 16:15:32 WARNING: User 44444444 disconnected from room 1234
INFO     2015-08-24 16:15:32,848 module.py:808] default: ""POST /_ah/channel/disc
onnected/ HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:32,904 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
2015/08/24 16:15:32 INFO: User 66666666 removed from room 1234
2015/08/24 16:15:32 INFO: Room 1234 has state &{  false false}
2015/08/24 16:15:32 WARNING: User 66666666 disconnected from room 1234
INFO     2015-08-24 16:15:32,969 module.py:808] default: ""POST /_ah/channel/disc
onnected/ HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:33,022 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:33,082 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:33,131 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:33,151 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:33,183 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:33,191 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:33,206 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:33,213 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:33,220 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:33,223 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:33,957 module.py:808] default: ""POST /message?r=1234&u
=44444444 HTTP/1.1"" 200 -
2015/08/24 16:15:34 ERROR: datastore: datastore: no such entity
2015/08/24 16:15:34 WARNING: Unexpected Connect Message to room 1234
INFO     2015-08-24 16:15:34,072 module.py:808] default: ""POST /_ah/channel/conn
ected/ HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:34,148 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:34,170 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:34,239 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:34,243 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:34,243 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:34,346 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:35,153 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
INFO     2015-08-24 16:15:35,183 module.py:808] default: ""POST /message?r=1234&u
=66666666 HTTP/1.1"" 200 -
2015/08/24 16:15:35 ERROR: datastore: datastore: no such entity
2015/08/24 16:15:35 WARNING: Unexpected Connect Message to room 1234
INFO     2015-08-24 16:15:35,255 module.py:808] default: ""POST /_ah/channel/conn
ected/ HTTP/1.1"" 200 -
",9011
208,32281591,"package main
import (
    ""bytes""
    ""log""
    ""net/http""
    ""strconv""
    ""time""
)

func main() {

    http.HandleFunc(""/"", Method)
    log.Printf(""Server Started"")
    log.Fatal(http.ListenAndServe("":8080"", nil))

}

func Method(pResponse http.ResponseWriter, pRequest *http.Request) {
    timeInitial := time.Now()
    log.Printf(strconv.Itoa(timeInitial.Nanosecond()),     strconv.FormatFloat(time.Now().Sub(timeInitial).Seconds()*1000, 'f', 2, 64))
    buf := new(bytes.Buffer)
    buf.ReadFrom(pRequest.Body)
    buf.Bytes() 
    log.Printf(strconv.Itoa(timeInitial.Nanosecond()), strconv.FormatFloat(time.Now().Sub(timeInitial).Seconds()*1000, 'f', 2, 64))

}
",669
209,32281591,"2015/08/28 23:09:59 444255510%!(EXTRA string=0.00)
2015/08/28 23:09:59 444255510%!(EXTRA string=0.06)
2015/08/28 23:09:59 472140004%!(EXTRA string=0.00)
2015/08/28 23:09:59 472140004%!(EXTRA string=1.06)
2015/08/28 23:09:59 473322028%!(EXTRA string=0.00)
2015/08/28 23:09:59 473322028%!(EXTRA string=0.01)
2015/08/28 23:09:59 473377991%!(EXTRA string=0.00)
2015/08/28 23:09:59 473377991%!(EXTRA string=0.02)
2015/08/28 23:09:59 483981504%!(EXTRA string=0.00)
2015/08/28 23:09:59 483981504%!(EXTRA string=0.06)
2015/08/28 23:09:59 487652426%!(EXTRA string=0.00)
2015/08/28 23:09:59 487652426%!(EXTRA string=0.07)
2015/08/28 23:09:59 488064359%!(EXTRA string=0.00)
2015/08/28 23:09:59 488064359%!(EXTRA string=0.07)
2015/08/28 23:09:59 493007447%!(EXTRA string=0.00)
2015/08/28 23:09:59 493007447%!(EXTRA string=0.36)
2015/08/28 23:09:59 506383690%!(EXTRA string=0.00)
2015/08/28 23:09:59 506383690%!(EXTRA string=0.02)
2015/08/28 23:09:59 516324968%!(EXTRA string=0.00)
2015/08/28 23:09:59 516324968%!(EXTRA string=0.02)
2015/08/28 23:09:59 516484292%!(EXTRA string=0.00)
2015/08/28 23:09:59 516484292%!(EXTRA string=0.02)
2015/08/28 23:09:59 526459027%!(EXTRA string=0.00)
2015/08/28 23:09:59 526459027%!(EXTRA string=0.03)
2015/08/28 23:09:59 526568984%!(EXTRA string=0.00)
2015/08/28 23:09:59 526568984%!(EXTRA string=0.02)
2015/08/28 23:09:59 526645341%!(EXTRA string=0.00)
2015/08/28 23:09:59 526645341%!(EXTRA string=0.01)
2015/08/28 23:09:59 533764558%!(EXTRA string=0.00)
2015/08/28 23:09:59 533764558%!(EXTRA string=0.02)
2015/08/28 23:09:59 533872219%!(EXTRA string=0.00)
2015/08/28 23:09:59 533872219%!(EXTRA string=0.02)
2015/08/28 23:09:59 542355931%!(EXTRA string=0.00)
2015/08/28 23:09:59 542355931%!(EXTRA string=0.04)
2015/08/28 23:09:59 549176497%!(EXTRA string=0.00)
2015/08/28 23:09:59 549176497%!(EXTRA string=0.03)
2015/08/28 23:09:59 559803436%!(EXTRA string=0.00)
2015/08/28 23:09:59 559803436%!(EXTRA string=0.05)
2015/08/28 23:09:59 559913211%!(EXTRA string=0.00)
2015/08/28 23:09:59 559913211%!(EXTRA string=0.01)
2015/08/28 23:09:59 579428530%!(EXTRA string=0.00)
2015/08/28 23:09:59 579428530%!(EXTRA string=0.05)
2015/08/28 23:09:59 585453710%!(EXTRA string=0.00)
2015/08/28 23:09:59 585453710%!(EXTRA string=0.03)
2015/08/28 23:09:59 587231793%!(EXTRA string=0.00)
2015/08/28 23:09:59 587231793%!(EXTRA string=0.02)
2015/08/28 23:09:59 601407050%!(EXTRA string=0.00)
2015/08/28 23:09:59 601407050%!(EXTRA string=0.02)
2015/08/28 23:09:59 609160787%!(EXTRA string=0.00)
2015/08/28 23:09:59 609160787%!(EXTRA string=0.02)
2015/08/28 23:09:59 617953845%!(EXTRA string=0.00)
2015/08/28 23:09:59 617953845%!(EXTRA string=0.03)
2015/08/28 23:09:59 618042591%!(EXTRA string=0.00)
2015/08/28 23:09:59 618042591%!(EXTRA string=0.02)
2015/08/28 23:09:59 629055567%!(EXTRA string=0.00)
2015/08/28 23:09:59 629055567%!(EXTRA string=0.03)
2015/08/28 23:09:59 642409323%!(EXTRA string=0.00)
2015/08/28 23:09:59 642409323%!(EXTRA string=0.02)
2015/08/28 23:09:59 668017861%!(EXTRA string=0.00)
2015/08/28 23:09:59 668017861%!(EXTRA string=0.12)
2015/08/28 23:09:59 677003700%!(EXTRA string=0.00)
2015/08/28 23:09:59 677003700%!(EXTRA string=0.06)
2015/08/28 23:09:59 692284984%!(EXTRA string=0.00)
2015/08/28 23:09:59 692284984%!(EXTRA string=0.03)
2015/08/28 23:09:59 705532147%!(EXTRA string=0.00)
2015/08/28 23:09:59 705532147%!(EXTRA string=0.06)
2015/08/28 23:09:59 712790204%!(EXTRA string=0.00)
2015/08/28 23:09:59 712790204%!(EXTRA string=0.12)
2015/08/28 23:09:59 737197885%!(EXTRA string=0.00)
2015/08/28 23:09:59 737197885%!(EXTRA string=0.07)
2015/08/28 23:09:59 743503323%!(EXTRA string=0.00)
2015/08/28 23:09:59 743503323%!(EXTRA string=0.14)
2015/08/28 23:09:59 745206360%!(EXTRA string=0.00)
2015/08/28 23:09:59 745206360%!(EXTRA string=0.06)
2015/08/28 23:09:59 763185757%!(EXTRA string=0.00)
2015/08/28 23:09:59 763185757%!(EXTRA string=0.55)
2015/08/28 23:09:59 769112727%!(EXTRA string=0.00)
2015/08/28 23:09:59 769112727%!(EXTRA string=0.08)
2015/08/28 23:09:59 805816057%!(EXTRA string=0.00)
2015/08/28 23:09:59 805816057%!(EXTRA string=0.12)
2015/08/28 23:09:59 809677378%!(EXTRA string=0.00)
2015/08/28 23:09:59 809677378%!(EXTRA string=0.08)
2015/08/28 23:09:59 828063305%!(EXTRA string=0.00)
2015/08/28 23:09:59 828063305%!(EXTRA string=0.12)
2015/08/28 23:09:59 828338407%!(EXTRA string=0.00)
2015/08/28 23:09:59 828338407%!(EXTRA string=0.03)
2015/08/28 23:09:59 835510888%!(EXTRA string=0.00)
2015/08/28 23:09:59 835510888%!(EXTRA string=0.07)
2015/08/28 23:09:59 882626159%!(EXTRA string=0.00)
2015/08/28 23:09:59 882626159%!(EXTRA string=0.03)
2015/08/28 23:09:59 897746270%!(EXTRA string=0.00)
2015/08/28 23:09:59 897746270%!(EXTRA string=0.03)
2015/08/28 23:09:59 931674931%!(EXTRA string=0.00)
2015/08/28 23:09:59 931674931%!(EXTRA string=0.03)
2015/08/28 23:09:59 936024259%!(EXTRA string=0.00)
2015/08/28 23:09:59 936024259%!(EXTRA string=0.05)
",4896
210,32281591,"2015/08/29 01:16:54 471552059%!(EXTRA string=15.81)
2015/08/29 01:16:54 480068871%!(EXTRA string=15.67)
2015/08/29 01:16:54 507398302%!(EXTRA string=0.00)
2015/08/29 01:16:54 521398742%!(EXTRA string=0.00)
2015/08/29 01:16:54 202533461%!(EXTRA string=2327.37)
2015/08/29 01:16:54 338831795%!(EXTRA string=1191.18)
2015/08/29 01:16:54 531039526%!(EXTRA string=1037.30)
2015/08/29 01:16:54 593472114%!(EXTRA string=0.00)
2015/08/29 01:16:54 609973091%!(EXTRA string=0.00)
2015/08/29 01:16:54 593472114%!(EXTRA string=16.54)
2015/08/29 01:16:54 609973091%!(EXTRA string=15.73)
2015/08/29 01:16:54 394071392%!(EXTRA string=1238.16)
2015/08/29 01:16:54 638164663%!(EXTRA string=0.00)
2015/08/29 01:16:54 638164663%!(EXTRA string=15.53)
2015/08/29 01:16:54 667631670%!(EXTRA string=0.00)
2015/08/29 01:16:54 675844627%!(EXTRA string=0.00)
2015/08/29 01:16:54 675844627%!(EXTRA string=14.16)
2015/08/29 01:16:54 711898262%!(EXTRA string=0.00)
2015/08/29 01:16:54 300566416%!(EXTRA string=424.26)
2015/08/29 01:16:54 711898262%!(EXTRA string=13.02)
2015/08/29 01:16:54 632385443%!(EXTRA string=1115.35)
2015/08/29 01:16:54 753118239%!(EXTRA string=0.00)
2015/08/29 01:16:54 753118239%!(EXTRA string=14.15)
2015/08/29 01:16:54 767381818%!(EXTRA string=0.00)
2015/08/29 01:16:54 801314950%!(EXTRA string=0.00)
2015/08/29 01:16:54 767381818%!(EXTRA string=33.99)
2015/08/29 01:16:54 816438476%!(EXTRA string=0.00)
2015/08/29 01:16:54 372179187%!(EXTRA string=2457.93)
2015/08/29 01:16:54 836926824%!(EXTRA string=0.00)
2015/08/29 01:16:54 836926824%!(EXTRA string=51.60)
2015/08/29 01:16:54 889729894%!(EXTRA string=0.00)
2015/08/29 01:16:54 890430388%!(EXTRA string=0.00)
2015/08/29 01:16:54 891713727%!(EXTRA string=0.00)
2015/08/29 01:16:54 732229063%!(EXTRA string=1163.04)
2015/08/29 01:16:54 332690466%!(EXTRA string=1571.52)
2015/08/29 01:16:54 904336456%!(EXTRA string=0.00)
2015/08/29 01:16:54 926288167%!(EXTRA string=0.00)
2015/08/29 01:16:54 384796519%!(EXTRA string=1549.14)
2015/08/29 01:16:54 941601994%!(EXTRA string=0.00)
2015/08/29 01:16:54 431987970%!(EXTRA string=1516.20)
2015/08/29 01:16:54 888973901%!(EXTRA string=1082.22)
2015/08/29 01:16:54 977186277%!(EXTRA string=0.00)
2015/08/29 01:16:54 977186277%!(EXTRA string=0.06)
2015/08/29 01:16:54 977367193%!(EXTRA string=0.00)
2015/08/29 01:16:55 977367193%!(EXTRA string=56.33)
2015/08/29 01:16:55 46374447%!(EXTRA string=0.00)
2015/08/29 01:16:55 46374447%!(EXTRA string=0.28)
2015/08/29 01:16:55 869929721%!(EXTRA string=1176.83)
2015/08/29 01:16:55 46916778%!(EXTRA string=0.00)
2015/08/29 01:16:55 66407207%!(EXTRA string=0.00)
2015/08/29 01:16:55 80231754%!(EXTRA string=0.00)
2015/08/29 01:16:55 66407207%!(EXTRA string=13.88)
2015/08/29 01:16:55 80231754%!(EXTRA string=12.10)
2015/08/29 01:16:55 99556642%!(EXTRA string=0.00)
2015/08/29 01:16:55 105395202%!(EXTRA string=0.00)
2015/08/29 01:16:55 121157010%!(EXTRA string=0.00)
2015/08/29 01:16:55 105395202%!(EXTRA string=15.83)
2015/08/29 01:16:55 121157010%!(EXTRA string=12.82)
2015/08/29 01:16:55 134107839%!(EXTRA string=0.00)
2015/08/29 01:16:55 134107839%!(EXTRA string=15.98)
2015/08/29 01:16:55 162712352%!(EXTRA string=0.00)
2015/08/29 01:16:55 162712352%!(EXTRA string=16.46)
2015/08/29 01:16:55 179288920%!(EXTRA string=0.00)
2015/08/29 01:16:55 194490367%!(EXTRA string=0.00)
2015/08/29 01:16:55 202206415%!(EXTRA string=0.00)
2015/08/29 01:16:55 49113060%!(EXTRA string=1165.79)
2015/08/29 01:16:55 473214551%!(EXTRA string=1760.64)
2015/08/29 01:16:55 239858481%!(EXTRA string=0.00)
2015/08/29 01:16:55 32855481%!(EXTRA string=1213.72)
2015/08/29 01:16:55 56811869%!(EXTRA string=1231.75)
2015/08/29 01:16:55 295414269%!(EXTRA string=0.00)
2015/08/29 01:16:55 295491576%!(EXTRA string=0.00)
2015/08/29 01:16:55 889729894%!(EXTRA string=423.76)
2015/08/29 01:16:55 891713727%!(EXTRA string=427.99)
2015/08/29 01:16:55 121465765%!(EXTRA string=1204.92)
2015/08/29 01:16:55 904336456%!(EXTRA string=428.21)
2015/08/29 01:16:55 121526643%!(EXTRA string=1233.79)
2015/08/29 01:16:55 310004280%!(EXTRA string=1051.71)
2015/08/29 01:16:55 858909173%!(EXTRA string=2502.90)
2015/08/29 01:16:55 367541741%!(EXTRA string=0.00)
2015/08/29 01:16:55 367541741%!(EXTRA string=18.04)
2015/08/29 01:16:55 393589632%!(EXTRA string=0.00)
2015/08/29 01:16:55 407450080%!(EXTRA string=0.00)
2015/08/29 01:16:55 46916778%!(EXTRA string=378.70)
2015/08/29 01:16:55 896338456%!(EXTRA string=1529.38)
2015/08/29 01:16:55 431101598%!(EXTRA string=0.00)
2015/08/29 01:16:55 431101598%!(EXTRA string=8.42)
2015/08/29 01:16:55 462833623%!(EXTRA string=0.00)
2015/08/29 01:16:55 462833623%!(EXTRA string=13.67)
2015/08/29 01:16:55 484103852%!(EXTRA string=0.00)
2015/08/29 01:16:55 492334586%!(EXTRA string=0.00)
2015/08/29 01:16:55 492410130%!(EXTRA string=0.00)
2015/08/29 01:16:55 492334586%!(EXTRA string=13.06)
2015/08/29 01:16:55 511300492%!(EXTRA string=0.00)
2015/08/29 01:16:55 511300492%!(EXTRA string=19.36)
2015/08/29 01:16:55 537223305%!(EXTRA string=0.00)
2015/08/29 01:16:55 544019226%!(EXTRA string=0.00)
2015/08/29 01:16:55 544019226%!(EXTRA string=16.19)
2015/08/29 01:16:55 560322064%!(EXTRA string=0.00)
2015/08/29 01:16:55 993395050%!(EXTRA string=1566.96)
2015/08/29 01:16:55 560322064%!(EXTRA string=39.26)
2015/08/29 01:16:55 599688803%!(EXTRA string=0.00)
2015/08/29 01:16:55 179288920%!(EXTRA string=421.14)
2015/08/29 01:16:55 157717567%!(EXTRA string=1443.31)
2015/08/29 01:16:55 507398302%!(EXTRA string=1093.78)
2015/08/29 01:16:55 609900746%!(EXTRA string=0.00)
2015/08/29 01:16:55 239858481%!(EXTRA string=370.10)
2015/08/29 01:16:55 609900746%!(EXTRA string=14.23)
2015/08/29 01:16:55 993465302%!(EXTRA string=1644.50)
2015/08/29 01:16:55 655129719%!(EXTRA string=0.00)
2015/08/29 01:16:55 66651321%!(EXTRA string=1601.79)
2015/08/29 01:16:55 521398742%!(EXTRA string=1156.10)
2015/08/29 01:16:55 295491576%!(EXTRA string=382.10)
2015/08/29 01:16:55 295414269%!(EXTRA string=389.39)
2015/08/29 01:16:55 702701065%!(EXTRA string=0.00)
2015/08/29 01:16:55 137363675%!(EXTRA string=1574.04)
2015/08/29 01:16:55 393589632%!(EXTRA string=339.33)
2015/08/29 01:16:55 667631670%!(EXTRA string=1071.18)
2015/08/29 01:16:55 407450080%!(EXTRA string=338.06)
2015/08/29 01:16:55 484103852%!(EXTRA string=293.32)
2015/08/29 01:16:55 786006965%!(EXTRA string=0.00)
2015/08/29 01:16:55 801314950%!(EXTRA string=998.25)
2015/08/29 01:16:55 816438476%!(EXTRA string=1008.98)
2015/08/29 01:16:55 848323630%!(EXTRA string=0.00)
2015/08/29 01:16:55 655129719%!(EXTRA string=225.32)
2015/08/29 01:16:55 900971628%!(EXTRA string=0.00)
2015/08/29 01:16:55 702701065%!(EXTRA string=212.15)
2015/08/29 01:16:55 953092419%!(EXTRA string=0.00)
2015/08/29 01:16:56 786006965%!(EXTRA string=225.37)
2015/08/29 01:16:56 848323630%!(EXTRA string=263.25)
2015/08/29 01:16:56 890430388%!(EXTRA string=1221.25)
2015/08/29 01:16:56 99556642%!(EXTRA string=1013.02)
2015/08/29 01:16:56 599688803%!(EXTRA string=513.94)
2015/08/29 01:16:56 900971628%!(EXTRA string=213.58)
2015/08/29 01:16:56 114683782%!(EXTRA string=0.00)
2015/08/29 01:16:56 194490367%!(EXTRA string=926.51)
2015/08/29 01:16:56 941601994%!(EXTRA string=1179.50)
2015/08/29 01:16:56 202206415%!(EXTRA string=944.82)
2015/08/29 01:16:56 953092419%!(EXTRA string=201.68)
2015/08/29 01:16:56 280223380%!(EXTRA string=0.00)
2015/08/29 01:16:56 926288167%!(EXTRA string=1373.12)
2015/08/29 01:16:56 114683782%!(EXTRA string=213.67)
2015/08/29 01:16:56 365730070%!(EXTRA string=0.00)
2015/08/29 01:16:56 537223305%!(EXTRA string=882.31)
2015/08/29 01:16:56 272782462%!(EXTRA string=4147.48)
2015/08/29 01:16:56 632615696%!(EXTRA string=0.00)
2015/08/29 01:16:56 634781232%!(EXTRA string=0.00)
2015/08/29 01:16:56 280223380%!(EXTRA string=360.50)
2015/08/29 01:16:56 365730070%!(EXTRA string=275.11)
2015/08/29 01:16:56 492410130%!(EXTRA string=1354.29)
2015/08/29 01:16:56 632615696%!(EXTRA string=214.78)
2015/08/29 01:16:56 634781232%!(EXTRA string=219.21)
2015/08/29 01:16:57 65374683%!(EXTRA string=0.00)
2015/08/29 01:16:57 65573396%!(EXTRA string=0.00)
2015/08/29 01:16:57 65374683%!(EXTRA string=300.96)
2015/08/29 01:16:57 53842402%!(EXTRA string=5317.02)
2015/08/29 01:16:57 65573396%!(EXTRA string=305.82)
2015/08/29 01:16:58 26171685%!(EXTRA string=10149.46)
",8237
211,32281591,"{
   ""Field1"":{
      ""Key1"":""HHHHHH"",
      ""Key2"":""[branch code]"",
      ""Key3"":""HHHHHHtest""
   },
   ""Field2"":{
      ""Key1"":""HHH""
   },
   ""Field3"":{
      ""Key1"":[
         {
            ""Value1"":0,
            ""Value2"":""HHHHHHH"",
            ""Value3"":""HHH""
         },
         {
            ""Value1"":0,
            ""Value2"":""HHHH"",
            ""Value3"":""HH""
         },
         {
            ""Value1"":1,
            ""Value2"":""HHHHHHHHHHHHH"",
            ""Value3"":""""
         },
         {
            ""Value1"":1,
            ""Value2"":""HHHHHHHHHHHHHHHHHHH"",
            ""Value3"":""1""
         },
         {
            ""Value1"":2,
            ""Value2"":""HHHHHHHHHHHHHHHHHHHH"",
            ""Value3"":""3""
         },
         {
            ""Value1"":2,
            ""Value2"":""HHHHHHHH"",
            ""Value3"":""1""
         },
         {
            ""Value1"":1,
            ""Value2"":""HHHHHHHHHHHHH"",
            ""Value3"":""4""
         },
         {
            ""Value1"":2,
            ""Value2"":""HHHHHHHHHHHH"",
            ""Value3"":""BB""
         }
      ]
   },
   ""Field4"":{
      ""key1"":11111111,
      ""key2"":11111111
   },
   ""Field5"":{
      ""key1"":[
         {
            ""Value1"":1,
            ""Value2"":2
         },
         {
            ""Value1"":1,
            ""Value2"":2
         },
         {
            ""Value1"":[
               {
                  ""Value2"":5
               }
            ],
            ""Value1"":1,
            ""Value2"":2,
            ""children3"":1
         }
      ]
   },
   ""Field6"":""HHH_HHHH_HHHHHHHH_HHHH"",
   ""Field7"":""HHHHHHHHHHHHHH_HHHHH"",
   ""Field8"":""4.1"",
   ""Field9"":""12312312""
}
",1620
212,32281711,"{
    ""result"": {
        ""720268538"": {
            ""icon_url"": ""-9a81dlWLwJ2UUGcVs_nsVtzdOEdtWwKGZZLQHTxDZ7I56KU0Zwwo4NUX4oFJZEHLbXU5A1PIYQNqhpOSV-fRPasw8rsUFJ5KBFZv668FFEuh_KQJTtEuI63xIXbxqOtauyClTMEsJV1jruS89T3iQKx_BBqa2j3JpjVLFH1xpp0EQ"",
            ""icon_url_large"": """",
            ""icon_drag_url"": """",
            ""name"": ""Chroma Case"",
            ""market_hash_name"": ""Chroma Case"",
            ""market_name"": ""Chroma Case"",
            ""name_color"": ""D2D2D2"",
            ""background_color"": """",
            ""type"": ""Base Grade Container"",
            ""tradable"": ""1"",
            ""marketable"": ""1"",
            ""commodity"": ""1"",
            ""market_tradable_restriction"": ""7"",
            ""fraudwarnings"": """",
            ""descriptions"": {
                ""0"": {
                    ""type"": ""html"",
                    ""value"": "" "",
                    ""app_data"": """"
                },
                ""1"": {
                    ""type"": ""html"",
                    ""value"": ""Container Series #38"",
                    ""color"": ""99ccff"",
                    ""app_data"": """"
                },
                ""2"": {
                    ""type"": ""html"",
                    ""value"": "" "",
                    ""app_data"": """"
                },
                ""3"": {
                    ""type"": ""html"",
                    ""value"": ""Contains one of the following:"",
                    ""app_data"": """"
                },
                ""4"": {
                    ""type"": ""html"",
                    ""value"": ""Glock-18 | Catacombs"",
                    ""color"": ""4b69ff"",
                    ""app_data"": """"
                },
                ""5"": {
                    ""type"": ""html"",
                    ""value"": ""M249 | System Lock"",
                    ""color"": ""4b69ff"",
                    ""app_data"": """"
                },
                ""6"": {
                    ""type"": ""html"",
                    ""value"": ""MP9 | Deadly Poison"",
                    ""color"": ""4b69ff"",
                    ""app_data"": """"
                },
                ""7"": {
                    ""type"": ""html"",
                    ""value"": ""SCAR-20 | Grotto"",
                    ""color"": ""4b69ff"",
                    ""app_data"": """"
                },
                ""8"": {
                    ""type"": ""html"",
                    ""value"": ""XM1014 | Quicksilver"",
                    ""color"": ""4b69ff"",
                    ""app_data"": """"
                },
                ""9"": {
                    ""type"": ""html"",
                    ""value"": ""Dual Berettas | Urban Shock"",
                    ""color"": ""8847ff"",
                    ""app_data"": """"
                },
                ""10"": {
                    ""type"": ""html"",
                    ""value"": ""Desert Eagle | Naga"",
                    ""color"": ""8847ff"",
                    ""app_data"": """"
                },
                ""11"": {
                    ""type"": ""html"",
                    ""value"": ""MAC-10 | Malachite"",
                    ""color"": ""8847ff"",
                    ""app_data"": """"
                },
                ""12"": {
                    ""type"": ""html"",
                    ""value"": ""Sawed-Off | Serenity"",
                    ""color"": ""8847ff"",
                    ""app_data"": """"
                },
                ""13"": {
                    ""type"": ""html"",
                    ""value"": ""AK-47 | Cartel"",
                    ""color"": ""d32ce6"",
                    ""app_data"": """"
                },
                ""14"": {
                    ""type"": ""html"",
                    ""value"": ""M4A4 | 龍王 (Dragon King)"",
                    ""color"": ""d32ce6"",
                    ""app_data"": """"
                },
                ""15"": {
                    ""type"": ""html"",
                    ""value"": ""P250 | Muertos"",
                    ""color"": ""d32ce6"",
                    ""app_data"": """"
                },
                ""16"": {
                    ""type"": ""html"",
                    ""value"": ""AWP | Man-o'-war"",
                    ""color"": ""eb4b4b"",
                    ""app_data"": """"
                },
                ""17"": {
                    ""type"": ""html"",
                    ""value"": ""Galil AR | Chatterbox"",
                    ""color"": ""eb4b4b"",
                    ""app_data"": """"
                },
                ""18"": {
                    ""type"": ""html"",
                    ""value"": ""or an Exceedingly Rare Special Item!"",
                    ""color"": ""ffd700"",
                    ""app_data"": """"
                },
                ""19"": {
                    ""type"": ""html"",
                    ""value"": "" "",
                    ""app_data"": """"
                },
                ""20"": {
                    ""type"": ""html"",
                    ""value"": """",
                    ""color"": ""00a000"",
                    ""app_data"": {
                        ""limited"": ""1""
                    }
                }
            },
            ""owner_descriptions"": """",
            ""tags"": {
                ""0"": {
                    ""internal_name"": ""CSGO_Type_WeaponCase"",
                    ""name"": ""Container"",
                    ""category"": ""Type"",
                    ""category_name"": ""Type""
                },
                ""1"": {
                    ""internal_name"": ""set_community_6"",
                    ""name"": ""The Chroma Collection"",
                    ""category"": ""ItemSet"",
                    ""category_name"": ""Collection""
                },
                ""2"": {
                    ""internal_name"": ""normal"",
                    ""name"": ""Normal"",
                    ""category"": ""Quality"",
                    ""category_name"": ""Category""
                },
                ""3"": {
                    ""internal_name"": ""Rarity_Common"",
                    ""name"": ""Base Grade"",
                    ""category"": ""Rarity"",
                    ""color"": ""b0c3d9"",
                    ""category_name"": ""Quality""
                }
            },
            ""classid"": ""720268538""
        },
        ""success"": true
    }
}
",6027
213,32281711,"type AssetInfo struct {
    Result `json:""result""`
}

type Result struct {
    Asset   map[string]Asset `json:""asset""`
    Success bool             `json:""success,omitempty""`
}

type Asset struct {
    IconUrl           string                   `json:""icon_url,omitempty""`
    IconUrlLarge      string                   `json:""icon_url_large,omitempty""`
    IconDragUrl       string                   `json:""icon_drag_url,omitempty""`
    Name              string                   `json:""name,omitempty""`
    MarketHashName    string                   `json:""market_hash_name,omitempty""`
    MarketName        string                   `json:""market_name,omitempty""`
    NameColor         string                   `json:""name_color,omitempty""`
    BGColor           string                   `json:""background_color,omitempty""`
    Type              string                   `json:""type,omitempty""`
    Tradable          string                   `json:""tradable,omitempty""`
    Marketable        string                   `json:""marketable,omitempty""`
    Commodity         string                   `json:""commodity,omitempty""`
    TradeRestrict     string                   `json:""market_tradeable_restriction,omitempty""`
    FraudWarnings     string                   `json:""fraudwarnings,omitempty""`
    Descriptions      map[string]*Descriptions `json:""descriptions,omitempty""`
    OwnerDescriptions string                   `json:""owner_descriptions,omitempty""`
    Tags              map[string]*Tags         `json:""tags,omitempty""`
    ClassId           string                   `json:""classid,omitempty""`
}

type Descriptions struct {
    Type    string `json:""type""`
    Value   string `json:""value""`
    Color   string `json:""color,omitempty""`
    AppData string `json:""appdata""`
}

type Tags struct {
    InternalName string `json:""internal_name""`
    Name         string `json:""name""`
    Category     string `json:""category""`
    Color        string `json:""color,omitempty""`
    CategoryName string `json:""category_name""`
}
",2033
214,32281711,result,6
215,32281711,"""720616831""",11
216,32370700,"package main

import (
    //  ""bytes""
    ""encoding/binary""
    ""fmt""
    ""io""
    ""net""
    ""os""
    ""os/exec""
    ""runtime/trace""
    ""time""
    ""unsafe""
)

type TheMessageType struct {
    X             int32
    RestOfMessage [1000]byte
}

func listener(theCounter int, active bool, f *os.File) {
    var message TheMessageType
    var err error
    var conn net.Conn

    count := theCounter

    for {
        // Dial the server
        fmt.Printf(""LISTENER %d: connecting to socket\n"", count)
        conn, err = net.Dial(""tcp"", ""192.168.1.113:49152"")
        if err != nil {
            fmt.Printf(""LISTENER %d: not connected, retrying in 3 seconds\n"", count)
            time.Sleep(3 * time.Second)
        } else {
            fmt.Printf(""LISTENER %d: connected\n"", count)
            break
        }
    }
    defer conn.Close()

    // Loop writing to socket
    for {
        // Set deadline
        // conn.SetDeadline(time.Now().Add(2 * time.Second))

        // Print some info
        fmt.Printf(""LISTENER %d: writing from %v to %v\n"", count, conn.LocalAddr(), conn.RemoteAddr())

        // Prepare message to write to socket
        message.X = int32(count)
        theString := fmt.Sprintf(""%d"", count)
        copy(message.RestOfMessage[:], theString)

        // binary write directly to socket
        fmt.Printf(""LISTENER %d: binary.Write this: %d, %s\n"", count, message.X, message.RestOfMessage)

        f.Sync()
        err = binary.Write(conn, binary.LittleEndian, message)

        f.Sync()
        fmt.Printf(""LISTENER %d: written\n"", count)
        // time.Sleep(50 * time.Millisecond)
        checkError(err, ""LISTENER"")

        count = count + 1
    }
}

func main() {
    var myMessage TheMessageType
    var ln net.Listener
    var conn net.Conn
    var err error
    var theCount int
    var avgspeed, speed float64
    var speedlist [10]float64

    curspeed := 0

    const listenerActive = true
    const mainActive = false

    f, err := os.Create(""theFile.out"")
    trace.Start(f)

    t0 := time.Now()
    t1 := time.Now()

    transferSize := unsafe.Sizeof(myMessage)

    fmt.Printf(""MAIN: timestamp %s ; size of transfers is %d\n"", t0.String(), transferSize)

    if mainActive {
        fmt.Println(""MAIN: listen"")
        ln, err = net.Listen(""tcp"", "":49152"")
        fmt.Println(""MAIN: defer"")
        defer ln.Close()
        fmt.Println(""MAIN: checkError"")
        checkError(err, ""MAIN"")
    }

    // launch listener
    if listenerActive {
        go listener(theCount, listenerActive, f)
    }

    for theCount = 1; ; theCount++ {

        if mainActive {
            fmt.Println(""MAIN: accept"")
            conn, err = ln.Accept()
            checkError(err, ""MAIN"")

            exit := false

            for !exit {
                // Set deadline
                // conn.SetDeadline(time.Now().Add(2 * time.Second))

                // Print some info
                fmt.Printf(""MAIN: reading on %v from %v\n"", conn.LocalAddr(), conn.RemoteAddr())

                // move time
                t0 = t1

                // read from socket
                fmt.Println(""MAIN: reader"")

                f.Sync()
                err = binary.Read(conn, binary.LittleEndian, &myMessage)

                f.Sync()
                if err == io.EOF {
                    fmt.Println(""EOF!"")
                    exit = true
                    conn.Close()
                } else {
                    checkError(err, ""MAIN"")
                }

                // clear screen
                c := exec.Command(""clear"")
                c.Stdout = os.Stdout
                c.Run()

                // print received data
                fmt.Printf(""MAIN: socket message received: %d, %s\n"", myMessage.X, myMessage.RestOfMessage)

                // calculate speed & average
                t1 = time.Now()
                tdif := t1.Sub(t0)
                speed = float64(transferSize) / tdif.Seconds() / 1000000.0 * 8.0
                speedlist[curspeed] = speed
                curspeed = curspeed + 1
                if curspeed == 10 {
                    curspeed = 0
                }
                totalspeed := 0.0
                for i := 0; i < 10; i++ {
                    totalspeed += speedlist[i]
                }
                avgspeed = totalspeed / 10

                // print speed
                fmt.Printf(""MAIN: avg mbit/s %9.2f ; actual mbit/s: %9.2f\n"", avgspeed, speed)
                // time.Sleep(1 * time.Second)
            }
        }
    }
}

func checkError(err error, name string) {
    if err != nil {
        fmt.Fprintf(os.Stderr, ""%s: Fatal error: %s\n"", name, err.Error())
        //      panic(fmt.Sprintf(""%v"", err.Error()))
        os.Exit(1)
    }
}
",4757
217,32370700,"goroutine 1 [running]:
runtime.throw(0x1927b8, 0x5)
    /usr/local/go/src/runtime/panic.go:527 +0x90 fp=0xc82004bd78 sp=0xc82004bd60
runtime.sigpanic()
    /usr/local/go/src/runtime/sigpanic_unix.go:27 +0x2ba fp=0xc82004bdc8 sp=0xc82004bd78
main.main()
    /Users/ple/dev/go/src/Peter-test/main.go:108 +0x33c fp=0xc82004bf50 sp=0xc82004bdc8
runtime.main()
    /usr/local/go/src/runtime/proc.go:111 +0x2b0 fp=0xc82004bfa0 sp=0xc82004bf50
runtime.goexit()
    /usr/local/go/src/runtime/asm_amd64.s:1696 +0x1 fp=0xc82004bfa8 sp=0xc82004bfa0

goroutine 17 [syscall, locked to thread]:
runtime.goexit()
    /usr/local/go/src/runtime/asm_amd64.s:1696 +0x1

goroutine 5 [trace reader (blocked)]:
runtime.ReadTrace(0x0, 0x0, 0x0)
    /usr/local/go/src/runtime/trace.go:339 +0x207
runtime/trace.Start.func1(0x5a42e0, 0xc82002a020)
    /usr/local/go/src/runtime/trace/trace.go:28 +0x18
created by runtime/trace.Start
    /usr/local/go/src/runtime/trace/trace.go:34 +0x78

goroutine 6 [runnable]:
reflect.Value.Index(0x1234c0, 0xc8204ac004, 0x51, 0x75, 0x12ac00, 0xc8204ac078, 0x48)
    /usr/local/go/src/reflect/value.go:823
encoding/binary.(*encoder).value(0xc8200475a0, 0x1234c0, 0xc8204ac004, 0x51)
    /usr/local/go/src/encoding/binary/binary.go:509 +0x808
encoding/binary.(*encoder).value(0xc8200475a0, 0x162ba0, 0xc8204ac000, 0x59)
    /usr/local/go/src/encoding/binary/binary.go:518 +0xb4f
encoding/binary.Write(0x621138, 0xc8200a2000, 0x621160, 0x289ef0, 0x162ba0, 0xc8204ac000, 0x0, 0x0)
    /usr/local/go/src/encoding/binary/binary.go:316 +0x1792
main.listener(0x0, 0x1, 0xc82002a020)
    /Users/ple/dev/go/src/Peter-test/main.go:59 +0xac8
created by main.main
    /Users/ple/dev/go/src/Peter-test/main.go:105 +0x332
",1717
218,32676227,"package main

import (
    ""bytes""
    ""database/sql""
    ""encoding/json""
    ""fmt""
    ""log""
    ""strconv""
    ""strings""
    ""time""

    _ ""github.com/go-sql-driver/mysql""
)

const dbformat = ""2006-01-02 15:04:05""

type MysqlReceipt struct {
    Id               int
    Amount           sql.NullFloat64
    Cc_last4         sql.NullString
    Employee_id      sql.NullString
    Employee_name    sql.NullString
    Is_test          byte
    Menu_items       sql.NullString
    Payable          sql.NullFloat64
    Pos_type         sql.NullString
    Pos_version      sql.NullString
    Punchh_key       string
    Receipt_datetime sql.NullString
    Subtotal_amount  sql.NullFloat64
    Transaction_no   sql.NullString
    Business_id      int
    Location_id      int
    Created_at       string
    Updated_at       sql.NullString
    Revenue_code     sql.NullString
    Revenue_id       sql.NullString
    Status           sql.NullString
    Ipv4_addr        sql.NullString
}

type Menu_item struct {
    id, name, family, major_group, item_type string
    qty                                      int
    amount                                   float64
}

type BigReceipt struct {
    Id                       int
    Amount                   float64
    Cc_last4                 string
    Employee_id              string `json:"",omitempty""`
    Employee_name            string `json:"",omitempty""`
    Is_test                  byte
    Menu_item_name           string
    Menu_item_id             string
    Menu_item_amount         float64
    Menu_item_family         string
    Menu_item_major_group    string
    Menu_item_type           string
    Menu_item_qty            int
    Payable                  float64
    Pos_type                 string `json:"",omitempty""`
    Pos_version              string `json:"",omitempty""`
    Punchh_key               string
    Receipt_datetime         string
    Subtotal_amount          float64
    Transaction_no           string `json:"",omitempty""`
    Business_id, Location_id int
    Created_at               time.Time
    Updated_at               time.Time `json:"",omitempty""`
    Revenue_code             string    `json:"",omitempty""`
    Revenue_id               string    `json:"",omitempty""`
    Status                   string    `json:"",omitempty""`
    Ipv4_addr                string    `json:"",omitempty""`
    Stored_at                int64
}

func (m Menu_item) ValidItem() bool {
    if m.item_type == ""M"" || m.item_type == ""D"" {
        return true
    } else {
        return false
    }
}

func main() {
    db, err := sql.Open(""mysql"", ""root:password@tcp(xxxxxxx.us-east-1.rds.amazonaws.com:3306)/db_name_goes_here"")
    if err != nil {
        log.Fatal(err)
    }
    err = db.Ping()
    if err != nil {
        log.Fatal(err)
    }
    defer db.Close()
    rows, err := db.Query(`select id,amount,cc_last4,employee_id,employee_name,is_test,menu_items,payable,pos_type,
    pos_version,punchh_key,receipt_datetime,subtotal_amount,transaction_no,business_id,location_id,created_at,
    updated_at,revenue_code,revenue_id,status,ipv4_addr from receipts`)
    if err != nil {
        log.Fatal(err)
    }
    defer rows.Close()
    for rows.Next() {
        var mr MysqlReceipt
        err = rows.Scan(&mr.Id, &mr.Amount, &mr.Cc_last4, &mr.Employee_id, &mr.Employee_name, &mr.Is_test, &mr.Menu_items,
            &mr.Payable, &mr.Pos_type, &mr.Pos_version, &mr.Punchh_key, &mr.Receipt_datetime, &mr.Subtotal_amount, &mr.Transaction_no,
            &mr.Business_id, &mr.Location_id, &mr.Created_at, &mr.Updated_at, &mr.Revenue_code, &mr.Revenue_id, &mr.Status, &mr.Ipv4_addr)
        if err != nil {
            log.Fatal(err)
        }
        if !mr.Menu_items.Valid {
            continue
        }
        r := BigReceipt{Id: mr.Id,
            Amount:           mr.Amount.Float64,
            Cc_last4:         mr.Cc_last4.String,
            Employee_id:      mr.Employee_id.String,
            Employee_name:    mr.Employee_name.String,
            Is_test:          mr.Is_test,
            Payable:          mr.Payable.Float64,
            Pos_type:         mr.Pos_type.String,
            Pos_version:      mr.Pos_version.String,
            Punchh_key:       mr.Punchh_key,
            Receipt_datetime: mr.Receipt_datetime.String,
            Subtotal_amount:  mr.Subtotal_amount.Float64,
            Transaction_no:   mr.Transaction_no.String,
            Business_id:      mr.Business_id,
            Location_id:      mr.Location_id,
            Revenue_code:     mr.Revenue_code.String,
            Revenue_id:       mr.Revenue_id.String,
            Status:           mr.Status.String,
            Ipv4_addr:        mr.Ipv4_addr.String,
            Stored_at:        time.Now().Unix(),
        }
        r.Created_at = datetimeParse(mr.Created_at)
        if mr.Updated_at.Valid {
            r.Updated_at = datetimeParse(mr.Updated_at.String)
        }
        menuItems := strings.Split(mr.Menu_items.String, ""^"")
        items := parseMenuItems(menuItems)
        for _, v := range items {
            r.Menu_item_name = v.name
            r.Menu_item_id = v.id
            r.Menu_item_amount = v.amount
            r.Menu_item_family = v.family
            r.Menu_item_major_group = v.major_group
            r.Menu_item_type = v.item_type
            r.Menu_item_qty = v.qty
            b, err := json.Marshal(r)
            if err != nil {
                log.Fatal(err)
            }
            fmt.Println(r.Id)
            var out bytes.Buffer
            json.Compact(&out, b)
            fmt.Println(string(b))
        }
    }
    err = rows.Err()
    if err != nil {
        log.Fatal(err)
    }
}

func datetimeParse(dateStr string) time.Time {
    datetime, err := time.Parse(dbformat, dateStr)
    if err != nil {
        log.Fatal(err)
    }
    return datetime
}

func parseMenuItems(menuItems []string) []Menu_item {
    var items []Menu_item
    var item Menu_item
    for _, v := range menuItems {
        itemParts := strings.Split(v, ""|"")

        item.name = itemParts[0]
        item.qty, _ = strconv.Atoi(itemParts[1])
        item.amount, _ = strconv.ParseFloat(itemParts[2], 64)
        item.item_type = strings.ToUpper(itemParts[3])
        item.id = itemParts[4]
        item.family = itemParts[5]
        item.major_group = itemParts[6]
        if item.ValidItem() {
            items = append(items, item)
        } else {
            continue
        }
    }
    return items
}
",6496
219,32676227,QUIT,4
220,32676227,"SIGQUIT: quit
PC=0x5fecb m=0

goroutine 0 [idle]:
runtime.mach_semaphore_wait(0xe03, 0x0, 0x0, 0x0, 0x0, 0x407520, 0x52db9, 0xffffffffffffffff, 0x0, 0x7fff5fbff0fc, ...)
    /usr/local/Cellar/go/1.5/libexec/src/runtime/sys_darwin_amd64.s:407 +0xb
runtime.semasleep1(0xffffffffffffffff, 0x0)
    /usr/local/Cellar/go/1.5/libexec/src/runtime/os1_darwin.go:385 +0xe5
runtime.semasleep.func1()
    /usr/local/Cellar/go/1.5/libexec/src/runtime/os1_darwin.go:401 +0x29
runtime.systemstack(0x7fff5fbff100)
    /usr/local/Cellar/go/1.5/libexec/src/runtime/asm_amd64.s:278 +0xab
runtime.semasleep(0xffffffffffffffff, 0x0)
    /usr/local/Cellar/go/1.5/libexec/src/runtime/os1_darwin.go:402 +0x36
runtime.notesleep(0x407970)
    /usr/local/Cellar/go/1.5/libexec/src/runtime/lock_sema.go:169 +0x100
runtime.stopm()
    /usr/local/Cellar/go/1.5/libexec/src/runtime/proc1.go:1128 +0x112
runtime.findrunnable(0xc82001d500, 0x0)
    /usr/local/Cellar/go/1.5/libexec/src/runtime/proc1.go:1530 +0x69e
runtime.schedule()
    /usr/local/Cellar/go/1.5/libexec/src/runtime/proc1.go:1639 +0x267
runtime.park_m(0xc820000180)
    /usr/local/Cellar/go/1.5/libexec/src/runtime/proc1.go:1698 +0x18b
runtime.mcall(0x7fff5fbff280)
    /usr/local/Cellar/go/1.5/libexec/src/runtime/asm_amd64.s:204 +0x5b

goroutine 1 [IO wait]:
net.runtime_pollWait(0x7a1000, 0x72, 0xc82000a2d0)
    /usr/local/Cellar/go/1.5/libexec/src/runtime/netpoll.go:157 +0x60
net.(*pollDesc).Wait(0xc8200a4060, 0x72, 0x0, 0x0)
    /usr/local/Cellar/go/1.5/libexec/src/net/fd_poll_runtime.go:73 +0x3a
net.(*pollDesc).WaitRead(0xc8200a4060, 0x0, 0x0)
    /usr/local/Cellar/go/1.5/libexec/src/net/fd_poll_runtime.go:78 +0x36
net.(*netFD).Read(0xc8200a4000, 0xc820372077, 0x3f89, 0x3f89, 0x0, 0x760050, 0xc82000a2d0)
    /usr/local/Cellar/go/1.5/libexec/src/net/fd_unix.go:232 +0x23a
net.(*conn).Read(0xc8200a6000, 0xc820372077, 0x3f89, 0x3f89, 0x0, 0x0, 0x0)
    /usr/local/Cellar/go/1.5/libexec/src/net/net.go:172 +0xe4
github.com/go-sql-driver/mysql.(*buffer).fill(0xc820080080, 0x102, 0x0, 0x0)
    /Users/gaurish/golang/src/github.com/go-sql-driver/mysql/buffer.go:57 +0x2b5
github.com/go-sql-driver/mysql.(*buffer).readNext(0xc820080080, 0x102, 0x0, 0x0, 0x0, 0x0, 0x0)
    /Users/gaurish/golang/src/github.com/go-sql-driver/mysql/buffer.go:86 +0x55
github.com/go-sql-driver/mysql.(*mysqlConn).readPacket(0xc820080080, 0x0, 0x0, 0x0, 0x0, 0x0)
    /Users/gaurish/golang/src/github.com/go-sql-driver/mysql/packets.go:57 +0x47a
github.com/go-sql-driver/mysql.(*mysqlConn).readUntilEOF(0xc820080080, 0x0, 0x0)
    /Users/gaurish/golang/src/github.com/go-sql-driver/mysql/packets.go:698 +0x2d
github.com/go-sql-driver/mysql.(*mysqlRows).Close(0xc8200a0120, 0x0, 0x0)
    /Users/gaurish/golang/src/github.com/go-sql-driver/mysql/rows.go:67 +0x73
database/sql.(*Rows).Close(0xc8200aa060, 0x0, 0x0)
    /usr/local/Cellar/go/1.5/libexec/src/database/sql/sql.go:1710 +0x92
main.parseMenuItems(0xc82036e480, 0x44, 0x44, 0x0, 0x0, 0x0)
    /Users/gaurish/code/practice/mysql2json/mysql2json.go:186 +0x468
main.main()
    /Users/gaurish/code/practice/mysql2json/mysql2json.go:142 +0xf2e

goroutine 17 [syscall, locked to thread]:
runtime.goexit()
    /usr/local/Cellar/go/1.5/libexec/src/runtime/asm_amd64.s:1696 +0x1

goroutine 5 [chan receive]:
database/sql.(*DB).connectionOpener(0xc820088960)
    /usr/local/Cellar/go/1.5/libexec/src/database/sql/sql.go:634 +0x45
created by database/sql.Open
    /usr/local/Cellar/go/1.5/libexec/src/database/sql/sql.go:481 +0x336

rax    0xe
rbx    0xe03
rcx    0x7fff5fbff088
rdx    0x7fff5fbff100
rdi    0xe03
rsi    0x407520
rbp    0x407860
rsp    0x7fff5fbff088
r8     0x407860
r9     0x0
r10    0x0
r11    0x286
r12    0x2c
r13    0x4fc3ed4b8b0
r14    0x14059837c8b46200
r15    0x38
rip    0x5fecb
rflags 0x286
cs     0x7
fs     0x0
gs     0x0
exit status 2
",3833
221,32676227,defer rows.Close(),18
222,32676227,"panic: runtime error: index out of range

goroutine 1 [running]:
main.parseMenuItems(0xc820366900, 0x44, 0x44, 0x0, 0x0, 0x0)
    /Users/gaurish/code/practice/mysql2json/mysql2json.go:186 +0x468
main.main()
    /Users/gaurish/code/practice/mysql2json/mysql2json.go:142 +0xf03

goroutine 17 [syscall, locked to thread]:
runtime.goexit()
    /usr/local/Cellar/go/1.5/libexec/src/runtime/asm_amd64.s:1696 +0x1

goroutine 5 [runnable]:
database/sql.(*DB).connectionOpener(0xc820088780)
    /usr/local/Cellar/go/1.5/libexec/src/database/sql/sql.go:634 +0x45
created by database/sql.Open
    /usr/local/Cellar/go/1.5/libexec/src/database/sql/sql.go:481 +0x336
exit status 2
",668
223,32676227,defer rows.Close(),18
224,33371270,"package main


import (  
    ""fmt""
    ""strconv""
)


const (
    encodePath encoding = 1 + iota
    encodeHost
    encodeUserPassword
    encodeQueryComponent
    encodeFragment
)

type encoding int
type EscapeError string

func (e EscapeError) Error() string {
    return ""invalid URL escape "" + strconv.Quote(string(e))
}


func ishex(c byte) bool {
    switch {
    case '0' <= c && c <= '9':
        return true
    case 'a' <= c && c <= 'f':
        return true
    case 'A' <= c && c <= 'F':
        return true
    }
    return false
}

func unhex(c byte) byte {
    switch {
    case '0' <= c && c <= '9':
        return c - '0'
    case 'a' <= c && c <= 'f':
        return c - 'a' + 10
    case 'A' <= c && c <= 'F':
        return c - 'A' + 10
    }
    return 0
}



// Return true if the specified character should be escaped when
// appearing in a URL string, according to RFC 3986.
//
// Please be informed that for now shouldEscape does not check all
// reserved characters correctly. See golang.org/issue/5684.
func shouldEscape(c byte, mode encoding) bool {
    // §2.3 Unreserved characters (alphanum)
    if 'A' <= c && c <= 'Z' || 'a' <= c && c <= 'z' || '0' <= c && c <= '9' {
        return false
    }

    if mode == encodeHost {
        // §3.2.2 Host allows
        //  sub-delims = ""!"" / ""$"" / ""&"" / ""'"" / ""("" / "")"" / ""*"" / ""+"" / "","" / "";"" / ""=""
        // as part of reg-name.
        // We add : because we include :port as part of host.
        // We add [ ] because we include [ipv6]:port as part of host
        switch c {
        case '!', '$', '&', '\'', '(', ')', '*', '+', ',', ';', '=', ':', '[', ']':
            return false
        }
    }

    switch c {
    case '-', '_', '.', '~': // §2.3 Unreserved characters (mark)
        return false

    case '$', '&', '+', ',', '/', ':', ';', '=', '?', '@': // §2.2 Reserved characters (reserved)
        // Different sections of the URL allow a few of
        // the reserved characters to appear unescaped.
        switch mode {
        case encodePath: // §3.3
            // The RFC allows : @ & = + $ but saves / ; , for assigning
            // meaning to individual path segments. This package
            // only manipulates the path as a whole, so we allow those
            // last two as well. That leaves only ? to escape.
            return c == '?'

        case encodeUserPassword: // §3.2.1
            // The RFC allows ';', ':', '&', '=', '+', '$', and ',' in
            // userinfo, so we must escape only '@', '/', and '?'.
            // The parsing of userinfo treats ':' as special so we must escape
            // that too.
            return c == '@' || c == '/' || c == '?' || c == ':'

        case encodeQueryComponent: // §3.4
            // The RFC reserves (so we must escape) everything.
            return true

        case encodeFragment: // §4.1
            // The RFC text is silent but the grammar allows
            // everything, so escape nothing.
            return false
        }
    }

    // Everything else must be escaped.
    return true
}




func escape(s string, mode encoding) string {
    spaceCount, hexCount := 0, 0
    for i := 0; i < len(s); i++ {
        c := s[i]
        if shouldEscape(c, mode) {
            if c == ' ' && mode == encodeQueryComponent {
                spaceCount++
            } else {
                hexCount++
            }
        }
    }

    if spaceCount == 0 && hexCount == 0 {
        return s
    }

    t := make([]byte, len(s)+2*hexCount)
    j := 0
    for i := 0; i < len(s); i++ {
        switch c := s[i]; {
        case c == ' ' && mode == encodeQueryComponent:
            t[j] = '+'
            j++
        case shouldEscape(c, mode):
            t[j] = '%'
            t[j+1] = ""0123456789ABCDEF""[c>>4]
            t[j+2] = ""0123456789ABCDEF""[c&15]
            j += 3
        default:
            t[j] = s[i]
            j++
        }
    }
    return string(t)
}


// unescape unescapes a string; the mode specifies
// which section of the URL string is being unescaped.
func unescape(s string, mode encoding) (string, error) {
    // Count %, check that they're well-formed.
    n := 0
    hasPlus := false
    for i := 0; i < len(s); {
        switch s[i] {
        case '%':
            n++
            if i+2 >= len(s) || !ishex(s[i+1]) || !ishex(s[i+2]) {
                s = s[i:]
                if len(s) > 3 {
                    s = s[:3]
                }
                return """", EscapeError(s)
            }
            i += 3
        case '+':
            hasPlus = mode == encodeQueryComponent
            i++
        default:
            i++
        }
    }

    if n == 0 && !hasPlus {
        return s, nil
    }

    t := make([]byte, len(s)-2*n)
    j := 0
    for i := 0; i < len(s); {
        switch s[i] {
        case '%':
            t[j] = unhex(s[i+1])<<4 | unhex(s[i+2])
            j++
            i += 3
        case '+':
            if mode == encodeQueryComponent {
                t[j] = ' '
            } else {
                t[j] = '+'
            }
            j++
            i++
        default:
            t[j] = s[i]
            j++
            i++
        }
    }
    return string(t), nil
}


func EncodeUriComponent(rawString string) string{
    return escape(rawString, encodeFragment)
}

func DecodeUriCompontent(encoded string) (string, error){
    return unescape(encoded, encodeQueryComponent)
}


// https://golang.org/src/net/url/url.go
// http://remove-line-numbers.ruurtjan.com/
func main() {
    // http://www.url-encode-decode.com/
    origin := ""äöüHel/lo world""
    encoded := EncodeUriComponent(origin)
    fmt.Println(encoded)

    s, _ := DecodeUriCompontent(encoded)
    fmt.Println(s)
}
",5743
225,33371270,"// -------------------------------------------------------

/*
func UrlEncoded(str string) (string, error) {
    u, err := url.Parse(str)
    if err != nil {
        return """", err
    }
    return u.String(), nil
}


// http://stackoverflow.com/questions/13820280/encode-decode-urls
// import ""net/url""
func old_main() {
    a,err := UrlEncoded(""hello world"")
    if err != nil {
           fmt.Println(err)
    }
    fmt.Println(a)

    // https://gobyexample.com/url-parsing
    //s := ""postgres://user:pass@host.com:5432/path?k=v#f""
    s := ""postgres://user:pass@host.com:5432/path?k=vbla%23fooa#f""
    u, err := url.Parse(s)
    if err != nil {
        panic(err)
    }


    fmt.Println(u.RawQuery)
    fmt.Println(u.Fragment)
    fmt.Println(u.String())
    m, _ := url.ParseQuery(u.RawQuery)
    fmt.Println(m)
    fmt.Println(m[""k""][0])

}
*/

// -------------------------------------------------------
",913
226,33445908,"package main

import (""fmt""
    ""net/http""
    ""time""
    ""net"")

func main() {


    for i:=0; i<2000; i++ {
        start := time.Now()

         client := &http.Client{} // this enough for the program to crash
        /*client := &http.Client{
            Transport: &http.Transport{
                Dial: (&net.Dialer{
                    Timeout:   1 * time.Second,
                    KeepAlive: 0,
                }).Dial,
                DisableKeepAlives: true,
                DisableCompression: true,
                MaxIdleConnsPerHost: 1,
                ResponseHeaderTimeout: 1*time.Second,
            },
        }*/

        req, _ := http.NewRequest(""GET"", ""http://mickle.com.au/wp-content/uploads/2015/03/11222.jpg"", nil)
        req.Header.Add(""Connection"", ""close"")
        req.Header.Add(""Accept-Encoding"", ""none"")

        response, _ := client.Do(req)
        fmt.Printf(""httpreq took %s. resp status: %s\n"", time.Since(start), response.Status)
        response.Body.Close()
    }
}
",1008
227,33445908,"httpreq took 817.750359ms. resp status: 200 OK
httpreq took 798.177493ms. resp status: 200 OK
[[... left out 33 lines...]]
httpreq took 795.433486ms. resp status: 200 OK
httpreq took 805.610082ms. resp status: 200 OK
panic: runtime error: invalid memory address or nil pointer dereference
[signal 0xb code=0x1 addr=0x0 pc=0x4014a6]

goroutine 1 [running]:
main.main()
    /home/bongo/Downloads/a.go:32 +0x4a6

goroutine 17 [syscall, locked to thread]:
runtime.goexit()
    /usr/lib/golang/src/runtime/asm_amd64.s:1696 +0x1

goroutine 8 [select]:
net/http.(*persistConn).readLoop(0xc8200ac000)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 9 [select]:
net/http.(*persistConn).writeLoop(0xc8200ac000)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 40 [select]:
net/http.(*persistConn).readLoop(0xc8200ac2c0)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 76 [select]:
net/http.(*persistConn).readLoop(0xc8200e22c0)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 34 [select]:
net/http.(*persistConn).readLoop(0xc8200e2000)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 35 [select]:
net/http.(*persistConn).writeLoop(0xc8200e2000)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 12 [select]:
net/http.(*persistConn).readLoop(0xc8200ac0b0)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 13 [select]:
net/http.(*persistConn).writeLoop(0xc8200ac0b0)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 16 [select]:
net/http.(*persistConn).readLoop(0xc8200ac160)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 50 [select]:
net/http.(*persistConn).writeLoop(0xc8200ac160)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 38 [select]:
net/http.(*persistConn).readLoop(0xc82010e000)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 39 [select]:
net/http.(*persistConn).writeLoop(0xc82010e000)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 53 [select]:
net/http.(*persistConn).readLoop(0xc8200ac210)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 54 [select]:
net/http.(*persistConn).writeLoop(0xc8200ac210)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 61 [select]:
net/http.(*persistConn).readLoop(0xc8200e2160)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 41 [select]:
net/http.(*persistConn).writeLoop(0xc8200ac2c0)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 44 [select]:
net/http.(*persistConn).readLoop(0xc82010e0b0)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 45 [select]:
net/http.(*persistConn).writeLoop(0xc82010e0b0)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 59 [select]:
net/http.(*persistConn).readLoop(0xc8200ac370)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 60 [select]:
net/http.(*persistConn).writeLoop(0xc8200ac370)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 22 [select]:
net/http.(*persistConn).readLoop(0xc8200e20b0)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 23 [select]:
net/http.(*persistConn).writeLoop(0xc8200e20b0)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 78 [select]:
net/http.(*persistConn).readLoop(0xc8200e2370)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 62 [select]:
net/http.(*persistConn).writeLoop(0xc8200e2160)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 48 [select]:
net/http.(*persistConn).readLoop(0xc82010e160)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 49 [select]:
net/http.(*persistConn).writeLoop(0xc82010e160)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 28 [select]:
net/http.(*persistConn).readLoop(0xc8200e2210)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 29 [select]:
net/http.(*persistConn).writeLoop(0xc8200e2210)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 70 [select]:
net/http.(*persistConn).readLoop(0xc8200ac420)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 68 [select]:
net/http.(*persistConn).readLoop(0xc820170000)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 69 [select]:
net/http.(*persistConn).writeLoop(0xc820170000)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 101 [select]:
net/http.(*persistConn).readLoop(0xc8201702c0)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 71 [select]:
net/http.(*persistConn).writeLoop(0xc8200ac420)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 74 [select]:
net/http.(*persistConn).readLoop(0xc8201700b0)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 75 [select]:
net/http.(*persistConn).writeLoop(0xc8201700b0)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 84 [select]:
net/http.(*persistConn).readLoop(0xc82010e210)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 85 [select]:
net/http.(*persistConn).writeLoop(0xc82010e210)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 99 [select]:
net/http.(*persistConn).readLoop(0xc8200ac4d0)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 100 [select]:
net/http.(*persistConn).writeLoop(0xc8200ac4d0)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 88 [select]:
net/http.(*persistConn).readLoop(0xc82010e2c0)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 89 [select]:
net/http.(*persistConn).writeLoop(0xc82010e2c0)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 80 [select]:
net/http.(*persistConn).readLoop(0xc82010e370)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 77 [select]:
net/http.(*persistConn).writeLoop(0xc8200e22c0)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 122 [select]:
net/http.(*persistConn).readLoop(0xc820170160)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 79 [select]:
net/http.(*persistConn).writeLoop(0xc8200e2370)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 116 [select]:
net/http.(*persistConn).readLoop(0xc8200e2420)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 117 [select]:
net/http.(*persistConn).writeLoop(0xc8200e2420)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 120 [select]:
net/http.(*persistConn).readLoop(0xc8200e24d0)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 121 [select]:
net/http.(*persistConn).writeLoop(0xc8200e24d0)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 81 [select]:
net/http.(*persistConn).writeLoop(0xc82010e370)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 147 [select]:
net/http.(*persistConn).readLoop(0xc8200e2580)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 123 [select]:
net/http.(*persistConn).writeLoop(0xc820170160)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 134 [select]:
net/http.(*persistConn).readLoop(0xc820170210)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 135 [select]:
net/http.(*persistConn).writeLoop(0xc820170210)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 178 [select]:
net/http.(*persistConn).readLoop(0xc82010e580)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 102 [select]:
net/http.(*persistConn).writeLoop(0xc8201702c0)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 105 [select]:
net/http.(*persistConn).readLoop(0xc8200ac580)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 106 [select]:
net/http.(*persistConn).writeLoop(0xc8200ac580)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 109 [select]:
net/http.(*persistConn).readLoop(0xc8200ac630)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 110 [select]:
net/http.(*persistConn).writeLoop(0xc8200ac630)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 113 [select]:
net/http.(*persistConn).readLoop(0xc8200ac6e0)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 146 [select]:
net/http.(*persistConn).writeLoop(0xc8200ac6e0)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 140 [select]:
net/http.(*persistConn).readLoop(0xc820170370)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 141 [select]:
net/http.(*persistConn).writeLoop(0xc820170370)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 144 [select]:
net/http.(*persistConn).readLoop(0xc820170420)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 145 [select]:
net/http.(*persistConn).writeLoop(0xc820170420)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 94 [select]:
net/http.(*persistConn).readLoop(0xc82010e420)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 95 [select]:
net/http.(*persistConn).writeLoop(0xc82010e420)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 162 [select]:
net/http.(*persistConn).readLoop(0xc82010e4d0)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 163 [select]:
net/http.(*persistConn).writeLoop(0xc82010e4d0)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 179 [select]:
net/http.(*persistConn).writeLoop(0xc82010e580)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 126 [select]:
net/http.(*persistConn).readLoop(0xc82010e630)
    /usr/lib/golang/src/net/http/transport.go:976 +0xac7
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:685 +0xc78

goroutine 148 [select]:
net/http.(*persistConn).writeLoop(0xc8200e2580)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d

goroutine 127 [select]:
net/http.(*persistConn).writeLoop(0xc82010e630)
    /usr/lib/golang/src/net/http/transport.go:1009 +0x40c
created by net/http.(*Transport).dialConn
    /usr/lib/golang/src/net/http/transport.go:686 +0xc9d
exit status 2
",17436
228,33506221,"# basicwebapp/proto
proto/CatalogService.pb.go:126: cannot use _CatalogService_GetProductCatalog_Handler (type func(interface {},   context.Context, []byte) (proto.Message, error)) as type grpc.methodHandler in field value
proto/RecommendationService.pb.go:99: cannot use _RecommendationService_GetRecommendations_Handler (type func(interface {}, context.Context, []byte) (proto.Message, error)) as type grpc.methodHandler in field value
",438
229,33506221,"// Code generated by protoc-gen-go.
// source: CatalogService.proto
// DO NOT EDIT!

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
    CatalogService.proto
    Product.proto
    RecommendationService.proto

It has these top-level messages:
    Category
    CatalogResponse
    CatalogRequest
*/
package protos

import proto ""github.com/golang/protobuf/proto""

import (
    context ""golang.org/x/net/context""
    grpc ""google.golang.org/grpc""
)

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type Category struct {
    CategoryName string `protobuf:""bytes,1,opt,name=categoryName"" json:""categoryName,omitempty""`
}

func (m *Category) Reset()         { *m = Category{} }
func (m *Category) String() string { return proto.CompactTextString(m) }
func (*Category) ProtoMessage()    {}

type CatalogResponse struct {
    Products []*Product `protobuf:""bytes,1,rep,name=products"" json:""products,omitempty""`
}

func (m *CatalogResponse) Reset()         { *m = CatalogResponse{} }
func (m *CatalogResponse) String() string { return proto.CompactTextString(m) }
func (*CatalogResponse) ProtoMessage()    {}

func (m *CatalogResponse) GetProducts() []*Product {
    if m != nil {
        return m.Products
    }
    return nil
}

type CatalogRequest struct {
    Category *Category `protobuf:""bytes,1,opt,name=category"" json:""category,omitempty""`
}

func (m *CatalogRequest) Reset()         { *m = CatalogRequest{} }
func (m *CatalogRequest) String() string { return proto.CompactTextString(m) }
func (*CatalogRequest) ProtoMessage()    {}

func (m *CatalogRequest) GetCategory() *Category {
    if m != nil {
        return m.Category
    }
    return nil
}

func init() {
}

// Client API for CatalogService service

type CatalogServiceClient interface {
    GetProductCatalog(ctx context.Context, in *CatalogRequest, opts ...grpc.CallOption) (*CatalogResponse, error)
}

type catalogServiceClient struct {
    cc *grpc.ClientConn
}

func NewCatalogServiceClient(cc *grpc.ClientConn) CatalogServiceClient {
    return &catalogServiceClient{cc}
}

func (c *catalogServiceClient) GetProductCatalog(ctx context.Context, in *CatalogRequest, opts ...grpc.CallOption) (*CatalogResponse, error) {
    out := new(CatalogResponse)
    err := grpc.Invoke(ctx, ""/protos.CatalogService/GetProductCatalog"", in, out, c.cc, opts...)
    if err != nil {
        return nil, err
    }
    return out, nil
}

// Server API for CatalogService service

type CatalogServiceServer interface {
    GetProductCatalog(context.Context, *CatalogRequest) (*CatalogResponse, error)
}

func RegisterCatalogServiceServer(s *grpc.Server, srv CatalogServiceServer) {
    s.RegisterService(&_CatalogService_serviceDesc, srv)
}

func _CatalogService_GetProductCatalog_Handler(srv interface{}, ctx context.Context, buf []byte) (proto.Message, error) {
    in := new(CatalogRequest)
    if err := proto.Unmarshal(buf, in); err != nil {
        return nil, err
    }
    out, err := srv.(CatalogServiceServer).GetProductCatalog(ctx, in)
    if err != nil {
        return nil, err
    }
    return out, nil
}

var _CatalogService_serviceDesc = grpc.ServiceDesc{
    ServiceName: ""protos.CatalogService"",
    HandlerType: (*CatalogServiceServer)(nil),
    Methods: []grpc.MethodDesc{
        {
            MethodName: ""GetProductCatalog"",
            Handler:    _CatalogService_GetProductCatalog_Handler,
        },
    },
    Streams: []grpc.StreamDesc{},
}
",3625
230,33506221,"// Code generated by protoc-gen-go.
// source: RecommendationService.proto
// DO NOT EDIT!

package protos

import proto ""github.com/golang/protobuf/proto""

import (
    context ""golang.org/x/net/context""
    grpc ""google.golang.org/grpc""
)

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type RecommendationResponse struct {
    Result []*RecommendationResponse_Recommendation `protobuf:""bytes,1,rep,name=result"" json:""result,omitempty""`
}

func (m *RecommendationResponse) Reset()         { *m = RecommendationResponse{} }
func (m *RecommendationResponse) String() string { return proto.CompactTextString(m) }
func (*RecommendationResponse) ProtoMessage()    {}

func (m *RecommendationResponse) GetResult() []*RecommendationResponse_Recommendation {
    if m != nil {
        return m.Result
    }
    return nil
}

type RecommendationResponse_Recommendation struct {
    Rating    int32 `protobuf:""varint,1,opt,name=rating"" json:""rating,omitempty""`
    Productid int32 `protobuf:""varint,2,opt,name=productid"" json:""productid,omitempty""`
}

func (m *RecommendationResponse_Recommendation) Reset()         { *m = RecommendationResponse_Recommendation{} }
func (m *RecommendationResponse_Recommendation) String() string { return proto.CompactTextString(m) }
func (*RecommendationResponse_Recommendation) ProtoMessage()    {}

func init() {
}

// Client API for RecommendationService service

type RecommendationServiceClient interface {
    GetRecommendations(ctx context.Context, in *Product, opts ...grpc.CallOption) (*RecommendationResponse, error)
}

type recommendationServiceClient struct {
    cc *grpc.ClientConn
}

func NewRecommendationServiceClient(cc *grpc.ClientConn) RecommendationServiceClient {
    return &recommendationServiceClient{cc}
}

func (c *recommendationServiceClient) GetRecommendations(ctx context.Context, in *Product, opts ...grpc.CallOption) (*RecommendationResponse, error) {
    out := new(RecommendationResponse)
    err := grpc.Invoke(ctx, ""/protos.RecommendationService/GetRecommendations"", in, out, c.cc, opts...)
    if err != nil {
        return nil, err
    }
    return out, nil
}

// Server API for RecommendationService service

type RecommendationServiceServer interface {
    GetRecommendations(context.Context, *Product) (*RecommendationResponse, error)
}

func RegisterRecommendationServiceServer(s *grpc.Server, srv RecommendationServiceServer) {
    s.RegisterService(&_RecommendationService_serviceDesc, srv)
}

func _RecommendationService_GetRecommendations_Handler(srv interface{}, ctx context.Context, buf []byte) (proto.Message, error) {
    in := new(Product)
    if err := proto.Unmarshal(buf, in); err != nil {
        return nil, err
    }
    out, err := srv.(RecommendationServiceServer).GetRecommendations(ctx, in)
    if err != nil {
        return nil, err
    }
    return out, nil
}

var _RecommendationService_serviceDesc = grpc.ServiceDesc{
    ServiceName: ""protos.RecommendationService"",
    HandlerType: (*RecommendationServiceServer)(nil),
    Methods: []grpc.MethodDesc{
        {
            MethodName: ""GetRecommendations"",
            Handler:    _RecommendationService_GetRecommendations_Handler,
        },
    },
    Streams: []grpc.StreamDesc{},
}
",3396
231,33850935,"import (
    ""errors""    
    ""strings""
    ""strconv""
    ""log""
    ""database/sql""
    _ ""github.com/go-sql-driver/mysql""
    //""strconv""
    ""encoding/base64""
    ""encoding/json""
    ""bytes""
    //""strings""
)

var privateKey = []byte(`
-----BEGIN RSA PRIVATE KEY-----
MIICXQIBAAKBgQDZsfv1qscqYdy4vY+P4e3cAtmvppXQcRvrF1cB4drkv0haU24Y
7m5qYtT52Kr539RdbKKdLAM6s20lWy7+5C0DgacdwYWd/7PeCELyEipZJL07Vro7
Ate8Bfjya+wltGK9+XNUIHiumUKULW4KDx21+1NLAUeJ6PeW+DAkmJWF6QIDAQAB
AoGBAJlNxenTQj6OfCl9FMR2jlMJjtMrtQT9InQEE7m3m7bLHeC+MCJOhmNVBjaM
ZpthDORdxIZ6oCuOf6Z2+Dl35lntGFh5J7S34UP2BWzF1IyyQfySCNexGNHKT1G1
XKQtHmtc2gWWthEg+S6ciIyw2IGrrP2Rke81vYHExPrexf0hAkEA9Izb0MiYsMCB
/jemLJB0Lb3Y/B8xjGjQFFBQT7bmwBVjvZWZVpnMnXi9sWGdgUpxsCuAIROXjZ40
IRZ2C9EouwJBAOPjPvV8Sgw4vaseOqlJvSq/C/pIFx6RVznDGlc8bRg7SgTPpjHG
4G+M3mVgpCX1a/EU1mB+fhiJ2LAZ/pTtY6sCQGaW9NwIWu3DRIVGCSMm0mYh/3X9
DAcwLSJoctiODQ1Fq9rreDE5QfpJnaJdJfsIJNtX1F+L3YceeBXtW0Ynz2MCQBI8
9KP274Is5FkWkUFNKnuKUK4WKOuEXEO+LpR+vIhs7k6WQ8nGDd4/mujoJBr5mkrw
DPwqA3N5TMNDQVGv8gMCQQCaKGJgWYgvo3/milFfImbp+m7/Y3vCptarldXrYQWO
AQjxwc71ZGBFDITYvdgJM1MTqc8xQek1FXn1vfpy2c6O
-----END RSA PRIVATE KEY-----
`)
var publicKey = []byte(`
-----BEGIN PUBLIC KEY-----
MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDZsfv1qscqYdy4vY+P4e3cAtmv
ppXQcRvrF1cB4drkv0haU24Y7m5qYtT52Kr539RdbKKdLAM6s20lWy7+5C0Dgacd
wYWd/7PeCELyEipZJL07Vro7Ate8Bfjya+wltGK9+XNUIHiumUKULW4KDx21+1NL
AUeJ6PeW+DAkmJWF6QIDAQAB
-----END PUBLIC KEY-----
`)
type DebugKeysRPC_Args struct {

}
type DebugKeysRPC_Reply struct {
    PubN        string
    PubE        uint64
    PrvN        string
    PrvD        string
    PrvP        string
    PrvQ        string
    Dp          string
    Dq          string
    Qinv        string
    CRTValues   string
    ID      uint64
    Key     string
    Dest    string  
}

func (t *AccessDB) DebugKeysRPC(args *DebugKeysRPC_Args, reply *DebugKeysRPC_Reply) error { 
    log.Println(""DebugKeysRPC"")

    if pubN,pubE,PrvN,PrvD,PrvP,PrvQ,Dp,Dq,Qinv,CRTValues,err:=ReadKeyFields(publicKey,privateKey);err==nil{
        log.Println(""ok read"")
        reply.PubN=base64.StdEncoding.EncodeToString(pubN)
        reply.PubE=uint64(pubE)
        reply.PrvN=base64.StdEncoding.EncodeToString(PrvN)
        reply.PrvD=base64.StdEncoding.EncodeToString(PrvD)
        reply.PrvP=base64.StdEncoding.EncodeToString(PrvP)
        reply.PrvQ=base64.StdEncoding.EncodeToString(PrvQ)
        reply.Dp=base64.StdEncoding.EncodeToString(Dp)
        reply.Dq=base64.StdEncoding.EncodeToString(Dq)
        reply.Qinv=base64.StdEncoding.EncodeToString(Qinv)
        reply.CRTValues=base64.StdEncoding.EncodeToString(CRTValues)
        reply.ID=1
        //origData:=[]byte(""abcdefghijklmnopqrstuvwxyz"")
        origData:=[]byte(""1234567890123456"")
        if resultRsa,err:=DbgRasEncryptOAEP(origData,publicKey);err==nil{
        //if resultRsa,err:=RsaEncrypt(origData,publicKey);err==nil{
            log.Printf(""resultRsa(%d): % x"", len(resultRsa),resultRsa)
            reply.Dest=base64.StdEncoding.EncodeToString(resultRsa)
            if resultRsaP,err:=DbgRsaDecryptOAEP(resultRsa,privateKey);err==nil{
                //log.Printf(""RsaDecrypt ok % x"", resultRsaP)   
                log.Println(""RsaDecrypt ok"")
                log.Printf(""resultRsaP(%d): %s"", len(string(resultRsaP)),string(resultRsaP))
            }else{
                log.Println(""RsaDecrypt"",err)
            }
        }else{
            log.Println(""RsaEncrypt"",err)
        }                   
    }else{
        WatchPublicKey(publicKey)
        WatchPrivateKey(privateKey)
        log.Println(err)
    }

    return nil
}
",3600
232,33850935,"procedure RsaEncrypt( const PublicKey: TStream; const srcStream : TStream;tgtStream:TStream);
var
  Codec : TCodec;
  wasAborted: boolean;
  KeyPair: TAsymetricKeyPair;
  Key: TSymetricKey;
  lib : TCryptographicLibrary;
begin
  Codec := TCodec.Create(Nil);
  lib := TCryptographicLibrary.Create(Nil);
  try
    //0. Reset
    Codec.Reset;
    Codec.CryptoLibrary := lib;
    Codec.ChainModeId := ECB_ProgId;
    Codec.StreamCipherId := 'native.RSA';

    //1. Set the cipher to RSA encryption.
    Codec.StreamCipherId := RSA_ProgId;

    //2. Load our pre-fabricated public key.
    PublicKey.Position := 0;
    Codec.AsymetricKeySizeInBits := 1024;
    Key := Codec.Asymetric_Engine.CreateFromStream(PublicKey, [partPublic]);

    //3. Now set the key.
    Codec.InitFromKey(Key);
    Codec.EncryptStream(srcStream,tgtStream);
  finally
    lib.Free;
    Codec.Free;
  end;
end;

procedure RsaDecrypt( const PrivateKey: TStream; const srcStream : TStream;tgtStream:TStream);
var
  Codec : TCodec;
  wasAborted: boolean;
  KeyPair: TAsymetricKeyPair;
  //Key: TSymetricKey;
  lib : TCryptographicLibrary;
begin
  Codec := TCodec.Create(Nil);
  lib := TCryptographicLibrary.Create(Nil);
  try
   //0. Reset
   Codec.Reset;
   Codec.CryptoLibrary := lib;
   Codec.ChainModeId := ECB_ProgId;
   Codec.StreamCipherId := 'native.RSA';

    //1. Set the cipher to RSA encryption.
    Codec.StreamCipherId := RSA_ProgId;

    //2. Load our pre-fabricated private key.
    PrivateKey.Position := 0;
    Codec.AsymetricKeySizeInBits := 1024;
    KeyPair := Codec.Asymetric_Engine.CreateFromStream(PrivateKey, [partPrivate]);

    //3. Now set the key.
    Codec.InitFromKey(KeyPair);

    Codec.DecryptStream(tgtStream,srcStream);
  finally
    lib.Free;
    Codec.Free;
  end;
end;

procedure Sign(privateKey,srcStream,tgtStream:TMemoryStream);
var
  sign:TSignature;
begin
  try
    sign:=TSignature.Create;
    privateKey.Seek(0,soBeginning);
    sign.m_Signatory.LoadKeysFromStream(privateKey,[partPrivate]);

    sign.m_Signatory.Sign(srcStream,tgtStream);
  finally
    sign.Free;
  end;
end;

function Verify(publicKey,srcStream,tgtStream:TMemoryStream):Boolean;
var
  sign:TSignature;
  vResult:TVerifyResult;
  nDbg:Integer;
begin
  try
    result:=False;
    publicKey.Seek(0,soBeginning);
    srcStream.Seek(0,soBeginning);
    tgtStream.Seek(0,soBeginning);
    sign:=TSignature.Create;
    sign.m_Signatory.LoadKeysFromStream(publicKey,[partPublic]);

    vResult:=sign.m_Signatory.Verify(srcStream,tgtStream);
    if vResult=vPass then
    begin
      nDbg:=0;
      result:=True;
    end
    else if vResult=vFail then
    begin
      nDbg:=1;
    end
    else if vResult=vUserAbort then
      nDbg:=3
    else nDbg:=4;
  finally
    sign.Free;
  end;
end;

procedure readPubKey(pubN:TStream;pubE:TStream);
var
  publicKey:TMemoryStream;
  Codec : TCodec;
  Key: TAsymetricKeyPair;
  lib : TCryptographicLibrary;
begin
  try
    publicKey:=TMemoryStream.Create;

    publicKey.LoadFromFile('e:\public.key');

    Codec := TCodec.Create(Nil);
    lib := TCryptographicLibrary.Create(Nil);
    try
      //0. Reset
      Codec.Reset;
      Codec.CryptoLibrary := lib;
      Codec.ChainModeId := ECB_ProgId;

      //1. Set the cipher to RSA encryption.
      Codec.StreamCipherId := RSA_ProgId;

      //2. Load our pre-fabricated public key.
      PublicKey.Position := 0;
      Codec.AsymetricKeySizeInBits := 1024;
      Key := Codec.Asymetric_Engine.CreateFromStream(publicKey, [partPublic]);
      //pubN.Write(Key.F_RSA_n.Value,sizeof(Key.F_RSA_n.Value));
      //pubE.Write(Key.F_RSA_n.Value,sizeof(Key.F_RSA_e.Value));
      pubN.CopyFrom((TRSAKeyPair(Key)).F_RSA_n.Value.FValue,0);
      pubE.CopyFrom((TRSAKeyPair(Key)).F_RSA_e.Value.FValue,0);
    finally
      lib.Free;
      Codec.Free;
    end;

  finally
    publicKey.Free;
  end;
end;

procedure dbgRsaKeys();
var
  publicKey:TMemoryStream;
  privateKey:TMemoryStream;
  tgtStream:TMemoryStream;
  srcStream:TStringStream;
  src:string;
  rstStream:TStringStream;
  sResult:string;
begin
  publicKey:=TMemoryStream.Create;
  privateKey:=TMemoryStream.Create;
  rstStream:=TStringStream.Create;
  srcStream:=TStringStream.Create;
  tgtStream:=TMemoryStream.Create;
  try
    src:='tell me why,tell me how,tell me where';
    srcStream.WriteString(src);
    srcStream.Seek(0,soBeginning);
    publicKey.LoadFromFile('e:\public.key');
    privateKey.LoadFromFile('e:\private.key');

    RsaEncrypt( PublicKey,srcStream ,tgtStream);

    RsaDecrypt( PrivateKey,tgtStream,rstStream);
    sResult:=rstStream.DataString;
  finally
    publicKey.Free;
    privateKey.Free;
    srcStream.Free;
    tgtStream.Free;
    rstStream.Free;
  end;
end;
procedure TestEncrypt();
var
  publicKey:TMemoryStream;
  srcStream,tgtStream:TMemoryStream;
begin
  try
    publicKey:=TMemoryStream.Create;

    srcStream:=TMemoryStream.Create;
    srcStream.LoadFromFile('e:\scanconfig.txt');
    tgtStream:=TMemoryStream.Create;
    publicKey.LoadFromFile('e:\public.key');

    RsaEncrypt( PublicKey,srcStream ,tgtStream);

    tgtStream.SaveToFile('e:\scanconfig.enc');
  finally
    publicKey.Free;
    srcStream.Free;
    tgtStream.Free;
  end;
end;

procedure TestDecrypt(srcStream:TMemoryStream);
var
  privateKey:TMemoryStream;
  tgtStream:TStringStream;
  sResult:String;
begin
  //dbgRsaKeys();
  privateKey:=TMemoryStream.Create;
  tgtStream:=TStringStream.Create;
  try
    srcStream.Seek(0,soBeginning);
    privateKey.LoadFromFile('e:\private.key');
    RsaDecrypt( privateKey,srcStream,tgtStream);
    sResult:=tgtStream.DataString;
  finally
    privateKey.Free;
    tgtStream.Free;
  end;
end;
",5658
233,33872157,len(),5
234,33872157,main(),6
235,33872157,map,3
236,33872157,len(),5
237,33872157,len(),5
238,33872157,len(),5
239,33872157,len(m),6
240,33872157,"package main

import (
    ""log""
    ""os""
    ""time""
)

const (
    chBuffSize        = 100             // How large the thing's channel buffer should be
    thingIdleLifetime = time.Second * 5 // How long things can live for when idle
    thingsToMake      = 1000            // How many things and associated goroutines to make
    thingMessageCount = 10              // How many messages to send to the thing
)

// The thing that we'll be passing into a goroutine to process -----------------
type thing struct {
    id string
    ch chan bool
}

// Go go gadget map test -------------------------------------------------------
func main() {
    // Make all of the things!
    things := make(map[string]thing)
    for i := 0; i < thingsToMake; i++ {
        t := thing{
            id: string(i),
            ch: make(chan bool, chBuffSize),
        }
        things[t.id] = t

        // Pass the thing into it's own goroutine
        go doSomething(t, &things)

        // Send (thingMessageCount) messages to the thing
        go func(t thing) {
            for x := 0; x < thingMessageCount; x++ {
                t.ch <- true
            }
        }(t)
    }

    // Check the map of things to see whether we're empty or not
    size := 0
    for {
        if size == len(things) && size != thingsToMake {
            log.Println(""Same number of items in map as last time"")
            log.Println(things)
            os.Exit(1)
        }
        size = len(things)
        log.Printf(""Map size: %d\n"", size)
        time.Sleep(time.Second)
    }
}

// Func for each goroutine to run ----------------------------------------------
//
// Takes two arguments:
// 1) the thing that it is working with
// 2) a pointer to the map of things
//
// When this goroutine is ready to terminate, it should remove the associated
// thing from the map of things to clean up after itself
func doSomething(t thing, things *map[string]thing) {
    lastAccessed := time.Now()
    for {
        select {
        case <-t.ch:
            // We received a message, so extend the lastAccessed time
            lastAccessed = time.Now()
        default:
            // We haven't received a message, so check if we're allowed to continue
            n := time.Now()
            d := n.Sub(lastAccessed)
            if d > thingIdleLifetime {
                // We've run for >thingIdleLifetime, so close the channel, delete the
                // associated thing from the map and return, terminating the goroutine
                close(t.ch)
                delete(*things, string(t.id))
                return
            }
        }

        // Just sleep for a second in each loop to prevent the CPU being eaten up
        time.Sleep(time.Second)
    }
}
",2743
241,33872157,len(),5
242,33872157,main(),6
243,33872157,thingsToMake,12
244,33872157,"goroutine 199734 [select]:
main.doSomething(0xc0d62e7680, 0x4, 0xc0d64efba0, 0xc082016240)
        C:/Users/anttheknee/go/src/maptest/maptest.go:83 +0x144
created by main.main
        C:/Users/anttheknee/go/src/maptest/maptest.go:46 +0x463
",240
245,33872157,"package main

import (
    ""log""
    ""os""
    ""time""
)

const (
    chBuffSize        = 100             // How large the thing's channel buffer should be
    thingIdleLifetime = time.Second * 5 // How long things can live for when idle
    thingsToMake      = 10000           // How many things and associated goroutines to make
    thingMessageCount = 10              // How many messages to send to the thing
)

// The thing that we'll be passing into a goroutine to process -----------------
type thing struct {
    id   string
    ch   chan bool
    done chan string
}

// Go go gadget map test -------------------------------------------------------
func main() {
    // Make all of the things!
    things := make(map[string]thing)

    // Make a channel to receive completion notification on
    doneCh := make(chan string, chBuffSize)

    log.Printf(""Making %d things\n"", thingsToMake)
    for i := 0; i < thingsToMake; i++ {
        t := thing{
            id:   string(i),
            ch:   make(chan bool, chBuffSize),
            done: doneCh,
        }
        things[t.id] = t

        // Pass the thing into it's own goroutine
        go doSomething(t)

        // Send (thingMessageCount) messages to the thing
        go func(t thing) {
            for x := 0; x < thingMessageCount; x++ {
                t.ch <- true
                time.Sleep(time.Millisecond * 10)
            }
        }(t)
    }
    log.Printf(""All %d things made\n"", thingsToMake)

    // Receive on doneCh when the goroutine is complete and clean the map up
    for {
        id := <-doneCh
        close(things[id].ch)
        delete(things, id)
        if len(things) == 0 {
            log.Printf(""Map: %v"", things)
            log.Println(""All done. Exiting"")
            os.Exit(0)
        }
    }
}

// Func for each goroutine to run ----------------------------------------------
//
// Takes two arguments:
// 1) the thing that it is working with
// 2) the channel to report that we're done through
//
// When this goroutine is ready to terminate, it should remove the associated
// thing from the map of things to clean up after itself
func doSomething(t thing) {
    timer := time.NewTimer(thingIdleLifetime)
    for {
        select {
        case <-t.ch:
            // We received a message, so extend the timer
            timer.Reset(thingIdleLifetime)
        case <-timer.C:
            // Timer returned so we need to exit now
            t.done <- t.id
            return
        }
    }
}
",2500
246,33872157,"package main

import (
    ""log""
    ""os""
    ""strconv""
    ""time""
)

const (
    chBuffSize        = 100             // How large the thing's channel buffer should be
    thingIdleLifetime = time.Second * 5 // How long things can live for when idle
    thingsToMake      = 100000          // How many things and associated goroutines to make
    thingMessageCount = 10              // How many messages to send to the thing
)

// The thing that we'll be passing into a goroutine to process -----------------
type thing struct {
    id       string
    receiver chan bool
    done     chan string
}

// Go go gadget map test -------------------------------------------------------
func main() {
    // Make all of the things!
    things := make(map[string]thing)

    // Make a channel to receive completion notification on
    doneCh := make(chan string, chBuffSize)

    log.Printf(""Making %d things\n"", thingsToMake)

    for i := 0; i < thingsToMake; i++ {
        t := thing{
            id:       strconv.Itoa(i),
            receiver: make(chan bool, chBuffSize),
            done:     doneCh,
        }
        things[t.id] = t

        // Pass the thing into it's own goroutine
        go doSomething(t)

        // Send (thingMessageCount) messages to the thing
        go func(t thing) {
            for x := 0; x < thingMessageCount; x++ {
                t.receiver <- true
                time.Sleep(time.Millisecond * 100)
            }
        }(t)
    }
    log.Printf(""All %d things made\n"", thingsToMake)

    // Check the `len()` of things every second and exit when empty
    go func() {
        for {
            time.Sleep(time.Second)
            m := things
            log.Printf(""Map length: %v"", len(m))
            if len(m) == 0 {
                log.Printf(""Confirming empty map: %v"", things)
                log.Println(""All done. Exiting"")
                os.Exit(0)
            }
        }
    }()

    // Receive on doneCh when the goroutine is complete and clean the map up
    for {
        id := <-doneCh
        close(things[id].receiver)
        delete(things, id)
    }
}

// Func for each goroutine to run ----------------------------------------------
//
// When this goroutine is ready to terminate it should respond through t.done to
// notify the caller that it has finished and can be cleaned up. It will wait
// for `thingIdleLifetime` until it times out and terminates on it's own
func doSomething(t thing) {
    timer := time.NewTimer(thingIdleLifetime)
    for {
        select {
        case <-t.receiver:
            // We received a message, so extend the timer
            timer.Reset(thingIdleLifetime)
        case <-timer.C:
            // Timer expired so we need to exit now
            t.done <- t.id
            return
        }
    }
}
",2799
247,33988192,"// mysqlSSHtunnel project main.go
// Establish an ssh tunnel and connect to a remote mysql server using
// go-sql-driver for database queries. Encrypted private key pem files
// are supported.
//
// This is an example to give an idea. It's far from a performant solution. It 
// lacks of proper error handling and I'm sure it could really be much better 
// implemented. Please forgive me, as I just started with Go about 2 weeks ago.
//
// The database used in this example is from a real Opensimulator installation.
// It queries the migrations table in the opensim database.
//
package main

import (
    ""database/sql""
    ""fmt""
    _ ""github.com/go-sql-driver/mysql""
    ""os""
)

// Declare your connection data and user credentials here
const (
    // ssh connection related data
    sshServerHost     = ""test.example.com""
    sshServerPort     = 22
    sshUserName       = ""tester""
    sshPrivateKeyFile = ""testkey.pem"" // exported as OpenSSH key from .ppk
    sshKeyPassphrase  = ""testoster0n"" // key file encrytion password

    // ssh tunneling related data
    sshLocalHost  = ""localhost"" // local localhost ip (client side)
    sshLocalPort  = 9000        // local port used to forward the connection
    sshRemoteHost = ""127.0.0.1"" // remote local ip (server side)
    sshRemotePort = 3306        // remote MySQL port

    // MySQL access data
    mySqlUsername = ""opensim""
    mySqlPassword = ""h0tgrits""
    mySqlDatabase = ""opensimdb""
)

// The main entry point of the application
func main() {
    fmt.Println(""-> mysqlSSHtunnel"")

    tunnel := sshTunnel() // Initialize sshTunnel
    go tunnel.Start()     // Start the sshTunnel

    // Declare the dsn (aka database connection string)
    // dsn := ""opensim:h0tgrits@tcp(localhost:9000)/opensimdb""
    dsn := fmt.Sprintf(""%s:%s@tcp(%s:%d)/%s"",
        mySqlUsername, mySqlPassword, sshLocalHost, sshLocalPort, mySqlDatabase)

    // Open the database
    db, err := sql.Open(""mysql"", dsn)
    if err != nil {
        dbErrorHandler(err)
    }
    defer db.Close() // keep it open until we are finished

    // Simple select query to check migrations (provided here as an example)
    rows, err := db.Query(""SELECT * FROM migrations"")
    if err != nil {
        dbErrorHandler(err)
    }
    defer rows.Close()

    // Iterate though the rows returned and print them
    for rows.Next() {
        var version int
        var name string
        if err := rows.Scan(&name, &version); err != nil {
            dbErrorHandler(err)
        }
        fmt.Printf(""%s, %d\n"", name, version)
    }
    if err := rows.Err(); err != nil {
        dbErrorHandler(err)
    }

    // Done for now
    fmt.Println(""<- mysqlSSHtunnel"")
}

// Simple mySql error handling (yet to implement)
func dbErrorHandler(err error) {
    switch err := err.(type) {
    default:
        fmt.Printf(""Error %s\n"", err)
        os.Exit(-1)
    }
}
",2885
248,33988192,"// mysqlSSHtunnel project sshTunnel.go
//
// Everything regarding the ssh tunnel goes here. Credits go to Svett Ralchev.
// Look at http://blog.ralch.com/tutorial/golang-ssh-tunneling for an excellent
// explanation and most ssh-tunneling related details used in this code.
//
// PEM key decryption is valid for password proected SSH-2 RSA Keys generated as
// .ppk files for putty and exported as OpenSSH .pem keyfile using PuTTYgen.
//
package main

import (
    ""bytes""
    ""crypto/x509""
    ""encoding/base64""
    ""encoding/pem""
    ""fmt""
    ""golang.org/x/crypto/ssh""
    ""io""
    ""io/ioutil""
    ""net""
)

// Define an endpoint with ip and port
type Endpoint struct {
    Host string
    Port int
}

// Returns an endpoint as ip:port formatted string
func (endpoint *Endpoint) String() string {
    return fmt.Sprintf(""%s:%d"", endpoint.Host, endpoint.Port)
}

// Define the endpoints along the tunnel
type SSHtunnel struct {
    Local  *Endpoint
    Server *Endpoint
    Remote *Endpoint
    Config *ssh.ClientConfig
}

// Start the tunnel
func (tunnel *SSHtunnel) Start() error {
    listener, err := net.Listen(""tcp"", tunnel.Local.String())
    if err != nil {
        return err
    }
    defer listener.Close()

    for {
        conn, err := listener.Accept()
        if err != nil {
            return err
        }
        go tunnel.forward(conn)
    }
}

// Port forwarding
func (tunnel *SSHtunnel) forward(localConn net.Conn) {
    // Establish connection to the intermediate server
    serverConn, err := ssh.Dial(""tcp"", tunnel.Server.String(), tunnel.Config)
    if err != nil {
        fmt.Printf(""Server dial error: %s\n"", err)
        return
    }

    // access the target server
    remoteConn, err := serverConn.Dial(""tcp"", tunnel.Remote.String())
    if err != nil {
        fmt.Printf(""Remote dial error: %s\n"", err)
        return
    }

    // Transfer the data between  and the remote server
    copyConn := func(writer, reader net.Conn) {
        _, err := io.Copy(writer, reader)
        if err != nil {
            fmt.Printf(""io.Copy error: %s"", err)
        }
    }

    go copyConn(localConn, remoteConn)
    go copyConn(remoteConn, localConn)
}

// Decrypt encrypted PEM key data with a passphrase and embed it to key prefix
// and postfix header data to make it valid for further private key parsing.
func DecryptPEMkey(buffer []byte, passphrase string) []byte {
    block, _ := pem.Decode(buffer)
    der, err := x509.DecryptPEMBlock(block, []byte(passphrase))
    if err != nil {
        fmt.Println(""decrypt failed: "", err)
    }
    encoded := base64.StdEncoding.EncodeToString(der)
    encoded = ""-----BEGIN RSA PRIVATE KEY-----\n"" + encoded +
        ""\n-----END RSA PRIVATE KEY-----\n""
    return []byte(encoded)
}

// Get the signers from the OpenSSH key file (.pem) and return them for use in
// the Authentication method. Decrypt encrypted key data with the passphrase.
func PublicKeyFile(file string, passphrase string) ssh.AuthMethod {
    buffer, err := ioutil.ReadFile(file)
    if err != nil {
        return nil
    }

    if bytes.Contains(buffer, []byte(""ENCRYPTED"")) {
        // Decrypt the key with the passphrase if it has been encrypted
        buffer = DecryptPEMkey(buffer, passphrase)
    }

    // Get the signers from the key
    signers, err := ssh.ParsePrivateKey(buffer)
    if err != nil {
        return nil
    }
    return ssh.PublicKeys(signers)
}

// Define the ssh tunnel using its endpoint and config data
func sshTunnel() *SSHtunnel {
    localEndpoint := &Endpoint{
        Host: sshLocalHost,
        Port: sshLocalPort,
    }

    serverEndpoint := &Endpoint{
        Host: sshServerHost,
        Port: sshServerPort,
    }

    remoteEndpoint := &Endpoint{
        Host: sshRemoteHost,
        Port: sshRemotePort,
    }

    sshConfig := &ssh.ClientConfig{
        User: sshUserName,
        Auth: []ssh.AuthMethod{
            PublicKeyFile(sshPrivateKeyFile, sshKeyPassphrase)},
    }

    return &SSHtunnel{
        Config: sshConfig,
        Local:  localEndpoint,
        Server: serverEndpoint,
        Remote: remoteEndpoint,
    }
}
",4120
249,34080574,ubuntu 14.04.3,14
250,34080574,kubernetes,10
251,34080574,apt-get,7
252,34080574,Golang,6
253,34080574,1.2.1,5
254,34080574,apt-get --purge autoremove,26
255,34080574,1.5.1,5
256,34080574,make,4
257,34080574,kubernetes,10
258,34080574,golang,6
259,34080574,1.2.1,5
260,34080574,"$ make
hack/build-go.sh
+++ [1203 06:20:30] Building go targets for linux/amd64:
    cmd/kube-proxy
    cmd/kube-apiserver
    cmd/kube-controller-manager
    cmd/kubelet
    cmd/kubemark
    cmd/hyperkube
    cmd/linkcheck
    plugin/cmd/kube-scheduler
    cmd/kubectl
    cmd/integration
    cmd/gendocs
    cmd/genkubedocs
    cmd/genman
    cmd/mungedocs
    cmd/genbashcomp
    cmd/genconversion
    cmd/gendeepcopy
    cmd/genswaggertypedocs
    examples/k8petstore/web-server/src
    github.com/onsi/ginkgo/ginkgo
    test/e2e/e2e.test
+++ [1203 06:20:30] +++ Warning: stdlib pkg with cgo flag not found.
+++ [1203 06:20:30] +++ Warning: stdlib pkg cannot be rebuilt since /usr/local/go/pkg is not writable by nan
+++ [1203 06:20:30] +++ Warning: Make /usr/local/go/pkg writable for nan for a one-time stdlib install, Or
+++ [1203 06:20:30] +++ Warning: Rebuild stdlib using the command 'CGO_ENABLED=0 go install -a -installsuffix cgo std'
+++ [1203 06:20:30] +++ Falling back to go build, which is slower
    # k8s.io/kubernetes/pkg/util/yaml
_output/local/go/src/k8s.io/kubernetes/pkg/util/yaml/decoder.go:26: import /home/nan/kubernetes/Godeps/_workspace/pkg/linux_amd64/github.com/ghodss/yaml.a: object is [linux amd64 go1.2.1 X:none] expected [linux amd64 go1.5.1 X:none]
# k8s.io/kubernetes/pkg/util/validation
_output/local/go/src/k8s.io/kubernetes/pkg/util/validation/errors.go:23: import /home/nan/kubernetes/_output/local/go/pkg/linux_amd64/k8s.io/kubernetes/pkg/util/errors.a: object is [linux amd64 go1.2.1 X:none] expected [linux amd64 go1.5.1 X:none]
# k8s.io/kubernetes/pkg/api/resource
_output/local/go/src/k8s.io/kubernetes/pkg/api/resource/quantity.go:27: import /home/nan/kubernetes/Godeps/_workspace/pkg/linux_amd64/speter.net/go/exp/math/dec/inf.a: object is [linux amd64 go1.2.1 X:none] expected [linux amd64 go1.5.1 X:none]
# github.com/spf13/cobra
Godeps/_workspace/src/github.com/spf13/cobra/command.go:27: import /home/nan/kubernetes/Godeps/_workspace/pkg/linux_amd64/github.com/inconshreveable/mousetrap.a: object is [linux amd64 go1.2.1 X:none] expected [linux amd64 go1.5.1 X:none]
# k8s.io/kubernetes/pkg/util/iptables
_output/local/go/src/k8s.io/kubernetes/pkg/util/iptables/iptables.go:27: import /home/nan/kubernetes/Godeps/_workspace/pkg/linux_amd64/github.com/coreos/go-semver/semver.a: object is [linux amd64 go1.2.1 X:none] expected [linux amd64 go1.5.1 X:none]
# github.com/prometheus/common/expfmt
Godeps/_workspace/src/github.com/prometheus/common/expfmt/decode.go:23: import /home/nan/kubernetes/Godeps/_workspace/pkg/linux_amd64/github.com/prometheus/client_model/go.a: object is [linux amd64 go1.2.1 X:none] expected [linux amd64 go1.5.1 X:none]
# github.com/emicklei/go-restful
Godeps/_workspace/src/github.com/emicklei/go-restful/container.go:16: import /home/nan/kubernetes/Godeps/_workspace/pkg/linux_amd64/github.com/emicklei/go-restful/log.a: object is [linux amd64 go1.2.1 X:none] expected [linux amd64 go1.5.1 X:none]
!!! Error in /home/nan/kubernetes/hack/lib/golang.sh:376
  'CGO_ENABLED=0 go build -o ""${outfile}"" ""${goflags[@]:+${goflags[@]}}"" -ldflags ""${goldflags}"" ""${binary}""' exited with status 2
Call stack:
  1: /home/nan/kubernetes/hack/lib/golang.sh:376 kube::golang::build_binaries_for_platform(...)
  2: /home/nan/kubernetes/hack/lib/golang.sh:535 kube::golang::build_binaries(...)
  3: hack/build-go.sh:26 main(...)
Exiting with status 1
!!! Error in /home/nan/kubernetes/hack/lib/golang.sh:456
  '( kube::golang::setup_env; local host_platform; host_platform=$(kube::golang::host_platform); local goflags goldflags; eval ""goflags=(${KUBE_GOFLAGS:-})""; goldflags=""${KUBE_GOLDFLAGS:-} $(kube::version::ldflags)""; local use_go_build; local -a targets=(); local arg; for arg in ""$@"";
do
    if [[ ""${arg}"" == ""--use_go_build"" ]]; then
        use_go_build=true;
    else
        if [[ ""${arg}"" == -* ]]; then
            goflags+=(""${arg}"");
        else
            targets+=(""${arg}"");
        fi;
    fi;
done; if [[ ${#targets[@]} -eq 0 ]]; then
    targets=(""${KUBE_ALL_TARGETS[@]}"");
fi; local -a platforms=(""${KUBE_BUILD_PLATFORMS[@]:+${KUBE_BUILD_PLATFORMS[@]}}""); if [[ ${#platforms[@]} -eq 0 ]]; then
    platforms=(""${host_platform}"");
fi; local binaries; binaries=($(kube::golang::binaries_from_targets ""${targets[@]}"")); local parallel=false; if [[ ${#platforms[@]} -gt 1 ]]; then
    local gigs; gigs=$(kube::golang::get_physmem); if [[ ${gigs} -ge ${KUBE_PARALLEL_BUILD_MEMORY} ]]; then
        kube::log::status ""Multiple platforms requested and available ${gigs}G >= threshold ${KUBE_PARALLEL_BUILD_MEMORY}G, building platforms in parallel""; parallel=true;
    else
        kube::log::status ""Multiple platforms requested, but available ${gigs}G < threshold ${KUBE_PARALLEL_BUILD_MEMORY}G, building platforms in serial""; parallel=false;
    fi;
fi; if [[ ""${parallel}"" == ""true"" ]]; then
    kube::log::status ""Building go targets for ${platforms[@]} in parallel (output will appear in a burst when complete):"" ""${targets[@]}""; local platform; for platform in ""${platforms[@]}"";
    do
        ( kube::golang::set_platform_envs ""${platform}""; kube::log::status ""${platform}: go build started""; kube::golang::build_binaries_for_platform ${platform} ${use_go_build:-}; kube::log::status ""${platform}: go build finished"" ) &> ""/tmp//${platform//\//_}.build"" &
    done; local fails=0; for job in $(jobs -p);
    do
        wait ${job} || let ""fails+=1"";
    done; for platform in ""${platforms[@]}"";
    do
        cat ""/tmp//${platform//\//_}.build"";
    done; exit ${fails};
else
    for platform in ""${platforms[@]}"";
    do
        kube::log::status ""Building go targets for ${platform}:"" ""${targets[@]}""; kube::golang::set_platform_envs ""${platform}""; kube::golang::build_binaries_for_platform ${platform} ${use_go_build:-};
    done;
fi )' exited with status 1
Call stack:
  1: /home/nan/kubernetes/hack/lib/golang.sh:456 kube::golang::build_binaries(...)
  2: hack/build-go.sh:26 main(...)
Exiting with status 1
make: *** [all] Error 1
",6027
261,34080574,go,2
262,34080574,PATH,4
263,34080574,1.5.1,5
264,34080574,"$ echo $PATH
/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/usr/local/go/bin
$ which go
/usr/local/go/bin/go
$ go version
go version go1.5.1 linux/amd64
",164
265,34119757,/usr/sbin/lsof -p,17
266,34119757,"monitor_ 13105 root  101u  sock      0,6      0t0 16960100 can't identify protocol
monitor_ 13105 root  102u  sock      0,6      0t0 21552427 can't identify protocol
monitor_ 13105 root  103u  sock      0,6      0t0 17565091 can't identify protocol
monitor_ 13105 root  104u  sock      0,6      0t0 18476870 can't identify protocol
",332
267,34119757,"[root@Monitor_q ~]# cat /proc/13105/status 
Name:   monitor_client
State:  S (sleeping)
Tgid:   13105
Pid:    13105
PPid:   13104
TracerPid:  0
Uid:    0   0   0   0
Gid:    0   0   0   0
Utrace: 0
FDSize: 16384
Groups: 
...


[root@Monitor_q ~]# cat /proc/13105/limits 
Limit                     Soft Limit           Hard Limit           Units     
Max cpu time              unlimited            unlimited            seconds   
Max file size             unlimited            unlimited            bytes     
Max data size             unlimited            unlimited            bytes     
Max stack size            10485760             unlimited            bytes     
Max core file size        0                    unlimited            bytes     
Max resident set          unlimited            unlimited            bytes     
Max processes             3870                 3870                 processes 
Max open files            9999                 9999                 files     
Max locked memory         65536                65536                bytes     
Max address space         unlimited            unlimited            bytes     
Max file locks            unlimited            unlimited            locks     
Max pending signals       3870                 3870                 signals   
Max msgqueue size         819200               819200               bytes     
Max nice priority         0                    0                    
Max realtime priority     0                    0                    
Max realtime timeout      unlimited            unlimited            us

[root@Monitor_q ~]# ll /proc/13105/fd/
lrwx------ 1 root root 64 Dec  7 00:15 8382 -> socket:[52023221]
lrwx------ 1 root root 64 Dec  7 00:15 8383 -> socket:[51186627]
lrwx------ 1 root root 64 Dec  7 00:15 8384 -> socket:[51864232]
lrwx------ 1 root root 64 Dec  7 00:15 8385 -> socket:[52435453]
lrwx------ 1 root root 64 Dec  7 00:15 8386 -> socket:[51596071]
lrwx------ 1 root root 64 Dec  7 00:15 8387 -> socket:[52767667]
lrwx------ 1 root root 64 Dec  7 00:15 8388 -> socket:[52090632]
lrwx------ 1 root root 64 Dec  7 00:15 8389 -> socket:[51739068]
lrwx------ 1 root root 64 Dec  7 00:15 839 -> socket:[22963529]
lrwx------ 1 root root 64 Dec  7 00:15 8390 -> socket:[52023223]
lrwx------ 1 root root 64 Dec  7 00:15 8391 -> socket:[52560389]
lrwx------ 1 root root 64 Dec  7 00:15 8392 -> socket:[52402565]
...
",2409
268,34119757,netstat -a,10
269,34119757,"package main

import (
    ""crypto/tls""
    ""encoding/json""
    ""fmt""
    ""log""
    ""net""
    ""net/http""
    nurl ""net/url""
    ""strconv""
    ""strings""
    ""syscall""
    ""time""
)

type Result struct {
    Error      string        `json:""error""`
    HttpStatus int           `json:""http_status""`
    Stime      time.Duration `json:""http_time""`
}

//http://stackoverflow.com/questions/20990332/golang-http-timeout-and-goroutines-accumulation
//http://3.3.3.3/http?host=3.2.4.2&servername=a.test&path=/&port=33&timeout=5&scheme=http
func MonitorHttp(w http.ResponseWriter, r *http.Request) {
    var host, servername, path, port, scheme string
    var timeout int
    u, err := nurl.Parse(r.RequestURI)
    if err != nil {
        log.Fatal(err)
        return
    }
    if host = u.Query().Get(""host""); host == """" {
        host = ""127.0.0.0""
    }
    if servername = u.Query().Get(""servername""); servername == """" {
        servername = ""localhost""
    }
    if path = u.Query().Get(""path""); path == """" {
        path = ""/""
    }
    if port = u.Query().Get(""port""); port == """" {
        port = ""80""
    }
    if scheme = u.Query().Get(""scheme""); scheme == """" {
        scheme = ""http""
    }

    if timeout, _ = strconv.Atoi(u.Query().Get(""timeout"")); timeout == 0 {
        timeout = 5
    }

    //log.Printf(""(host)=%s (servername)=%s (path)=%s (port)=%s (timeout)=%d"", host, servername, path, port, timeout)

    w.Header().Set(""Content-Type"", ""application/json"")

    res := httptool(host, port, servername, scheme, path, timeout)
    result, _ := json.Marshal(res)
    fmt.Fprintf(w, ""%s"", result)
}

func httptool(ip, port, servername, scheme, path string, timeout int) Result {

    var result Result
    startTime := time.Now()
    host := ip + "":"" + port

    transport := &http.Transport{
        TLSClientConfig:   &tls.Config{InsecureSkipVerify: true},
        DisableKeepAlives: true,
    }

    dialer := net.Dialer{
        Timeout:   time.Duration(timeout) * time.Second,
        KeepAlive: 0 * time.Second,
    }
    transport.Dial = func(network, address string) (net.Conn, error) {
        return dialer.Dial(network, address)
    }

    client := &http.Client{
        Transport: transport,
    }
    rawquery := """"
    url := fmt.Sprintf(""%s://%s%s%s"", scheme, host, path, rawquery)
    req, err := http.NewRequest(""GET"", url, nil)
    if err != nil {
        result.HttpStatus = -1
        errs := strings.Split(err.Error(), "": "")
        result.Error = errs[len(errs)-1]
        result.Stime = time.Now().Sub(startTime) / time.Millisecond
        return result
    }
    req.Header.Set(""User-Agent"", ""monitor worker"")
    req.Header.Set(""Connection"", ""close"")
    req.Host = servername
    resp, err := client.Do(req)
    //https://github.com/Basiclytics/neverdown/blob/master/check.go
    if err != nil {
        nerr, ok := err.(*nurl.Error)
        if ok {
            switch cerr := nerr.Err.(type) {
            case *net.OpError:
                switch cerr.Err.(type) {
                case *net.DNSError:
                    errs := strings.Split(cerr.Error(), "": "")
                    result.Error = ""dns: "" + errs[len(errs)-1]
                default:
                    errs := strings.Split(cerr.Error(), "": "")
                    result.Error = ""server: "" + errs[len(errs)-1]
                }
            default:
                switch nerr.Err.Error() {
                case ""net/http: request canceled while waiting for connection"":
                    errs := strings.Split(cerr.Error(), "": "")
                    result.Error = ""timeout: "" + errs[len(errs)-1]

                default:
                    errs := strings.Split(cerr.Error(), "": "")
                    result.Error = ""unknown: "" + errs[len(errs)-1]
                }
            }

        } else {
            result.Error = ""unknown: "" + err.Error()
        }
        result.HttpStatus = -2
        result.Stime = time.Now().Sub(startTime) / time.Millisecond
        return result
    }
    resp.Body.Close()
    result.HttpStatus = resp.StatusCode
    result.Error = ""noerror""
    result.Stime = time.Now().Sub(startTime) / time.Millisecond //spend time (ms)
    return result
}

func setRlimit() {
    var rLimit syscall.Rlimit
    err := syscall.Getrlimit(syscall.RLIMIT_NOFILE, &rLimit)
    if err != nil {
        log.Printf(""Unable to obtain rLimit"", err)
    }
    if rLimit.Cur < rLimit.Max {
        rLimit.Max = 9999
        rLimit.Cur = 9999
        err = syscall.Setrlimit(syscall.RLIMIT_NOFILE, &rLimit)
        if err != nil {
            log.Printf(""Unable to increase number of open files limit"", err)
        }
    }
}

func main() {
    setRlimit()
    s := &http.Server{
        Addr:         "":59059"",
        ReadTimeout:  7 * time.Second,
        WriteTimeout: 7 * time.Second,
    }
    http.HandleFunc(""/http"", MonitorHttp)

    log.Fatal(s.ListenAndServe())
}
",4898
270,35163475,"package main

import (
    ""fmt""
    ""math""
    ""runtime""
    ""testing""
    ""time""
)

var (
    f  float64
    e  float64 = math.E
    pi float64 = math.Pi
)

const nFlop = 20 // benchmarkFloatOps

func benchmarkFloatOps(n int) {
    for i := 0; i < n; i++ {
        f = pi + e
        f = pi - e
        f = pi * e
        f = pi / e
        f = pi + e
        f = pi - e
        f = pi * e
        f = pi / e
        f = pi + e
        f = pi - e
        f = pi * e
        f = pi / e
        f = pi + e
        f = pi - e
        f = pi * e
        f = pi / e
        f = pi + e
        f = pi - e
        f = pi * e
        f = pi / e
    }
}

func BenchmarkFloatOps(b *testing.B) {
    benchmarkFloatOps(b.N)
}

func Results(t time.Duration, n int, nFlop int) {
    fmt.Println(
        t, nFlop*n, ""ops"",
        float64(t)/float64(time.Duration((nFlop*n))), ""ns/op"",
    )
}

func main() {
    runtime.GOMAXPROCS(1)

    // testing benchmark
    br := testing.Benchmark(BenchmarkFloatOps)
    Results(br.T, br.N, nFlop)

    // manual benchmark
    n := br.N
    start := time.Now()
    benchmarkFloatOps(n)
    end := time.Now()
    elapsed := end.Sub(start)
    Results(elapsed, n, nFlop)
}
",1200
271,35163475,"1.296967371s 4000000000 ops 0.32424184275 ns/op
1.299078813s 4000000000 ops 0.32476970325 ns/op
",96
272,35163475,benchmarkFloatOps,17
273,35163475,"$ go tool compile -S flops.go

"""".benchmarkFloatOps t=1 size=592 value=0 args=0x8 locals=0x0
    0x0000 00000 (flops.go:19)  TEXT    """".benchmarkFloatOps(SB), $0-8
    0x0000 00000 (flops.go:19)  NOP
    0x0000 00000 (flops.go:19)  NOP
    0x0000 00000 (flops.go:19)  MOVQ    """".n+8(FP), CX
    0x0005 00005 (flops.go:19)  FUNCDATA    $0, gclocals·5184031d3a32a42d85027f073f873668(SB)
    0x0005 00005 (flops.go:19)  FUNCDATA    $1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
    0x0005 00005 (flops.go:20)  MOVQ    $0, AX
    0x0007 00007 (flops.go:20)  CMPQ    AX, CX
    0x000a 00010 (flops.go:20)  JGE $0, 588
    0x0010 00016 (flops.go:21)  MOVSD   """".pi(SB), X0
    0x0018 00024 (flops.go:21)  MOVSD   """".e(SB), X1
    0x0020 00032 (flops.go:21)  ADDSD   X1, X0
    0x0024 00036 (flops.go:21)  MOVSD   X0, """".f(SB)
    0x002c 00044 (flops.go:22)  MOVSD   """".pi(SB), X0
    0x0034 00052 (flops.go:22)  MOVSD   """".e(SB), X1
    0x003c 00060 (flops.go:22)  SUBSD   X1, X0
    0x0040 00064 (flops.go:22)  MOVSD   X0, """".f(SB)
    0x0048 00072 (flops.go:23)  MOVSD   """".pi(SB), X0
    0x0050 00080 (flops.go:23)  MOVSD   """".e(SB), X1
    0x0058 00088 (flops.go:23)  MULSD   X1, X0
    0x005c 00092 (flops.go:23)  MOVSD   X0, """".f(SB)
    0x0064 00100 (flops.go:24)  MOVSD   """".pi(SB), X0
    0x006c 00108 (flops.go:24)  MOVSD   """".e(SB), X1
    0x0074 00116 (flops.go:24)  DIVSD   X1, X0
    0x0078 00120 (flops.go:24)  MOVSD   X0, """".f(SB)
    0x0080 00128 (flops.go:25)  MOVSD   """".pi(SB), X0
    0x0088 00136 (flops.go:25)  MOVSD   """".e(SB), X1
    0x0090 00144 (flops.go:25)  ADDSD   X1, X0
    0x0094 00148 (flops.go:25)  MOVSD   X0, """".f(SB)
    0x009c 00156 (flops.go:26)  MOVSD   """".pi(SB), X0
    0x00a4 00164 (flops.go:26)  MOVSD   """".e(SB), X1
    0x00ac 00172 (flops.go:26)  SUBSD   X1, X0
    0x00b0 00176 (flops.go:26)  MOVSD   X0, """".f(SB)
    0x00b8 00184 (flops.go:27)  MOVSD   """".pi(SB), X0
    0x00c0 00192 (flops.go:27)  MOVSD   """".e(SB), X1
    0x00c8 00200 (flops.go:27)  MULSD   X1, X0
    0x00cc 00204 (flops.go:27)  MOVSD   X0, """".f(SB)
    0x00d4 00212 (flops.go:28)  MOVSD   """".pi(SB), X0
    0x00dc 00220 (flops.go:28)  MOVSD   """".e(SB), X1
    0x00e4 00228 (flops.go:28)  DIVSD   X1, X0
    0x00e8 00232 (flops.go:28)  MOVSD   X0, """".f(SB)
    0x00f0 00240 (flops.go:29)  MOVSD   """".pi(SB), X0
    0x00f8 00248 (flops.go:29)  MOVSD   """".e(SB), X1
    0x0100 00256 (flops.go:29)  ADDSD   X1, X0
    0x0104 00260 (flops.go:29)  MOVSD   X0, """".f(SB)
    0x010c 00268 (flops.go:30)  MOVSD   """".pi(SB), X0
    0x0114 00276 (flops.go:30)  MOVSD   """".e(SB), X1
    0x011c 00284 (flops.go:30)  SUBSD   X1, X0
    0x0120 00288 (flops.go:30)  MOVSD   X0, """".f(SB)
    0x0128 00296 (flops.go:31)  MOVSD   """".pi(SB), X0
    0x0130 00304 (flops.go:31)  MOVSD   """".e(SB), X1
    0x0138 00312 (flops.go:31)  MULSD   X1, X0
    0x013c 00316 (flops.go:31)  MOVSD   X0, """".f(SB)
    0x0144 00324 (flops.go:32)  MOVSD   """".pi(SB), X0
    0x014c 00332 (flops.go:32)  MOVSD   """".e(SB), X1
    0x0154 00340 (flops.go:32)  DIVSD   X1, X0
    0x0158 00344 (flops.go:32)  MOVSD   X0, """".f(SB)
    0x0160 00352 (flops.go:33)  MOVSD   """".pi(SB), X0
    0x0168 00360 (flops.go:33)  MOVSD   """".e(SB), X1
    0x0170 00368 (flops.go:33)  ADDSD   X1, X0
    0x0174 00372 (flops.go:33)  MOVSD   X0, """".f(SB)
    0x017c 00380 (flops.go:34)  MOVSD   """".pi(SB), X0
    0x0184 00388 (flops.go:34)  MOVSD   """".e(SB), X1
    0x018c 00396 (flops.go:34)  SUBSD   X1, X0
    0x0190 00400 (flops.go:34)  MOVSD   X0, """".f(SB)
    0x0198 00408 (flops.go:35)  MOVSD   """".pi(SB), X0
    0x01a0 00416 (flops.go:35)  MOVSD   """".e(SB), X1
    0x01a8 00424 (flops.go:35)  MULSD   X1, X0
    0x01ac 00428 (flops.go:35)  MOVSD   X0, """".f(SB)
    0x01b4 00436 (flops.go:36)  MOVSD   """".pi(SB), X0
    0x01bc 00444 (flops.go:36)  MOVSD   """".e(SB), X1
    0x01c4 00452 (flops.go:36)  DIVSD   X1, X0
    0x01c8 00456 (flops.go:36)  MOVSD   X0, """".f(SB)
    0x01d0 00464 (flops.go:37)  MOVSD   """".pi(SB), X0
    0x01d8 00472 (flops.go:37)  MOVSD   """".e(SB), X1
    0x01e0 00480 (flops.go:37)  ADDSD   X1, X0
    0x01e4 00484 (flops.go:37)  MOVSD   X0, """".f(SB)
    0x01ec 00492 (flops.go:38)  MOVSD   """".pi(SB), X0
    0x01f4 00500 (flops.go:38)  MOVSD   """".e(SB), X1
    0x01fc 00508 (flops.go:38)  SUBSD   X1, X0
    0x0200 00512 (flops.go:38)  MOVSD   X0, """".f(SB)
    0x0208 00520 (flops.go:39)  MOVSD   """".pi(SB), X0
    0x0210 00528 (flops.go:39)  MOVSD   """".e(SB), X1
    0x0218 00536 (flops.go:39)  MULSD   X1, X0
    0x021c 00540 (flops.go:39)  MOVSD   X0, """".f(SB)
    0x0224 00548 (flops.go:40)  MOVSD   """".pi(SB), X0
    0x022c 00556 (flops.go:40)  MOVSD   """".e(SB), X1
    0x0234 00564 (flops.go:40)  DIVSD   X1, X0
    0x0238 00568 (flops.go:40)  MOVSD   X0, """".f(SB)
    0x0240 00576 (flops.go:20)  INCQ    AX
    0x0243 00579 (flops.go:20)  NOP
    0x0243 00579 (flops.go:20)  CMPQ    AX, CX
    0x0246 00582 (flops.go:20)  JLT $0, 16
    0x024c 00588 (flops.go:42)  RET
",4962
274,35163475,benchmarkFloatOps,17
275,35163475,"$ go build flops.go && go tool objdump -s benchmarkFloatOps ./flops

TEXT main.benchmarkFloatOps(SB) /home/peter/Dropbox/gopath/src/so/benchmark/flops.go
    flops.go:19 0x401000    488b4c2408      MOVQ 0x8(SP), CX
    flops.go:20 0x401005    31c0            XORL AX, AX
    flops.go:20 0x401007    4839c8          CMPQ CX, AX
    flops.go:20 0x40100a    0f8d3c020000        JGE 0x40124c
    flops.go:21 0x401010    f20f1005e8801b00    REPNE MOVSD_XMM 0x1b80e8(IP), X0
    flops.go:21 0x401018    f20f100dd8801b00    REPNE MOVSD_XMM 0x1b80d8(IP), X1
    flops.go:21 0x401020    f20f58c1        REPNE ADDSD X1, X0
    flops.go:21 0x401024    f20f110544451e00    REPNE MOVSD_XMM X0, 0x1e4544(IP)
    flops.go:22 0x40102c    f20f1005cc801b00    REPNE MOVSD_XMM 0x1b80cc(IP), X0
    flops.go:22 0x401034    f20f100dbc801b00    REPNE MOVSD_XMM 0x1b80bc(IP), X1
    flops.go:22 0x40103c    f20f5cc1        REPNE SUBSD X1, X0
    flops.go:22 0x401040    f20f110528451e00    REPNE MOVSD_XMM X0, 0x1e4528(IP)
    flops.go:23 0x401048    f20f1005b0801b00    REPNE MOVSD_XMM 0x1b80b0(IP), X0
    flops.go:23 0x401050    f20f100da0801b00    REPNE MOVSD_XMM 0x1b80a0(IP), X1
    flops.go:23 0x401058    f20f59c1        REPNE MULSD X1, X0
    flops.go:23 0x40105c    f20f11050c451e00    REPNE MOVSD_XMM X0, 0x1e450c(IP)
    flops.go:24 0x401064    f20f100594801b00    REPNE MOVSD_XMM 0x1b8094(IP), X0
    flops.go:24 0x40106c    f20f100d84801b00    REPNE MOVSD_XMM 0x1b8084(IP), X1
    flops.go:24 0x401074    f20f5ec1        REPNE DIVSD X1, X0
    flops.go:24 0x401078    f20f1105f0441e00    REPNE MOVSD_XMM X0, 0x1e44f0(IP)
    flops.go:25 0x401080    f20f100578801b00    REPNE MOVSD_XMM 0x1b8078(IP), X0
    flops.go:25 0x401088    f20f100d68801b00    REPNE MOVSD_XMM 0x1b8068(IP), X1
    flops.go:25 0x401090    f20f58c1        REPNE ADDSD X1, X0
    flops.go:25 0x401094    f20f1105d4441e00    REPNE MOVSD_XMM X0, 0x1e44d4(IP)
    flops.go:26 0x40109c    f20f10055c801b00    REPNE MOVSD_XMM 0x1b805c(IP), X0
    flops.go:26 0x4010a4    f20f100d4c801b00    REPNE MOVSD_XMM 0x1b804c(IP), X1
    flops.go:26 0x4010ac    f20f5cc1        REPNE SUBSD X1, X0
    flops.go:26 0x4010b0    f20f1105b8441e00    REPNE MOVSD_XMM X0, 0x1e44b8(IP)
    flops.go:27 0x4010b8    f20f100540801b00    REPNE MOVSD_XMM 0x1b8040(IP), X0
    flops.go:27 0x4010c0    f20f100d30801b00    REPNE MOVSD_XMM 0x1b8030(IP), X1
    flops.go:27 0x4010c8    f20f59c1        REPNE MULSD X1, X0
    flops.go:27 0x4010cc    f20f11059c441e00    REPNE MOVSD_XMM X0, 0x1e449c(IP)
    flops.go:28 0x4010d4    f20f100524801b00    REPNE MOVSD_XMM 0x1b8024(IP), X0
    flops.go:28 0x4010dc    f20f100d14801b00    REPNE MOVSD_XMM 0x1b8014(IP), X1
    flops.go:28 0x4010e4    f20f5ec1        REPNE DIVSD X1, X0
    flops.go:28 0x4010e8    f20f110580441e00    REPNE MOVSD_XMM X0, 0x1e4480(IP)
    flops.go:29 0x4010f0    f20f100508801b00    REPNE MOVSD_XMM 0x1b8008(IP), X0
    flops.go:29 0x4010f8    f20f100df87f1b00    REPNE MOVSD_XMM 0x1b7ff8(IP), X1
    flops.go:29 0x401100    f20f58c1        REPNE ADDSD X1, X0
    flops.go:29 0x401104    f20f110564441e00    REPNE MOVSD_XMM X0, 0x1e4464(IP)
    flops.go:30 0x40110c    f20f1005ec7f1b00    REPNE MOVSD_XMM 0x1b7fec(IP), X0
    flops.go:30 0x401114    f20f100ddc7f1b00    REPNE MOVSD_XMM 0x1b7fdc(IP), X1
    flops.go:30 0x40111c    f20f5cc1        REPNE SUBSD X1, X0
    flops.go:30 0x401120    f20f110548441e00    REPNE MOVSD_XMM X0, 0x1e4448(IP)
    flops.go:31 0x401128    f20f1005d07f1b00    REPNE MOVSD_XMM 0x1b7fd0(IP), X0
    flops.go:31 0x401130    f20f100dc07f1b00    REPNE MOVSD_XMM 0x1b7fc0(IP), X1
    flops.go:31 0x401138    f20f59c1        REPNE MULSD X1, X0
    flops.go:31 0x40113c    f20f11052c441e00    REPNE MOVSD_XMM X0, 0x1e442c(IP)
    flops.go:32 0x401144    f20f1005b47f1b00    REPNE MOVSD_XMM 0x1b7fb4(IP), X0
    flops.go:32 0x40114c    f20f100da47f1b00    REPNE MOVSD_XMM 0x1b7fa4(IP), X1
    flops.go:32 0x401154    f20f5ec1        REPNE DIVSD X1, X0
    flops.go:32 0x401158    f20f110510441e00    REPNE MOVSD_XMM X0, 0x1e4410(IP)
    flops.go:33 0x401160    f20f1005987f1b00    REPNE MOVSD_XMM 0x1b7f98(IP), X0
    flops.go:33 0x401168    f20f100d887f1b00    REPNE MOVSD_XMM 0x1b7f88(IP), X1
    flops.go:33 0x401170    f20f58c1        REPNE ADDSD X1, X0
    flops.go:33 0x401174    f20f1105f4431e00    REPNE MOVSD_XMM X0, 0x1e43f4(IP)
    flops.go:34 0x40117c    f20f10057c7f1b00    REPNE MOVSD_XMM 0x1b7f7c(IP), X0
    flops.go:34 0x401184    f20f100d6c7f1b00    REPNE MOVSD_XMM 0x1b7f6c(IP), X1
    flops.go:34 0x40118c    f20f5cc1        REPNE SUBSD X1, X0
    flops.go:34 0x401190    f20f1105d8431e00    REPNE MOVSD_XMM X0, 0x1e43d8(IP)
    flops.go:35 0x401198    f20f1005607f1b00    REPNE MOVSD_XMM 0x1b7f60(IP), X0
    flops.go:35 0x4011a0    f20f100d507f1b00    REPNE MOVSD_XMM 0x1b7f50(IP), X1
    flops.go:35 0x4011a8    f20f59c1        REPNE MULSD X1, X0
    flops.go:35 0x4011ac    f20f1105bc431e00    REPNE MOVSD_XMM X0, 0x1e43bc(IP)
    flops.go:36 0x4011b4    f20f1005447f1b00    REPNE MOVSD_XMM 0x1b7f44(IP), X0
    flops.go:36 0x4011bc    f20f100d347f1b00    REPNE MOVSD_XMM 0x1b7f34(IP), X1
    flops.go:36 0x4011c4    f20f5ec1        REPNE DIVSD X1, X0
    flops.go:36 0x4011c8    f20f1105a0431e00    REPNE MOVSD_XMM X0, 0x1e43a0(IP)
    flops.go:37 0x4011d0    f20f1005287f1b00    REPNE MOVSD_XMM 0x1b7f28(IP), X0
    flops.go:37 0x4011d8    f20f100d187f1b00    REPNE MOVSD_XMM 0x1b7f18(IP), X1
    flops.go:37 0x4011e0    f20f58c1        REPNE ADDSD X1, X0
    flops.go:37 0x4011e4    f20f110584431e00    REPNE MOVSD_XMM X0, 0x1e4384(IP)
    flops.go:38 0x4011ec    f20f10050c7f1b00    REPNE MOVSD_XMM 0x1b7f0c(IP), X0
    flops.go:38 0x4011f4    f20f100dfc7e1b00    REPNE MOVSD_XMM 0x1b7efc(IP), X1
    flops.go:38 0x4011fc    f20f5cc1        REPNE SUBSD X1, X0
    flops.go:38 0x401200    f20f110568431e00    REPNE MOVSD_XMM X0, 0x1e4368(IP)
    flops.go:39 0x401208    f20f1005f07e1b00    REPNE MOVSD_XMM 0x1b7ef0(IP), X0
    flops.go:39 0x401210    f20f100de07e1b00    REPNE MOVSD_XMM 0x1b7ee0(IP), X1
    flops.go:39 0x401218    f20f59c1        REPNE MULSD X1, X0
    flops.go:39 0x40121c    f20f11054c431e00    REPNE MOVSD_XMM X0, 0x1e434c(IP)
    flops.go:40 0x401224    f20f1005d47e1b00    REPNE MOVSD_XMM 0x1b7ed4(IP), X0
    flops.go:40 0x40122c    f20f100dc47e1b00    REPNE MOVSD_XMM 0x1b7ec4(IP), X1
    flops.go:40 0x401234    f20f5ec1        REPNE DIVSD X1, X0
    flops.go:40 0x401238    f20f110530431e00    REPNE MOVSD_XMM X0, 0x1e4330(IP)
    flops.go:20 0x401240    48ffc0          INCQ AX
    flops.go:20 0x401243    4839c8          CMPQ CX, AX
    flops.go:20 0x401246    0f8cc4fdffff        JL 0x401010
    flops.go:42 0x40124c    c3          RET
",6720
276,35202961,"package main

import (
    ""encoding/json""
    ""fmt""
)

type PublicKey struct {
    name string
    price string
}

type KeysResponse struct {
    Collection []PublicKey
}

func main() {
    s := `[{""name"":""Galaxy Nexus"", ""price"":""3460.00""},{""name"":""Galaxy Nexus"", ""price"":""3460.00""}]`

    keys := make([]PublicKey,0)
    err := json.Unmarshal([]byte(s), &keys)
    if err == nil {
        fmt.Printf(""%+v\n"", keys)
    } else {
        fmt.Println(err)
        fmt.Printf(""%+v\n"", keys)
    }
}
",497
277,35202961,[{name: price:}],16
278,35202961,"[{""id"":694476444991229955,""id_str"":""694476444991229955"",""text"":""Got it"",""sender"":{""id"":1690262984,""id_str"":""1690262984"",""name"":""Ashok Kumar T"",""screen_name"":""Ashok_kumar_T"",""location"":""Trivandrum"",""description"":"""",""url"":null,""entities"":{""description"":{""urls"":[]}},""protected"":false,""followers_count"":68,""friends_count"":32,""listed_count"":0,""created_at"":""Thu Aug 22 06:52:53 +0000 2013"",""favourites_count"":5,""utc_offset"":19800,""time_zone"":""Chennai"",""geo_enabled"":true,""verified"":false,""statuses_count"":124,""lang"":""en"",""contributors_enabled"":false,""is_translator"":false,""is_translation_enabled"":false,""profile_background_color"":""131516"",""profile_background_image_url"":""http:\/\/abs.twimg.com\/images\/themes\/theme14\/bg.gif"",""profile_background_image_url_https"":""https:\/\/abs.twimg.com\/images\/themes\/theme14\/bg.gif"",""profile_background_tile"":true,""profile_image_url"":""http:\/\/pbs.twimg.com\/profile_images\/378800000337984382\/5eded5a0c6fda4a85511aff15e5befd9_normal.jpeg"",""profile_image_url_https"":""https:\/\/pbs.twimg.com\/profile_images\/378800000337984382\/5eded5a0c6fda4a85511aff15e5befd9_normal.jpeg"",""profile_banner_url"":""https:\/\/pbs.twimg.com\/profile_banners\/1690262984\/1429709252"",""profile_link_color"":""009999"",""profile_sidebar_border_color"":""EEEEEE"",""profile_sidebar_fill_color"":""EFEFEF"",""profile_text_color"":""333333"",""profile_use_background_image"":true,""has_extended_profile"":false,""default_profile"":false,""default_profile_image"":false,""following"":true,""follow_request_sent"":false,""notifications"":false},""sender_id"":1690262984,""sender_id_str"":""1690262984"",""sender_screen_name"":""Ashok_kumar_T"",""recipient"":{""id"":4848598394,""id_str"":""4848598394"",""name"":""Prabhu"",""screen_name"":""prabhu_cfml"",""location"":"""",""description"":"""",""url"":null,""entities"":{""description"":{""urls"":[]}},""protected"":false,""followers_count"":1,""friends_count"":1,""listed_count"":0,""created_at"":""Tue Feb 02 09:25:17 +0000 2016"",""favourites_count"":0,""utc_offset"":null,""time_zone"":null,""geo_enabled"":false,""verified"":false,""statuses_count"":0,""lang"":""en-gb"",""contributors_enabled"":false,""is_translator"":false,""is_translation_enabled"":false,""profile_background_color"":""F5F8FA"",""profile_background_image_url"":null,""profile_background_image_url_https"":null,""profile_background_tile"":false,""profile_image_url"":""http:\/\/abs.twimg.com\/sticky\/default_profile_images\/default_profile_3_normal.png"",""profile_image_url_https"":""https:\/\/abs.twimg.com\/sticky\/default_profile_images\/default_profile_3_normal.png"",""profile_link_color"":""2B7BB9"",""profile_sidebar_border_color"":""C0DEED"",""profile_sidebar_fill_color"":""DDEEF6"",""profile_text_color"":""333333"",""profile_use_background_image"":true,""has_extended_profile"":false,""default_profile"":true,""default_profile_image"":true,""following"":false,""follow_request_sent"":false,""notifications"":false},""recipient_id"":4848598394,""recipient_id_str"":""4848598394"",""recipient_screen_name"":""prabhu_cfml"",""created_at"":""Tue Feb 02 11:04:21 +0000 2016"",""entities"":{""hashtags"":[],""symbols"":[],""user_mentions"":[],""urls"":[]}},{""id"":694476425793916931,""id_str"":""694476425793916931"",""text"":""Hi"",""sender"":{""id"":1690262984,""id_str"":""1690262984"",""name"":""Ashok Kumar T"",""screen_name"":""Ashok_kumar_T"",""location"":""Trivandrum"",""description"":"""",""url"":null,""entities"":{""description"":{""urls"":[]}},""protected"":false,""followers_count"":68,""friends_count"":32,""listed_count"":0,""created_at"":""Thu Aug 22 06:52:53 +0000 2013"",""favourites_count"":5,""utc_offset"":19800,""time_zone"":""Chennai"",""geo_enabled"":true,""verified"":false,""statuses_count"":124,""lang"":""en"",""contributors_enabled"":false,""is_translator"":false,""is_translation_enabled"":false,""profile_background_color"":""131516"",""profile_background_image_url"":""http:\/\/abs.twimg.com\/images\/themes\/theme14\/bg.gif"",""profile_background_image_url_https"":""https:\/\/abs.twimg.com\/images\/themes\/theme14\/bg.gif"",""profile_background_tile"":true,""profile_image_url"":""http:\/\/pbs.twimg.com\/profile_images\/378800000337984382\/5eded5a0c6fda4a85511aff15e5befd9_normal.jpeg"",""profile_image_url_https"":""https:\/\/pbs.twimg.com\/profile_images\/378800000337984382\/5eded5a0c6fda4a85511aff15e5befd9_normal.jpeg"",""profile_banner_url"":""https:\/\/pbs.twimg.com\/profile_banners\/1690262984\/1429709252"",""profile_link_color"":""009999"",""profile_sidebar_border_color"":""EEEEEE"",""profile_sidebar_fill_color"":""EFEFEF"",""profile_text_color"":""333333"",""profile_use_background_image"":true,""has_extended_profile"":false,""default_profile"":false,""default_profile_image"":false,""following"":true,""follow_request_sent"":false,""notifications"":false},""sender_id"":1690262984,""sender_id_str"":""1690262984"",""sender_screen_name"":""Ashok_kumar_T"",""recipient"":{""id"":4848598394,""id_str"":""4848598394"",""name"":""Prabhu"",""screen_name"":""prabhu_cfml"",""location"":"""",""description"":"""",""url"":null,""entities"":{""description"":{""urls"":[]}},""protected"":false,""followers_count"":1,""friends_count"":1,""listed_count"":0,""created_at"":""Tue Feb 02 09:25:17 +0000 2016"",""favourites_count"":0,""utc_offset"":null,""time_zone"":null,""geo_enabled"":false,""verified"":false,""statuses_count"":0,""lang"":""en-gb"",""contributors_enabled"":false,""is_translator"":false,""is_translation_enabled"":false,""profile_background_color"":""F5F8FA"",""profile_background_image_url"":null,""profile_background_image_url_https"":null,""profile_background_tile"":false,""profile_image_url"":""http:\/\/abs.twimg.com\/sticky\/default_profile_images\/default_profile_3_normal.png"",""profile_image_url_https"":""https:\/\/abs.twimg.com\/sticky\/default_profile_images\/default_profile_3_normal.png"",""profile_link_color"":""2B7BB9"",""profile_sidebar_border_color"":""C0DEED"",""profile_sidebar_fill_color"":""DDEEF6"",""profile_text_color"":""333333"",""profile_use_background_image"":true,""has_extended_profile"":false,""default_profile"":true,""default_profile_image"":true,""following"":false,""follow_request_sent"":false,""notifications"":false},""recipient_id"":4848598394,""recipient_id_str"":""4848598394"",""recipient_screen_name"":""prabhu_cfml"",""created_at"":""Tue Feb 02 11:04:17 +0000 2016"",""entities"":{""hashtags"":[],""symbols"":[],""user_mentions"":[],""urls"":[]}}]
",6036
279,35254401,"func (controller CarController) GetIndex(c *gin.Context) {
   carList:=controller.carService.Find(&bson.M{})
   c.JSON(http.StatusOK, &carList)
   //fmt.Println(carList)
}
",172
280,35254401,"func (r CarService) Find(query *bson.M) (cars []models.Car) {
   session, _ := mgo.Dial(r.uri)
   defer session.Close()
   session.SetSafe(&mgo.Safe{})
   collection := session.DB(r.dbName).C(r.collectionName)

    collection.Find(query).All(&cars)

    fmt.Println(cars)
    return cars

}
",291
281,35254401,"router.GET(""/car"",carBaseController.GetIndex)
",46
282,35254401," [
   {
      ""Id"":""56b636688a47a60aa8601f57"",
      ""model"":""ayman"",
      ""brand"":""islamic"",
      ""CreatedAt"":6248241353327640577
   },
   {
      ""Id"":""56b63b658a47a605dc9e8e38"",
      ""model"":""ayman"",
      ""brand"":""islamic"",
      ""CreatedAt"":6248246838000877569
   },
   {
      ""Id"":""56b642728a47a62364f3e0e0"",
      ""model"":""ayman 0"",
      ""brand"":""islamic 0"",
      ""CreatedAt"":6248254590416846849
   },
   {
      ""Id"":""56b642728a47a62364f3e0e1"",
      ""model"":""ayman 1"",
      ""brand"":""islamic 1"",
      ""CreatedAt"":6248254590416846850
   },
   {
      ""Id"":""56b642728a47a62364f3e0e2"",
      ""model"":""ayman 2"",
      ""brand"":""islamic 2"",
      ""CreatedAt"":6248254590416846851
   },
   {
      ""Id"":""56b642728a47a62364f3e0e3"",
      ""model"":""ayman 3"",
      ""brand"":""islamic 3"",
      ""CreatedAt"":6248254590416846852
   },
   {
      ""Id"":""56b642728a47a62364f3e0e4"",
      ""model"":""ayman 4"",
      ""brand"":""islamic 4"",
      ""CreatedAt"":6248254590416846853
   },
   {
      ""Id"":""56b642728a47a62364f3e0e5"",
      ""model"":""ayman 5"",
      ""brand"":""islamic 5"",
      ""CreatedAt"":6248254590416846854
   },
   {
      ""Id"":""56b642728a47a62364f3e0e6"",
      ""model"":""ayman 6"",
      ""brand"":""islamic 6"",
      ""CreatedAt"":6248254590416846855
   },
   {
      ""Id"":""56b642728a47a62364f3e0e7"",
      ""model"":""ayman 7"",
      ""brand"":""islamic 7"",
      ""CreatedAt"":6248254590416846856
   },
   {
      ""Id"":""56b642728a47a62364f3e0e8"",
      ""model"":""ayman 8"",
      ""brand"":""islamic 8"",
      ""CreatedAt"":6248254590416846857
   },
   {
      ""Id"":""56b642728a47a62364f3e0e9"",
      ""model"":""ayman 9"",
      ""brand"":""islamic 9"",
      ""CreatedAt"":6248254590416846858
   },
   {
      ""Id"":""56b642728a47a62364f3e0ea"",
      ""model"":""ayman 10"",
      ""brand"":""islamic 10"",
      ""CreatedAt"":6248254590416846859
   },
   {
      ""Id"":""56b642728a47a62364f3e0eb"",
      ""model"":""ayman 11"",
      ""brand"":""islamic 11"",
      ""CreatedAt"":6248254590416846860
   },
   {
      ""Id"":""56b642728a47a62364f3e0ec"",
      ""model"":""ayman 12"",
      ""brand"":""islamic 12"",
      ""CreatedAt"":6248254590416846861
   },
   {
      ""Id"":""56b642728a47a62364f3e0ed"",
      ""model"":""ayman 13"",
      ""brand"":""islamic 13"",
      ""CreatedAt"":6248254590416846862
   },
   {
      ""Id"":""56b642728a47a62364f3e0ee"",
      ""model"":""ayman 14"",
      ""brand"":""islamic 14"",
      ""CreatedAt"":6248254590416846863
   },
   {
      ""Id"":""56b642728a47a62364f3e0ef"",
      ""model"":""ayman 15"",
      ""brand"":""islamic 15"",
      ""CreatedAt"":6248254590416846864
   },
   {
      ""Id"":""56b642728a47a62364f3e0f0"",
      ""model"":""ayman 16"",
      ""brand"":""islamic 16"",
      ""CreatedAt"":6248254590416846865
   },
   {
      ""Id"":""56b642728a47a62364f3e0f1"",
      ""model"":""ayman 17"",
      ""brand"":""islamic 17"",
      ""CreatedAt"":6248254590416846866
   },
   {
      ""Id"":""56b642728a47a62364f3e0f2"",
      ""model"":""ayman 18"",
      ""brand"":""islamic 18"",
      ""CreatedAt"":6248254590416846867
   },
   {
      ""Id"":""56b642728a47a62364f3e0f3"",
      ""model"":""ayman 19"",
      ""brand"":""islamic 19"",
      ""CreatedAt"":6248254590416846868
   },
   {
      ""Id"":""56b642728a47a62364f3e0f4"",
      ""model"":""ayman 20"",
      ""brand"":""islamic 20"",
      ""CreatedAt"":6248254590416846869
   },
   {
      ""Id"":""56b642728a47a62364f3e0f5"",
      ""model"":""ayman 21"",
      ""brand"":""islamic 21"",
      ""CreatedAt"":6248254590416846870
   },
   {
      ""Id"":""56b642728a47a62364f3e0f6"",
      ""model"":""ayman 22"",
      ""brand"":""islamic 22"",
      ""CreatedAt"":6248254590416846871
   },
   {
      ""Id"":""56b642728a47a62364f3e0f7"",
      ""model"":""ayman 23"",
      ""brand"":""islamic 23"",
      ""CreatedAt"":6248254590416846872
   },
   {
      ""Id"":""56b642728a47a62364f3e0f8"",
      ""model"":""ayman 24"",
      ""brand"":""islamic 24"",
      ""CreatedAt"":6248254590416846873
   },
   {
      ""Id"":""56b642728a47a62364f3e0f9"",
      ""model"":""ayman 25"",
      ""brand"":""islamic 25"",
      ""CreatedAt"":6248254590416846874
   },
   {
      ""Id"":""56b642728a47a62364f3e0fa"",
      ""model"":""ayman 26"",
      ""brand"":""islamic 26"",
      ""CreatedAt"":6248254590416846875
   },
   {
      ""Id"":""56b642728a47a62364f3e0fb"",
      ""model"":""ayman 27"",
      ""brand"":""islamic 27"",
      ""CreatedAt"":6248254590416846876
   },
   {
      ""Id"":""56b642728a47a62364f3e0fc"",
      ""model"":""ayman 28"",
      ""brand"":""islamic 28"",
      ""CreatedAt"":6248254590416846877
   },
   {
      ""Id"":""56b642728a47a62364f3e0fd"",
      ""model"":""ayman 29"",
      ""brand"":""islamic 29"",
      ""CreatedAt"":6248254590416846878
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13ef9"",
      ""model"":""ayman 0"",
      ""brand"":""islamic 0"",
      ""CreatedAt"":6248431092097875969
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13efa"",
      ""model"":""ayman 1"",
      ""brand"":""islamic 1"",
      ""CreatedAt"":6248431092097875970
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13efb"",
      ""model"":""ayman 2"",
      ""brand"":""islamic 2"",
      ""CreatedAt"":6248431092097875971
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13efc"",
      ""model"":""ayman 3"",
      ""brand"":""islamic 3"",
      ""CreatedAt"":6248431092097875972
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13efd"",
      ""model"":""ayman 4"",
      ""brand"":""islamic 4"",
      ""CreatedAt"":6248431092097875973
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13efe"",
      ""model"":""ayman 5"",
      ""brand"":""islamic 5"",
      ""CreatedAt"":6248431092097875974
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13eff"",
      ""model"":""ayman 6"",
      ""brand"":""islamic 6"",
      ""CreatedAt"":6248431092097875975
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f00"",
      ""model"":""ayman 7"",
      ""brand"":""islamic 7"",
      ""CreatedAt"":6248431092097875976
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f01"",
      ""model"":""ayman 8"",
      ""brand"":""islamic 8"",
      ""CreatedAt"":6248431092097875977
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f02"",
      ""model"":""ayman 9"",
      ""brand"":""islamic 9"",
      ""CreatedAt"":6248431092097875978
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f03"",
      ""model"":""ayman 10"",
      ""brand"":""islamic 10"",
      ""CreatedAt"":6248431092097875979
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f04"",
      ""model"":""ayman 11"",
      ""brand"":""islamic 11"",
      ""CreatedAt"":6248431092097875980
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f05"",
      ""model"":""ayman 12"",
      ""brand"":""islamic 12"",
      ""CreatedAt"":6248431092097875981
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f06"",
      ""model"":""ayman 13"",
      ""brand"":""islamic 13"",
      ""CreatedAt"":6248431092097875982
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f07"",
      ""model"":""ayman 14"",
      ""brand"":""islamic 14"",
      ""CreatedAt"":6248431092097875983
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f08"",
      ""model"":""ayman 15"",
      ""brand"":""islamic 15"",
      ""CreatedAt"":6248431092097875984
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f09"",
      ""model"":""ayman 16"",
      ""brand"":""islamic 16"",
      ""CreatedAt"":6248431092097875985
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f0a"",
      ""model"":""ayman 17"",
      ""brand"":""islamic 17"",
      ""CreatedAt"":6248431092097875986
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f0b"",
      ""model"":""ayman 18"",
      ""brand"":""islamic 18"",
      ""CreatedAt"":6248431092097875987
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f0c"",
      ""model"":""ayman 19"",
      ""brand"":""islamic 19"",
      ""CreatedAt"":6248431092097875988
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f0d"",
      ""model"":""ayman 20"",
      ""brand"":""islamic 20"",
      ""CreatedAt"":6248431092097875989
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f0e"",
      ""model"":""ayman 21"",
      ""brand"":""islamic 21"",
      ""CreatedAt"":6248431092097875990
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f0f"",
      ""model"":""ayman 22"",
      ""brand"":""islamic 22"",
      ""CreatedAt"":6248431092097875991
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f10"",
      ""model"":""ayman 23"",
      ""brand"":""islamic 23"",
      ""CreatedAt"":6248431092097875992
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f11"",
      ""model"":""ayman 24"",
      ""brand"":""islamic 24"",
      ""CreatedAt"":6248431092097875993
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f12"",
      ""model"":""ayman 25"",
      ""brand"":""islamic 25"",
      ""CreatedAt"":6248431092097875994
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f13"",
      ""model"":""ayman 26"",
      ""brand"":""islamic 26"",
      ""CreatedAt"":6248431092097875995
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f14"",
      ""model"":""ayman 27"",
      ""brand"":""islamic 27"",
      ""CreatedAt"":6248431092097875996
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f15"",
      ""model"":""ayman 28"",
      ""brand"":""islamic 28"",
      ""CreatedAt"":6248431092097875997
   },
   {
      ""Id"":""56b6e2f98a47a60d50c13f16"",
      ""model"":""ayman 29"",
      ""brand"":""islamic 29"",
      ""CreatedAt"":6248431092097875998
   }
]
",8756
283,35452424,"package main

import (
    ""flag""
    ""fmt""
    ""github.com/goraft/raft""
    ""github.com/goraft/raftd/command""
    ""github.com/goraft/raftd/server""
    ""log""
    ""math/rand""
    ""os""
    ""time""
    ""strconv""
)

var verbose bool
var trace bool
var debug bool
var host string
var port int
var join string

func init() {
    flag.Parse()
    flag.BoolVar(&verbose, ""v"", false, ""verbose logging"")
    flag.BoolVar(&trace, ""trace"", false, ""Raft trace debugging"")
    flag.BoolVar(&debug, ""debug"", false, ""Raft debugging"")
    flag.StringVar(&host, ""h"", ""localhost"", ""hostname"")
    p,_:=strconv.Atoi(flag.Arg(1))
    flag.IntVar(&port, ""p"", p, ""port"")
    flag.StringVar(&join, ""join"", """", ""host:port of leader to join"")
    flag.Usage = func() {
        fmt.Fprintf(os.Stderr, ""Usage: %s [arguments]  \n"", os.Args[0])
        flag.PrintDefaults()
    }
}

func main() {
    log.SetFlags(0)
    flag.Parse()
    if verbose {
        log.Print(""Verbose logging enabled."")
    }
    if trace {
        raft.SetLogLevel(raft.Trace)
        log.Print(""Raft trace debugging enabled."")
    } else if debug {
        raft.SetLogLevel(raft.Debug)
        log.Print(""Raft debugging enabled."")
    }

    rand.Seed(time.Now().UnixNano())

    // Setup commands.
    raft.RegisterCommand(&command.WriteCommand{})

    // Set the data directory.
    if flag.NArg() == 0 {
        flag.Usage()
        log.Fatal(""Data path argument required"")
    }
    path := flag.Arg(0)
    if err := os.MkdirAll(path, 0744); err != nil {
        log.Fatalf(""Unable to create path: %v"", err)
    }

    log.SetFlags(log.LstdFlags)
    s := server.New(path, host, port)
    log.Fatal(s.ListenAndServe(""localhost:2001""))
    fmt.Println(""I am changing my status"");
}
",1733
284,35452424,"package main

import (
    ""flag""
    ""fmt""
    ""github.com/goraft/raft""
    ""github.com/goraft/raftd/command""
    ""github.com/goraft/raftd/server""
    ""log""
    ""math/rand""
    ""os""
    ""time""
    ""strconv""
)

var verbose bool
var trace bool
var debug bool
var host string
var port int
var join string

func init() {
    flag.Parse()
    flag.BoolVar(&verbose, ""v"", false, ""verbose logging"")
    flag.BoolVar(&trace, ""trace"", false, ""Raft trace debugging"")
    flag.BoolVar(&debug, ""debug"", false, ""Raft debugging"")
    flag.StringVar(&host, ""h"", ""localhost"", ""hostname"")
    p,_:=strconv.Atoi(flag.Arg(1))
    flag.IntVar(&port, ""p"", p, ""port"")
    flag.StringVar(&join, ""join"", """", ""host:port of leader to join"")
    flag.Usage = func() {
        fmt.Fprintf(os.Stderr, ""Usage: %s [arguments]  \n"", os.Args[0])
        flag.PrintDefaults()
    }
}

func main() {
    log.SetFlags(0)
    flag.Parse()
    if verbose {
        log.Print(""Verbose logging enabled."")
    }
    if trace {
        raft.SetLogLevel(raft.Trace)
        log.Print(""Raft trace debugging enabled."")
    } else if debug {
        raft.SetLogLevel(raft.Debug)
        log.Print(""Raft debugging enabled."")
    }

    rand.Seed(time.Now().UnixNano())

    // Setup commands.
    raft.RegisterCommand(&command.WriteCommand{})

    // Set the data directory.
    if flag.NArg() == 0 {
        flag.Usage()
        log.Fatal(""Data path argument required"")
    }
    path := flag.Arg(0)
    if err := os.MkdirAll(path, 0744); err != nil {
        log.Fatalf(""Unable to create path: %v"", err)
    }

    log.SetFlags(log.LstdFlags)
    s := server.New(path, host, port)
    log.Fatal(s.ListenAndServe(join))
}
",1677
285,35452424,"package server

import (
    ""bytes""
    ""encoding/json""
    ""fmt""
    ""github.com/goraft/raft""
    ""github.com/goraft/raftd/command""
    ""github.com/goraft/raftd/db""
    ""github.com/gorilla/mux""
    ""io/ioutil""
    ""log""
    ""math/rand""
    ""net/http""
    ""path/filepath""
    ""sync""
    ""time""
)

// The raftd server is a combination of the Raft server and an HTTP
// server which acts as the transport.
type Server struct {
    name       string
    host       string
    port       int
    path       string
    router     *mux.Router
    raftServer raft.Server
    httpServer *http.Server
    db         *db.DB
    mutex      sync.RWMutex
}

// Creates a new server.
func New(path string, host string, port int) *Server {
    s := &Server{
        host:   host,
        port:   port,
        path:   path,
        db:     db.New(),
        router: mux.NewRouter(),
    }

    // Read existing name or generate a new one.
    if b, err := ioutil.ReadFile(filepath.Join(path, ""name"")); err == nil {
        s.name = string(b)
    } else {
        s.name = fmt.Sprintf(""%07x"", rand.Int())[0:7]
        if err = ioutil.WriteFile(filepath.Join(path, ""name""), []byte(s.name), 0644); err != nil {
            panic(err)
        }
    }

    return s
}

// Returns the connection string.
func (s *Server) connectionString() string {
    return fmt.Sprintf(""http://%s:%d"", s.host, s.port)
}

// Starts the server.
func (s *Server) ListenAndServe(leader string) error {
    var err error

    log.Printf(""Initializing Raft Server: %s"", s.path)

    // Initialize and start Raft server.
    transporter := raft.NewHTTPTransporter(""/raft"", 200*time.Millisecond)
    s.raftServer, err = raft.NewServer(s.name, s.path, transporter, nil, s.db, """")
    if err != nil {
        log.Fatal(err)
    }
    transporter.Install(s.raftServer, s)
    s.raftServer.Start()

    if leader != """" {
        // Join to leader if specified.

        log.Println(""Attempting to join leader:"", leader)

        if !s.raftServer.IsLogEmpty() {
            log.Fatal(""Cannot join with an existing log"")
        }
        if err := s.Join(leader); err != nil {
            log.Fatal(err)
        }

    } else if s.raftServer.IsLogEmpty() {
        // Initialize the server by joining itself.

        log.Println(""Initializing new cluster"")

        _, err := s.raftServer.Do(&raft.DefaultJoinCommand{
            Name:             s.raftServer.Name(),
            ConnectionString: s.connectionString(),
        })
        if err != nil {
            log.Fatal(err)
        }

    } else {
        log.Println(""Recovered from log"")
    }

    log.Println(""Initializing HTTP server"")

    // Initialize and start HTTP server.
    s.httpServer = &http.Server{
        Addr:    fmt.Sprintf("":%d"", s.port),
        Handler: s.router,
    }

    s.router.HandleFunc(""/db/{key}"", s.readHandler).Methods(""GET"")
    s.router.HandleFunc(""/db/{key}"", s.writeHandler).Methods(""POST"")
    s.router.HandleFunc(""/join"", s.joinHandler).Methods(""POST"")

    log.Println(""Listening at:"", s.connectionString())

    return s.httpServer.ListenAndServe()
}

// This is a hack around Gorilla mux not providing the correct net/http
// HandleFunc() interface.
func (s *Server) HandleFunc(pattern string, handler func(http.ResponseWriter, *http.Request)) {
    s.router.HandleFunc(pattern, handler)
}

// Joins to the leader of an existing cluster.
func (s *Server) Join(leader string) error {
    command := &raft.DefaultJoinCommand{
        Name:     s.raftServer.Name(),
        ConnectionString: s.connectionString(),
    }

    var b bytes.Buffer
    json.NewEncoder(&b).Encode(command)
    resp, err := http.Post(fmt.Sprintf(""http://%s/join"", leader), ""application/json"", &b)
    if err != nil {
        return err
    }
    resp.Body.Close()

    return nil
}

func (s *Server) joinHandler(w http.ResponseWriter, req *http.Request) {
    command := &raft.DefaultJoinCommand{}

    if err := json.NewDecoder(req.Body).Decode(&command); err != nil {
        http.Error(w, err.Error(), http.StatusInternalServerError)
        return
    }
    if _, err := s.raftServer.Do(command); err != nil {
        http.Error(w, err.Error(), http.StatusInternalServerError)
        return
    }
}

func (s *Server) readHandler(w http.ResponseWriter, req *http.Request) {
    vars := mux.Vars(req)
    value := s.db.Get(vars[""key""])
    w.Write([]byte(value))
}

func (s *Server) writeHandler(w http.ResponseWriter, req *http.Request) {
    vars := mux.Vars(req)

    // Read the value from the POST body.
    b, err := ioutil.ReadAll(req.Body)
    if err != nil {
        w.WriteHeader(http.StatusBadRequest)
        return
    }
    value := string(b)

    // Execute the command against the Raft server.
    _, err = s.raftServer.Do(command.NewWriteCommand(vars[""key""], value))
    if err != nil {
        http.Error(w, err.Error(), http.StatusBadRequest)
    }
}
",4905
286,35565945,"                                                     ;(invert-face 'default)   ;;weird with nw mode
                                                     ;(blink-cursor-mode 0)
(load-file ""/home/sudeep/.emacs.d/shortcuts.el"")
;; (defadvice ido-find-file (after find-file-sudo activate)
;;   ""Find file as root if necessary.""
;;   (unless (and buffer-file-name
;;                (file-writable-p buffer-file-name))
;;     (find-alternate-file (concat ""/sudo:root@localhost:"" buffer-file-name))))
                                                     ;(setq debug-on-error t)

(setq custom-file ""/home/sudeep/.emacs.d/custom.el"")
(load custom-file 'noerror)

(iswitchb-mode 1)
                                                     ;disables scroll bar
(if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))
(menu-bar-mode -1)
(tool-bar-mode -1)


(add-to-list 'auto-mode-alist '(""\\.h\\'"" . c++-mode))    ;.h files are treated as c files instaed of c++ in emacs. Remove it!

;; -- laoding images in org mode
;; enable image mode first
(setq-default iimage-mode t)


;Splitted window switching with C-ESC

(global-set-key (kbd """") 'other-window)
;     

;hiding code(hiding the contents of a function)C-c @ C-h and C-c @ C-s


(add-hook 'c++-mode-common-hook #'hs-minor-mode)
(add-hook 'c-mode-common-hook #'hs-minor-mode)
(add-hook 'python-mode-common-hook #'hs-minor-mode)
(add-hook 'elisp-mode-common-hook #'hs-minor-mode)
(add-hook 'java-mode-common-hook #'hs-minor-mode)


(blink-cursor-mode -1)

;miscellaneous
(setq max-mini-window-height .70)
(which-function-mode)




(setq locale-coding-system 'utf-8)
(set-terminal-coding-system 'utf-8-unix)
(set-keyboard-coding-system 'utf-8)
(set-selection-coding-system 'utf-8)
(prefer-coding-system 'utf-8)




;; (load-file ""~/.emacs.d/tabbar.el"")
;; (require 'cl)
;; (when (require 'tabbar nil t)
;;   (setq tabbar-buffer-groups-function
;;        (lambda (b) (list ""All Buffers"")))
;;   (setq tabbar-buffer-list-function
;;        (lambda ()
;;           (remove-if
;;            (lambda(buffer)
;;               (find (aref (buffer-name buffer) 0) "" *""))
;;            (buffer-list))))
;;   (tabbar-mode))

;; (setq tabbar-buffer-groups-function
;;      (lambda ()
;;        (list ""All"")))
;; (require 'tabbar)
;; (tabbar-mode 1)
;; (global-set-key [(C-S-iso-lefttab)] 'tabbar-backward)
;; (global-set-key (kbd ""C-"") 'tabbar-forward)



                                                     ;bookmarks
(global-set-key (kbd ""C-c C-z"") 'bookmark-set)
(global-set-key (kbd ""C-c C-j"") 'bookmark-jump)
(global-set-key (kbd ""C-c C-q"") 'bookmark-delete)
;(global-set-key (kbd ""C-!"") 'gtags-pop-stack)

(defadvice bookmark-jump (after bookmark-jump activate)
  (let ((latest (bookmark-get-bookmark bookmark)))
    (setq bookmark-alist (delq latest bookmark-alist))
    (add-to-list 'bookmark-alist latest)))

(display-time-mode 1)

;highlighting  todo,fixme, bug

(add-hook 'prog-mode-common-hook
             (lambda ()
                (font-lock-add-keywords nil
                                                '((""\\<\\(FIXME\\|TODO\\|BUG\\):"" 1 font-lock-warning-face t)))))


;; (load-file ""/home/sudeep/.emacs.d/sr-speedbar.el"")
;; (require 'sr-speedbar)
;; (make-face 'speedbar-face)
;; ;(set-face-font 'speedbar-face ""8"")
;; (setq speedbar-mode-hook '(lambda () (buffer-face-set 'speedbar-face)))


;; (speedbar-add-supported-extension "".c"")
;; (speedbar-add-supported-extension "".c++"")
;; (speedbar-add-supported-extension "".s"")
;; (speedbar-add-supported-extension "".asm"")
;; (speedbar-add-supported-extension "".java"")
;; (speedbar-add-supported-extension "".py"")

(setq c-default-style ""linux""
        c-basic-offset 3)

                                                     ;indentation customization(replacing tabs by 4 spaces)
(setq-default c-basic-offset 3
                  tab-width 3
                  indent-tabs-mode t)


(defun dos2unix ()
  ""Replace DOS eolns CR LF with Unix eolns CR""
  (interactive)
    (goto-char (point-min))
      (while (search-forward ""\r"" nil t) (replace-match """")))


;(set-face-attribute 'default nil :height 105)

(setq url-proxy-services
   '((""no_proxy"" . ""^\\(localhost\\|10.*\\)"")
     (""http"" . ""10.3.100.207:8080"")
     (""https"" . ""10.3.100.207:8080"")
      (""ftp"" . ""10.3.100.207:8080"")
      (""socks"" . ""10.3.100.207:8080"")))



(require 'package)
(setq package-archives '((""gnu"" . ""http://elpa.gnu.org/packages/"")
                         (""marmalade"" . ""http://marmalade-repo.org/packages/"")
                         (""melpa"" . ""http://melpa.milkbox.net/packages/"")
                                 (""elpa"" . ""http://tromey.com/elpa/"")))
(package-initialize)
(when (not package-archive-contents)
  (package-refresh-contents))
(add-to-list 'load-path ""/home/sudeep/.emacs.d/"")



(defun djcb-opacity-modify (&optional dec)
  ""modify the transparency of the emacs frame; if DEC is t,
    decrease the transparency, otherwise increase it in 10%-steps""
  (let* ((alpha-or-nil (frame-parameter nil 'alpha)) ; nil before setting
          (oldalpha (if alpha-or-nil alpha-or-nil 100))
          (newalpha (if dec (- oldalpha 10) (+ oldalpha 10))))
    (when (and (>= newalpha frame-alpha-lower-limit) (<= newalpha 100))
      (modify-frame-parameters nil (list (cons 'alpha newalpha))))))

 ;; C-8 will increase opacity (== decrease transparency)
 ;; C-9 will decrease opacity (== increase transparency
 ;; C-0 will returns the state to normal
(global-set-key (kbd ""C-8"") '(lambda()(interactive)(djcb-opacity-modify)))
(global-set-key (kbd ""C-9"") '(lambda()(interactive)(djcb-opacity-modify t)))
(global-set-key (kbd ""C-0"") '(lambda()(interactive)
                               (modify-frame-parameters nil `((alpha . 10)))))



(setq large-file-warning-threshold 100000000)


;(add-to-list 'custom-theme-load-path ""~/.emacs.d/themes"")
;(load-theme 'junio t)
;(load-theme 'zenburn t)

;(load-file ""~/.emacs.d/arjen-theme.el"")

                                                     ;(load-file ""~/.emacs.d/sanityinc-tomorrow-night-theme.el"")
                                                     ;(set-background-color ""black"")
                                                     ;(require 'color-theme-sanityinc-tomorrow)
                                                     ;(load-theme 'color-theme-sanityinc-tomorrow-black t)
                                                     ;(load-theme 'sanityinc-solarized-dark)


(defun electric-pair ()
  ""If at end of line, insert character pair without surrounding spaces.
   Otherwise, just insert the typed character.""
  (interactive)
  (if (eolp) (let (parens-require-spaces) (insert-pair)) 
    (self-insert-command 1)))

(add-hook 'js-mode-hook
             (lambda ()
                (define-key js-mode-map ""("" 'electric-pair)
                (define-key js-mode-map ""["" 'electric-pair)
                (define-key js-mode-map ""{"" 'electric-pair)))



;;js2-mode setup
                                                     ;(semantic-mode)
                                                     ;(require 'icicles)
                                                     ;(icy-mode t)


;; (add-to-list 'load-path ""/home/sudeep/.emacs.d/elpa/auto-complete-20160107.8/"")  ; Load the default configuration
;; (require 'auto-complete-config)   ; Make sure we can find the dictionaries
;; (add-to-list 'ac-dictionary-directories ""/home/sudeep/.emacs.d/elpa/auto-complete-20160107.8/dict"")          ; Usedictionaries by default
;; (setq-default ac-sources (add-to-list 'ac-sources 'ac-source-dictionary))
;; (global-auto-complete-mode t)
;;                                                   ; Start auto-completion after 2 characters of a word
;; (setq ac-auto-start 2)
;;                                                   ; case sensitivity is important when finding matches
;; (setq ac-ignore-case nil)

;;                                                   ;(autoload 'js2-mode ""js2"" nil t) 

;; (ac-config-default)

;; (set-default 'ac-sources
;;               '(ac-source-abbrev
;;                  ac-source-dictionary
;;                  ac-source-yasnippet
;;                  ac-source-words-in-buffer
;;                  ac-source-words-in-same-mode-buffers
;;                  ac-source-semantic))

;; (dolist (m '(c-mode c++-mode java-mode go-mode))
;;   (add-to-list 'ac-modes m))

;; (global-auto-complete-mode t)
;; ;;yasnippet
;; (add-to-list 'load-path
;;               ""~/.emacs.d/plugins/yasnippet"")
;; (require 'yasnippet)
;;                                                   ;(yas-global-mode 1)

(add-to-list 'auto-mode-alist '(""\\.js$"" . js2-mode))

(js2-imenu-extras-mode)


;; yes or no becomes y or n
(defalias 'yes-or-no-p 'y-or-n-p)

;; ;;yasnippet
;; (yas-global-mode 1)

;; ;; auto-complete
;; (require 'auto-complete-config)
;; (add-to-list 'ac-dictionary-directories ""~/.emacs.d/elpa/auto-complete/dict"")

;; (set-default 'ac-sources
;;              '(ac-source-abbrev
;;                ac-source-dictionary
;;                ac-source-yasnippet
;;                ac-source-words-in-buffer
;;                ac-source-words-in-same-mode-buffers
;;                ac-source-semantic))

;; (ac-config-default)

;; (dolist (m '(c-mode c++-mode java-mode emacs-lisp-mode))
;;   (add-to-list 'ac-modes m))

;; (global-auto-complete-mode t)





(global-aggressive-indent-mode 1)
(add-to-list 'aggressive-indent-excluded-modes 'html-mode)
(ido-mode 1)


;;go-mode
                                                     ;(require 'go-autocomplete)


(require 'company)                                   ; load company mode
                                                     ;(require 'company-go)                                                  ; load company mode go backend
(add-hook 'go-mode-hook (lambda ()
                                  (set (make-local-variable 'company-backends) '(company-go))
                                  (company-mode)))
(setq company-tooltip-limit 20)                      ; bigger popup window
(setq company-idle-delay .1)                         ; decrease delay before autocompletion popup shows
(setq company-echo-delay 0)                          ; remove annoying blinking
(setq company-begin-commands '(self-insert-command)) ; start autocompletion only after typing

(global-company-mode)

;; (eval-after-load ""go-mode""
;;   '(progn
;;      (flycheck-declare-checker go-gofmt
;;                                       ""A Go syntax and style checker using the gofmt utility.""
;;                                       :command '(""gofmt"" source-inplace)
;;                                       :error-patterns '((""^\\(?1:.*\\):\\(?2:[0-9]+\\):\\(?3:[0-9]+\\): \\(?4:.*\\)$"" error))
;;                                       :modes 'go-mode)
;;      (add-to-list 'flycheck-checkers 'go-gofmt)))
                                                     ;(ac-go-expand-arguments-into-snippets)
                                                     ;(add-hook 'go-mode-hook 'flycheck-mode)
",10976
287,35565945,company-complete,16
288,35565945,"Debugger entered--Lisp error: (error ""GOCODE PANIC: Please check your code by \""go build\"""")
  signal(error (""GOCODE PANIC: Please check your code by \""go build\""""))
  error(""GOCODE PANIC: Please check your code by \""go build\"""")
  company-go--candidates()
  company-go(candidates #(""Clien"" 0 5 (fontified t)))
  apply(company-go (candidates #(""Clien"" 0 5 (fontified t))))
  #[0 ""\302 !\203\303   \300\""\207\303\304  \300#\207"" [(candidates #(""Clien"" 0 5 (fontified t))) company-backend functionp apply company--multi-backend-adapter] 4 ""\n\n(fn)""]()
  company-call-backend-raw(candidates #(""Clien"" 0 5 (fontified t)))
  apply(company-call-backend-raw (candidates #(""Clien"" 0 5 (fontified t))))
  company--force-sync(company-call-backend-raw (candidates #(""Clien"" 0 5 (fontified t))) company-go)
  company-call-backend(candidates #(""Clien"" 0 5 (fontified t)))
  company--fetch-candidates(#(""Clien"" 0 5 (fontified t)))
  company-calculate-candidates(#(""Clien"" 0 5 (fontified t)))
  #[0 ""\n\203   \nC\202\n\211\205\233\211@\3009\204\306!\203<9\2036\307N\310=\2046\307N?\205@\311!\205@\312!\202@\313\312\""\240\210\300@\203\224\314\300@!\203\216\315\300@!\211\301\316\f!\240\210\301@:\204w
\203i\317\320!\210\301@\310=\203\216\321\322!\210\202\216
\203\300@\323\301@!\210\324\325\326 \""\210\327\330!\210\331\332\301@\""\210A\266\202\202\n\207"" [((#(""Clien"" 0 5 (fontified t)) . t)) (nil) company-backend company-backends company-prefix company--manual-action functionp company-init t company-init-backend prefix company--multi-backend-adapter company--good-prefix-p company--prefix-str company-calculate-candidates message ""No completion found"" company-cancel unique company-update-candidates run-hook-with-args company-completion-started-hook company-explicit-action-p company-call-frontends show throw --cl-block-nil-- company--manual-prefix] 6 ""\n\n(fn)""]()
  funcall(#[0 ""\n\203   \nC\202\n\211\205\233\211@\3009\204\306!\203<9\2036\307N\310=\2046\307N?\205@\311!\205@\312!\202@\313\312\""\240\210\300@\203\224\314\300@!\203\216\315\300@!\211\301\316\f!\240\210\301@:\204w
\203i\317\320!\210\301@\310=\203\216\321\322!\210\202\216
\203\300@\323\301@!\210\324\325\326 \""\210\327\330!\210\331\332\301@\""\210A\266\202\202\n\207"" [((#(""Clien"" 0 5 (fontified t)) . t)) (nil) company-backend company-backends company-prefix company--manual-action functionp company-init t company-init-backend prefix company--multi-backend-adapter company--good-prefix-p company--prefix-str company-calculate-candidates message ""No completion found"" company-cancel unique company-update-candidates run-hook-with-args company-completion-started-hook company-explicit-action-p company-call-frontends show throw --cl-block-nil-- company--manual-prefix] 6 ""\n\n(fn)""])
  company--begin-new()
  company--perform()
  #[0 ""\301 \210\207"" [company-candidates company--perform] 1 ""\n\n(fn)""]()
  company-auto-begin()
  company-manual-begin()
  company-complete()
  call-interactively(company-complete record nil)
  command-execute(company-complete record)
  execute-extended-command(nil ""company-complete"")
  call-interactively(execute-extended-command nil nil)
",3128
289,35565945,(require 'cl),13
290,35655966,"// Package classification User API.
//
// the purpose of this application is to provide an application
// that is using plain go code to define an API
//
// This should demonstrate all the possible comment annotations
// that are available to turn go code into a fully compliant swagger 2.0 spec
//
// Terms Of Service:
//
// there are no TOS at this moment, use at your own risk we take no responsibility
//
//     Schemes: http, https
//     Host: localhost
//     BasePath: /v2
//     Version: 0.0.1
//     License: MIT http://opensource.org/licenses/MIT
//     Contact: John Doe http://john.doe.com
//
//     Consumes:
//     - application/json
//     - application/xml
//
//     Produces:
//     - application/json
//     - application/xml
//
//
// swagger:meta
package main
import (
 ""github.com/gin-gonic/gin""
 ""strconv""
 ""database/sql""
 _ ""github.com/go-sql-driver/mysql""
 ""gopkg.in/gorp.v1""
 ""log""
)

// swagger:model
// User represents the user for this application
//
// A user is the security principal for this application.
// It's also used as one of main axis for reporting.
//
// A user can have friends with whom they can share what they like.
//
type User struct {
    // the id for this user
    //
    // required: true
    // min: 1
    Id int64 `db:""id"" json:""id""`
    // the first name for this user
    // required: true
    // min length: 3
    Firstname string `db:""firstname"" json:""firstname""`
    // the last name for this user
    // required: true
    // min length: 3
    Lastname string `db:""lastname"" json:""lastname""`
}

func main() {
 r := gin.Default()
 r.Use(Cors())
 v1 := r.Group(""api/v1"")
 {
 v1.GET(""/users"", GetUsers)
 v1.GET(""/users/:id"", GetUser)
 v1.POST(""/users"", PostUser)
 v1.PUT(""/users/:id"", UpdateUser)
 v1.DELETE(""/users/:id"", DeleteUser)
 v1.OPTIONS(""/users"", OptionsUser)     // POST
 v1.OPTIONS(""/users/:id"", OptionsUser) // PUT, DELETE
 }
r.Run("":8696"")
}


func GetUsers(c *gin.Context) {
    // swagger:route GET /user listPets pets users
    //
    // Lists pets filtered by some parameters.
    //
    // This will show all available pets by default.
    // You can get the pets that are out of stock
    //
    //     Consumes:
    //     - application/json
    //     - application/x-protobuf
    //
    //     Produces:
    //     - application/json
    //     - application/x-protobuf
    //
    //     Schemes: http, https, ws, wss
    //
    //     Security:
    //       api_key:
    //       oauth: read, write
    //
    //     Responses:
    //       default: genericError
    //       200: someResponse
    //       422: validationError
     var users []User
     _, err := dbmap.Select(&users, ""SELECT * FROM user"")
    if err == nil {
     c.JSON(200, users)
     } else {
     c.JSON(404, gin.H{""error"": ""no user(s) into the table""})
 }
// curl -i http://localhost:8080/api/v1/users
}

func GetUser(c *gin.Context) {
 id := c.Params.ByName(""id"")
 var user User
 err := dbmap.SelectOne(&user, ""SELECT * FROM user WHERE id=?"", id)
if err == nil {
 user_id, _ := strconv.ParseInt(id, 0, 64)
content := &User{
 Id: user_id,
 Firstname: user.Firstname,
 Lastname: user.Lastname,
 }
 c.JSON(200, content)
 } else {
 c.JSON(404, gin.H{""error"": ""user not found""})
 }
// curl -i http://localhost:8080/api/v1/users/1
}

func PostUser(c *gin.Context) {
 var user User
 c.Bind(&user)
if user.Firstname != """" && user.Lastname != """" {
if insert, _ := dbmap.Exec(`INSERT INTO user (firstname, lastname) VALUES (?, ?)`, user.Firstname, user.Lastname); insert != nil {
 user_id, err := insert.LastInsertId()
 if err == nil {
 content := &User{
 Id: user_id,
 Firstname: user.Firstname,
 Lastname: user.Lastname,
 }
 c.JSON(201, content)
 } else {
 checkErr(err, ""Insert failed"")
 }
 }
} else {
 c.JSON(422, gin.H{""error"": ""fields are empty""})
 }
// curl -i -X POST -H ""Content-Type: application/json"" -d ""{ \""firstname\"": \""Thea\"", \""lastname\"": \""Queen\"" }"" http://localhost:8080/api/v1/users
}

func UpdateUser(c *gin.Context) {
 id := c.Params.ByName(""id"")
 var user User
 err := dbmap.SelectOne(&user, ""SELECT * FROM user WHERE id=?"", id)
if err == nil {
 var json User
 c.Bind(&json)
user_id, _ := strconv.ParseInt(id, 0, 64)
user := User{
 Id: user_id,
 Firstname: json.Firstname,
 Lastname: json.Lastname,
 }
if user.Firstname != """" && user.Lastname != """"{
 _, err = dbmap.Update(&user)
if err == nil {
 c.JSON(200, user)
 } else {
 checkErr(err, ""Updated failed"")
 }
} else {
 c.JSON(422, gin.H{""error"": ""fields are empty""})
 }
} else {
 c.JSON(404, gin.H{""error"": ""user not found""})
 }
// curl -i -X PUT -H ""Content-Type: application/json"" -d ""{ \""firstname\"": \""Thea\"", \""lastname\"": \""Merlyn\"" }"" http://localhost:8080/api/v1/users/1
}

func DeleteUser(c *gin.Context) {
 id := c.Params.ByName(""id"")
var user User
 err := dbmap.SelectOne(&user, ""SELECT id FROM user WHERE id=?"", id)
if err == nil {
 _, err = dbmap.Delete(&user)
if err == nil {
 c.JSON(200, gin.H{""id #"" + id: "" deleted""})
 } else {
 checkErr(err, ""Delete failed"")
 }
} else {
 c.JSON(404, gin.H{""error"": ""user not found""})
 }
// curl -i -X DELETE http://localhost:8080/api/v1/users/1
}

var dbmap = initDb()
func initDb() *gorp.DbMap {
 db, err := sql.Open(""mysql"",
        ""root:max_123@tcp(127.0.0.1:3306)/gotest"")
 checkErr(err, ""sql.Open failed"")
 dbmap := &gorp.DbMap{Db: db, Dialect:           gorp.MySQLDialect{""InnoDB"", ""UTF8""}}
 dbmap.AddTableWithName(User{}, ""User"").SetKeys(true, ""Id"")
 err = dbmap.CreateTablesIfNotExists()
 checkErr(err, ""Create table failed"")
return dbmap
}

func checkErr(err error, msg string) {
 if err != nil {
 log.Fatalln(msg, err)
 }
}


func Cors() gin.HandlerFunc {
 return func(c *gin.Context) {
 c.Writer.Header().Add(""Access-Control-Allow-Origin"", ""*"")
 c.Next()
 }
}

func OptionsUser(c *gin.Context) {
 c.Writer.Header().Add(""Access-Control-Allow-Origin"", ""*"")
 c.Writer.Header().Set(""Access-Control-Allow-Methods"", ""DELETE,POST, PUT"")
 c.Writer.Header().Set(""Access-Control-Allow-Headers"", ""Content-Type"")
 c.Next()
}
",5999
291,35655966,"{
    ""consumes"": [""application/json"", ""application/xml""],
    ""produces"": [""application/json"", ""application/xml""],
    ""schemes"": [""http"", ""https""],
    ""swagger"": ""2.0"",
    ""info"": {
        ""description"": ""the purpose of this application is to provide an application\nthat is using plain go code to define an API\n\nThis should demonstrate all the possible comment annotations\nthat are available to turn go code into a fully compliant swagger 2.0 spec"",
        ""title"": ""User API."",
        ""termsOfService"": ""there are no TOS at this moment, use at your own risk we take no responsibility"",
        ""contact"": {
            ""name"": ""John Doe"",
            ""url"": ""http://john.doe.com"",
            ""email"": ""john.doe@example.com""
        },
        ""license"": {
            ""name"": ""MIT"",
            ""url"": ""http://opensource.org/licenses/MIT""
        },
        ""version"": ""0.0.1""
    },
    ""host"": ""localhost"",
    ""basePath"": ""/v2"",
    ""paths"": {
        ""/user"": {
            ""get"": {
                ""description"": ""This will show all available pets by default.\nYou can get the pets that are out of stock"",
                ""consumes"": [""application/json"", ""application/x-protobuf""],
                ""produces"": [""application/json"", ""application/x-protobuf""],
                ""schemes"": [""http"", ""https"", ""ws"", ""wss""],
                ""tags"": [""listPets"", ""pets""],
                ""summary"": ""Lists pets filtered by some parameters."",
                ""operationId"": ""users"",
                ""security"": [{
                    ""api_key"": null
                }, {
                    ""oauth"": [""read"", ""write""]
                }],
                ""responses"": {
                    ""200"": {
                        ""$ref"": ""#/responses/someResponse""
                    },
                    ""422"": {
                        ""$ref"": ""#/responses/validationError""
                    },
                    ""default"": {
                        ""$ref"": ""#/responses/genericError""
                    }
                }
            }
        }
    },
    ""definitions"": {}
}
",2089
292,35655966,"Error
 Object
message:  ""options.definition is required""
code:  ""UNCAUGHT_SWAY_WORKER_ERROR""
",93
293,35678560,src/syscall,11
294,35678560,go generate,11
295,35678560,go generate,11
296,35678560,*uint16,7
297,35678560,syscall.UTF16PtrFromString,26
298,35678560,mksyscall_windows.go,20
299,35678560,syscall_windows.go,18
300,35678560,"//sys   GetLastError() (lasterr error)
//...
//sys   CreateHardLink(filename *uint16, existingfilename *uint16, reserved uintptr) (err error) [failretval&0xff==0] = CreateHardLinkW
",181
301,35678560,mksyscall_windows.go,20
302,35678560,go generate,11
303,35678560,"go generate
",12
304,35678560,win32_windows.go,16
305,35678560,"package win32

//go generate go run mksyscall_windows.go -output zwin32_windows.go win32_windows.go

type (
    LPVOID         uintptr
    LMSTR          *uint16
    DWORD          uint32
    LPBYTE         *byte
    LPDWORD        *uint32
    LPWSTR         *uint16
    NET_API_STATUS DWORD

    USER_INFO_1 struct {
        Usri1_name         LPWSTR
        Usri1_password     LPWSTR
        Usri1_password_age DWORD
        Usri1_priv         DWORD
        Usri1_home_dir     LPWSTR
        Usri1_comment      LPWSTR
        Usri1_flags        DWORD
        Usri1_script_path  LPWSTR
    }

    GROUP_USERS_INFO_0 struct {
        Grui0_name LPWSTR
    }

    USER_INFO_1003 struct {
        Usri1003_password LPWSTR
    }
)

const (
    // from LMaccess.h

    USER_PRIV_GUEST = 0
    USER_PRIV_USER  = 1
    USER_PRIV_ADMIN = 2

    UF_SCRIPT                          = 0x0001
    UF_ACCOUNTDISABLE                  = 0x0002
    UF_HOMEDIR_REQUIRED                = 0x0008
    UF_LOCKOUT                         = 0x0010
    UF_PASSWD_NOTREQD                  = 0x0020
    UF_PASSWD_CANT_CHANGE              = 0x0040
    UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED = 0x0080

    UF_TEMP_DUPLICATE_ACCOUNT    = 0x0100
    UF_NORMAL_ACCOUNT            = 0x0200
    UF_INTERDOMAIN_TRUST_ACCOUNT = 0x0800
    UF_WORKSTATION_TRUST_ACCOUNT = 0x1000
    UF_SERVER_TRUST_ACCOUNT      = 0x2000

    UF_ACCOUNT_TYPE_MASK = UF_TEMP_DUPLICATE_ACCOUNT |
        UF_NORMAL_ACCOUNT |
        UF_INTERDOMAIN_TRUST_ACCOUNT |
        UF_WORKSTATION_TRUST_ACCOUNT |
        UF_SERVER_TRUST_ACCOUNT

    UF_DONT_EXPIRE_PASSWD                     = 0x10000
    UF_MNS_LOGON_ACCOUNT                      = 0x20000
    UF_SMARTCARD_REQUIRED                     = 0x40000
    UF_TRUSTED_FOR_DELEGATION                 = 0x80000
    UF_NOT_DELEGATED                          = 0x100000
    UF_USE_DES_KEY_ONLY                       = 0x200000
    UF_DONT_REQUIRE_PREAUTH                   = 0x400000
    UF_PASSWORD_EXPIRED                       = 0x800000
    UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION = 0x1000000
    UF_NO_AUTH_DATA_REQUIRED                  = 0x2000000
    UF_PARTIAL_SECRETS_ACCOUNT                = 0x4000000
    UF_USE_AES_KEYS                           = 0x8000000

    UF_SETTABLE_BITS = UF_SCRIPT |
        UF_ACCOUNTDISABLE |
        UF_LOCKOUT |
        UF_HOMEDIR_REQUIRED |
        UF_PASSWD_NOTREQD |
        UF_PASSWD_CANT_CHANGE |
        UF_ACCOUNT_TYPE_MASK |
        UF_DONT_EXPIRE_PASSWD |
        UF_MNS_LOGON_ACCOUNT |
        UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED |
        UF_SMARTCARD_REQUIRED |
        UF_TRUSTED_FOR_DELEGATION |
        UF_NOT_DELEGATED |
        UF_USE_DES_KEY_ONLY |
        UF_DONT_REQUIRE_PREAUTH |
        UF_PASSWORD_EXPIRED |
        UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION |
        UF_NO_AUTH_DATA_REQUIRED |
        UF_USE_AES_KEYS |
        UF_PARTIAL_SECRETS_ACCOUNT

    FILTER_TEMP_DUPLICATE_ACCOUNT    = (0x0001)
    FILTER_NORMAL_ACCOUNT            = (0x0002)
    FILTER_INTERDOMAIN_TRUST_ACCOUNT = (0x0008)
    FILTER_WORKSTATION_TRUST_ACCOUNT = (0x0010)
    FILTER_SERVER_TRUST_ACCOUNT      = (0x0020)

    LG_INCLUDE_INDIRECT = (0x0001)

    // etc...
)

//sys NetApiBufferFree(Buffer LPVOID) (status NET_API_STATUS) = netapi32.NetApiBufferFree
//sys NetUserAdd(servername LMSTR, level DWORD, buf LPBYTE, parm_err LPDWORD) (status NET_API_STATUS) = netapi32.NetUserAdd
//sys NetUserChangePassword(domainname LPCWSTR, username LPCWSTR, oldpassword LPCWSTR, newpassword LPCWSTR) (status NET_API_STATUS) = netapi32.NetUserChangePassword
//sys NetUserDel(servername LPCWSTR, username LPCWSTR) (status NET_API_STATUS) = netapi32.NetUserDel
//sys NetUserEnum(servername LPCWSTR, level DWORD, filter DWORD, bufptr *LPBYTE, prefmaxlen DWORD, entriesread LPDWORD, totalentries LPDWORD, resume_handle LPDWORD) (status NET_API_STATUS) = netapi32.NetUserEnum
//sys NetUserGetGroups(servername LPCWSTR, username LPCWSTR, level DWORD, bufptr *LPBYTE, prefmaxlen DWORD, entriesread LPDWORD, totalentries LPDWORD) (status NET_API_STATUS) = netapi32.NetUserGetGroups
//sys NetUserSetGroups(servername LPCWSTR, username LPCWSTR, level DWORD, buf LPBYTE, num_entries DWORD) (status NET_API_STATUS) = netapi32.NetUserSetGroups
//sys NetUserSetInfo(servername LPCWSTR, username LPCWSTR, level DWORD, buf LPBYTE, parm_err LPDWORD) (status NET_API_STATUS) = netapi32.NetUserSetInfo
",4410
306,35678560,go generate,11
307,35678560,mksyscall_windows.go,20
308,35678560,"// MACHINE GENERATED BY 'go generate' COMMAND; DO NOT EDIT

package win32

import ""unsafe""
import ""syscall""

var _ unsafe.Pointer

var (
    modnetapi32 = syscall.NewLazyDLL(""netapi32.dll"")

    procNetApiBufferFree      = modnetapi32.NewProc(""NetApiBufferFree"")
    procNetUserAdd            = modnetapi32.NewProc(""NetUserAdd"")
    procNetUserChangePassword = modnetapi32.NewProc(""NetUserChangePassword"")
    procNetUserDel            = modnetapi32.NewProc(""NetUserDel"")
    procNetUserEnum           = modnetapi32.NewProc(""NetUserEnum"")
    procNetUserGetGroups      = modnetapi32.NewProc(""NetUserGetGroups"")
    procNetUserSetGroups      = modnetapi32.NewProc(""NetUserSetGroups"")
    procNetUserSetInfo        = modnetapi32.NewProc(""NetUserSetInfo"")
)

func NetApiBufferFree(Buffer LPVOID) (status NET_API_STATUS) {
    r0, _, _ := syscall.Syscall(procNetApiBufferFree.Addr(), 1, uintptr(Buffer), 0, 0)
    status = NET_API_STATUS(r0)
    return
}

func NetUserAdd(servername LMSTR, level DWORD, buf LPBYTE, parm_err LPDWORD) (status NET_API_STATUS) {
    r0, _, _ := syscall.Syscall6(procNetUserAdd.Addr(), 4, uintptr(servername), uintptr(level), uintptr(buf), uintptr(parm_err), 0, 0)
    status = NET_API_STATUS(r0)
    return
}

func NetUserChangePassword(domainname LPCWSTR, username LPCWSTR, oldpassword LPCWSTR, newpassword LPCWSTR) (status NET_API_STATUS) {
    r0, _, _ := syscall.Syscall6(procNetUserChangePassword.Addr(), 4, uintptr(domainname), uintptr(username), uintptr(oldpassword), uintptr(newpassword), 0, 0)
    status = NET_API_STATUS(r0)
    return
}

func NetUserDel(servername LPCWSTR, username LPCWSTR) (status NET_API_STATUS) {
    r0, _, _ := syscall.Syscall(procNetUserDel.Addr(), 2, uintptr(servername), uintptr(username), 0)
    status = NET_API_STATUS(r0)
    return
}

func NetUserEnum(servername LPCWSTR, level DWORD, filter DWORD, bufptr *LPBYTE, prefmaxlen DWORD, entriesread LPDWORD, totalentries LPDWORD, resume_handle LPDWORD) (status NET_API_STATUS) {
    r0, _, _ := syscall.Syscall9(procNetUserEnum.Addr(), 8, uintptr(servername), uintptr(level), uintptr(filter), uintptr(unsafe.Pointer(bufptr)), uintptr(prefmaxlen), uintptr(entriesread), uintptr(totalentries), uintptr(resume_handle), 0)
    status = NET_API_STATUS(r0)
    return
}

func NetUserGetGroups(servername LPCWSTR, username LPCWSTR, level DWORD, bufptr *LPBYTE, prefmaxlen DWORD, entriesread LPDWORD, totalentries LPDWORD) (status NET_API_STATUS) {
    r0, _, _ := syscall.Syscall9(procNetUserGetGroups.Addr(), 7, uintptr(servername), uintptr(username), uintptr(level), uintptr(unsafe.Pointer(bufptr)), uintptr(prefmaxlen), uintptr(entriesread), uintptr(totalentries), 0, 0)
    status = NET_API_STATUS(r0)
    return
}

func NetUserSetGroups(servername LPCWSTR, username LPCWSTR, level DWORD, buf LPBYTE, num_entries DWORD) (status NET_API_STATUS) {
    r0, _, _ := syscall.Syscall6(procNetUserSetGroups.Addr(), 5, uintptr(servername), uintptr(username), uintptr(level), uintptr(buf), uintptr(num_entries), 0)
    status = NET_API_STATUS(r0)
    return
}

func NetUserSetInfo(servername LPCWSTR, username LPCWSTR, level DWORD, buf LPBYTE, parm_err LPDWORD) (status NET_API_STATUS) {
    r0, _, _ := syscall.Syscall6(procNetUserSetInfo.Addr(), 5, uintptr(servername), uintptr(username), uintptr(level), uintptr(buf), uintptr(parm_err), 0)
    status = NET_API_STATUS(r0)
    return
}
",3389
309,35678560,syscall,7
310,35752532,content.Body,12
311,35752532,ls -l /proc/PID/fd | wc -l,26
312,35752532,"package http

import ""downloader/request""
import ""downloader/response""
import ""downloader/proxy""
import ""downloader/ssdb""
import ""net/http""
import ""net/url""
import ""time""
import ""fmt""
import ""strings""
import ""io/ioutil""
import ""errors""

func getProxy(ssdbClients []*ssdb.SSDBClient, proxyName string, reqUrl string) (string, error){
    var err error
    p := """"
    url := """"
    if proxyName != """" {
        p, err = proxy.GetOne(ssdbClients,proxyName)
        if err != nil {
            return url, err
        }
        if strings.HasPrefix(reqUrl, ""https"") {
            url = fmt.Sprintf(""https://%s"", p)
        } else if strings.HasPrefix(reqUrl, ""http"") {
            url = fmt.Sprintf(""http://%s"", p)
        } else {
            return url,errors.New(fmt.Sprintf(""reqUrl %s not valid"", reqUrl))
        }
        return url, err
    }
    return url, err
}

func customProxy(req *http.Request) (*url.URL, error) {
    httpProxy := req.Header.Get(""HttpProxy"")
    if httpProxy == """" {
        return nil, nil
    } else {
        return url.Parse(httpProxy)
    }
}

func GetClient() *http.Client {
    var client http.Client
    client = http.Client{
        Timeout: 15 * time.Second,
    }
    transport :=  http.Transport{
        Proxy: customProxy,
        DisableCompression: false,
        MaxIdleConnsPerHost: 10000,
    }
    client.Transport = &transport
    return &client
}

func structResponse(req *request.HttpRequest, content *http.Response, proxy string) (response.HttpResponse, error) {
    var resp response.HttpResponse
    data, err := ioutil.ReadAll(content.Body)
    if err != nil {
        return resp, err
    }
    header := make(map[string]interface{})
    for k, v := range content.Header {
        if len(v) > 0 {
            header[k] = v[0]
        }
    }
    var encoding string
    encoding = content.Header.Get(""Content-Encoding"")
    resp = response.HttpResponse {
        Request: *req,
        ErrorCode: 0,
        ErrorMsg: """",
        StatusCode: content.StatusCode,
        Reason: content.Status,
        Html: string(data),
        Headers: header,
        Encoding: encoding,
        Url: req.Url,
        CrawlerName: req.CrawlerName,
        ProxyName: req.ProxyName,
        HttpProxy: proxy,
    }
    return resp, err
}

func Send(ssdbClients []*ssdb.SSDBClient, r *request.HttpRequest, httpClient *http.Client) (response.HttpResponse, error) {
    var resp response.HttpResponse
    var err error
    var httpProxy string

    httpProxy, err = getProxy(ssdbClients, r.ProxyName, r.Url)
    if err != nil {
        return resp, err
    }

    req, err := http.NewRequest(r.Method, r.Url, strings.NewReader(r.Data))
    if err != nil {
        return resp, err
    }

    u, err := url.Parse(r.Url)
    if err != nil {
        return resp, err
    }

    defaultHeaders := map[string] string {
        ""User-Agent"": `Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) 
        AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.109 Safari/537.36`,
        ""Upgrade-Insecure-Requests"": ""1"",
        ""Connection"": ""keep-alive"",
        ""Accept"": ""text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"",
        ""Accept-Language"": ""zh-CN,zh;q=0.8,en;q=0.6"",
        ""Cache-Control"": ""max-age=0"",
        ""Host"": u.Host,
        ""HttpProxy"": httpProxy,
    }

    for k, v := range defaultHeaders {
        req.Header.Set(k, v)
    }

    for k, v := range r.Headers {
        req.Header.Set(k, fmt.Sprintf(""%v"", v))
    }

    for k, v := range r.Cookies {
        req.Header.Set(""Cookie"", fmt.Sprintf(""%s=%v"", k, v))
    }


    values := req.URL.Query()
    for k, v := range r.Params {
        values.Add(k, fmt.Sprintf(""%v"", v))
    }
    req.URL.RawQuery = values.Encode()

    content, err := httpClient.Do(req)
    if err != nil {
        return resp, err
    }
    defer content.Body.Close()
    resp, err = structResponse(r, content, httpProxy)
    if err != nil {
        return resp, err
    }
    respCookies := make(map[string] interface{})
    if httpClient.Jar != nil {
        cookies := httpClient.Jar.Cookies(req.URL)
        for _, cookie := range cookies {
            respCookies[cookie.Name] = cookie.Value
        }
        resp.Cookies = respCookies
    }
    return resp, err
}
",4283
313,35752532,"func sendRequest(clients []*ssdb.SSDBClient, r *request.HttpRequest, httpClient *http.Client) {
    for {
        resp, err := http.Send(clients, *r, httpClient)
        if err != nil {
            utils.Error.Println(""http send fail "", err.Error())
        } else {
            if resp.StatusCode == 200 {
                utils.Info.Println(""status 200, success"")
            } else {
                utils.Warning.Println(""status "", resp.StatusCode, resp.Reason)
            }
        }
    }
}
func main() {
    httpClient := http.GetClient()
    var wg sync.WaitGroup
    wg.Add(1)
    for i:=0;i<crawlerConsumers;i++ {
        go sendRequest(clients, r, httpClient)
    }
    wg.Wait()
}
",693
314,35752532,"/debug/pprof/

profiles:
0   block
99490   goroutine(This number is growing constantly, very strange)
1640    heap
14  threadcreate

# runtime.MemStats
# Alloc = 210967776
# TotalAlloc = 3673382376
# Sys = 646805032
# Lookups = 29226
# Mallocs = 15590422
# Frees = 14236863
# HeapAlloc = 210967776
# HeapSys = 331415552
# HeapIdle = 72081408
# HeapInuse = 259334144
# HeapReleased = 0
# HeapObjects = 1353559
# Stack = 283049984 / 283049984
# MSpan = 4007136 / 4112384
# MCache = 9664 / 16384
# BuckHashSys = 1575958
# NextGC = 306292818
# PauseNs = [2096153 2554867 2962532 4711468 3373778 3548443 1764893 1961992 2434108 2658626 2627832 2564733 2610212 3278169 2954882 2847604 4443650 3582780 3557718 4201288 4762243 8349689 3812924 5098353 5196422 4494087 5209715 5978150 5060982 4825367 6529020 5738726 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
# NumGC = 32
# EnableGC = true
# DebugGC = false


# runtime.MemStats
# Alloc = 334390488
# TotalAlloc = 7408124464
# Sys = 963748912
# Lookups = 64289
# Mallocs = 31759565
# Frees = 29798637
# HeapAlloc = 334390488
# HeapSys = 536903680
# HeapIdle = 171114496
# HeapInuse = 365789184
# HeapReleased = 0
# HeapObjects = 1960928
# Stack = 381648896 / 381648896
# MSpan = 4958240 / 5160960
# MCache = 9664 / 16384
# BuckHashSys = 1625694
# NextGC = 337299393
# PauseNs = [2096153 2554867 2962532 4711468 3373778 3548443 1764893 1961992 2434108 2658626 2627832 2564733 2610212 3278169 2954882 2847604 4443650 3582780 3557718 4201288 4762243 8349689 3812924 5098353 5196422 4494087 5209715 5978150 5060982 4825367 6529020 5738726 5563959 6997601 6906020 6778559 7592484 7193865 7198439 7815078 7217336 6923856 7127406 7491410 7029097 7757883 6861948 7295746 7245947 9037505 7656431 7322897 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
# NumGC = 52
# EnableGC = true
# DebugGC = false

# runtime.MemStats
# Alloc = 468642296
# TotalAlloc = 25479911160
# Sys = 1185490448
# Lookups = 278984
# Mallocs = 119997794
# Frees = 117189156
# HeapAlloc = 468642296
# HeapSys = 680919040
# HeapIdle = 174424064
# HeapInuse = 506494976
# HeapReleased = 0
# HeapObjects = 2808638
# Stack = 448397312 / 448397312
# MSpan = 6943104 / 7061504
# MCache = 9664 / 16384
# BuckHashSys = 1757422
# NextGC = 485127068
# PauseNs = [2096153 2554867 2962532 4711468 3373778 3548443 1764893 1961992 2434108 2658626 2627832 2564733 2610212 3278169 2954882 2847604 4443650 3582780 3557718 4201288 4762243 8349689 3812924 5098353 5196422 4494087 5209715 5978150 5060982 4825367 6529020 5738726 5563959 6997601 6906020 6778559 7592484 7193865 7198439 7815078 7217336 6923856 7127406 7491410 7029097 7757883 6861948 7295746 7245947 9037505 7656431 7322897 7155298 7288230 8027051 7442561 7528532 8418744 7847097 8791562 7242055 8418159 7677703 8662475 8408315 8562446 8110168 7308570 8593523 7820707 8734530 8981041 8721316 8152324 8390552 8603397 9059668 8153933 7986519 7744819 8491656 8562181 7816543 9145512 7902742 7780778 7636659 13573779 12684501 94808535 9443609 8257986 9072718 9634563 9229626 9449536 8644605 8898286 8499036 13101964 8743251 9119720 9267487 8178551 8444107 8362330 8447271 8558115 8788773 9977627 9058283 8743149 8508649 9099904 9382220 9684119 9789404 9730475 8506223 10363233 9979499 9033233 9634088 9739395 9129433 9122154 8615491 9632523 9314836 9845890 9888849 10034358 10207887 10073912 9892683 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
# NumGC = 135
# EnableGC = true
# DebugGC = false
",4406
315,35752532,"transport :=  http.Transport{
    Proxy: customProxy,
    DisableCompression: false,
    MaxIdleConnsPerHost: 10000,
    Dial: (&net.Dialer{
                Timeout:   15 * time.Second,
                KeepAlive: 15 * time.Second,
            }).Dial,
    TLSHandshakeTimeout: 5 * time.Second,
}
",296
316,35768266,go version go1.5.3 linux/amd64,30
317,35768266,"3259.27kB of 3302.42kB total (98.69%)
Dropped 258 nodes (cum <= 16.51kB)
Showing top 30 nodes out of 91 (cum >= 27.76kB)
      flat  flat%   sum%        cum   cum%
 1552.59kB 47.01% 47.01%  1552.59kB 47.01%  bytes.makeSlice
     584kB 17.68% 64.70%      584kB 17.68%  imagick._Cfunc_GoBytes
  257.38kB  7.79% 72.49%   257.38kB  7.79%  encoding/pem.Decode
  168.11kB  5.09% 77.58%   168.11kB  5.09%  crypto/tls.(*block).reserve
  165.09kB  5.00% 82.58%   389.49kB 11.79%  crypto/x509.parseCertificate
  105.32kB  3.19% 85.77%   105.32kB  3.19%  reflect.unsafe_NewArray
   83.64kB  2.53% 88.30%    83.64kB  2.53%  math/big.nat.make
   75.55kB  2.29% 90.59%    75.55kB  2.29%  net/http.(*Transport).dialConn
   64.02kB  1.94% 92.53%    64.02kB  1.94%  regexp.(*bitState).reset
   43.77kB  1.33% 93.85%    43.77kB  1.33%  crypto/x509.(*CertPool).AddCert
   40.44kB  1.22% 95.08%    40.44kB  1.22%  crypto/x509/pkix.(*Name).FillFromRDNSequence
   40.16kB  1.22% 96.29%    40.16kB  1.22%  encoding/asn1.parsePrintableString
   24.07kB  0.73% 97.02%    24.07kB  0.73%  net/http.newBufioWriterSize
   18.98kB  0.57% 97.60%    18.98kB  0.57%  net/http.newBufioReader
   16.14kB  0.49% 98.09%    64.77kB  1.96%  crypto/tls.(*Conn).readHandshake
   12.01kB  0.36% 98.45%   237.09kB  7.18%  encoding/asn1.parseField
    8.01kB  0.24% 98.69%    91.65kB  2.78%  crypto/x509.parsePublicKey
         0     0% 98.69%   112.33kB  3.40%  bufio.(*Reader).Read
         0     0% 98.69%    80.32kB  2.43%  bufio.(*Reader).fill
         0     0% 98.69%    27.76kB  0.84%  bufio.(*Writer).ReadFrom
         0     0% 98.69%    27.76kB  0.84%  bufio.(*Writer).flush
         0     0% 98.69%  1648.33kB 49.91%  bytes.(*Buffer).ReadFrom
         0     0% 98.69%    16.59kB   0.5%  bytes.(*Buffer).Write
         0     0% 98.69%    16.59kB   0.5%  bytes.(*Buffer).grow
         0     0% 98.69%   843.06kB 25.53%  crypto/tls.(*Conn).Handshake
         0     0% 98.69%   112.33kB  3.40%  crypto/tls.(*Conn).Read
         0     0% 98.69%    27.76kB  0.84%  crypto/tls.(*Conn).Write
         0     0% 98.69%   843.06kB 25.53%  crypto/tls.(*Conn).clientHandshake
         0     0% 98.69%   160.96kB  4.87%  crypto/tls.(*Conn).readRecord
         0     0% 98.69%    27.76kB  0.84%  crypto/tls.(*Conn).writeRecord
",2278
318,35768266,"func main() {       

    imagick.Initialize() 
    defer imagick.Terminate()   

        myMux := http.NewServeMux()
        myMux.HandleFunc(""/"", serveHTTP)       

      if err := http.ListenAndServe("":8082"", myMux); err != nil {
        logFatal(""Error when starting or running http server: %v"", err)
    }      

}

func serveHTTP(w http.ResponseWriter, r *http.Request) {

        var isMaster bool = true        
    var desiredAspectRatio float64 = 1.77   

    if r.RequestURI == ""/favicon.ico"" {
        w.WriteHeader(http.StatusNotFound)
        return
    }

    if len(strings.TrimSpace(r.URL.Query().Get(""ar""))) != 0 {
        desiredAspectRatio, _ = strconv.ParseFloat(r.URL.Query().Get(""ar""), 64)
    }

    if len(strings.TrimSpace(r.URL.Query().Get(""ism""))) != 0 {      
        isMaster, _ = strconv.ParseBool(r.URL.Query().Get(""ism""))
    }   

    imageUrl := strings.ToLower(r.URL.Path[1:])     

    isProcessed := CreateMaster(imageUrl, desiredAspectRatio, isMaster)     

    if isProcessed == false {
        w.WriteHeader(http.StatusNotFound) 
        return
    }

    if !sendResponse(w, r, imageUrl) {
        // w.WriteHeader() is skipped intentionally here, since the response may be already partially created.
        return
    }


    logRequestMessage(r, ""SUCCESS"")     
}


func sendResponse(w http.ResponseWriter, r *http.Request, imageUrl string) bool {

    w.Header().Set(""Content-Type"", ""text/plain"")        

    if _, err := w.Write([]byte(""master created"")); err != nil {
        logRequestError(r, ""Cannot send image from imageUrl=%v to client: %v"", imageUrl, err)
        return false
    }
    return true
}


func CreateMaster(keyName string, desiredAspectRatio float64, isMaster bool) bool {             

    s3Client := s3.New(session.New(), &aws.Config{Region: aws.String(region)})
        params := &s3.GetObjectInput{
        Bucket: aws.String(bucketName),
        Key: aws.String(keyName),
        }

    fmt.Println("" Master creation request for key : "" + keyName)
    out, err := s3Client.GetObject(params)

    if err != nil { 
        return false                                       
    }

    defer out.Body.Close()  
    img, err := ioutil.ReadAll(out.Body)

    if err != nil { 
            return false      
    }                   

    mw := imagick.NewMagickWand()
    defer mw.Destroy()

    err = mw.ReadImageBlob(img)
    if err != nil {  
        return false                   
    }


    if isMaster == false {
        paramsPut := &s3.PutObjectInput{
                    Bucket:         aws.String(masterBucketName),
                    Key:            aws.String(keyName),
                    Body:         bytes.NewReader(mw.GetImageBlob()),
            }

        _, err = s3Client.PutObject(paramsPut)
        if err != nil {
            log.Printf(""Couldn't put the image on s3 : "" + keyName + ""%s\n"", err)       
        }

        return true
    }


        originalWidth := float64(mw.GetImageWidth())
        originalHeight := float64(mw.GetImageHeight())

    imageAspectRatio  := originalWidth / originalHeight
        masterWidth := cwMasterWidth
        masterHeight := cwMasterHeight
        masterAspectRatio := math.Trunc((cwMasterWidth / cwMasterHeight) * 100)/100

    if masterAspectRatio != desiredAspectRatio {           
                    masterAspectRatio = desiredAspectRatio
                }


    pwm := imagick.NewPixelWand()
    defer pwm.Destroy()

    tx := imagick.NewMagickWand()
    defer tx.Destroy()  

    if isMaster == true {               

            var w, h uint = 0, 0
            size := fmt.Sprintf(""%dx%d^+0+0"", w, h) 
                    if imageAspectRatio <= masterAspectRatio {                
                        // trim the height
            w = uint(originalWidth)
            h = (uint(originalWidth / masterAspectRatio))
               size = fmt.Sprintf(""%dx%d^+0+0"", w, h)
                     } else { 
                        // trim the width
            w = uint(originalHeight * masterAspectRatio)
            h = uint(originalHeight)
            size = fmt.Sprintf(""%dx%d^+0+0"", w, h)
                     }

            tx = mw.TransformImage("""", size)        
            tx.SetImageGravity(imagick.GRAVITY_CENTER)
            offsetX := -(int(w) - int(tx.GetImageWidth())) / 2
            offsetY := -(int(h) - int(tx.GetImageHeight())) / 2
            err := tx.ExtentImage(w, h, offsetX, offsetY)

                    if float64(tx.GetImageWidth()) > masterWidth && float64(tx.GetImageHeight()) > masterHeight  {                                        
                        err = tx.ResizeImage(uint(masterWidth), uint(masterHeight), imagick.FILTER_BOX, 1)
            if err != nil {
                log.Printf(""Inside CreateMaster function Couldn't resize the image : "" + keyName + ""%s\n"", err) 
                return false                 
            }                                                           
                    }                                       
                }       

     paramsPut := &s3.PutObjectInput{
                    Bucket:         aws.String(masterBucketName),
                    Key:            aws.String(keyName),
                    Body:         bytes.NewReader(tx.GetImageBlob()),
            }

    _, err = s3Client.PutObject(paramsPut)
    if err != nil {
        log.Printf(""Inside CreateMaster function Couldn't put the image on s3 : "" + keyName + ""%s\n"", err)  
        return false        
    }

    return true
}
",5538
319,36062878,"

    package main

    import (
            ""fmt""
            ""golang.org/x/net/websocket""
            ""log""
    )

    var url = ""ws://10.0.1.19:5000/data/websocket""

    func main() {
            ws, err := websocket.Dial(url, """", origin)
            if err != nil {
                    log.Fatal(err)
            }

            var msg = make([]byte, 512)
            _, err = ws.Read(msg)
            if err != nil {
                    log.Fatal(err)
            }
            fmt.Printf(""Receive: %s\n"", msg)
    }

",523
320,36062878,"package main

import (
    ""fmt""
    ""golang.org/x/net/websocket""
    // ""log""
    ""time""
)

var origin = ""http://localhost""

type url struct {
    host string
}

func processUrl(host string, messages chan []byte) {
    client, err := websocket.Dial(host, """", origin)
    if err != nil {
        // log.Printf(""dial:"", err)
    }
    // Clean up on exit from this goroutine
    defer client.Close()
    // Loop reading messages. Send each message to the channel.
    for {
        var msg = make([]byte, 512)
        _, err = client.Read(msg)
        if err != nil {
            // log.Fatal(""read:"", err)
            return
        }
        messages <- msg
    }
}

func main() {

    // Create an arry of hosts to read websockets from
    urls := []string{
        ""ws://10.0.1.90:3000/data/websocket"",
        ""ws://10.0.2.90:3000/data/websocket"",
        ""ws://10.0.3.90:3000/data/websocket"",
    }

    // Create channel to receive messages from all connections
    messages := make(chan []byte)

    // Run a goroutine for each URL that you want to dial.
    for _, host := range urls {
        go processUrl(host, messages)
    }

    // Print all messages received from the goroutines.
    for msg := range messages {
        fmt.Printf(""%d %s\n"", time.Now().Unix(), msg)
    }

}
",1290
321,36062878,"
    {
        ""src_city"":""Wayne"",
        ""dest_city"":""Amsterdam"",
        ""src_country"":""US"",
        ""dest_country"":""NL"",
        ""type"":""view""
    }
",153
322,36062878,"

    goroutine 72 [IO wait]:
    net.runtime_pollWait(0x7f356149b208, 0x72, 0x0)
        /usr/lib/go/src/pkg/runtime/netpoll.goc:146 +0x66
    net.(*pollDesc).Wait(0xc20804e610, 0x72, 0x0, 0x0)
        /usr/lib/go/src/pkg/net/fd_poll_runtime.go:84 +0x46
    net.(*pollDesc).WaitRead(0xc20804e610, 0x0, 0x0)
        /usr/lib/go/src/pkg/net/fd_poll_runtime.go:89 +0x42
    net.(*netFD).Read(0xc20804e5b0, 0xc2080d1000, 0x1000, 0x1000, 0x0, 0x7f3561498418, 0xb)
        /usr/lib/go/src/pkg/net/fd_unix.go:242 +0x34c
    net.(*conn).Read(0xc20803a150, 0xc2080d1000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
        /usr/lib/go/src/pkg/net/net.go:122 +0xe7
    bufio.(*Reader).fill(0xc208005140)
        /usr/lib/go/src/pkg/bufio/bufio.go:97 +0x1b3
    bufio.(*Reader).ReadByte(0xc208005140, 0xc2080f22d0, 0x0, 0x0)
        /usr/lib/go/src/pkg/bufio/bufio.go:199 +0x7e
    golang.org/x/net/websocket.hybiFrameReaderFactory.NewFrameReader(0xc208005140, 0x7f356149b908, 0xc2080f22d0, 0x0, 0x0)
        /home/shat/go/src/golang.org/x/net/websocket/hybi.go:126 +0xd7
    golang.org/x/net/websocket.(*Conn).Read(0xc2080d7050, 0xc2080f4c00, 0x200, 0x200, 0x0, 0x0, 0x0)
        /home/shat/go/src/golang.org/x/net/websocket/websocket.go:178 +0xfb
    main.processUrl(0x705010, 0x26, 0xc208004180)
        /home/shat/go/src/github.com/sh4t/scansock/main.go:26 +0x107
    created by main.main
        /home/shat/go/src/github.com/sh4t/scansock/main.go:101 +0x126

    goroutine 73 [IO wait, 2 minutes]:
    net.runtime_pollWait(0x7f356149b158, 0x72, 0x0)
        /usr/lib/go/src/pkg/runtime/netpoll.goc:146 +0x66
    net.(*pollDesc).Wait(0xc20804e760, 0x72, 0x0, 0x0)
        /usr/lib/go/src/pkg/net/fd_poll_runtime.go:84 +0x46
    net.(*pollDesc).WaitRead(0xc20804e760, 0x0, 0x0)
        /usr/lib/go/src/pkg/net/fd_poll_runtime.go:89 +0x42
    net.(*netFD).Read(0xc20804e700, 0xc208015000, 0x1000, 0x1000, 0x0, 0x7f3561498418, 0xb)
        /usr/lib/go/src/pkg/net/fd_unix.go:242 +0x34c
    net.(*conn).Read(0xc20803a018, 0xc208015000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
        /usr/lib/go/src/pkg/net/net.go:122 +0xe7
    bufio.(*Reader).fill(0xc2080042a0)
        /usr/lib/go/src/pkg/bufio/bufio.go:97 +0x1b3
    bufio.(*Reader).ReadByte(0xc2080042a0, 0x67d6e0, 0x0, 0x0)
        /usr/lib/go/src/pkg/bufio/bufio.go:199 +0x7e
    golang.org/x/net/websocket.hybiFrameReaderFactory.NewFrameReader(0xc2080042a0, 0x7f356149b908, 0xc2080196d0, 0x0, 0x0)
        /home/shat/go/src/golang.org/x/net/websocket/hybi.go:126 +0xd7
    golang.org/x/net/websocket.(*Conn).Read(0xc208024240, 0xc208080000, 0x200, 0x200, 0x0, 0x0, 0x0)
        /home/shat/go/src/golang.org/x/net/websocket/websocket.go:178 +0xfb
    main.processUrl(0x705190, 0x25, 0xc208004180)
        /home/shat/go/src/github.com/sh4t/scansock/main.go:26 +0x107
    created by main.main
        /home/shat/go/src/github.com/sh4t/scansock/main.go:101 +0x126

    goroutine 74 [IO wait]:
    net.runtime_pollWait(0x7f356149b0a8, 0x72, 0x0)
        /usr/lib/go/src/pkg/runtime/netpoll.goc:146 +0x66
    net.(*pollDesc).Wait(0xc20804e8b0, 0x72, 0x0, 0x0)
        /usr/lib/go/src/pkg/net/fd_poll_runtime.go:84 +0x46
    net.(*pollDesc).WaitRead(0xc20804e8b0, 0x0, 0x0)
        /usr/lib/go/src/pkg/net/fd_poll_runtime.go:89 +0x42
    net.(*netFD).Read(0xc20804e850, 0xc2080d9000, 0x1000, 0x1000, 0x0, 0x7f3561498418, 0xb)
        /usr/lib/go/src/pkg/net/fd_unix.go:242 +0x34c
    net.(*conn).Read(0xc20803a160, 0xc2080d9000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
        /usr/lib/go/src/pkg/net/net.go:122 +0xe7
    bufio.(*Reader).fill(0xc208005200)
        /usr/lib/go/src/pkg/bufio/bufio.go:97 +0x1b3
    bufio.(*Reader).ReadByte(0xc208005200, 0xc2080f2320, 0x0, 0x0)
        /usr/lib/go/src/pkg/bufio/bufio.go:199 +0x7e
    golang.org/x/net/websocket.hybiFrameReaderFactory.NewFrameReader(0xc208005200, 0x7f356149b908, 0xc2080f2320, 0x0, 0x0)
        /home/shat/go/src/golang.org/x/net/websocket/hybi.go:126 +0xd7
    golang.org/x/net/websocket.(*Conn).Read(0xc2080d70e0, 0xc2080f4e00, 0x200, 0x200, 0x0, 0x0, 0x0)
        /home/shat/go/src/golang.org/x/net/websocket/websocket.go:178 +0xfb
    main.processUrl(0x7052d0, 0x27, 0xc208004180)
        /home/shat/go/src/github.com/sh4t/scansock/main.go:26 +0x107
    created by main.main
        /home/shat/go/src/github.com/sh4t/scansock/main.go:101 +0x126

",4326
323,36410397,google.maps.DirectionsRenderer();,33
324,36410397,"package main

import (
    ""log""

    ""googlemaps.github.io/maps""
    ""github.com/kr/pretty""
    ""golang.org/x/net/context""
)

func checkForError(err error) {
    if err != nil{
        log.Fatal(err)
    }
}

func main() {
    c, err := maps.NewClient(maps.WithAPIKey(""myapikey""))
    checkForError(err)

    r := &maps.DirectionsRequest{
        Origin:      ""Hollywood, FL"",
        Destination: ""Davie, FL"",
    }

    resp, _, err := c.Directions(context.Background(), r)
    checkForError(err)

    // render := 

    pretty.Println(resp)
}
",547
325,36410397,"[]maps.Route{
    {
        Summary: ""I-95 N and I-595 W"",
        Legs:    {
            &maps.Leg{
                Steps: {
                    &maps.Step{
                        HTMLInstructions: ""Head east on Hollywood Blvd toward S Dixie Hwy"",
                        Distance:         maps.Distance{HumanReadable:""217 ft"", Meters:66},
                        Duration:         23000000000,
                        StartLocation:    maps.LatLng{Lat:26.0112983, Lng:-80.1494921},
                        EndLocation:      maps.LatLng{Lat:26.0113264, Lng:-80.14883689999999},
                        Polyline:         maps.Polyline{Points:""siw}CheehN?e@Cq@Ai@""},
                        Steps:            nil,
                        TransitDetails:   (*maps.TransitDetails)(nil),
                        TravelMode:       ""DRIVING"",
                    },
                    &maps.Step{
                        HTMLInstructions: ""Make a U-turn at S 21st Ave"",
                        Distance:         maps.Distance{HumanReadable:""0.6 mi"", Meters:886},
                        Duration:         90000000000,
                        StartLocation:    maps.LatLng{Lat:26.0113264, Lng:-80.14883689999999},
                        EndLocation:      maps.LatLng{Lat:26.0111533, Lng:-80.1575536},
                        Polyline:         maps.Polyline{Points:""yiw}CfaehNU??h@?r@BpAJVDfFHlOBfDDlCB|C@z@H~F""},
                        Steps:            nil,
                        TransitDetails:   (*maps.TransitDetails)(nil),
                        TravelMode:       ""DRIVING"",
                    },
                    &maps.Step{
                        HTMLInstructions: ""At the traffic circle, take the 3rd exit and stay on Hollywood Blvd"",
                        Distance:         maps.Distance{HumanReadable:""0.6 mi"", Meters:937},
                        Duration:         148000000000,
                        StartLocation:    maps.LatLng{Lat:26.0111533, Lng:-80.1575536},
                        EndLocation:      maps.LatLng{Lat:26.011037, Lng:-80.16587369999999},
                        Polyline:         maps.Polyline{Points:""uhw}CtwfhNGJAB?H?D?J?FAD?DCDCDCDSNUD]N_@XY\\Ub@GRGPIh@Ch@Bd@BJDXN`@DFLVVZ\\T\\P`@JNJHFFHBFBN@F?JBpB?d@@`ABpD@zB?nAB`C@bB@fAAt@AlA""},
                        Steps:            nil,
                        TransitDetails:   (*maps.TransitDetails)(nil),
                        TravelMode:       ""DRIVING"",
                    },
                    &maps.Step{
                        HTMLInstructions: ""Turn right to merge onto I-95 N toward W Palm Beach"",
                        Distance:         maps.Distance{HumanReadable:""4.4 mi"", Meters:7063},
                        Duration:         277000000000,
                        StartLocation:    maps.LatLng{Lat:26.011037, Lng:-80.16587369999999},
                        EndLocation:      maps.LatLng{Lat:26.0732058, Lng:-80.1671851},
                        Polyline:         maps.Polyline{Points:""_hw}CtkhhNKVCHEJGJCBEBEBIBQDkBB_BJq@DkBR_Ff@_CT[DM@IBGFKJy@FyAFuAB_CD_B@U@cCBE?A?}BByQLqBA{BGuBQeBQyAQo@KoBc@aBa@sA]iHyBa@MoA[wBm@g@K_Ds@cB]aB[eB[qAScBU{BWMCWCsBWg@G}Ks@cHe@aQkA{CUeCOyCSsE[wDW{CSsKu@qAIEA_@COAA?gBM_@Co@E[Ck@CUAs@E]AWA]A]?q@AU?a@?O?Y?kA?s@Bk@@o@Bm@@wEPcKZc@@w@BiAFi@Bq@Dw@Hk@FoBRw@JSD[DmAR}@P}Dt@oCh@yFdAgB\\A@g@HIBA?eCd@cDn@y@Ns@NiB\\_ARu@LaBZyDt@qCh@}Bf@oDx@sBf@}A`@qAZcBb@aBb@qEpA""},
                        Steps:            nil,
                        TransitDetails:   (*maps.TransitDetails)(nil),
                        TravelMode:       ""DRIVING"",
                    },
                    &maps.Step{
                        HTMLInstructions: ""Take exit 24 for Interstate 595 toward Port Everglades/Ft Laud-Hlwd/International Airport"",
                        Distance:         maps.Distance{HumanReadable:""0.3 mi"", Meters:416},
                        Duration:         17000000000,
                        StartLocation:    maps.LatLng{Lat:26.0732058, Lng:-80.1671851},
                        EndLocation:      maps.LatLng{Lat:26.0768262, Lng:-80.1680758},
                        Polyline:         maps.Polyline{Points:""qlc~C|shhNKIAAAAA?C?E?E?A?MBc@H_@FqB^uAVoAT{@Na@F[Hi@HYFyAXm@L""},
                        Steps:            nil,
                        TransitDetails:   (*maps.TransitDetails)(nil),
                        TravelMode:       ""DRIVING"",
                    },
                    &maps.Step{
                        HTMLInstructions: ""Keep left at the fork, follow signs for I-595 W/I-75/Florida's Turnpike and merge onto I-595 W"",
                        Distance:         maps.Distance{HumanReadable:""4.4 mi"", Meters:7161},
                        Duration:         255000000000,
                        StartLocation:    maps.LatLng{Lat:26.0768262, Lng:-80.1680758},
                        EndLocation:      maps.LatLng{Lat:26.0947648, Lng:-80.2317655},
                        Polyline:         maps.Polyline{Points:""ecd~CnyhhN[H[D_@Dm@FWBMBU@u@D_@@]@q@@W?]?MAU?[AYAQAe@C_@CWAk@CWAUAUAM?e@?W@Q@WBSBQBI@KBMBUHOFSFWNMHC@A@MHa@ZIFGF]`@IN[f@_@|@IVGT?BEREPCRALAHAF?BAB?FAJ?RAL?F?\\?F?D?N?RDlABn@Bx@@r@@t@@t@AV?h@A`@Ap@Cb@AZ?N?LATCh@CZ?@?@?@@@?@?@@BDFMhBIlAKdBGt@[rEe@zHAFk@vIE`@C`@UlDSbD?FMbECh@A|@C|A?`ACtEDxLD~PBvFDbE@vB?tF?xB@z@ClA?X?@?DG|BGx@IjAGx@Er@MtAMlAMdA[rBQhAUjA[zAWfA[vAYbAc@zAkAtCKXSj@wAhDiC`GiBdE_@|@]x@s@jBs@lBsAnDoAhEw@vCe@xB{@rD[nAsDjS]hBOn@e@~Bc@zBo@rCUpASfAu@fFUjBIj@MhAKp@S|ASzAS`BIv@]nCMbA_@bCQhAAF?FO~@y@zFeAbHyAtJ""},
                        Steps:            nil,
                        TransitDetails:   (*maps.TransitDetails)(nil),
                        TravelMode:       ""DRIVING"",
                    },
                    &maps.Step{
                        HTMLInstructions: ""Take exit 6 toward FL-817/University Dr"",
                        Distance:         maps.Distance{HumanReadable:""0.4 mi"", Meters:566},
                        Duration:         20000000000,
                        StartLocation:    maps.LatLng{Lat:26.0947648, Lng:-80.2317655},
                        EndLocation:      maps.LatLng{Lat:26.0963976, Lng:-80.2371076},
                        Polyline:         maps.Polyline{Points:""gsg~CpguhNM\\Ot@qBfKs@tD{@nEKd@S|@Id@Kj@?@ABABMH""},
                        Steps:            nil,
                        TransitDetails:   (*maps.TransitDetails)(nil),
                        TravelMode:       ""DRIVING"",
                    },
                    &maps.Step{
                        HTMLInstructions: ""Merge onto FL-84 W"",
                        Distance:         maps.Distance{HumanReadable:""0.8 mi"", Meters:1365},
                        Duration:         96000000000,
                        StartLocation:    maps.LatLng{Lat:26.0963976, Lng:-80.2371076},
                        EndLocation:      maps.LatLng{Lat:26.0994367, Lng:-80.25034819999999},
                        Polyline:         maps.Polyline{Points:""o}g~C|hvhNq@~EG`@_@`C_@jCWrBc@dDi@zDyAnJUvAM|@WnBMz@I|@OlAQ|AWrBQ|AKv@SxAWzASpAUnAYpAI`@""},
                        Steps:            nil,
                        TransitDetails:   (*maps.TransitDetails)(nil),
                        TravelMode:       ""DRIVING"",
                    },
                    &maps.Step{
                        HTMLInstructions: ""Turn left onto S University Dr"",
                        Distance:         maps.Distance{HumanReadable:""1.7 mi"", Meters:2808},
                        Duration:         279000000000,
                        StartLocation:    maps.LatLng{Lat:26.0994367, Lng:-80.25034819999999},
                        EndLocation:      maps.LatLng{Lat:26.07466, Lng:-80.25254079999999},
                        Polyline:         maps.Polyline{Points:""oph~Ct{xhNKf@t@ND@h@Hd@JRBD@bBZfANl@Jx@JtALr@HjBLd@@pBJR@~BDT?z@AhBAt@A`CCfAArAC~@AfAAfBETA~GIlBCvHK|EGbFIr@AvDGR?jB?dC?N?pCDpCLl@FlBRPBl@Fh@HxCf@hGpAn@NzB`@VBx@LtAN~@Ht@FrAJ""},
                        Steps:            nil,
                        TransitDetails:   (*maps.TransitDetails)(nil),
                        TravelMode:       ""DRIVING"",
                    },
                    &maps.Step{
                        HTMLInstructions: ""Make a U-turnDestination will be on the left"",
                        Distance:         maps.Distance{HumanReadable:""0.2 mi"", Meters:242},
                        Duration:         38000000000,
                        StartLocation:    maps.LatLng{Lat:26.07466, Lng:-80.25254079999999},
                        EndLocation:      maps.LatLng{Lat:26.0765145, Lng:-80.25211829999999},
                        Polyline:         maps.Polyline{Points:""suc~CjiyhN@i@g@EwAIC?sAMYCm@Iy@M[E@T""},
                        Steps:            nil,
                        TransitDetails:   (*maps.TransitDetails)(nil),
                        TravelMode:       ""DRIVING"",
                    },
                },
                Distance:          maps.Distance{HumanReadable:""13.4 mi"", Meters:21510},
                Duration:          1243000000000,
                DurationInTraffic: 0,
                ArrivalTime:       time.Time{},
                DepartureTime:     time.Time{},
                StartLocation:     maps.LatLng{Lat:26.0112983, Lng:-80.1494921},
                EndLocation:       maps.LatLng{Lat:26.0765145, Lng:-80.25211829999999},
                StartAddress:      ""Hollywood, FL, USA"",
                EndAddress:        ""Davie, FL, USA"",
            },
        },
        WaypointOrder:    {},
        OverviewPolyline: maps.Polyline{Points:""siw}CheehNCwAAi@U??|ABpAJVNtVHtHDxEH~FGJAL?PEXGJSNUD]N_@XY\\Ub@Od@Ih@Ch@Fp@Tz@R^t@p@\\P`@JXRJPDVDdFH~NBjDCbC]x@YNQDkBBqCPgNvAWDSRsCNuEH_GF_CByQLqBA{BGuBQ_Ec@_Do@uD_AkIgCgEiAgE_AeEy@wDo@_Fm@yC_@eM{@eZqBoSuAqZsBsE[sCMeCEaB?{EHmTp@}ETkGp@{Dp@oTbEmMdCaIzAkI~AmH`BgKhCsHtBMKMAy@L{M`C}Dx@aCVyBLeCByAEoBKoBI}ABgAL_AX}@b@{@n@e@h@e@v@i@tAGXQfACTEfBDvBJrEAxCG`CInBBHDFMhBUrDkAlQkAhQSjDQlFIrLJx^HzLBbPChBGbCQdCMlB[bDi@xDg@tCs@bDu@zCc@zAkAtC_@dAkJnTyEbMgC`JaBlH[nAsDjSm@xCoC`NiAnH_@vCaAtHiAlJs@|EiAzH_DxS]rAeD|PeBxIOt@MHq@~Eg@bDeC`RuCtRy@dHiAbJk@lDo@`DUhAz@PhBZjDj@fBVhCVpCNdCLtCD|IIbHIjOUlX_@jEGpF?`DDpCLl@F~BVvAPxCf@hGpAjDp@pAPtCXhCR@i@g@E{AImBQgBW[E@T""},
        Bounds:           maps.LatLngBounds{
            NorthEast: maps.LatLng{Lat:26.0994988, Lng:-80.14883689999999},
            SouthWest: maps.LatLng{Lat:26.0110222, Lng:-80.25254079999999},
        },
        Copyrights: ""Map data ©2016 Google"",
        Warnings:   {},
    },
}
",10455
326,36492006,"go version
heroku login
go get github.com/heroku/go-getting-started/cmd/...
cd %GOPATH%/src/github.com/heroku/go-getting-started
git remote -v
heroku create
git push heroku master
heroku open
heroku ps:scale web=1

go get -u github.com/tools/godep
godep restore
go get -u github.com/russross/blackfriday

notepad Godeps/Godeps.json
notepad cmd\go-getting-started\main.go
godep save ./...


go install ./...
heroku local

git add -A .
git commit -m ""Markdown demo dependency""
git push heroku master
heroku open mark
",515
327,36492006,"Microsoft Windows [Version 10.0.10240]
(c) 2015 Microsoft Corporation. All rights reserved.

C:\Windows\system32>go version
go version go1.6 windows/amd64

C:\Windows\system32>heroku login
Enter your Heroku credentials.
Email: 01.mandar@gmail.com
Password (typing will be hidden):
Logged in as 01.mandar@gmail.com

C:\Windows\system32>go get github.com/heroku/go-getting-started/cmd/...

C:\Windows\system32>cd %GOPATH%/src/github.com/heroku/go-getting-started

c:\Go\src\github.com\heroku\go-getting-started>git remote -v
origin  https://github.com/heroku/go-getting-started (fetch)
origin  https://github.com/heroku/go-getting-started (push)

c:\Go\src\github.com\heroku\go-getting-started>heroku create
Creating app... done, stack is cedar-14
https://lit-lake-35772.herokuapp.com/ | https://git.heroku.com/lit-lake-35772.git

c:\Go\src\github.com\heroku\go-getting-started>git push heroku master
Counting objects: 353, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (225/225), done.
Writing objects: 100% (353/353), 203.07 KiB | 0 bytes/s, done.
Total 353 (delta 70), reused 353 (delta 70)
remote: Compressing source files... done.
remote: Building source:
remote:
remote: -----> Go app detected
remote: -----> Checking Godeps/Godeps.json file.
remote: -----> Installing go1.6... done
remote: -----> Running: go install -v -tags heroku ./...
remote: github.com/heroku/go-getting-started/vendor/gopkg.in/bluesuncorp/validator.v5
remote: github.com/heroku/go-getting-started/vendor/github.com/gin-gonic/gin/render
remote: github.com/heroku/go-getting-started/vendor/github.com/manucorporat/sse
remote: github.com/heroku/go-getting-started/vendor/github.com/mattn/go-colorable
remote: github.com/heroku/go-getting-started/vendor/golang.org/x/net/context
remote: github.com/heroku/go-getting-started/vendor/github.com/gin-gonic/gin/binding
remote: github.com/heroku/go-getting-started/vendor/github.com/mattn/go-isatty
remote: github.com/heroku/go-getting-started/vendor/github.com/gin-gonic/gin
remote: github.com/heroku/go-getting-started/cmd/go-getting-started
remote: -----> Discovering process types
remote:        Procfile declares types -> web
remote:
remote: -----> Compressing...
remote:        Done: 3.1M
remote: -----> Launching...
remote:        Released v3
remote:        https://lit-lake-35772.herokuapp.com/ deployed to Heroku
remote:
remote: Verifying deploy... done.
To https://git.heroku.com/lit-lake-35772.git
 * [new branch]      master -> master

c:\Go\src\github.com\heroku\go-getting-started>heroku open

c:\Go\src\github.com\heroku\go-getting-started>go get -u github.com/tools/godep

c:\Go\src\github.com\heroku\go-getting-started> godep restore

c:\Go\src\github.com\heroku\go-getting-started>
c:\Go\src\github.com\heroku\go-getting-started>go get -u github.com/russross/blackfriday

c:\Go\src\github.com\heroku\go-getting-started>notepad Godeps/Godeps.json

c:\Go\src\github.com\heroku\go-getting-started>notepad cmd\go-getting-started\main.go

c:\Go\src\github.com\heroku\go-getting-started>godep save ./...

c:\Go\src\github.com\heroku\go-getting-started>notepad Godeps/Godeps.json

c:\Go\src\github.com\heroku\go-getting-started>
c:\Go\src\github.com\heroku\go-getting-started>go install ./...

c:\Go\src\github.com\heroku\go-getting-started>heroku local
[OKAY] Loaded ENV .env File as KEY=VALUE Format
[OKAY] Trimming display Output to 98 Columns
10:01:41 AM web.1 |  [GIN-debug] [WARNING] Running in ""debug"" mode. Switch to ""release"" mode in production.
10:01:41 AM web.1 |   - using env:      export GIN_MODE=release
10:01:41 AM web.1 |   - using code:     gin.SetMode(gin.ReleaseMode)
10:01:41 AM web.1 |  [GIN-debug] GET   /static/*filepath         --> github.com/heroku/go-getting-started/vendor/github…
10:01:41 AM web.1 |  [GIN-debug] HEAD  /static/*filepath         --> github.com/heroku/go-getting-started/vendor/github…
10:01:41 AM web.1 |  [GIN-debug] GET   /mark                     --> main.main.func1 (2 handlers)
10:01:41 AM web.1 |  [GIN-debug] Listening and serving HTTP on :5000
10:01:56 AM web.1 |  [GIN] 2016/04/08 - 10:01:56 | 404 |             0 | [::1]:50713 |   GET     /
10:02:15 AM web.1 |  [GIN] 2016/04/08 - 10:02:15 | 200 |             0 | [::1]:50714 |   GET     /mark
[WARN] Interrupted by User
[DONE] Killing all processes with signal  SIGINT
10:02:32 AM web.1 Exited Abnormally
Terminate batch job (Y/N)? y

c:\Go\src\github.com\heroku\go-getting-started>git add -A .
warning: LF will be replaced by CRLF in Godeps/Godeps.json.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Godeps/Readme.
The file will have its original line endings in your working directory.

c:\Go\src\github.com\heroku\go-getting-started>git commit -m ""Markdown demo dependency""
[master warning: LF will be replaced by CRLF in Godeps/Godeps.json.
The file will have its original line endings in your working directory.
44f22d6] Markdown demo dependency
warning: LF will be replaced by CRLF in Godeps/Godeps.json.
The file will have its original line endings in your working directory.
 12 files changed, 5500 insertions(+), 7 deletions(-)
 create mode 100644 vendor/github.com/russross/blackfriday/.gitignore
 create mode 100644 vendor/github.com/russross/blackfriday/.travis.yml
 create mode 100644 vendor/github.com/russross/blackfriday/LICENSE.txt
 create mode 100644 vendor/github.com/russross/blackfriday/README.md
 create mode 100644 vendor/github.com/russross/blackfriday/block.go
 create mode 100644 vendor/github.com/russross/blackfriday/html.go
 create mode 100644 vendor/github.com/russross/blackfriday/inline.go
 create mode 100644 vendor/github.com/russross/blackfriday/latex.go
 create mode 100644 vendor/github.com/russross/blackfriday/markdown.go
 create mode 100644 vendor/github.com/russross/blackfriday/smartypants.go

c:\Go\src\github.com\heroku\go-getting-started>git push heroku master
Counting objects: 21, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (17/17), done.
Writing objects: 100% (21/21), 39.28 KiB | 0 bytes/s, done.
Total 21 (delta 3), reused 9 (delta 0)
remote: Compressing source files... done.
remote: Building source:
remote:
remote: -----> Using set buildpack heroku/go
remote: -----> Go app detected
remote: -----> Checking Godeps/Godeps.json file.
remote: -----> Using go1.6
remote: -----> Running: go install -v -tags heroku ./...
remote: vendor/github.com/russross/blackfriday/block.go:19:2: cannot find package ""github.com/shurcooL/sanitized_anchor_name"" in any of:
remote:         /tmp/build_36053c1b0568bf24dcdcf90c103b1104/.heroku/go/src/github.com/heroku/go-getting-started/vendor/github.com/shurcooL/sanitized_anchor_name (vendor tree)
remote:         /app/tmp/cache/go1.6/go/src/github.com/shurcooL/sanitized_anchor_name (from $GOROOT)
remote:         /tmp/build_36053c1b0568bf24dcdcf90c103b1104/.heroku/go/src/github.com/shurcooL/sanitized_anchor_name (from $GOPATH)
remote:
remote:  !     Push rejected, failed to compile Go app
remote:
remote: Verifying deploy....
remote:
remote: !       Push rejected to lit-lake-35772.
remote:
To https://git.heroku.com/lit-lake-35772.git
 ! [remote rejected] master -> master (pre-receive hook declined)
error: failed to push some refs to 'https://git.heroku.com/lit-lake-35772.git'

c:\Go\src\github.com\heroku\go-getting-started>heroku open mark

c:\Go\src\github.com\heroku\go-getting-started>
",7441
328,36746256,"package main

import (
    ""flag""
    ""github.com/Shopify/sarama""
    ""log""
    ""os""
    ""fmt""
    ""strings""
    ""github.com/hpcloud/tail""
    ""github.com/spf13/viper""
    //""io/ioutil""
    ""reflect""
)



func produce(producer sarama.SyncProducer, cfg *sarama.Config, brokers *string, topic string, logger *log.Logger, log string, t *tail.Tail){
    logger.Printf(""Entering produce"")
    logger.Println(strings.Split(*brokers, "",""))
    logger.Println(reflect.TypeOf(strings.Split(*brokers, "","")))
    logger.Println(log)
    /*t, err := tail.TailFile(log, tail.Config{Follow: true, ReOpen: true})
    if err != nil {
        fmt.Println(fmt.Errorf(""Error with tail: %v\n"", err.Error()))
    }*/
    for line := range t.Lines {
        //logger.Println(line)
        //logger.Println(line.Text)
        msg := &sarama.ProducerMessage{Topic: topic, Value: sarama.StringEncoder(line.Text)}
        _, _, err := producer.SendMessage(msg)
        if err != nil {
            logger.Printf(""FAILED to send message: %s\n"", err)
        }
    }

}


func main() {
    //Getting config file params
    viper.SetConfigName(""config"") 
    viper.AddConfigPath(""/root/work/src/linux2kafka/"")
    err := viper.ReadInConfig()
    if err != nil {
        panic(err)
    }
    viper.WatchConfig()
    logList := viper.Get(""log_list"")
    //logListString, err := ioutil.ReadFile(logList.(string))
    //fmt.Println(logList)
    //fmt.Println(reflect.TypeOf(logList))
    logsConfig := strings.Split(logList.(string),"","")
    // print logs to watch
    /*for i := range logsConfig {
        fmt.Println(logsConfig[i])
    }*/
    brokerList := viper.Get(""brokerList"")
    brokers := flag.String(""brokers"", brokerList.(string), ""Comma separated kafka brokers list"") //must be set in config.toml
    topic := flag.String(""topic"", ""test0"", ""Kafka topic to send messages to"")
    flag.Parse()
    logger := log.New(os.Stdout, ""producer "", log.Lmicroseconds)
    cfg := sarama.NewConfig()
    //Wait for replication
    cfg.Producer.RequiredAcks = -1
    cfg.Producer.Flush.Frequency = 333
    cfg.Producer.Flush.Messages = 1000
    cfg.Producer.Flush.MaxMessages = 3000
    producer, err := sarama.NewSyncProducer(strings.Split(*brokers, "",""), cfg)
    if err != nil {
        logger.Fatalln(err)
    }

    defer func() {
        if err := producer.Close(); err != nil {
            logger.Fatalln(err)
        }
    }()
    for i := range logsConfig {
        fmt.Println(""go"")
        t, err := tail.TailFile(logsConfig[i], tail.Config{Follow: true, ReOpen: true})
        if err != nil {
            fmt.Println(fmt.Errorf(""Error with tail: %v\n"", err.Error()))
        }
        go produce(producer, cfg, brokers, *topic, logger, logsConfig[i], t)
        }
}
",2743
329,36746256,"root@home:~/work/src/linux2kafka# go run main.go
go
producer 15:54:44.297745 Entering produce
root@home:~/work/src/linux2kafka# go run main.go
go
root@home:~/work/src/linux2kafka# go run main.go
go
root@home:~/work/src/linux2kafka# go run main.go
go
producer 15:55:01.951155 Entering produce
producer 15:55:01.951193 [localhost:9092 localhost:9092]
producer 15:55:01.951205 []string
producer 15:55:01.951214 /root/work/src/linux2kafka/test/log
panic: send on closed channel

goroutine 56 [running]:
panic(0x756440, 0xc820164290)
    /usr/local/go/src/runtime/panic.go:464 +0x3e6
github.com/Shopify/sarama.(*syncProducer).SendMessage(0xc8201742a0, 0xc820176300, 0x0, 0x0, 0x0, 0x0)
    /root/work/src/github.com/Shopify/sarama/sync_producer.go:66 +0x156
main.produce(0x7f65528661b8, 0xc8201742a0, 0xc82008ea20, 0xc82000b230, 0x8855c0, 0x5, 0xc8200789b0, 0xc820011320, 0x23, 0xc82017e000)
    /root/work/src/linux2kafka/main.go:31 +0x5d2
created by main.main
    /root/work/src/linux2kafka/main.go:85 +0x9f7
exit status 2
",1020
330,36746256,"package main

import (
    ""flag""
    ""github.com/Shopify/sarama""
    ""log""
    ""os""
    ""fmt""
    ""strings""
    ""github.com/hpcloud/tail""
    ""github.com/spf13/viper""
    //""io/ioutil""
    //""reflect""
)



//func produce(producer sarama.SyncProducer, cfg *sarama.Config, brokers *string, topic string, logger *log.Logger, log string, t *tail.Tail){
func produce(cfg *sarama.Config, brokers *string, topic string, logger *log.Logger, log string, t *tail.Tail){
    logger.Println(""Entering produce"")
    /*logger.Println(strings.Split(*brokers, "",""))
    logger.Println(reflect.TypeOf(strings.Split(*brokers, "","")))
    logger.Println(log)*/
    logger.Printf(""sarama.NewSyncProducer"")
    producer, err := sarama.NewSyncProducer(strings.Split(*brokers, "",""), cfg)
    if err != nil {
        logger.Fatalln(err)
    }
    defer func() {
        if err := producer.Close(); err != nil {
            logger.Fatalln(err)
        }
    }()

    /*t, err := tail.TailFile(log, tail.Config{Follow: true, ReOpen: true})
    if err != nil {
        fmt.Println(fmt.Errorf(""Error with tail: %v\n"", err.Error()))
    }*/
    for line := range t.Lines {
        //logger.Println(line)
        //logger.Println(line.Text)
        logger.Printf(""ProduceMessage"")
        msg := &sarama.ProducerMessage{Topic: topic, Value: sarama.StringEncoder(line.Text)}
        _, _, err := producer.SendMessage(msg)
        if err != nil {
            logger.Printf(""FAILED to send message: %s\n"", err)
        }
    }

}


func main() {
    //Getting config file params
    viper.SetConfigName(""config"") 
    viper.AddConfigPath(""/root/work/src/linux2kafka/"")
    err := viper.ReadInConfig()
    if err != nil {
        panic(err)
    }
    viper.WatchConfig()
    logList := viper.Get(""log_list"")
    //logListString, err := ioutil.ReadFile(logList.(string))
    //fmt.Println(logList)
    //fmt.Println(reflect.TypeOf(logList))
    logsConfig := strings.Split(logList.(string),"","")
    // print logs to watch
    /*for i := range logsConfig {
        fmt.Println(logsConfig[i])
    }*/
    brokerList := viper.Get(""brokerList"")
    brokers := flag.String(""brokers"", brokerList.(string), ""Comma separated kafka brokers list"") //must be set in config.toml
    topic := flag.String(""topic"", ""test0"", ""Kafka topic to send messages to"")
    flag.Parse()
    logger := log.New(os.Stdout, ""producer "", log.Lmicroseconds)
    cfg := sarama.NewConfig()
    //Wait for replication
    cfg.Producer.RequiredAcks = -1
    cfg.Producer.Flush.Frequency = 333
    cfg.Producer.Flush.Messages = 1000
    cfg.Producer.Flush.MaxMessages = 3000
    for i := range logsConfig {
        fmt.Println(""go"")
        t, err := tail.TailFile(logsConfig[i], tail.Config{Follow: true, ReOpen: true})
        if err != nil {
            fmt.Println(fmt.Errorf(""Error with tail: %v\n"", err.Error()))
        }
        go produce(cfg, brokers, *topic, logger, logsConfig[i], t)
        }
}
",2937
331,36746256,"root@home:~/work/src/linux2kafka# go run main.go
go
root@home:~/work/src/linux2kafka# go run main.go
go
root@home:~/work/src/linux2kafka# go run main.go
go
",156
332,37130254,"//////////////////////////////////////////////////////////
// GitAddCommitPush
func GitAddCommitPush(userName string, dir string, message string, firstCommit bool) error {

    ///////////////////////////////////////////////////////////////////////
    // Add
    //
    // 1 Open repository
    repo, err := git.OpenRepository(dir)
    if err != nil {
        beego.Error(""OpenRepository - "", err)
    }

    // 2 Retrieve index
    index, err := repo.Index()
    if err != nil {
        beego.Error(""Index - "", err)
    }

    // 3 Remember if we had conflicts before we added everything to the index
    indexHadConflicts := index.HasConflicts()

    // 4 Add everything to the index
    err = index.AddAll([]string{}, git.IndexAddDefault, nil)
    if err != nil {
        beego.Error(""AddAll - "", err)
    }

    // 5 Write the index (so git knows about it)
    err = index.Write()
    if err != nil {
        beego.Error(""Write - "", err)
    }

    // 6 Write the current index tree to the repo
    treeId, err := index.WriteTreeTo(repo)
    if err != nil {
        beego.Error(""WriteTreeTo - "", err)
    }

    /////////////////////////////////////////////////////////////////////////////////////////////
    // Commit
    //
    // 1 Retrieve the tree we just wrote (git's reference of it that it made in the last step)
    tree, err := repo.LookupTree(treeId)
    if err != nil {
        beego.Error(""LookupTree - "", err)
    }

    // 2 Create a signature
    sig := &git.Signature{
        Name:  userName,
        Email: userName + ""@"" + beego.AppConfig.String(""userdata::emailserver""),
        When:  time.Now(),
    }

    // 3 Get remote now (as we need it for both, fetch and later push )
    remote, err := repo.LookupRemote(""origin"")
    if err != nil {
        remote, err = repo.CreateRemote(""origin"", repo.Path())
        if err != nil {
            beego.Error(""CreateRemote - "", err)
        }
    }

    // 4 Read the remote branch
    remoteBranch, err := repo.LookupReference(""refs/remotes/origin/master"")
    if err != nil {
        beego.Error(""Fetch 2 - "", err)
    }

    // 5 Determine if this is a first commit ...
    if firstCommit == true {

        // 5a ... then create a new one
        _, err = repo.CreateCommit(""HEAD"", sig, sig, message, tree)

    } else {

        // 5b ... or retrieve current head
        currentBranch, err := repo.Head()
        if err != nil {
            beego.Error(""Head - "", err)
        }

        // 6 Retrieve current commit
        currentTip, err := repo.LookupCommit(currentBranch.Target())
        if err != nil {
            beego.Error(""LookupCommit - "", err)
        }

        // 7 Create a new one on top
        currentCommit, err := repo.CreateCommit(""HEAD"", sig, sig, message, tree, currentTip)
        if err != nil {
            beego.Error(""CreateCommit - "", err)
        }

        ////////////////////////////////////////////////////////////////////////////////////
        // Merge commit (in case of -- now hopefully resolved -- conflicts)
        //
        // 1 If there were conflicts, do the merge commit
        if indexHadConflicts == true {

            // 2 Retrieve the local commit
            localCommit, err := repo.LookupCommit(currentCommit)
            if err != nil {
                beego.Error(""Fetch 11 - "", err)
            }

            // 3 Retrieve the remote commit
            remoteCommit, err := repo.LookupCommit(remoteBranch.Target())
            if err != nil {
                beego.Error(""Fetch 12 - "", err)
            }

            // 4 Create a new one
            repo.CreateCommit(""HEAD"", sig, sig, ""Merge commit"", tree, localCommit, remoteCommit)

            // 5 Clean up
            repo.StateCleanup()
        }

        ///////////////////////////////////////////////////////////////////////////////////
        // Pull (Fetch and Commit)
        //
        // 1 Fetch it (pull without commit)
        err = remote.Fetch([]string{}, nil, """")
        if err != nil {
            beego.Error(""Fetch 1 - "", err)
        }

        // 2 Perform an annotated commit
        annotatedCommit, err := repo.AnnotatedCommitFromRef(remoteBranch)
        if err != nil {
            beego.Error(""Fetch 3 - "", err)
        }

        // 3 Do the merge analysis
        mergeHeads := make([]*git.AnnotatedCommit, 1)
        mergeHeads[0] = annotatedCommit
        analysis, _, err := repo.MergeAnalysis(mergeHeads)
        if err != nil {
            beego.Error(""Fetch 4 - "", err)
        }

        // 4 Check if something happend
        if analysis&git.MergeAnalysisUpToDate == 0 && analysis&git.MergeAnalysisNormal != 0 {

            // 5 Yes! First just merge changes
            if err := repo.Merge([]*git.AnnotatedCommit{annotatedCommit}, nil, nil); err != nil {
                beego.Error(""Fetch 5 - "", err)
            }

            // 6 Retrieve the index after that treatment
            index, err := repo.Index()
            if err != nil {
                beego.Error(""Fetch 6 - "", err)
            }

            // 7 Check for conflicts
            if index.HasConflicts() {

                // 7a There are not automaticly solvable conflicts ... give them back to the user
                beego.Trace(""Conflicts! Write new index and return."", index)
                err = index.Write()
                if err != nil {
                    beego.Error(""Write - "", err)
                }

                return errors.New(""Conflicts"")
            }

            // 8 Write the new tree
            treeId, err := index.WriteTree()
            if err != nil {
                beego.Error(""Fetch 9 - "", err)
            }

            // 9 Retrieve the new tree
            tree, err := repo.LookupTree(treeId)
            if err != nil {
                beego.Error(""Fetch 10 - "", err)
            }

            // 10 Retrieve the local commit
            localCommit, err := repo.LookupCommit(currentCommit)
            if err != nil {
                beego.Error(""Fetch 11 - "", err)
            }

            // 11 Retrieve the remote commit
            remoteCommit, err := repo.LookupCommit(remoteBranch.Target())
            if err != nil {
                beego.Error(""Fetch 12 - "", err)
            }

            // 12 Create a new one
            repo.CreateCommit(""HEAD"", sig, sig, ""Merge commit"", tree, localCommit, remoteCommit)

            // 13 Clean up
            repo.StateCleanup()
        }
    }

    //////////////////////////////////////////////////////////////////////////////////////////////////////
    // Push
    err = remote.Push([]string{""refs/heads/master""}, nil, sig, message)
    if err != nil {
        beego.Error(""Push - "", err)
    }

    return err
}
",6732
333,37318224,"I tried to do as much i could please suggest and help . 
I use this method please comment and suggest.  
https://play.golang.org/p/kb0HF8ykHW

  package main;
    import (
        ""fmt""
        ""encoding/xml""  
    )

    func main(){
    dxml := `
    
    
        X0306
        4
        2015-11-18
        
            0000820081
            CAMBREX CORP
            CBM
        
        
            
                0001227832
                KORB WILLIAM B
            
            
                1 MEADOWLANDS PLAZA
                
                EAST RUTHERFORD
                NJ
                07073
                
            
            
                1
                0
                0
                0
            
        
        
            
                
                    Common Stock
                
                
                    2015-11-18
                
                
                    4
                    S
                    0
                
                
                    
                        10000
                    
                    
                        50.18
                        
                    
                    
                        D
                    
                
                
                    
                        36562
                    
                
                
                    
                        D
                    
                    
                        
                    
                
            
        
        
            The price reported in Column 4 is a weighted average price. These shares were sold in multiple transactions at prices ranging from $50.00 to $50.58 inclusive. The reporting person undertakes to provide to Cambrex Corporation, any security holder of Cambrex Corporation, or the staff of the Securities and Exchange Commission, upon request, full information regarding the number of shares sold at each separate price within the range set forth in this Footnote 1 to this Form 4.
        
        
        
            Samantha Hanley for William B. Korb by POA
            2015-11-20
        
    

    `

        defer func() {
            if errD := recover(); errD != nil {
                    fmt.Println(""!!!!!!!!!!!!!!!!Panic Occured and Recovered in func main(), Error Info: "", errD)
                }
        }()

        var Owner Ownershipdocs 

        err := xml.Unmarshal([]byte(dxml), &Owner)
            fmt.Println(""xml.unmarshal error info :"",err)
                fmt.Println(""SchemaVersion : "",Owner.SchemaVersion)
                fmt.Println(""DocumentType : "",Owner.DocumentType)
                fmt.Println(""PeriodOfReport : "",Owner.PeriodOfReport)
                fmt.Println(""IssuerCik : "",Owner.IssuerCik)
                fmt.Println(""IssuerName : "",Owner.IssuerName)
                fmt.Println(""IssuerTradingSymbol : "",Owner.IssuerTradingSymbol)
                fmt.Println(""RptOwnerCik : "",Owner.RptOwnerCik)
                fmt.Println(""RptOwnerName : "",Owner.RptOwnerName)
                fmt.Println(""RptOwnerStreet1 : "",Owner.RptOwnerStreet1)
                fmt.Println(""RptOwnerCity :  "",Owner.RptOwnerCity)
                fmt.Println(""RptOwnerState : "",Owner.RptOwnerState)
                fmt.Println(""RptOwnerZipCode : "",Owner.RptOwnerZipCode)
                fmt.Println(""IsDirector : "",Owner.IsDirector)   
                fmt.Println(""IsOfficer :  "",Owner.IsOfficer)

                fmt.Println(""IsTenPercentOwner : "",Owner.IsTenPercentOwner)
                fmt.Println(""IsOther : "",Owner.IsOther)
                fmt.Println(""SecurityTitleValue : "",Owner.SecurityTitleValue)
                fmt.Println(""TransactionDatevalue : "",Owner.TransactionDatevalue)
                fmt.Println(""TransactionFormType : "",Owner.TransactionFormType)
                fmt.Println(""TransactionCode : "",Owner.TransactionCode)
                fmt.Println(""EquitySwapInvolved : "",Owner.EquitySwapInvolved)
                fmt.Println(""TransactionSharesValue : "",Owner.TransactionSharesValue)
                fmt.Println(""TransactionPricePerShareValue : "",Owner.TransactionPricePerShareValue)
                fmt.Println(""TransactionPricePerSharefootnoteId :  "",Owner.TransactionPricePerSharefootnoteId)
                fmt.Println(""TransactionAcquiredDisposedCodeValue : "",Owner.TransactionAcquiredDisposedCodeValue)

                fmt.Println(""Footnote.Footnote : "",Owner.Footnote.Footnote)
                fmt.Println(""OwnerSignaturesignatureName : "",Owner.OwnerSignaturesignatureName)
                fmt.Println(""OwnerSignaturesignatureDate    : "",Owner.OwnerSignaturesignatureDate)  

    }

    type Ownershipdocs struct{
        SchemaVersion           string `xml:""schemaVersion""`
        DocumentType            string `xml:""documentType""`
        PeriodOfReport          string `xml:""periodOfReport""`
        IssuerCik               string `xml:""issuer>issuerCik""`
        IssuerName              string `xml:""issuer>issuerName""`
        IssuerTradingSymbol     string `xml:""issuer>issuerTradingSymbol""`
        RptOwnerCik             string `xml:""reportingOwner>reportingOwnerId>rptOwnerCik""`
        RptOwnerName            string `xml:""reportingOwner>reportingOwnerId>rptOwnerName""`

        RptOwnerStreet1         string `xml:""reportingOwner>reportingOwnerAddress>rptOwnerStreet1""`
        RptOwnerCity            string `xml:""reportingOwner>reportingOwnerAddress>rptOwnerCity""`
        RptOwnerState           string `xml:""reportingOwner>reportingOwnerAddress>rptOwnerState""`
        RptOwnerZipCode         string `xml:""reportingOwner>reportingOwnerAddress>rptOwnerZipCode""`

        IsDirector              string `xml:""reportingOwner>reportingOwnerRelationship>isDirector""`
        IsOfficer               string `xml:""reportingOwner>reportingOwnerRelationship>isOfficer""`  
        IsTenPercentOwner       string `xml:""reportingOwner>reportingOwnerRelationship>isTenPercentOwner""`
        IsOther                 string `xml:""reportingOwner>reportingOwnerRelationship>isOther""`        

        SecurityTitleValue      string `xml:""nonDerivativeTable>nonDerivativeTransaction>securityTitle>value""`
        TransactionDatevalue    string `xml:""nonDerivativeTable>nonDerivativeTransaction>transactionDate>value""`    
        TransactionFormType     string `xml:""nonDerivativeTable>nonDerivativeTransaction>transactionCoding>transactionFormType""`
        TransactionCode         string `xml:""nonDerivativeTable>nonDerivativeTransaction>transactionCoding>transactionCode""`
        EquitySwapInvolved      string `xml:""nonDerivativeTable>nonDerivativeTransaction>transactionCoding>equitySwapInvolved""`


        TransactionSharesValue                  string `xml:""nonDerivativeTable>nonDerivativeTransaction>transactionAmounts>transactionShares>value""`
        TransactionPricePerShareValue           string `xml:""nonDerivativeTable>nonDerivativeTransaction>transactionAmounts>transactionPricePerShare>value""`
        TransactionPricePerSharefootnoteId      string `xml:""nonDerivativeTable>nonDerivativeTransaction>transactionAmounts>transactionPricePerShare>footnoteId""`
        TransactionAcquiredDisposedCodeValue    string `xml:""nonDerivativeTable>nonDerivativeTransaction>transactionAmounts>transactionAcquiredDisposedCode>value""`

        SharesOwnedFollowingTransactionValue    string `xml:""nonDerivativeTable>nonDerivativeTransaction>ownershipNature>directOrIndirectOwnership>value""`

        Footnote                                Footnotes   `xml:""footnotes""`
        OwnerSignaturesignatureName             string       `xml:""ownerSignature>signatureName""`
        OwnerSignaturesignatureDate             string       `xml:""ownerSignature>signatureDate""`

    }

    type Footnotes struct{
        ID          string `xml:""id,attr""`
        Footnote    string `xml:""footnote""`

    }
",7933
334,37529203,"{
  ""error"": ""SearchPhaseExecutionException[Failed to execute phase [query], all shards failed; shardFailures {[9m4uVcf3TLmQ9Kr7z_fSpQ][text][0]: QueryPhaseExecutionException[[text][0]: query[filtered(function score (blended(terms: [url_words:test, domain_words:test, title:test, body:test]), functions: [{filter(*:*), function [org.elasticsearch.common.lucene.search.function.FieldValueFactorFunction@56319fc9]}{filter(*:*), function [org.elasticsearch.common.lucene.search.function.FieldValueFactorFunction@60b46f02]}]))->cache(_type:page)],from[0],size[25]: Query Failed [Failed to execute main query]]; nested: ElasticsearchException[Missing value for field [lang_en]]; }{[9m4uVcf3TLmQ9Kr7z_fSpQ][text][1]: QueryPhaseExecutionException[[text][1]: query[filtered(function score (blended(terms: [url_words:test, domain_words:test, title:test, body:test]), functions: [{filter(*:*), function [org.elasticsearch.common.lucene.search.function.FieldValueFactorFunction@3ca7d41e]}{filter(*:*), function [org.elasticsearch.common.lucene.search.function.FieldValueFactorFunction@63daf999]}]))->cache(_type:page)],from[0],size[25]: Query Failed [Failed to execute main query]]; nested: ElasticsearchException[Missing value for field [lang_en]]; }{[9m4uVcf3TLmQ9Kr7z_fSpQ][text][2]: QueryPhaseExecutionException[[text][2]: query[filtered(function score (blended(terms: [url_words:test, domain_words:test, title:test, body:test]), functions: [{filter(*:*), function [org.elasticsearch.common.lucene.search.function.FieldValueFactorFunction@27521539]}{filter(*:*), function [org.elasticsearch.common.lucene.search.function.FieldValueFactorFunction@66dbac2b]}]))->cache(_type:page)],from[0],size[25]: Query Failed [Failed to execute main query]]; nested: ElasticsearchException[Missing value for field [lang_en]]; }{[9m4uVcf3TLmQ9Kr7z_fSpQ][text][3]: QueryPhaseExecutionException[[text][3]: query[filtered(function score (blended(terms: [url_words:test, domain_words:test, title:test, body:test]), functions: [{filter(*:*), function [org.elasticsearch.common.lucene.search.function.FieldValueFactorFunction@73bb4f5e]}{filter(*:*), function [org.elasticsearch.common.lucene.search.function.FieldValueFactorFunction@112dcf1c]}]))->cache(_type:page)],from[0],size[25]: Query Failed [Failed to execute main query]]; nested: ElasticsearchException[Missing value for field [lang_en]]; }{[9m4uVcf3TLmQ9Kr7z_fSpQ][text][4]: QueryPhaseExecutionException[[text][4]: query[filtered(function score (blended(terms: [url_words:test, domain_words:test, title:test, body:test]), functions: [{filter(*:*), function [org.elasticsearch.common.lucene.search.function.FieldValueFactorFunction@b650549]}{filter(*:*), function [org.elasticsearch.common.lucene.search.function.FieldValueFactorFunction@7fbe90f4]}]))->cache(_type:page)],from[0],size[25]: Query Failed [Failed to execute main query]]; nested: ElasticsearchException[Missing value for field [lang_en]]; }]"",
  ""status"": 500
}
",2956
335,37529203,"{
      ""query"": {
        ""function_score"": {
          ""query"": {
            ""multi_match"": {
              ""query"": ""test"",
              ""minimum_should_match"": ""-25%"",
              ""type"": ""cross_fields"",
                  ""tie_breaker"": 0.5,
                  ""fields"": [""title^3"", ""body"", ""url_words^2"", ""domain_words^8""]
            }

          },
          ""functions"": [{
                ""field_value_factor"": {
              ""field"": ""rank"",
              ""factor"": 1
            }
        },{
                        ""field_value_factor"": {
                ""field"": ""lang_en""
            }
                }]
        }
      },
      ""from"": 0,
      ""size"": 25
    }
",683
336,37529203,field_value_factor,18
337,37529203,"{
  ""error"": ""SearchPhaseExecutionException[Failed to execute phase [query], all shards failed; shardFailures {[9m4uVcf3TLmQ9Kr7z_fSpQ][text][0]: SearchParseException[[text][0]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\n      \""query\"": {\n        \""function_score\"": {\n          \""query\"": {\n            \""multi_match\"": {\n              \""query\"": \""test\"",\n              \""minimum_should_match\"": \""-25%\"",\n              \""type\"": \""cross_fields\"",\n                  \""tie_breaker\"": 0.5,\n                  \""fields\"": [\""title^3\"", \""body\"", \""url_words^2\"", \""domain_words^8\""]\n            }\n\n          },\n          \""functions\"": [{\n                \""field_value_factor\"": {\n              \""field\"": \""rank\"",\n              \""factor\"": 1\n            }\n        },{\n                        \""field_value_factor\"": {\n                \""field\"": \""lang_en\"",\n                \""missing\"": 0\n            }\n                }]\n        }\n      },\n      \""from\"": 0,\n      \""size\"": 25\n    }\n]]]; nested: QueryParsingException[[text] field_value_factor query does not support [missing]]; }{[9m4uVcf3TLmQ9Kr7z_fSpQ][text][1]: SearchParseException[[text][1]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\n      \""query\"": {\n        \""function_score\"": {\n          \""query\"": {\n            \""multi_match\"": {\n              \""query\"": \""test\"",\n              \""minimum_should_match\"": \""-25%\"",\n              \""type\"": \""cross_fields\"",\n                  \""tie_breaker\"": 0.5,\n                  \""fields\"": [\""title^3\"", \""body\"", \""url_words^2\"", \""domain_words^8\""]\n            }\n\n          },\n          \""functions\"": [{\n                \""field_value_factor\"": {\n              \""field\"": \""rank\"",\n              \""factor\"": 1\n            }\n        },{\n                        \""field_value_factor\"": {\n                \""field\"": \""lang_en\"",\n                \""missing\"": 0\n            }\n                }]\n        }\n      },\n      \""from\"": 0,\n      \""size\"": 25\n    }\n]]]; nested: QueryParsingException[[text] field_value_factor query does not support [missing]]; }{[9m4uVcf3TLmQ9Kr7z_fSpQ][text][2]: SearchParseException[[text][2]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\n      \""query\"": {\n        \""function_score\"": {\n          \""query\"": {\n            \""multi_match\"": {\n              \""query\"": \""test\"",\n              \""minimum_should_match\"": \""-25%\"",\n              \""type\"": \""cross_fields\"",\n                  \""tie_breaker\"": 0.5,\n                  \""fields\"": [\""title^3\"", \""body\"", \""url_words^2\"", \""domain_words^8\""]\n            }\n\n          },\n          \""functions\"": [{\n                \""field_value_factor\"": {\n              \""field\"": \""rank\"",\n              \""factor\"": 1\n            }\n        },{\n                        \""field_value_factor\"": {\n                \""field\"": \""lang_en\"",\n                \""missing\"": 0\n            }\n                }]\n        }\n      },\n      \""from\"": 0,\n      \""size\"": 25\n    }\n]]]; nested: QueryParsingException[[text] field_value_factor query does not support [missing]]; }{[9m4uVcf3TLmQ9Kr7z_fSpQ][text][3]: SearchParseException[[text][3]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\n      \""query\"": {\n        \""function_score\"": {\n          \""query\"": {\n            \""multi_match\"": {\n              \""query\"": \""test\"",\n              \""minimum_should_match\"": \""-25%\"",\n              \""type\"": \""cross_fields\"",\n                  \""tie_breaker\"": 0.5,\n                  \""fields\"": [\""title^3\"", \""body\"", \""url_words^2\"", \""domain_words^8\""]\n            }\n\n          },\n          \""functions\"": [{\n                \""field_value_factor\"": {\n              \""field\"": \""rank\"",\n              \""factor\"": 1\n            }\n        },{\n                        \""field_value_factor\"": {\n                \""field\"": \""lang_en\"",\n                \""missing\"": 0\n            }\n                }]\n        }\n      },\n      \""from\"": 0,\n      \""size\"": 25\n    }\n]]]; nested: QueryParsingException[[text] field_value_factor query does not support [missing]]; }{[9m4uVcf3TLmQ9Kr7z_fSpQ][text][4]: SearchParseException[[text][4]: from[-1],size[-1]: Parse Failure [Failed to parse source [{\n      \""query\"": {\n        \""function_score\"": {\n          \""query\"": {\n            \""multi_match\"": {\n              \""query\"": \""test\"",\n              \""minimum_should_match\"": \""-25%\"",\n              \""type\"": \""cross_fields\"",\n                  \""tie_breaker\"": 0.5,\n                  \""fields\"": [\""title^3\"", \""body\"", \""url_words^2\"", \""domain_words^8\""]\n            }\n\n          },\n          \""functions\"": [{\n                \""field_value_factor\"": {\n              \""field\"": \""rank\"",\n              \""factor\"": 1\n            }\n        },{\n                        \""field_value_factor\"": {\n                \""field\"": \""lang_en\"",\n                \""missing\"": 0\n            }\n                }]\n        }\n      },\n      \""from\"": 0,\n      \""size\"": 25\n    }\n]]]; nested: QueryParsingException[[text] field_value_factor query does not support [missing]]; }]"",
  ""status"": 400
}
",5227
338,37942285,go get,6
339,37942285,"jabongs-MacBook-Pro-4:florest debraj$ go get ./...
go install github.com/jabong/florest/src/common/config: open /var/folders/lp/3q9_2mn51hd9s4yj_jcf3jxm0000gp/T/go-build823644730/github.com/jabong/florest/src/common/config.a: no such file or directory
go install github.com/jabong/florest/src/common/utils/responseheaders: open /var/folders/lp/3q9_2mn51hd9s4yj_jcf3jxm0000gp/T/go-build823644730/github.com/jabong/florest/src/common/utils/responseheaders.a: no such file or directory
go install github.com/jabong/florest/src/service: open /var/folders/lp/3q9_2mn51hd9s4yj_jcf3jxm0000gp/T/go-build823644730/github.com/jabong/florest/src/service.a: no such file or directory
",672
340,37942285,-x,2
341,37942285,"jabongs-MacBook-Pro-4:florest debraj$ go get -x ./...
WORK=/var/folders/lp/3q9_2mn51hd9s4yj_jcf3jxm0000gp/T/go-build665863426
mkdir -p $WORK/github.com/jabong/floRest/src/examples/_obj/
mkdir -p $WORK/github.com/jabong/floRest/src/
cd /Users/debraj/golang/src/github.com/jabong/floRest/src/examples
/usr/local/go/pkg/tool/darwin_amd64/compile -o $WORK/github.com/jabong/floRest/src/examples.a -trimpath $WORK -p github.com/jabong/floRest/src/examples -complete -buildid febe48d3c570d8539844891977fbdc206dc458b4 -D _/Users/debraj/golang/src/github.com/jabong/floRest/src/examples -I $WORK -I /Users/debraj/golang/pkg/darwin_amd64 -pack ./api_definition.go ./data_structures.go ./hello_world.go ./hello_world_health_checker.go ./hello_world_multipe_errors.go ./swagger.go
mkdir -p $WORK/github.com/jabong/floRest/src/service/_obj/
mkdir -p $WORK/github.com/jabong/florest/src/examples/_obj/
mkdir -p $WORK/github.com/jabong/florest/src/
cd /Users/debraj/golang/src/github.com/jabong/floRest/src/service
/usr/local/go/pkg/tool/darwin_amd64/compile -o $WORK/github.com/jabong/floRest/src/service.a -trimpath $WORK -p github.com/jabong/floRest/src/service -complete -buildid f55b565340e2d0d690f5de8bd424fffb8895a331 -D _/Users/debraj/golang/src/github.com/jabong/floRest/src/service -I $WORK -I /Users/debraj/golang/pkg/darwin_amd64 -pack ./api_interface.go ./business_logic_executor.go ./config_manager.go ./constants.go ./dynamic_config_manager.go ./health_checker.go ./http_response_creator.go ./init_manager.go ./monitor_helper.go ./service_register.go ./service_version_helper.go ./service_workflow_data.go ./uri_interpreter.go ./web_server.go
cd /Users/debraj/golang/src/github.com/jabong/florest/src/examples
/usr/local/go/pkg/tool/darwin_amd64/compile -o $WORK/github.com/jabong/florest/src/examples.a -trimpath $WORK -p github.com/jabong/florest/src/examples -complete -buildid febe48d3c570d8539844891977fbdc206dc458b4 -D _/Users/debraj/golang/src/github.com/jabong/florest/src/examples -I $WORK -I /Users/debraj/golang/pkg/darwin_amd64 -pack ./api_definition.go ./data_structures.go ./hello_world.go ./hello_world_health_checker.go ./hello_world_multipe_errors.go ./swagger.go
mkdir -p $WORK/github.com/jabong/florest/src/examples/cachestrategy/_obj/
mkdir -p $WORK/github.com/jabong/florest/src/examples/
cd /Users/debraj/golang/src/github.com/jabong/florest/src/examples/cachestrategy
/usr/local/go/pkg/tool/darwin_amd64/compile -o $WORK/github.com/jabong/florest/src/examples/cachestrategy.a -trimpath $WORK -p github.com/jabong/florest/src/examples/cachestrategy -complete -buildid c16efba4536c81f8b5b9f0090f909c0b3c71383c -D _/Users/debraj/golang/src/github.com/jabong/florest/src/examples/cachestrategy -I $WORK -I /Users/debraj/golang/pkg/darwin_amd64 -pack ./api_definition.go ./cache_strategy_user.go ./sample_db_adapter.go
mkdir -p $WORK/github.com/jabong/florest/src/service/_obj/
cd /Users/debraj/golang/src/github.com/jabong/florest/src/service
/usr/local/go/pkg/tool/darwin_amd64/compile -o $WORK/github.com/jabong/florest/src/service.a -trimpath $WORK -p github.com/jabong/florest/src/service -complete -buildid f55b565340e2d0d690f5de8bd424fffb8895a331 -D _/Users/debraj/golang/src/github.com/jabong/florest/src/service -I $WORK -I /Users/debraj/golang/pkg/darwin_amd64 -pack ./api_interface.go ./business_logic_executor.go ./config_manager.go ./constants.go ./dynamic_config_manager.go ./health_checker.go ./http_response_creator.go ./init_manager.go ./monitor_helper.go ./service_register.go ./service_version_helper.go ./service_workflow_data.go ./uri_interpreter.go ./web_server.go
mkdir -p /Users/debraj/golang/pkg/darwin_amd64/github.com/jabong/floRest/src/
mv $WORK/github.com/jabong/floRest/src/examples.a /Users/debraj/golang/pkg/darwin_amd64/github.com/jabong/floRest/src/examples.a
mkdir -p /Users/debraj/golang/pkg/darwin_amd64/github.com/jabong/florest/src/
cp $WORK/github.com/jabong/florest/src/examples.a /Users/debraj/golang/pkg/darwin_amd64/github.com/jabong/florest/src/examples.a
go install github.com/jabong/florest/src/examples: open /var/folders/lp/3q9_2mn51hd9s4yj_jcf3jxm0000gp/T/go-build665863426/github.com/jabong/florest/src/examples.a: no such file or directory
mkdir -p /Users/debraj/golang/pkg/darwin_amd64/github.com/jabong/florest/src/examples/
mv $WORK/github.com/jabong/florest/src/examples/cachestrategy.a /Users/debraj/golang/pkg/darwin_amd64/github.com/jabong/florest/src/examples/cachestrategy.a
mv $WORK/github.com/jabong/floRest/src/service.a /Users/debraj/golang/pkg/darwin_amd64/github.com/jabong/floRest/src/service.a
mkdir -p $WORK/github.com/jabong/florest/_obj/
mkdir -p $WORK/github.com/jabong/florest/_obj/exe/
cd /Users/debraj/golang/src/github.com/jabong/florest
/usr/local/go/pkg/tool/darwin_amd64/compile -o $WORK/github.com/jabong/florest.a -trimpath $WORK -p main -complete -buildid fb73c44c8d0536fc3134f24ae052fdb67036f537 -D _/Users/debraj/golang/src/github.com/jabong/florest -I $WORK -I /Users/debraj/golang/pkg/darwin_amd64 -pack ./main.go
mkdir -p $WORK/github.com/jabong/florest/src/test/servicetest/_obj/
mkdir -p $WORK/github.com/jabong/florest/src/test/
cd /Users/debraj/golang/src/github.com/jabong/florest/src/test/servicetest
/usr/local/go/pkg/tool/darwin_amd64/compile -o $WORK/github.com/jabong/florest/src/test/servicetest.a -trimpath $WORK -p github.com/jabong/florest/src/test/servicetest -complete -buildid 9936e7e44a8331913a166a228aa8e088d0b05adf -D _/Users/debraj/golang/src/github.com/jabong/florest/src/test/servicetest -I $WORK -I /Users/debraj/golang/pkg/darwin_amd64 -pack ./config_initialize.go ./logger_initialize.go ./service_initialize.go ./service_test_helper.go ./test_web_server.go
cp $WORK/github.com/jabong/florest/src/service.a /Users/debraj/golang/pkg/darwin_amd64/github.com/jabong/florest/src/service.a
go install github.com/jabong/florest/src/service: open /var/folders/lp/3q9_2mn51hd9s4yj_jcf3jxm0000gp/T/go-build665863426/github.com/jabong/florest/src/service.a: no such file or directory
cd .
/usr/local/go/pkg/tool/darwin_amd64/link -o $WORK/github.com/jabong/florest/_obj/exe/a.out -L $WORK -L /Users/debraj/golang/pkg/darwin_amd64 -extld=clang -buildmode=exe -buildid=fb73c44c8d0536fc3134f24ae052fdb67036f537 $WORK/github.com/jabong/florest.a
mkdir -p /Users/debraj/golang/pkg/darwin_amd64/github.com/jabong/florest/src/test/
mv $WORK/github.com/jabong/florest/src/test/servicetest.a /Users/debraj/golang/pkg/darwin_amd64/github.com/jabong/florest/src/test/servicetest.a
mkdir -p /Users/debraj/golang/bin/
mv $WORK/github.com/jabong/florest/_obj/exe/a.out /Users/debraj/golang/bin/florest
",6610
342,37948574,"package controllers

import (
    ""errors""
    ""mobilebid/billable""
    db ""mobilebid/database""
    ""mobilebid/stripe""
    ""net/http""
    ""os""
    ""strconv""
    ""sync""
    ""time""

    log ""github.com/Sirupsen/logrus""
    ""github.com/gorilla/mux""
)

var (
    errBillableID     = errors.New(""It looks like there was an error while getting your billable ID. Do you have a credit card set up?"")
    errWinningItems   = errors.New(""It looks like there was an error while gathering your winning items. Please contact an event rep."")
    errAcctInfo       = errors.New(""We had some trouble getting the account information for the event. Please contact an event rep."")
    errLoggingTrans   = errors.New(""It looks like we had some sort of issue while logging your transaction. Please contact an event rep."")
    errParsingURL     = errors.New(""We had some issue looking at the URL."")
    errStripeIssue    = errors.New(""It looks like there was some kind of issue while talking with Stripe. If you were in the middle of a transaction, this doesn't mean the transaction was cancelled. Take a look at your transactions and/or contact an event rep."")
    errItemsPurchased = errors.New(""One or more of the items you're trying to purchase have already been purchased. If this doesn't sound right, please contact an event rep."")
)

func createLogCtx(bidderID, eventID int) *log.Entry {
    return log.WithFields(log.Fields{
        ""bidderID"": bidderID,
        ""eventID"":  eventID,
    })
}

var wg sync.WaitGroup

const gorutineCt = 6

//PurchaseItems purchases items from the event for the bidder and sends the funds to the customer
//  In order for PurchaseItems to work:
//      1. Bidder must have a customer account set up in Stripe
//      2. Event owner needs to have their Stripe registered with the apps Stripe account
//      3. Item must not have been purchased before (ever)
func PurchaseItems(dB db.AppDB) http.HandlerFunc {
    return http.HandlerFunc(func(res http.ResponseWriter, req *http.Request) {

        ps := mux.Vars(req)

        eventID, err := strconv.Atoi(ps[""eventID""])
        if err != nil {
            log.Error(err.Error())
            res.Write(ResErr(errParsingURL.Error()))
            return
        }

        bidderID, err := strconv.Atoi(ps[""bidderID""])
        if err != nil {
            log.Error(err.Error())
            res.Write(ResErr(errParsingURL.Error()))
            return
        }

        itemsChan := make(chan []db.ItemWon)
        billableBidderIDChan := make(chan string)
        creditableAcctChan := make(chan string)
        errsChan := make(chan error, gorutineCt)
        wg.Add(gorutineCt)

        logCtx := createLogCtx(bidderID, eventID)

        acct := stripe.New(os.Getenv(""SECRET_KEY""), os.Getenv(""PUBLISHABLE_KEY""))

        go func() {
            id, e := dB.GetBidderBillableID(bidderID)
            if e != nil {
                logCtx.Error(e.Error())
                errsChan <- errBillableID
                billableBidderIDChan <- id
            } else {
                errsChan <- nil
                billableBidderIDChan <- id
            }
            wg.Done()
        }()

        go func() {
            i, e := dB.GetWinningItemsForBidder(bidderID, eventID)
            if e != nil {
                logCtx.Error(e.Error())
                errsChan <- errWinningItems
                itemsChan <- i
            } else {
                errsChan <- nil
                itemsChan <- i
            }
            wg.Done()
        }()

        go func() {
            a, e := dB.GetCreditableAccountFromEvent(eventID)
            if e != nil {
                logCtx.Error(e.Error())
                errsChan <- errAcctInfo
                creditableAcctChan <- a
            } else {
                errsChan <- nil
                creditableAcctChan <- a
            }
            wg.Done()
        }()

        go func() {
            items := <-itemsChan
            for _, val := range items {
                e := dB.CheckIfItemPurchased(val.ItemID)
                if e != nil {
                    logCtx.WithFields(log.Fields{
                        ""itemID"":     val.ItemID,
                        ""_timestamp"": time.Now(),
                    }).Error(e.Error())
                    errsChan <- errItemsPurchased
                    itemsChan <- items
                    wg.Done()
                    return
                }
            }
            errsChan <- nil
            itemsChan <- items
            wg.Done() //SKIPPED
        }()

        go func() {
            billableBidderID := <-billableBidderIDChan
            e := acct.BuyerIsBillable(billableBidderID)
            if e != nil {
                logCtx.Error(e.Error())
                errsChan <- errStripeIssue
                billableBidderIDChan <- billableBidderID
            } else {
                errsChan <- nil
                billableBidderIDChan <- billableBidderID
            }
            wg.Done()
        }()

        go func() {
            creditableAcct := <-creditableAcctChan
            e := acct.CanReceiveFunds(creditableAcct)
            if e != nil {
                logCtx.Error(e.Error())
                errsChan <- errStripeIssue
                creditableAcctChan <- creditableAcct
            } else {
                errsChan <- nil
                creditableAcctChan <- creditableAcct
            }
            wg.Done()
        }()

        wg.Wait()
        close(errsChan)

        if err = checkConcurrentErrs(errsChan); err != nil {
            logCtx.Error(err.Error())
            res.Write(ResErr(err.Error()))
            return
        }

        items := <-itemsChan
        amount := addItems(items)
        appFee := calculateFee(amount, .03) //TODO: Store this somewhere where it can be edited without having to restart the app.

        invoice := billable.BillObject{
            Desc:     ""Test Charge"", //TODO: Generate this description from the event, items and bidder somehow.
            Amount:   amount,
            Currency: ""usd"",
            Dest:     <-creditableAcctChan,
            Fee:      appFee,
            Meta:     createItemsList(items),
            Customer: <-billableBidderIDChan,
        }

        trans, err := acct.ChargeBidder(invoice)
        if err != nil {
            logCtx.Error(err.Error())
            res.Write(ResErr(errStripeIssue.Error()))
            return
        }

        logCtx.WithFields(log.Fields{
            ""stripeTransID"": trans.TransID,
            ""itemcCount"":    len(items),
        }).Info(""Transferred funds from bidder to client"")

        dbTrans := db.Transaction{
            TransID:  trans.TransID,
            UserID:   5,
            BidderID: bidderID,
            EventID:  eventID,
            Amount:   int64(amount),
            AppFee:   int64(appFee),
            Desc:     ""Some test order"",
            Status:   ""completed"",
        }

        orderID, err := dB.InsertTransaction(dbTrans)
        if err != nil {
            logCtx.WithFields(log.Fields{
                ""stripeTransID"": dbTrans.TransID,
                ""_timestamp"":    time.Now(),
            }).Error(err.Error())
            res.Write(ResErr(errLoggingTrans.Error()))
            return
        }

        for it, val := range items {
            i := db.TransactionLine{
                OrderID: orderID,
                ItemID:  val.ItemID,
                Amount:  uint64(val.Bid * 100), //Must do this since the bid is in dollars but the amount is pennies
                Line:    it,
            }

            err := dB.InsertTransactionLine(i)
            if err != nil {
                logCtx.WithFields(log.Fields{
                    ""stripeTransID"": dbTrans.TransID,
                    ""lineNumber"":    i,
                    ""_timestamp"":    time.Now(),
                }).Error(err.Error())
                res.Write(ResErr(errLoggingTrans.Error()))
                return
            }
        }

        logCtx.WithField(""orderID"", orderID).Info(""Order created"")

        //TODO: Send receipt to buyer.
        res.Write(ResOK(trans.TransID))

    })
}
",8135
343,37970501,"
goroutine 1495590 [running]:
runtime/pprof.writeGoroutineStacks(0x324e0100, 0x11ad6060, 0x0, 0x0)
    c:/go/src/runtime/pprof/pprof.go:516 +0x84
runtime/pprof.writeGoroutine(0x324e0100, 0x11ad6060, 0x2, 0x0, 0x0)
    c:/go/src/runtime/pprof/pprof.go:505 +0x3c
runtime/pprof.(*Profile).WriteTo(0xc71770, 0x324e0100, 0x11ad6060, 0x2, 0x0, 0x0)
    c:/go/src/runtime/pprof/pprof.go:236 +0xb4
github.com/astaxie/beego/toolbox.ProcessInput(0x11b3a110, 0x10, 0x324e0100, 0x11ad6060)
    D:/goproject/src/github.com/astaxie/beego/toolbox/profile.go:42 +0x2fd
github.com/astaxie/beego.profIndex(0x324e0068, 0x11838080, 0x117de000)
    D:/goproject/src/github.com/astaxie/beego/admin.go:275 +0x147
net/http.HandlerFunc.ServeHTTP(0xa3e7f4, 0x324e0068, 0x11838080, 0x117de000)
    c:/go/src/net/http/server.go:1422 +0x34
net/http.(*ServeMux).ServeHTTP(0x11683cc0, 0x324e0068, 0x11838080, 0x117de000)
    c:/go/src/net/http/server.go:1699 +0x133
net/http.serverHandler.ServeHTTP(0x1189c080, 0x324e0068, 0x11838080, 0x117de000)
    c:/go/src/net/http/server.go:1862 +0x156
net/http.(*conn).serve(0x11ad6000)
    c:/go/src/net/http/server.go:1361 +0xc05
created by net/http.(*Server).Serve
    c:/go/src/net/http/server.go:1910 +0x343

goroutine 1 [chan receive, 127 minutes]:
github.com/astaxie/beego.(*App).Run(0x1169e550)
    D:/goproject/src/github.com/astaxie/beego/app.go:182 +0x85a
github.com/astaxie/beego.Run(0x0, 0x0, 0x0)
    D:/goproject/src/github.com/astaxie/beego/beego.go:66 +0x130
main.main()
    D:/goproject/src/github.com/rayingtech/restaurant/main.go:53 +0x27

goroutine 17 [syscall, 127 minutes, locked to thread]:
runtime.goexit()
    c:/go/src/runtime/asm_386.s:1662 +0x1

goroutine 5 [syscall, 127 minutes]:
os/signal.loop()
    c:/go/src/os/signal/signal_unix.go:22 +0x1a
created by os/signal.init.1
    c:/go/src/os/signal/signal_unix.go:28 +0x36

goroutine 6 [chan receive, 127 minutes]:
database/sql.(*DB).connectionOpener(0x116deb40)
    c:/go/src/database/sql/sql.go:634 +0x3c
created by database/sql.Open
    c:/go/src/database/sql/sql.go:481 +0x276

goroutine 7 [IO wait]:
net.runtime_pollWait(0x31995d40, 0x72, 0x11b3a070)
    c:/go/src/runtime/netpoll.go:157 +0x55
net.(*pollDesc).Wait(0x118aa0d0, 0x72, 0x0, 0x0)
    c:/go/src/net/fd_poll_runtime.go:73 +0x35
net.(*ioSrv).ExecIO(0x11862998, 0x118aa038, 0x962b48, 0x8, 0x11b3a060, 0x11b822a0, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:182 +0x122
net.(*netFD).acceptOne(0x118aa000, 0x11b82000, 0x2, 0x2, 0x118aa038, 0x31690000, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:564 +0x1d4
net.(*netFD).accept(0x118aa000, 0x0, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:594 +0x11f
net.(*TCPListener).AcceptTCP(0x11890018, 0x118c2e3c, 0x0, 0x0)
    c:/go/src/net/tcpsock_posix.go:254 +0x47
net/http.tcpKeepAliveListener.Accept(0x11890018, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/net/http/server.go:2135 +0x3d
net/http.(*Server).Serve(0x1189c080, 0x31995e30, 0x11890018, 0x0, 0x0)
    c:/go/src/net/http/server.go:1887 +0x98
net/http.(*Server).ListenAndServe(0x1189c080, 0x0, 0x0)
    c:/go/src/net/http/server.go:1877 +0xe4
net/http.ListenAndServe(0x11892020, 0x5, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/net/http/server.go:1967 +0x7a
github.com/astaxie/beego.(*adminApp).Run(0x1169e548)
    D:/goproject/src/github.com/astaxie/beego/admin.go:419 +0x581
created by github.com/astaxie/beego.registerAdmin
    D:/goproject/src/github.com/astaxie/beego/hooks.go:90 +0x4d

goroutine 8 [IO wait, 3 minutes]:
net.runtime_pollWait(0x31995db8, 0x72, 0x1184d840)
    c:/go/src/runtime/netpoll.go:157 +0x55
net.(*pollDesc).Wait(0x11833870, 0x72, 0x0, 0x0)
    c:/go/src/net/fd_poll_runtime.go:73 +0x35
net.(*ioSrv).ExecIO(0x11862998, 0x118337d8, 0x962b48, 0x8, 0x1184d830, 0x119e8540, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:182 +0x122
net.(*netFD).acceptOne(0x118337a0, 0x119e8460, 0x2, 0x2, 0x118337d8, 0x316904a8, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:564 +0x1d4
net.(*netFD).accept(0x118337a0, 0x0, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:594 +0x11f
net.(*TCPListener).AcceptTCP(0x118629a8, 0x118c5ea8, 0x0, 0x0)
    c:/go/src/net/tcpsock_posix.go:254 +0x47
net/http.tcpKeepAliveListener.Accept(0x118629a8, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/net/http/server.go:2135 +0x3d
net/http.(*Server).Serve(0x11688f80, 0x31995e30, 0x118629a8, 0x0, 0x0)
    c:/go/src/net/http/server.go:1887 +0x98
net/http.(*Server).ListenAndServe(0x11688f80, 0x0, 0x0)
    c:/go/src/net/http/server.go:1877 +0xe4
github.com/astaxie/beego.(*App).Run.func4(0x1169e550, 0x11854c00, 0x5, 0x118841c0)
    D:/goproject/src/github.com/astaxie/beego/app.go:174 +0x35c
created by github.com/astaxie/beego.(*App).Run
    D:/goproject/src/github.com/astaxie/beego/app.go:180 +0x83e

goroutine 9 [chan receive, locked to thread]:
net.(*ioSrv).ProcessRemoteIO(0x11862998)
    c:/go/src/net/fd_windows.go:138 +0xcc
created by net.startServer
    c:/go/src/net/fd_windows.go:238 +0xc9

goroutine 10 [chan receive, 3 minutes, locked to thread]:
net.(*ioSrv).ProcessRemoteIO(0x118629a0)
    c:/go/src/net/fd_windows.go:138 +0xcc
created by net.startServer
    c:/go/src/net/fd_windows.go:240 +0x11e

goroutine 353800 [IO wait, 114 minutes]:
net.runtime_pollWait(0x31995ae8, 0x72, 0x11b480e0)
    c:/go/src/runtime/netpoll.go:157 +0x55
net.(*pollDesc).Wait(0x1190b170, 0x72, 0x0, 0x0)
    c:/go/src/net/fd_poll_runtime.go:73 +0x35
net.(*ioSrv).ExecIO(0x11862998, 0x1190b0d8, 0x93ce80, 0x7, 0xa3ea10, 0x0, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:182 +0x122
net.(*netFD).Read(0x1190b0a0, 0x1196e000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:463 +0x129
net.(*conn).Read(0x117c3648, 0x1196e000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    c:/go/src/net/net.go:172 +0xb9
net/http.(*liveSwitchReader).Read(0x11ad6684, 0x1196e000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    c:/go/src/net/http/server.go:219 +0x84
io.(*LimitedReader).Read(0x11b480b0, 0x1196e000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    c:/go/src/io/io.go:427 +0xcb
bufio.(*Reader).fill(0x11685b90)
    c:/go/src/bufio/bufio.go:97 +0x172
bufio.(*Reader).ReadSlice(0x11685b90, 0x1163380a, 0x0, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/bufio/bufio.go:328 +0x1b4
bufio.(*Reader).ReadLine(0x11685b90, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/bufio/bufio.go:357 +0x4b
net/textproto.(*Reader).readLineSlice(0x11951a40, 0x0, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/net/textproto/reader.go:55 +0x59
net/textproto.(*Reader).ReadLine(0x11951a40, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/net/textproto/reader.go:36 +0x39
net/http.ReadRequest(0x11685b90, 0x11b47340, 0x0, 0x0)
    c:/go/src/net/http/request.go:653 +0x9a
net/http.(*conn).readRequest(0x11ad6660, 0x0, 0x0, 0x0)
    c:/go/src/net/http/server.go:633 +0x368
net/http.(*conn).serve(0x11ad6660)
    c:/go/src/net/http/server.go:1319 +0x7a9
created by net/http.(*Server).Serve
    c:/go/src/net/http/server.go:1910 +0x343

goroutine 1421744 [IO wait, 7 minutes]:
net.runtime_pollWait(0x31995b60, 0x72, 0x11841650)
    c:/go/src/runtime/netpoll.go:157 +0x55
net.(*pollDesc).Wait(0x119f0fb0, 0x72, 0x0, 0x0)
    c:/go/src/net/fd_poll_runtime.go:73 +0x35
net.(*ioSrv).ExecIO(0x11862998, 0x119f0f18, 0x93ce80, 0x7, 0xa3ea10, 0x4c201b, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:182 +0x122
net.(*netFD).Read(0x119f0ee0, 0x11aac000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:463 +0x129
net.(*conn).Read(0x11863570, 0x11aac000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    c:/go/src/net/net.go:172 +0xb9
net/http.(*liveSwitchReader).Read(0x1193d764, 0x11aac000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    c:/go/src/net/http/server.go:219 +0x84
io.(*LimitedReader).Read(0x11893310, 0x11aac000, 0x1000, 0x1000, 0x27, 0x0, 0x0)
    c:/go/src/io/io.go:427 +0xcb
bufio.(*Reader).fill(0x11b0a060)
    c:/go/src/bufio/bufio.go:97 +0x172
bufio.(*Reader).Peek(0x11b0a060, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/bufio/bufio.go:132 +0xad
net/http.(*conn).readRequest(0x1193d740, 0x0, 0x0, 0x0)
    c:/go/src/net/http/server.go:629 +0x30e
net/http.(*conn).serve(0x1193d740)
    c:/go/src/net/http/server.go:1319 +0x7a9
created by net/http.(*Server).Serve
    c:/go/src/net/http/server.go:1910 +0x343

goroutine 1495604 [IO wait, 3 minutes]:
net.runtime_pollWait(0x31995908, 0x72, 0x11855690)
    c:/go/src/runtime/netpoll.go:157 +0x55
net.(*pollDesc).Wait(0x119fda30, 0x72, 0x0, 0x0)
    c:/go/src/net/fd_poll_runtime.go:73 +0x35
net.(*ioSrv).ExecIO(0x11862998, 0x119fd998, 0x93ce80, 0x7, 0xa3ea10, 0x4027a5, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:182 +0x122
net.(*netFD).Read(0x119fd960, 0x11968000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:463 +0x129
net.(*conn).Read(0x117c2fd0, 0x11968000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    c:/go/src/net/net.go:172 +0xb9
net/http.(*liveSwitchReader).Read(0x117077c4, 0x11968000, 0x1000, 0x1000, 0x449a00, 0x0, 0x0)
    c:/go/src/net/http/server.go:219 +0x84
io.(*LimitedReader).Read(0x1184d220, 0x11968000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    c:/go/src/io/io.go:427 +0xcb
bufio.(*Reader).fill(0x11b6a120)
    c:/go/src/bufio/bufio.go:97 +0x172
bufio.(*Reader).Read(0x11b6a120, 0x11b68400, 0x21, 0x200, 0x1000, 0x0, 0x0)
    c:/go/src/bufio/bufio.go:207 +0x1b9
io.(*LimitedReader).Read(0x11840ee0, 0x11b68400, 0x21, 0x200, 0x11b17994, 0x0, 0x0)
    c:/go/src/io/io.go:427 +0xcb
net/http.(*body).readLocked(0x11a212f0, 0x11b68400, 0x200, 0x200, 0x1000, 0x0, 0x0)
    c:/go/src/net/http/transfer.go:632 +0x7f
net/http.(*body).Read(0x11a212f0, 0x11b68400, 0x200, 0x200, 0x0, 0x0, 0x0)
    c:/go/src/net/http/transfer.go:624 +0xe8
net/http.(*expectContinueReader).Read(0x11840ef0, 0x11b68400, 0x200, 0x200, 0x0, 0x0, 0x0)
    c:/go/src/net/http/server.go:569 +0x100
io.(*LimitedReader).Read(0x1184d510, 0x11b68400, 0x200, 0x200, 0x200, 0x0, 0x0)
    c:/go/src/io/io.go:427 +0xcb
bytes.(*Buffer).ReadFrom(0x11b17ab4, 0x32520080, 0x1184d510, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/bytes/buffer.go:173 +0x1c3
io/ioutil.readAll(0x32520080, 0x1184d510, 0x200, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/io/ioutil/ioutil.go:33 +0x136
io/ioutil.ReadAll(0x32520080, 0x1184d510, 0x0, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/io/ioutil/ioutil.go:42 +0x51
github.com/astaxie/beego/context.(*BeegoInput).CopyBody(0x11b38340, 0x4000000, 0x0, 0x0, 0x0, 0x0)
    D:/goproject/src/github.com/astaxie/beego/context/input.go:337 +0xd4
github.com/astaxie/beego.(*ControllerRegister).ServeHTTP(0x116edd60, 0x324e0068, 0x11ab1980, 0x11ae7b20)
    D:/goproject/src/github.com/astaxie/beego/router.go:652 +0x2cc0
net/http.serverHandler.ServeHTTP(0x11688f80, 0x324e0068, 0x11ab1980, 0x11ae7b20)
    c:/go/src/net/http/server.go:1862 +0x156
net/http.(*conn).serve(0x117077a0)
    c:/go/src/net/http/server.go:1361 +0xc05
created by net/http.(*Server).Serve
    c:/go/src/net/http/server.go:1910 +0x343
",10708
344,37970501,"goroutine 1359760 [running]:
runtime/pprof.writeGoroutineStacks(0x324e0100, 0x117a3f80, 0x0, 0x0)
    c:/go/src/runtime/pprof/pprof.go:516 +0x84
runtime/pprof.writeGoroutine(0x324e0100, 0x117a3f80, 0x2, 0x0, 0x0)
    c:/go/src/runtime/pprof/pprof.go:505 +0x3c
runtime/pprof.(*Profile).WriteTo(0xc71770, 0x324e0100, 0x117a3f80, 0x2, 0x0, 0x0)
    c:/go/src/runtime/pprof/pprof.go:236 +0xb4
github.com/astaxie/beego/toolbox.ProcessInput(0x1194bc80, 0x10, 0x324e0100, 0x117a3f80)
    D:/goproject/src/github.com/astaxie/beego/toolbox/profile.go:42 +0x2fd
github.com/astaxie/beego.profIndex(0x324e0068, 0x117e4080, 0x11a19340)
    D:/goproject/src/github.com/astaxie/beego/admin.go:275 +0x147
net/http.HandlerFunc.ServeHTTP(0xa3e7f4, 0x324e0068, 0x117e4080, 0x11a19340)
    c:/go/src/net/http/server.go:1422 +0x34
net/http.(*ServeMux).ServeHTTP(0x11683cc0, 0x324e0068, 0x117e4080, 0x11a19340)
    c:/go/src/net/http/server.go:1699 +0x133
net/http.serverHandler.ServeHTTP(0x1189c080, 0x324e0068, 0x117e4080, 0x11a19340)
    c:/go/src/net/http/server.go:1862 +0x156
net/http.(*conn).serve(0x1197eea0)
    c:/go/src/net/http/server.go:1361 +0xc05
created by net/http.(*Server).Serve
    c:/go/src/net/http/server.go:1910 +0x343

goroutine 1 [chan receive, 98 minutes]:
github.com/astaxie/beego.(*App).Run(0x1169e550)
    D:/goproject/src/github.com/astaxie/beego/app.go:182 +0x85a
github.com/astaxie/beego.Run(0x0, 0x0, 0x0)
    D:/goproject/src/github.com/astaxie/beego/beego.go:66 +0x130
main.main()
    D:/goproject/src/github.com/rayingtech/restaurant/main.go:53 +0x27

goroutine 17 [syscall, 98 minutes, locked to thread]:
runtime.goexit()
    c:/go/src/runtime/asm_386.s:1662 +0x1

goroutine 5 [syscall, 98 minutes]:
os/signal.loop()
    c:/go/src/os/signal/signal_unix.go:22 +0x1a
created by os/signal.init.1
    c:/go/src/os/signal/signal_unix.go:28 +0x36

goroutine 6 [chan receive, 98 minutes]:
database/sql.(*DB).connectionOpener(0x116deb40)
    c:/go/src/database/sql/sql.go:634 +0x3c
created by database/sql.Open
    c:/go/src/database/sql/sql.go:481 +0x276

goroutine 7 [IO wait]:
net.runtime_pollWait(0x31995d40, 0x72, 0x11b3b510)
    c:/go/src/runtime/netpoll.go:157 +0x55
net.(*pollDesc).Wait(0x118aa0d0, 0x72, 0x0, 0x0)
    c:/go/src/net/fd_poll_runtime.go:73 +0x35
net.(*ioSrv).ExecIO(0x11862998, 0x118aa038, 0x962b48, 0x8, 0x11b3b500, 0x11abee00, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:182 +0x122
net.(*netFD).acceptOne(0x118aa000, 0x11abed20, 0x2, 0x2, 0x118aa038, 0x31690254, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:564 +0x1d4
net.(*netFD).accept(0x118aa000, 0x0, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:594 +0x11f
net.(*TCPListener).AcceptTCP(0x11890018, 0x118c2e3c, 0x0, 0x0)
    c:/go/src/net/tcpsock_posix.go:254 +0x47
net/http.tcpKeepAliveListener.Accept(0x11890018, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/net/http/server.go:2135 +0x3d
net/http.(*Server).Serve(0x1189c080, 0x31995e30, 0x11890018, 0x0, 0x0)
    c:/go/src/net/http/server.go:1887 +0x98
net/http.(*Server).ListenAndServe(0x1189c080, 0x0, 0x0)
    c:/go/src/net/http/server.go:1877 +0xe4
net/http.ListenAndServe(0x11892020, 0x5, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/net/http/server.go:1967 +0x7a
github.com/astaxie/beego.(*adminApp).Run(0x1169e548)
    D:/goproject/src/github.com/astaxie/beego/admin.go:419 +0x581
created by github.com/astaxie/beego.registerAdmin
    D:/goproject/src/github.com/astaxie/beego/hooks.go:90 +0x4d

goroutine 8 [IO wait]:
net.runtime_pollWait(0x31995db8, 0x72, 0x118e7640)
    c:/go/src/runtime/netpoll.go:157 +0x55
net.(*pollDesc).Wait(0x11833870, 0x72, 0x0, 0x0)
    c:/go/src/net/fd_poll_runtime.go:73 +0x35
net.(*ioSrv).ExecIO(0x11862998, 0x118337d8, 0x962b48, 0x8, 0x118e7630, 0x118afce0, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:182 +0x122
net.(*netFD).acceptOne(0x118337a0, 0x118afc00, 0x2, 0x2, 0x118337d8, 0x31690000, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:564 +0x1d4
net.(*netFD).accept(0x118337a0, 0x0, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:594 +0x11f
net.(*TCPListener).AcceptTCP(0x118629a8, 0x11960ea8, 0x0, 0x0)
    c:/go/src/net/tcpsock_posix.go:254 +0x47
net/http.tcpKeepAliveListener.Accept(0x118629a8, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/net/http/server.go:2135 +0x3d
net/http.(*Server).Serve(0x11688f80, 0x31995e30, 0x118629a8, 0x0, 0x0)
    c:/go/src/net/http/server.go:1887 +0x98
net/http.(*Server).ListenAndServe(0x11688f80, 0x0, 0x0)
    c:/go/src/net/http/server.go:1877 +0xe4
github.com/astaxie/beego.(*App).Run.func4(0x1169e550, 0x11854c00, 0x5, 0x118841c0)
    D:/goproject/src/github.com/astaxie/beego/app.go:174 +0x35c
created by github.com/astaxie/beego.(*App).Run
    D:/goproject/src/github.com/astaxie/beego/app.go:180 +0x83e

goroutine 9 [chan receive, locked to thread]:
net.(*ioSrv).ProcessRemoteIO(0x11862998)
    c:/go/src/net/fd_windows.go:138 +0xcc
created by net.startServer
    c:/go/src/net/fd_windows.go:238 +0xc9

goroutine 10 [chan receive, locked to thread]:
net.(*ioSrv).ProcessRemoteIO(0x118629a0)
    c:/go/src/net/fd_windows.go:138 +0xcc
created by net.startServer
    c:/go/src/net/fd_windows.go:240 +0x11e

goroutine 353800 [IO wait, 85 minutes]:
net.runtime_pollWait(0x31995ae8, 0x72, 0x11b480e0)
    c:/go/src/runtime/netpoll.go:157 +0x55
net.(*pollDesc).Wait(0x1190b170, 0x72, 0x0, 0x0)
    c:/go/src/net/fd_poll_runtime.go:73 +0x35
net.(*ioSrv).ExecIO(0x11862998, 0x1190b0d8, 0x93ce80, 0x7, 0xa3ea10, 0x0, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:182 +0x122
net.(*netFD).Read(0x1190b0a0, 0x1196e000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    c:/go/src/net/fd_windows.go:463 +0x129
net.(*conn).Read(0x117c3648, 0x1196e000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    c:/go/src/net/net.go:172 +0xb9
net/http.(*liveSwitchReader).Read(0x11ad6684, 0x1196e000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    c:/go/src/net/http/server.go:219 +0x84
io.(*LimitedReader).Read(0x11b480b0, 0x1196e000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
    c:/go/src/io/io.go:427 +0xcb
bufio.(*Reader).fill(0x11685b90)
    c:/go/src/bufio/bufio.go:97 +0x172
bufio.(*Reader).ReadSlice(0x11685b90, 0x1163380a, 0x0, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/bufio/bufio.go:328 +0x1b4
bufio.(*Reader).ReadLine(0x11685b90, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/bufio/bufio.go:357 +0x4b
net/textproto.(*Reader).readLineSlice(0x11951a40, 0x0, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/net/textproto/reader.go:55 +0x59
net/textproto.(*Reader).ReadLine(0x11951a40, 0x0, 0x0, 0x0, 0x0)
    c:/go/src/net/textproto/reader.go:36 +0x39
net/http.ReadRequest(0x11685b90, 0x11b47340, 0x0, 0x0)
    c:/go/src/net/http/request.go:653 +0x9a
net/http.(*conn).readRequest(0x11ad6660, 0x0, 0x0, 0x0)
    c:/go/src/net/http/server.go:633 +0x368
net/http.(*conn).serve(0x11ad6660)
    c:/go/src/net/http/server.go:1319 +0x7a9
created by net/http.(*Server).Serve
    c:/go/src/net/http/server.go:1910 +0x343
",6790
345,38020943,godep,5
346,38020943,godep save,10
347,38020943,"~/.../github.com/pnovotnak/minikube (feat/parallels) $ git status
On branch feat/parallels
nothing to commit, working directory clean
",134
348,38020943,"~/.../github.com/pnovotnak/minikube (feat/parallels) $ godep save ./...
godep: no buildable Go source files in /Users/pnovotnak/go/src/github.com/pnovotnak/minikube/vendor/github.com/vishvananda/netlink/nl
godep: no buildable Go source files in /Users/pnovotnak/go/src/github.com/pnovotnak/minikube/vendor/golang.org/x/exp/inotify
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/cmd/localkube/cmd
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/cmd/minikube/cmd
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/pkg/localkube
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/pkg/minikube/cluster
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/pkg/minikube/config
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/pkg/minikube/constants
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/pkg/minikube/kubeconfig
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/pkg/minikube/machine
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/pkg/minikube/notify
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/pkg/minikube/sshutil
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/pkg/minikube/tests
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/pkg/util
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/pkg/version
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/bitbucket.org/ww/goautoneg
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/BurntSushi/toml
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/ClusterHQ/flocker-go
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/Sirupsen/logrus
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/appc/cni/libcni
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/appc/cni/pkg/invoke
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/appc/cni/pkg/types
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/appc/spec/schema
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/armon/go-metrics
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/aws/aws-sdk-go/aws
...
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/aws/aws-sdk-go/service/elb
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/beorn7/perks/quantile
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/blang/semver
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/boltdb/bolt
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/coreos/etcd/alarm
...
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/coreos/etcd/wal
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/coreos/go-etcd/etcd
...
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/coreos/go-oidc/oidc
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/coreos/go-semver/semver
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/coreos/go-systemd/activation
...
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/coreos/go-systemd/unit
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/coreos/pkg/capnslog
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/coreos/pkg/health
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/coreos/pkg/httputil
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/coreos/pkg/timeutil
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/coreos/rkt/api/v1alpha
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/davecgh/go-spew/spew
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/dgrijalva/jwt-go
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/distribution/digest
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/distribution/reference
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/docker/pkg/jsonmessage
...
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/docker/pkg/units
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/engine-api/client
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/engine-api/types
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/go-connections/nat
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/go-connections/sockets
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/go-connections/tlsconfig
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/go-units
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/machine/commands/mcndirs
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/machine/drivers/errdriver
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/machine/drivers/none
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/machine/drivers/virtualbox
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/machine/drivers/vmwarefusion
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/machine/libmachine
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/machine/version
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/docker/spdystream
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/elazarl/go-bindata-assetfs
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/emicklei/go-restful
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/evanphx/json-patch
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/fsnotify/fsnotify
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/ghodss/yaml
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/go-ini/ini
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/godbus/dbus
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/gogo/protobuf/proto
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/golang/glog
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/golang/groupcache/lru
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/golang/protobuf/proto
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/google/btree
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/google/cadvisor/events
...
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/google/cadvisor/utils
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/google/gofuzz
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/hashicorp/go-msgpack/codec
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/hashicorp/golang-lru
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/hashicorp/hcl
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/hashicorp/raft
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/hashicorp/raft-boltdb
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/hawkular/hawkular-client-go/metrics
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/imdario/mergo
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/influxdb/influxdb/client
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/influxdb/influxdb/influxql
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/influxdb/influxdb/meta
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/influxdb/influxdb/snapshot
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/influxdb/influxdb/toml
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/influxdb/influxdb/tsdb
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/jmespath/go-jmespath
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/jonboulle/clockwork
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/juju/ratelimit
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/magiconair/properties
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/matttproud/golang_protobuf_extensions/pbutil
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/mesos/mesos-go/detector
...
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/mesos/mesos-go/upid
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/miekg/dns
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/mitchellh/mapstructure
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/mxk/go-flowrate/flowrate
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/pborman/uuid
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/pkg/browser
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/prometheus/client_golang/prometheus
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/prometheus/client_model/go
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/prometheus/common/expfmt
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/prometheus/common/internal/bitbucket.org/ww/goautoneg
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/prometheus/common/model
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/prometheus/procfs
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/rackspace/gophercloud
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/robfig/cron
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/samalba/dockerclient
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/samuel/go-zookeeper/zk
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/skynetservices/skydns/backends/etcd
...
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/skynetservices/skydns/singleflight
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/spf13/cast
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/spf13/cobra
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/spf13/jwalterweatherman
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/spf13/pflag
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/spf13/viper
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/ugorji/go/codec
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/vmware/govmomi
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/github.com/xiang90/probing
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/go4.org/errorutil
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/golang.org/x/crypto/bcrypt
...
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/golang.org/x/sys/unix
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/google.golang.org/api/cloudmonitoring/v2beta2
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/google.golang.org/api/compute/v1
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/google.golang.org/api/container/v1
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/google.golang.org/api/gensupport
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/google.golang.org/api/googleapi
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/google.golang.org/cloud/compute/metadata
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/google.golang.org/cloud/internal
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/google.golang.org/grpc
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/gopkg.in/gcfg.v1
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/gopkg.in/inf.v0
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/gopkg.in/yaml.v2
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/heapster/metrics/api/v1/types
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/heapster/metrics/apis/metrics/v1alpha1
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/cmd/kube-apiserver/app
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/cmd/kube-controller-manager/app
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/cmd/kube-proxy/app
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/cmd/kubelet/app
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/admission
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/api
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/apimachinery
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/apis/abac
...
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/apis/rbac
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/apiserver
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/auth/authenticator
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/auth/authorizer
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/auth/handlers
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/auth/user
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/capabilities
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/client/cache
...
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/client/unversioned
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/cloudprovider
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/controller
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/conversion
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/credentialprovider
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/fieldpath
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/fields
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/genericapiserver
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/healthz
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/httplog
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/kubelet
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/labels
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/master
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/probe
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/proxy
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/quota
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/registry/cachesize
...
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/registry/thirdpartyresourcedata
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/runtime
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/security/podsecuritypolicy
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/securitycontext
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/serviceaccount
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/ssh
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/storage
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/types
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/ui
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/util
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/version
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/volume
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/pkg/watch
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/plugin/cmd/kube-scheduler/app
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/plugin/pkg/admission/admit
...
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/plugin/pkg/admission/serviceaccount
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/plugin/pkg/auth/authenticator/password/keystone
...
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/plugin/pkg/auth/authorizer/rbac
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/plugin/pkg/auth/authorizer/webhook
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/plugin/pkg/client/auth
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/plugin/pkg/scheduler
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/plugin/pkg/webhook
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/third_party/forked/json
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/third_party/forked/reflect
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/third_party/golang/expansion
godep: dirty working tree (please commit changes): /Users/pnovotnak/go/src/k8s.io/minikube/vendor/k8s.io/kubernetes/third_party/golang/netutil
godep: error loading dependencies
",25690
349,38079036,"//------------------------------------------------------------------
//  user
//----------------------------------------------------------------------
func (d *Database) UserCreate(email, password, username string, role int) *Answer {
    //variables
    answer := d.initCall(""UserCreate"")
    user := new(User)
    //check exist user
    if userExist := d.DB.Find(&User{}, &User{Email:email}).Error; userExist == nil {
        answer.AnswerJSON.ErrorAnswer.Message = ""[usercreate] user already exist""
        answer.AnswerJSON.Result = nil
        answer.AnswerJSON.Status = false
    } else {

        userinfo := UserInfo{Data:time.Now()}
        session := Session{Data:time.Now()}
        cook := Cook{}

        //make support  tables object
        //userinfo object
        userinfo.Password = password
        userinfo.Username = username
        //cook object
        cook.SessionID = session.ID
        cook.Cookie = d.cookgeneratenew(""somesaltforcooksgenerate"")
        cook.Status = true
        cook.Lastconnect = time.Now()
        cook.CountConnect += 1

        //user object
        user.Email = email
        user.Session = session
        user.UserInfo = userinfo
        user.Cook = cook
        user.Role = int64(role)

        //make request + //serizlizations to json answer
        if err := d.DB.Create(user).Error; err != nil {
            answer.AnswerJSON.ErrorAnswer.Message = err.Error()
            answer.AnswerJSON.Status = false
        } else {
            answer.AnswerJSON.Result = user
            answer.AnswerJSON.Status = true
        }
    }
    d.serilize(answer)
    return answer
}
func (d *Database) UserDelete(userid int64) *Answer {
    answer := d.initCall(""UserDelete"")
    user := new(User)
    //check exists
    if userExists := d.DB.Find(user, ""ID = ?"", userid).Error; userExists == nil {
        if userDelete := d.DB.Delete(user).Error; userDelete != nil {
            answer.AnswerJSON.ErrorAnswer.Message = userExists.Error()
            answer.AnswerJSON.Status = false
        } else {
            answer.AnswerJSON.Status = true
            answer.AnswerJSON.ErrorAnswer = nil
        }
    } else {
        answer.AnswerJSON.ErrorAnswer.Message = userExists.Error()
        answer.AnswerJSON.Status = false
    }
    d.serilize(answer)
    return answer
}
func (d *Database) UserRead(userid int64) *Answer {
    answer := d.initCall(""UserRead"")
    user := new(User)
    if userExists := d.DB.Find(user, ""ID = ?"", userid).Error; userExists != nil {
        answer.AnswerJSON.ErrorAnswer.Message = userExists.Error()
        answer.AnswerJSON.Status = false
    } else {
        if rel := d.DB.Model(user).Related(&user.Session).Error; rel != nil {
            answer.AnswerJSON.Result = nil
            answer.AnswerJSON.ErrorAnswer.Message = rel.Error()
            answer.AnswerJSON.Status = false
        } else if rel = d.DB.Model(user).Related(&user.UserInfo).Error; rel != nil {
            answer.AnswerJSON.Result = nil
            answer.AnswerJSON.ErrorAnswer.Message = rel.Error()
            answer.AnswerJSON.Status = false
        } else if rel = d.DB.Model(user).Related(&user.Cook).Error; rel != nil {
            answer.AnswerJSON.Result = nil
            answer.AnswerJSON.ErrorAnswer.Message = rel.Error()
            answer.AnswerJSON.Status = false
        } else {
            answer.AnswerJSON.Result = user
            answer.AnswerJSON.ErrorAnswer = nil
            answer.AnswerJSON.Status = true
        }
    }
    d.serilize(answer)
    return answer
}
func (d *Database) UserReadAll() *Answer {
    answer := d.initCall(""UserReadAll"")
    users := []User{}

    if usersGet := d.DB.Find(&users).Error; usersGet != nil {
        answer.AnswerJSON.ErrorAnswer.Message = usersGet.Error()
        answer.AnswerJSON.Status = false
    } else {
        for _, user := range users {
            d.DB.Model(user).Related(&user.Session)
            d.DB.Model(user).Related(&user.UserInfo)
            d.DB.Model(user).Related(&user.Cook)
        }
        answer.AnswerJSON.Result = users
        answer.AnswerJSON.ErrorAnswer = nil
        answer.AnswerJSON.Status = true
    }
    d.serilize(answer)
    return answer
}
func (d *Database) UserUpdate(userid int64, uu *UserUpdateStruct) *Answer {
    answer := d.initCall(""UserUpdate"")
    user := new(User)

    if userExists := d.DB.Find(user, ""ID = ?"", userid).Error; userExists != nil {
        answer.AnswerJSON.ErrorAnswer.Message = userExists.Error()
        answer.AnswerJSON.Status = false
    } else {
        //get relevating struct info
        d.DB.Model(user).Related(&user.Session)
        d.DB.Model(user).Related(&user.UserInfo)
        d.DB.Model(user).Related(&user.Cook)

        //update columns
        if uu.Email != """" {
            user.Email = uu.Email
        }
        if uu.Avatar > 0 {
            user.UserInfo.Avatar = uu.Avatar
        }
        if uu.Birthday != """" {
            user.UserInfo.Birthday = uu.Birthday
        }
        if uu.Location != """" {
            user.UserInfo.Location = uu.Location
        }
        if uu.Male != """" {
            user.UserInfo.Male = uu.Male
        }
        if uu.Password != """" {
            user.UserInfo.Password = uu.Password
        }
        if uu.Role > 0 {
            if roleErr := d.DB.Find(&Role{}).Error; roleErr != nil {
                //role not found
                fmt.Printf(""[userupdate] role not found `%d`\n"", uu.Role)
            } else {
                user.Role = uu.Role
            }
        }

        //update
        if errUpdate := d.DB.Save(user).Error; errUpdate != nil {
            answer.AnswerJSON.ErrorAnswer.Message = errUpdate.Error()
            answer.AnswerJSON.Status = false
        } else {
            answer.AnswerJSON.Result = user
            answer.AnswerJSON.ErrorAnswer = nil
            answer.AnswerJSON.Status = true
        }
    }
    d.serilize(answer)
    return answer
}
func (d *Database) UserPaginate(page, countPage int) *Answer {
    answer := d.initCall(""UserPaginate"")
    result := []*User{}
    if errPag := d.DB.Limit(countPage).Offset((page * countPage) - countPage).Find(&result).Error; errPag != nil {
        answer.AnswerJSON.ErrorAnswer.Message = errPag.Error()
        answer.AnswerJSON.Status = false
    } else {
        for _, user := range result {
            d.DB.Model(&user).Related(&user.Session)
            d.DB.Model(&user).Related(&user.UserInfo)
            d.DB.Model(&user).Related(&user.Cook)
        }
        answer.AnswerJSON.Result = result
        answer.AnswerJSON.ErrorAnswer = nil
        answer.AnswerJSON.Status = true
    }
    d.serilize(answer)
    return answer
}
//-------------------------------------------------------------------
//  category
//--------------------------------------------------------------------
func (d *Database) CategoryCreate(name string) *Answer {
    //variables
    answer := d.initCall(""CategoryCreate"")
    cat := new(Category)
    //check exist user
    if catExist := d.DB.Find(&Category{}, &Category{Name:name}).Error; catExist == nil {
        answer.AnswerJSON.ErrorAnswer.Message = ""[categorycreate] category already exist""
        answer.AnswerJSON.Result = nil
        answer.AnswerJSON.Status = false
    } else {
        cat.Name = name
        //make request + //serizlizations to json answer
        if err := d.DB.Create(cat).Error; err != nil {
            answer.AnswerJSON.ErrorAnswer.Message = err.Error()
            answer.AnswerJSON.Status = false
        } else {
            answer.AnswerJSON.Result = cat
            answer.AnswerJSON.Status = true
        }
    }
    d.serilize(answer)
    return answer
}
func (d *Database) CategoryDelete(catid int64) *Answer {
    answer := d.initCall(""CategoryDelete"")
    cat := new(Category)
    //check exists
    if catExists := d.DB.Find(cat, ""ID = ?"", catid).Error; catExists == nil {
        if catDelete := d.DB.Delete(cat).Error; catDelete != nil {
            answer.AnswerJSON.ErrorAnswer.Message = catExists.Error()
            answer.AnswerJSON.Status = false
        } else {
            answer.AnswerJSON.Status = true
            answer.AnswerJSON.ErrorAnswer = nil
        }
    } else {
        answer.AnswerJSON.ErrorAnswer.Message = catExists.Error()
        answer.AnswerJSON.Status = false
    }
    d.serilize(answer)
    return answer
}
func (d *Database) CategoryRead(catid int64) *Answer {
    answer := d.initCall(""CategoryRead"")
    cat := new(Category)
    if catExists := d.DB.Find(cat, ""ID = ?"", catid).Error; catExists != nil {
        answer.AnswerJSON.ErrorAnswer.Message = catExists.Error()
        answer.AnswerJSON.Status = false
    } else {
        if rel := d.DB.Model(cat).Related(&cat.Post).Error; rel != nil {
            answer.AnswerJSON.Result = nil
            answer.AnswerJSON.ErrorAnswer.Message = rel.Error()
            answer.AnswerJSON.Status = false
        } else {
            for x, p := range cat.Post {
                d.DB.Model(&p).Related(&p.Comment)
                d.DB.Model(&p).Related(&p.PostSeo)
                cat.Post[x] = p
            }
            answer.AnswerJSON.Result = cat
            answer.AnswerJSON.ErrorAnswer = nil
            answer.AnswerJSON.Status = true
        }
    }
    d.serilize(answer)
    return answer
}
func (d *Database) CategoryReadAll() *Answer {
    answer := d.initCall(""CategoryReadAll"")
    cats := []Category{}

    if catsGet := d.DB.Find(&cats).Error; catsGet != nil {
        answer.AnswerJSON.ErrorAnswer.Message = catsGet.Error()
        answer.AnswerJSON.Status = false
    } else {
        //categorys
        for _, cat := range cats {
            d.DB.Model(cat).Related(&cat.Post)
            //get relete POST
            for x, p := range cat.Post {
                d.DB.Model(&p).Related(&p.Comment)
                d.DB.Model(&p).Related(&p.PostSeo)
                cat.Post[x] = p
            }
        }
        answer.AnswerJSON.Result = cats
        answer.AnswerJSON.ErrorAnswer = nil
        answer.AnswerJSON.Status = true
    }
    d.serilize(answer)
    return answer
}
func (d *Database) CategoryUpdate(catid int64, name string) *Answer {
    answer := d.initCall(""CategoryUpdate"")
    cat := new(Category)

    if catExists := d.DB.Find(cat, ""ID = ?"", catid).Error; catExists != nil {
        answer.AnswerJSON.ErrorAnswer.Message = catExists.Error()
        answer.AnswerJSON.Status = false
    } else {
        //get relevating struct info
        d.DB.Model(cat).Related(&cat.Post)

        //update columns
        if name != """" {
            cat.Name = name
        }
        //update
        if errUpdate := d.DB.Save(cat).Error; errUpdate != nil {
            answer.AnswerJSON.ErrorAnswer.Message = errUpdate.Error()
            answer.AnswerJSON.Status = false
        } else {
            answer.AnswerJSON.Result = cat
            answer.AnswerJSON.ErrorAnswer = nil
            answer.AnswerJSON.Status = true
        }
    }
    d.serilize(answer)
    return answer
}
func (d *Database) CategoryPaginate(page, countPage int) *Answer {
    answer := d.initCall(""CategoryPaginate"")
    result := []*Category{}
    if errPag := d.DB.Limit(countPage).Offset((page * countPage) - countPage).Find(&result).Error; errPag != nil {
        answer.AnswerJSON.ErrorAnswer.Message = errPag.Error()
        answer.AnswerJSON.Status = false
    } else {
        for _, cat := range result {
            d.DB.Model(&cat).Related(&cat.Post)
            //get relete POST
            for x, p := range cat.Post {
                d.DB.Model(&p).Related(&p.Comment)
                d.DB.Model(&p).Related(&p.PostSeo)
                cat.Post[x] = p
            }
        }
        answer.AnswerJSON.Result = result
        answer.AnswerJSON.ErrorAnswer = nil
        answer.AnswerJSON.Status = true
    }
    d.serilize(answer)
    return answer
}
",11894
350,38572046,"himanshus-mbp:BCApplication himanshutyagi$ node app.js 
loading hardcoded peers
loading hardcoded users
[ibc-js] Peer:  vp0-dev_vp0...:5000
[ibc-js] No membership users found after filtering, assuming this is a network w/o membership
[ibc-js] Found chaincode in local file system
[ibc-js] Scanning files [ '.DS_Store', 'chaincode_finished.go', 'finished' ]
[ibc-js] Parsing file for shim version
[ibc-js] Found shim version: github.com/hyperledger/fabric/core/chaincode/shim
[ibc-js] Parsing file for invoke functions - chaincode_finished.go
[ibc-js] Found cc invoke function:  init
[ibc-js] Found cc invoke function:  delete_product
[ibc-js] Found cc invoke function:  delete_offering
[ibc-js] Found cc invoke function:  delete_contract
[ibc-js] Found cc invoke function:  delete_client
[ibc-js] Found cc invoke function:  write
[ibc-js] Found cc invoke function:  init_product
[ibc-js] Found cc invoke function:  init_offering
[ibc-js] Found cc invoke function:  init_contract
[ibc-js] Found cc invoke function:  init_client
[ibc-js] Found cc invoke function:  set_user_type
[ibc-js] Parsing file for query functions - chaincode_finished.go
[ibc-js] Found cc query function:  read
[ibc-js] Found cc query function:  read_product_index
[ibc-js] Found cc query function:  read_offering_index
[ibc-js] Found cc query function:  read_contract_index
[ibc-js] Found cc query function:  read_client_index
[ibc-js] load_chaincode() finished
chaincode summary file indicates chaincode has been previously deployed
------------------------------------------ Chain is up and running ------------------------------------------
Getting Offering List: 
[ibc-js] read  - success: { jsonrpc: '2.0',
  error: 
   { code: -32602,
     message: 'Invalid params',
     data: 'Must supply username for chaincode when security is enabled.' },
  id: 1469460324754 }
read _offeringindex: null { name: 'query() resp error',
  code: 400,
  details: 
   { code: -32602,
     message: 'Invalid params',
     data: 'Must supply username for chaincode when security is enabled.' } }
/Users/himanshutyagi/Desktop/workspace/node_modules/async/lib/async.js:106
        if (!arr.length) {
                ^

TypeError: Cannot read property 'length' of null
    at Object.async.each (/Users/himanshutyagi/Desktop/workspace/node_modules/async/lib/async.js:106:17)
    at /Users/himanshutyagi/Desktop/workspace/BCApplication/BCApplication/app.js:379:10
    at Object.options.success (/Users/himanshutyagi/Desktop/workspace/BCApplication/BCApplication/node_modules/ibm-blockchain-js/index.js:1020:22)
    at success (/Users/himanshutyagi/Desktop/workspace/BCApplication/BCApplication/node_modules/ibm-blockchain-js/lib/rest.js:109:30)
    at IncomingMessage. (/Users/himanshutyagi/Desktop/workspace/BCApplication/BCApplication/node_modules/ibm-blockchain-js/lib/rest.js:192:7)
    at emitNone (events.js:72:20)
    at IncomingMessage.emit (events.js:166:7)
    at endReadableNT (_stream_readable.js:921:12)
    at nextTickCallbackWith2Args (node.js:442:9)
    at process._tickCallback (node.js:356:17)
",3066
351,38572046,No membership users found after filtering,41
352,38572046,enrollID and enrollPW,21
353,38572046,app.js,6
354,38572046,"var options =   {
                    network:{
                        /*
                        peers: peers,
                        users: users,
                        options: {quiet: true, tls:false, maxRetry: 1}*/
                        'peers': [
                            {
                                        'discovery_host': 'localhost',
                                        'discovery_port': 30303,
                                        'api_host': 'localhost',
                                        'api_port_tls': 443,
                                        'api_port': 5000,
                                        'type': 'peer',
                                        'network_id': 'dev',
                                        'id': 'dev_vp0',
                                        'api_url': 'http://localhost:5000'
                                    }
                            ],
                            ""users"": [
                          {
                            ""username"": ""tyagi_user_type1"",
                            ""secret"": ""1ccf8703ac"",
                            ""enrollId"": ""tyagi_type1"",
                            ""enrollSecret"": ""1ccf8703ac""
                          }
                        ],
                    options: {quiet: true, tls:false, maxRetry: 1}
                    },
                    ...
};
",1390
355,38572046,user_type1_xxx,14
356,38572046,"himanshus-mbp:BCApplication himanshutyagi$ node app.js
loading hardcoded peers
loading hardcoded users
[ibc-js] Peer:  vp0-dev_vp0...:443
[ibc-js] Registering  vp0-dev_vp0...:443  w/enrollID - user_type1_tyagi
[ibc-js] Register - failure x1 : user_type1_tyagi 500
[ibc-js]    going to try to register again in 30 secs
Query for the product table executed
Query for the offering table executed
Query for the contract table executed
Query for the product table executed
[ibc-js] Registering  vp0-dev_vp0...:443  w/enrollID - user_type1_tyagi
[ibc-js] Register - failure x2 : user_type1_tyagi 500
[ibc-js]    going to try to register again in 30 secs
Query for the product table executed
Query for the offering table executed
Query for the contract table executed
Query for the product table executed
[ibc-js] Registering  vp0-dev_vp0...:443  w/enrollID - user_type1_tyagi
[ibc-js] Register - failure x3 : user_type1_tyagi 500
[ibc-js]    going to try to register again in 30 secs
Query for the product table executed
Query for the offering table executed
Query for the contract table executed
Query for the product table executed
Query for the product table executed
Query for the offering table executed
Query for the contract table executed
Query for the product table executed
[ibc-js] Registering  vp0-dev_vp0...:443  w/enrollID - user_type1_tyagi
[ibc-js] Register - failure x4 : user_type1_tyagi 500
! looks like an error loading the chaincode or network, app will fail
 { name: 'register() error',
  code: 500,
  details: 
   { [Error: connect ECONNREFUSED 127.0.0.1:443]
     code: 'ECONNREFUSED',
     errno: 'ECONNREFUSED',
     syscall: 'connect',
     address: '127.0.0.1',
     port: 443 } }
",1703
357,38698066,"func static(w http.ResponseWriter, r *http.Request) {
    //check backend
    if user, err := aaa.CurrentUser(w, r); err == nil {
        //user is logged in
        log.Println(user)
        vars := mux.Vars(r)
        page := vars[""page""]
        data, _ := ioutil.ReadFile(""downloads/"" + page)
        w.Write(data)
        return
    }else {
        //user is not logged in
        http.Redirect(w,r,""/login"",http.StatusUnauthorized)
        w.Write([]byte(""alert('Please login')""))
        return
    }
} 
",511
358,38698066,Unauthorized.,13
359,38698066,"package main

import (
    ""flag""
    ""fmt""
    ""html/template""
    ""io/ioutil""
    ""log""
    ""net/http""
    ""os""
    ""strings""
    ""strconv""
    ""time""
    ""github.com/apexskier/httpauth""
    ""github.com/gorilla/mux""
    ""runtime""
)

var (
    backend     httpauth.LeveldbAuthBackend
    aaa         httpauth.Authorizer
    roles       map[string]httpauth.Role
    port        = 80
    backendfile = ""auth.leveldb""
)

func static(w http.ResponseWriter, r *http.Request) {
    if user, err := aaa.CurrentUser(w, r); err == nil {
        log.Println(user)
        vars := mux.Vars(r)
        page := vars[""page""]
        data, _ := ioutil.ReadFile(""downloads/"" + page)
        w.Write(data)
        return
    }else {
        w.Write([]byte(""alert('Please login')""))
        http.Redirect(w,r,""/login"",http.StatusUnauthorized)
        return
    }
}
func main() {
    runtime.GOMAXPROCS(runtime.NumCPU())
    var err error
    os.Mkdir(backendfile, 0755)
    defer os.Remove(backendfile)

    // create the backend
    backend, err = httpauth.NewLeveldbAuthBackend(backendfile)
    if err != nil {
        panic(err)
    }

    // create some default roles
    roles = make(map[string]httpauth.Role)
    roles[""user""] = 30
    roles[""admin""] = 80
    aaa, err = httpauth.NewAuthorizer(backend, []byte(""cookie-encryption-key""), ""user"", roles)

    // create a default user
    username := ""admin""
    defaultUser := httpauth.UserData{Username: username, Role: ""admin""}
    err = backend.SaveUser(defaultUser)
    if err != nil {
        panic(err)
    }
    // Update user with a password and email address
    err = aaa.Update(nil, nil, username, ""adminadmin"", ""admin@localhost.com"")
    if err != nil {
        panic(err)
    }

    // set up routers and route handlers
    flag.Parse()
    hub := newHub()
    go hub.run()
    r := mux.NewRouter()
    r.HandleFunc(""/chat"", serveChat)
    r.HandleFunc(""/ws"", func(w http.ResponseWriter, r *http.Request) {
        serveWs(hub, w, r)
    })
    r.HandleFunc(""/downloads/{page}"", static)
    http.Handle(""/www/"", http.StripPrefix(""/www/"", http.FileServer(http.Dir(""./www""))))
    r.HandleFunc(""/login"", getLogin).Methods(""GET"")
    r.HandleFunc(""/register"", postRegister).Methods(""POST"")
    r.HandleFunc(""/register"", getRegister).Methods(""GET"")
    r.HandleFunc(""/login"", postLogin).Methods(""POST"")
    r.HandleFunc(""/admin"", handleAdmin).Methods(""GET"")
    r.HandleFunc(""/add_user"", postAddUser).Methods(""POST"")
    r.HandleFunc(""/change"", postChange).Methods(""POST"")
    r.HandleFunc(""/"", handlePage).Methods(""GET"") // authorized page
    r.HandleFunc(""/logout"", handleLogout)
    r.HandleFunc(""/home"", homeHandle).Methods(""GET"")

    http.Handle(""/"", r)
    fmt.Printf(""Server running on port %d\n"", port)
    srv:=&http.Server {
        Addr: "":""+strconv.Itoa(port),
        ReadTimeout: 10* time.Second,
        WriteTimeout: 10*time.Second,
        MaxHeaderBytes: 1<<20,
    }
    srv.ListenAndServe()
}
func serveChat(w http.ResponseWriter, r *http.Request) {
    if user, err := aaa.CurrentUser(w, r); err == nil {
        log.Println(r.URL)
        log.Println(user)
        w.Header().Set(""Content-Type"", ""text/html; charset=utf-8"")
        chatt, _ := template.New(""member"").Parse(chat)
        chatt.Execute(w, r.Host)
        return
    } else {
        http.Redirect(w, r, ""/login"", http.StatusUnauthorized)
        return
    }
}

type Page struct {
    USER httpauth.UserData
}

func homeHandle(w http.ResponseWriter, r *http.Request) {
    if user, err := aaa.CurrentUser(w, r); err == nil {
        type data struct {
            User  httpauth.UserData
            Roles map[string]httpauth.Role
            Users []httpauth.UserData
            Msg   []string
        }
        messages := aaa.Messages(w, r)
        users, err := backend.Users()
        if err != nil {
            panic(err)
        }
        d := data{User: user, Roles: roles, Users: users, Msg: messages}
        homet, _ := template.New(""member"").Parse(member)
        homet.Execute(w, d)
        return
    } else {
        http.Redirect(w, r, ""/login"", http.StatusUnauthorized)
        return
    }
}
func getRegister(w http.ResponseWriter, r *http.Request) {
    fmt.Fprintf(w, register)
    return
}
func getLogin(rw http.ResponseWriter, req *http.Request) {
    fmt.Fprintf(rw, login)
    return
}

func postLogin(rw http.ResponseWriter, req *http.Request) {
    username := req.PostFormValue(""username"")
    password := req.PostFormValue(""password"")
    if err := aaa.Login(rw, req, username, password, ""/home""); err == nil || (err != nil && strings.Contains(err.Error(), ""already authenticated"")) {
        http.Redirect(rw, req, ""/home"", http.StatusSeeOther)
        return
    } else if err != nil {
        fmt.Println(err)
        http.Redirect(rw, req, ""/login"", http.StatusSeeOther)
        return
    }
}

func postRegister(rw http.ResponseWriter, req *http.Request) {
    var user httpauth.UserData
    user.Username = req.PostFormValue(""username"")
    user.Email = req.PostFormValue(""email"")
    password := req.PostFormValue(""password"")
    if err := aaa.Register(rw, req, user, password); err == nil {
        postLogin(rw, req)
        return
    } else {
        http.Redirect(rw, req, ""/login"", http.StatusSeeOther)
        return
    }
}

func postAddUser(rw http.ResponseWriter, req *http.Request) {
    var user httpauth.UserData
    user.Username = req.PostFormValue(""username"")
    user.Email = req.PostFormValue(""email"")
    password := req.PostFormValue(""password"")
    user.Role = req.PostFormValue(""role"")
    if err := aaa.Register(rw, req, user, password); err != nil {
        // maybe something
    }
    http.Redirect(rw, req, ""/admin"", http.StatusSeeOther)
    return
}

func postChange(rw http.ResponseWriter, req *http.Request) {
    email := req.PostFormValue(""new_email"")
    aaa.Update(rw, req, """", """", email)
    http.Redirect(rw, req, ""/"", http.StatusSeeOther)
    return
}

func handlePage(rw http.ResponseWriter, req *http.Request) {
    rw.Write([]byte(index))
    return
}

func handleAdmin(rw http.ResponseWriter, req *http.Request) {
    if err := aaa.AuthorizeRole(rw, req, ""admin"", true); err != nil {
        fmt.Println(err)
        http.Redirect(rw, req, ""/login"", http.StatusSeeOther)
        return
    }
    if user, err := aaa.CurrentUser(rw, req); err == nil {
        type data struct {
            User  httpauth.UserData
            Roles map[string]httpauth.Role
            Users []httpauth.UserData
            Msg   []string
        }
        messages := aaa.Messages(rw, req)
        users, err := backend.Users()
        if err != nil {
            panic(err)
        }
        d := data{User: user, Roles: roles, Users: users, Msg: messages}
        t, err := template.New(""admin"").Parse(admin)
        if err != nil {
            panic(err)
        }
        t.Execute(rw, d)
        return
    }
}

func handleLogout(rw http.ResponseWriter, req *http.Request) {
    if err := aaa.Logout(rw, req); err != nil {
        fmt.Println(err)
        // this shouldn't happen
        return
    }
    http.Redirect(rw, req, ""/"", http.StatusSeeOther)
    return
}
",7170
360,38879356,"// ReceiveData - used to handle incoming data
func ReceiveData(w http.ResponseWriter, r *http.Request) {
    if r.Method != ""POST"" {
        http.NotFound(w, r)
        return
    }

    body, err := ioutil.ReadAll(r.Body)
    if err != nil {
        panic(err)
    }

    // database
    session, err := mgo.Dial(""localhost"")
    if err != nil {
        panic(err)
    } else {
        fmt.Println(""session created"")
        database := session.DB(""schedule_calculator"")
        collection := database.C(""schedule_save"")
        num, err := collection.Count()
        if err == nil {
            fmt.Println(""schedule_save collection count = "", num)
            mongodbData := SavedData{ID: bson.NewObjectId(), Data: string(body), Date: time.Now()}
            collection.Insert(mongodbData)
            num, _ := collection.Count()
            fmt.Println(""new count: "", num)
        } else {
            fmt.Println(""schedule_save error - "", err)
        }
    }

    if err := json.NewEncoder(w).Encode(""todos""); err != nil {
        panic(err)
    }
}

type SavedData struct {
    ID   bson.ObjectId `bson:""_id""`
    Data string
    Date time.Time
}

// SendData - Called by UI to get saved data
func SendData(w http.ResponseWriter, r *http.Request) {
    fmt.Println(""SendData function"")
    session, err := mgo.Dial(""localhost"")
    defer closeSession(session)
    if err != nil {
        panic(err)
    } else {
        fmt.Println(""session created"")
        database := session.DB(""schedule_calculator"")
        collection := database.C(""schedule_save"")
        num, err := collection.Count()
        if err == nil {
            fmt.Println(""schedule_save collection count = "", num)

            var myData SavedData
            dbSize, err2 := collection.Count()
            if err2 != nil {
                panic(err2)
            }

            if dbSize > 0 {
                // db not empty
                err2 = collection.Find(nil).Skip(dbSize - 1).One(&myData)
                if err2 != nil {
          // TODO: handle error
                    panic(err2)
                }

                // fmt.Println(myData.Data)

                w.Header().Set(""Content-Type"", ""application/json; charset=UTF-8"")
                w.WriteHeader(http.StatusOK)

                if err := json.NewEncoder(w).Encode(myData.Data); err != nil {
          // TODO: handle error
                    panic(err)
                }
            } else {
                // db empty
        fmt.Println(""DB is empty"")
            }

        } else {
            fmt.Println(""schedule_save error - "", err)
        }
    }
}

// closes the mongodb session
// TODO: make it use only 1 session
func closeSession(session *mgo.Session) {
    session.Close()
    fmt.Println(""session closed"")
}
",2782
361,38879356,"2016-08-10T19:22:59.734+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55401 #60 (6 connections now open)
2016-08-10T19:22:59.740+0300 I NETWORK  [conn60] end connection 127.0.0.1:55401 (5 connections now open)
2016-08-10T19:23:58.794+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55405 #61 (6 connections now open)
2016-08-10T19:23:58.800+0300 I NETWORK  [conn61] end connection 127.0.0.1:55405 (5 connections now open)
2016-08-10T19:24:24.219+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55411 #62 (6 connections now open)
2016-08-10T19:24:24.225+0300 I NETWORK  [conn62] end connection 127.0.0.1:55411 (5 connections now open)
2016-08-10T19:25:56.149+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55434 #63 (6 connections now open)
2016-08-10T19:25:56.155+0300 I NETWORK  [conn63] end connection 127.0.0.1:55434 (5 connections now open)
2016-08-10T19:33:54.127+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55460 #64 (6 connections now open)
2016-08-10T19:33:54.133+0300 I NETWORK  [conn64] end connection 127.0.0.1:55460 (5 connections now open)
2016-08-10T19:35:12.060+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55476 #65 (6 connections now open)
2016-08-10T19:35:12.066+0300 I NETWORK  [conn65] end connection 127.0.0.1:55476 (5 connections now open)
2016-08-10T19:35:22.827+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55477 #66 (6 connections now open)
2016-08-10T19:35:22.833+0300 I NETWORK  [conn66] end connection 127.0.0.1:55477 (5 connections now open)
2016-08-10T19:35:37.720+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55478 #67 (6 connections now open)
2016-08-10T19:35:52.725+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55487 #68 (7 connections now open)
2016-08-10T19:36:20.498+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55488 #69 (8 connections now open)
2016-08-10T19:36:20.508+0300 I NETWORK  [conn69] end connection 127.0.0.1:55488 (7 connections now open)
2016-08-10T19:36:33.100+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55490 #70 (8 connections now open)
2016-08-10T19:36:37.155+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55492 #71 (9 connections now open)
2016-08-10T19:36:48.105+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55493 #72 (10 connections now open)
2016-08-10T19:36:50.284+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55494 #73 (11 connections now open)
2016-08-10T19:36:52.157+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55495 #74 (12 connections now open)
2016-08-10T19:36:53.328+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55496 #75 (13 connections now open)
2016-08-10T19:37:01.375+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55497 #76 (14 connections now open)
2016-08-10T19:37:05.287+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55498 #77 (15 connections now open)
2016-08-10T19:37:05.827+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55499 #78 (16 connections now open)
2016-08-10T19:37:05.836+0300 I NETWORK  [conn78] end connection 127.0.0.1:55499 (15 connections now open)
2016-08-10T19:37:08.333+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55500 #79 (16 connections now open)
2016-08-10T19:37:16.376+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55521 #80 (17 connections now open)
2016-08-10T19:37:23.323+0300 W NETWORK  [HostnameCanonicalizationWorker] Failed to obtain name info for: [ (192.168.0.102, ""nodename nor servname provided, or not known""), (192.168.0.102, ""nodename nor servname provided, or not known"") ]
2016-08-10T19:40:41.079+0300 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:55546 #81 (18 connections now open)
2016-08-10T19:40:41.087+0300 I NETWORK  [conn81] end connection 127.0.0.1:55546 (17 connections now open)
",4072
362,38898766,"a8 := [8]int{1, 2, 3, 4, 5, 6, 7, 8}
fmt.Println(a8) // [1 2 3 4 5 6 7 8]
",74
363,38898766,"a8 := [8]int{}
fmt.Println(a8) // [0 0 0 0 0 0 0 0]
",52
364,38898766,"b := [64][8]int{}
for i, v := range b {
    for j, _ := range v {
        b[i][j] = i*100 + j
    }
    fmt.Println(b[i])
}
",124
365,38898766,"package main

import ""fmt""

func main() {
    aa := [64][8]int{}
    fmt.Println(aa)

    for i, v := range a {
        for j, w := range v {
            fmt.Println(""a["", i, ""]"", ""["", j, ""]="", a[i][j], ""="", w)
        }
    }

    fmt.Println()

    for _, v := range a {
        fmt.Println(v)
    }
}

var a = [64][8]int{[8]int{11, 0, 0, 0, 18, 0, 0, 0},
    [8]int{12, 0, 0, 0, 19, 17, 0, 0},
    [8]int{13, 9, 0, 0, 20, 18, 0, 0},
    [8]int{14, 10, 0, 0, 21, 19, 0, 0},
    [8]int{15, 11, 0, 0, 22, 20, 0, 0},
    [8]int{16, 12, 0, 0, 23, 21, 0, 0},
    [8]int{0, 13, 0, 0, 24, 22, 0, 0},
    [8]int{0, 14, 0, 0, 0, 23, 0, 0},
    [8]int{19, 0, 3, 0, 26, 0, 0, 0},
    [8]int{20, 0, 4, 0, 27, 25, 0, 0},
    [8]int{21, 17, 5, 1, 28, 26, 0, 0},
    [8]int{22, 18, 6, 2, 29, 27, 0, 0},
    [8]int{23, 19, 7, 3, 30, 28, 0, 0},
    [8]int{24, 20, 8, 4, 31, 29, 0, 0},
    [8]int{0, 21, 0, 5, 32, 30, 0, 0},
    [8]int{0, 22, 0, 6, 0, 31, 0, 0},
    [8]int{27, 0, 11, 0, 34, 0, 2, 0},
    [8]int{28, 0, 12, 0, 35, 33, 3, 1},
    [8]int{29, 25, 13, 9, 36, 34, 4, 2},
    [8]int{30, 26, 14, 10, 37, 35, 5, 3},
    [8]int{31, 27, 15, 11, 38, 36, 6, 4},
    [8]int{32, 28, 16, 12, 39, 37, 7, 5},
    [8]int{0, 29, 0, 13, 40, 38, 8, 6},
    [8]int{0, 30, 0, 14, 0, 39, 0, 7},
    [8]int{35, 0, 19, 0, 42, 0, 10, 0},
    [8]int{36, 0, 20, 0, 43, 41, 11, 9},
    [8]int{37, 33, 21, 17, 44, 42, 12, 10},
    [8]int{38, 34, 22, 18, 45, 43, 13, 11},
    [8]int{39, 35, 23, 19, 46, 44, 14, 12},
    [8]int{40, 36, 24, 20, 47, 45, 15, 13},
    [8]int{0, 37, 0, 21, 48, 46, 16, 14},
    [8]int{0, 38, 0, 22, 0, 47, 0, 15},
    [8]int{43, 0, 27, 0, 50, 0, 18, 0},
    [8]int{44, 0, 28, 0, 51, 49, 19, 17},
    [8]int{45, 41, 29, 25, 52, 50, 20, 18},
    [8]int{46, 42, 30, 26, 53, 51, 21, 19},
    [8]int{47, 43, 31, 27, 54, 52, 22, 20},
    [8]int{48, 44, 32, 28, 55, 53, 23, 21},
    [8]int{0, 45, 0, 29, 56, 54, 24, 22},
    [8]int{0, 46, 0, 30, 0, 55, 0, 23},
    [8]int{51, 0, 35, 0, 58, 0, 26, 0},
    [8]int{52, 0, 36, 0, 59, 57, 27, 25},
    [8]int{53, 49, 37, 33, 60, 58, 28, 26},
    [8]int{54, 50, 38, 34, 61, 59, 29, 27},
    [8]int{55, 51, 39, 35, 62, 60, 30, 28},
    [8]int{56, 52, 40, 36, 63, 61, 31, 29},
    [8]int{0, 53, 0, 37, 64, 62, 32, 30},
    [8]int{0, 54, 0, 38, 0, 63, 0, 31},
    [8]int{59, 0, 43, 0, 0, 0, 34, 0},
    [8]int{60, 0, 44, 0, 0, 0, 35, 33},
    [8]int{61, 57, 45, 41, 0, 0, 36, 34},
    [8]int{62, 58, 46, 42, 0, 0, 37, 35},
    [8]int{63, 59, 47, 43, 0, 0, 38, 36},
    [8]int{64, 60, 48, 44, 0, 0, 39, 37},
    [8]int{0, 61, 0, 45, 0, 0, 40, 38},
    [8]int{0, 62, 0, 46, 0, 0, 0, 39},
    [8]int{0, 0, 51, 0, 0, 0, 42, 0},
    [8]int{0, 0, 52, 0, 0, 0, 43, 41},
    [8]int{0, 0, 53, 49, 0, 0, 44, 42},
    [8]int{0, 0, 54, 50, 0, 0, 45, 43},
    [8]int{0, 0, 55, 51, 0, 0, 46, 44},
    [8]int{0, 0, 56, 52, 0, 0, 47, 45},
    [8]int{0, 0, 0, 53, 0, 0, 48, 46},
    [8]int{0, 0, 0, 54, 0, 0, 0, 47},
}
",2933
366,38898766,"[[0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0] [0 0 0 0 0 0 0 0]]
a[ 0 ] [ 0 ]= 11 = 11
a[ 0 ] [ 1 ]= 0 = 0
a[ 0 ] [ 2 ]= 0 = 0
a[ 0 ] [ 3 ]= 0 = 0
a[ 0 ] [ 4 ]= 18 = 18
a[ 0 ] [ 5 ]= 0 = 0
a[ 0 ] [ 6 ]= 0 = 0
a[ 0 ] [ 7 ]= 0 = 0
a[ 1 ] [ 0 ]= 12 = 12
a[ 1 ] [ 1 ]= 0 = 0
a[ 1 ] [ 2 ]= 0 = 0
a[ 1 ] [ 3 ]= 0 = 0
a[ 1 ] [ 4 ]= 19 = 19
a[ 1 ] [ 5 ]= 17 = 17
a[ 1 ] [ 6 ]= 0 = 0
a[ 1 ] [ 7 ]= 0 = 0
a[ 2 ] [ 0 ]= 13 = 13
a[ 2 ] [ 1 ]= 9 = 9
a[ 2 ] [ 2 ]= 0 = 0
a[ 2 ] [ 3 ]= 0 = 0
a[ 2 ] [ 4 ]= 20 = 20
a[ 2 ] [ 5 ]= 18 = 18
a[ 2 ] [ 6 ]= 0 = 0
a[ 2 ] [ 7 ]= 0 = 0
a[ 3 ] [ 0 ]= 14 = 14
a[ 3 ] [ 1 ]= 10 = 10
a[ 3 ] [ 2 ]= 0 = 0
a[ 3 ] [ 3 ]= 0 = 0
a[ 3 ] [ 4 ]= 21 = 21
a[ 3 ] [ 5 ]= 19 = 19
a[ 3 ] [ 6 ]= 0 = 0
a[ 3 ] [ 7 ]= 0 = 0
a[ 4 ] [ 0 ]= 15 = 15
a[ 4 ] [ 1 ]= 11 = 11
a[ 4 ] [ 2 ]= 0 = 0
a[ 4 ] [ 3 ]= 0 = 0
a[ 4 ] [ 4 ]= 22 = 22
a[ 4 ] [ 5 ]= 20 = 20
a[ 4 ] [ 6 ]= 0 = 0
a[ 4 ] [ 7 ]= 0 = 0
a[ 5 ] [ 0 ]= 16 = 16
a[ 5 ] [ 1 ]= 12 = 12
a[ 5 ] [ 2 ]= 0 = 0
a[ 5 ] [ 3 ]= 0 = 0
a[ 5 ] [ 4 ]= 23 = 23
a[ 5 ] [ 5 ]= 21 = 21
a[ 5 ] [ 6 ]= 0 = 0
a[ 5 ] [ 7 ]= 0 = 0
a[ 6 ] [ 0 ]= 0 = 0
a[ 6 ] [ 1 ]= 13 = 13
a[ 6 ] [ 2 ]= 0 = 0
a[ 6 ] [ 3 ]= 0 = 0
a[ 6 ] [ 4 ]= 24 = 24
a[ 6 ] [ 5 ]= 22 = 22
a[ 6 ] [ 6 ]= 0 = 0
a[ 6 ] [ 7 ]= 0 = 0
a[ 7 ] [ 0 ]= 0 = 0
a[ 7 ] [ 1 ]= 14 = 14
a[ 7 ] [ 2 ]= 0 = 0
a[ 7 ] [ 3 ]= 0 = 0
a[ 7 ] [ 4 ]= 0 = 0
a[ 7 ] [ 5 ]= 23 = 23
a[ 7 ] [ 6 ]= 0 = 0
a[ 7 ] [ 7 ]= 0 = 0
a[ 8 ] [ 0 ]= 19 = 19
a[ 8 ] [ 1 ]= 0 = 0
a[ 8 ] [ 2 ]= 3 = 3
a[ 8 ] [ 3 ]= 0 = 0
a[ 8 ] [ 4 ]= 26 = 26
a[ 8 ] [ 5 ]= 0 = 0
a[ 8 ] [ 6 ]= 0 = 0
a[ 8 ] [ 7 ]= 0 = 0
a[ 9 ] [ 0 ]= 20 = 20
a[ 9 ] [ 1 ]= 0 = 0
a[ 9 ] [ 2 ]= 4 = 4
a[ 9 ] [ 3 ]= 0 = 0
a[ 9 ] [ 4 ]= 27 = 27
a[ 9 ] [ 5 ]= 25 = 25
a[ 9 ] [ 6 ]= 0 = 0
a[ 9 ] [ 7 ]= 0 = 0
a[ 10 ] [ 0 ]= 21 = 21
a[ 10 ] [ 1 ]= 17 = 17
a[ 10 ] [ 2 ]= 5 = 5
a[ 10 ] [ 3 ]= 1 = 1
a[ 10 ] [ 4 ]= 28 = 28
a[ 10 ] [ 5 ]= 26 = 26
a[ 10 ] [ 6 ]= 0 = 0
a[ 10 ] [ 7 ]= 0 = 0
a[ 11 ] [ 0 ]= 22 = 22
a[ 11 ] [ 1 ]= 18 = 18
a[ 11 ] [ 2 ]= 6 = 6
a[ 11 ] [ 3 ]= 2 = 2
a[ 11 ] [ 4 ]= 29 = 29
a[ 11 ] [ 5 ]= 27 = 27
a[ 11 ] [ 6 ]= 0 = 0
a[ 11 ] [ 7 ]= 0 = 0
a[ 12 ] [ 0 ]= 23 = 23
a[ 12 ] [ 1 ]= 19 = 19
a[ 12 ] [ 2 ]= 7 = 7
a[ 12 ] [ 3 ]= 3 = 3
a[ 12 ] [ 4 ]= 30 = 30
a[ 12 ] [ 5 ]= 28 = 28
a[ 12 ] [ 6 ]= 0 = 0
a[ 12 ] [ 7 ]= 0 = 0
a[ 13 ] [ 0 ]= 24 = 24
a[ 13 ] [ 1 ]= 20 = 20
a[ 13 ] [ 2 ]= 8 = 8
a[ 13 ] [ 3 ]= 4 = 4
a[ 13 ] [ 4 ]= 31 = 31
a[ 13 ] [ 5 ]= 29 = 29
a[ 13 ] [ 6 ]= 0 = 0
a[ 13 ] [ 7 ]= 0 = 0
a[ 14 ] [ 0 ]= 0 = 0
a[ 14 ] [ 1 ]= 21 = 21
a[ 14 ] [ 2 ]= 0 = 0
a[ 14 ] [ 3 ]= 5 = 5
a[ 14 ] [ 4 ]= 32 = 32
a[ 14 ] [ 5 ]= 30 = 30
a[ 14 ] [ 6 ]= 0 = 0
a[ 14 ] [ 7 ]= 0 = 0
a[ 15 ] [ 0 ]= 0 = 0
a[ 15 ] [ 1 ]= 22 = 22
a[ 15 ] [ 2 ]= 0 = 0
a[ 15 ] [ 3 ]= 6 = 6
a[ 15 ] [ 4 ]= 0 = 0
a[ 15 ] [ 5 ]= 31 = 31
a[ 15 ] [ 6 ]= 0 = 0
a[ 15 ] [ 7 ]= 0 = 0
a[ 16 ] [ 0 ]= 27 = 27
a[ 16 ] [ 1 ]= 0 = 0
a[ 16 ] [ 2 ]= 11 = 11
a[ 16 ] [ 3 ]= 0 = 0
a[ 16 ] [ 4 ]= 34 = 34
a[ 16 ] [ 5 ]= 0 = 0
a[ 16 ] [ 6 ]= 2 = 2
a[ 16 ] [ 7 ]= 0 = 0
a[ 17 ] [ 0 ]= 28 = 28
a[ 17 ] [ 1 ]= 0 = 0
a[ 17 ] [ 2 ]= 12 = 12
a[ 17 ] [ 3 ]= 0 = 0
a[ 17 ] [ 4 ]= 35 = 35
a[ 17 ] [ 5 ]= 33 = 33
a[ 17 ] [ 6 ]= 3 = 3
a[ 17 ] [ 7 ]= 1 = 1
a[ 18 ] [ 0 ]= 29 = 29
a[ 18 ] [ 1 ]= 25 = 25
a[ 18 ] [ 2 ]= 13 = 13
a[ 18 ] [ 3 ]= 9 = 9
a[ 18 ] [ 4 ]= 36 = 36
a[ 18 ] [ 5 ]= 34 = 34
a[ 18 ] [ 6 ]= 4 = 4
a[ 18 ] [ 7 ]= 2 = 2
a[ 19 ] [ 0 ]= 30 = 30
a[ 19 ] [ 1 ]= 26 = 26
a[ 19 ] [ 2 ]= 14 = 14
a[ 19 ] [ 3 ]= 10 = 10
a[ 19 ] [ 4 ]= 37 = 37
a[ 19 ] [ 5 ]= 35 = 35
a[ 19 ] [ 6 ]= 5 = 5
a[ 19 ] [ 7 ]= 3 = 3
a[ 20 ] [ 0 ]= 31 = 31
a[ 20 ] [ 1 ]= 27 = 27
a[ 20 ] [ 2 ]= 15 = 15
a[ 20 ] [ 3 ]= 11 = 11
a[ 20 ] [ 4 ]= 38 = 38
a[ 20 ] [ 5 ]= 36 = 36
a[ 20 ] [ 6 ]= 6 = 6
a[ 20 ] [ 7 ]= 4 = 4
a[ 21 ] [ 0 ]= 32 = 32
a[ 21 ] [ 1 ]= 28 = 28
a[ 21 ] [ 2 ]= 16 = 16
a[ 21 ] [ 3 ]= 12 = 12
a[ 21 ] [ 4 ]= 39 = 39
a[ 21 ] [ 5 ]= 37 = 37
a[ 21 ] [ 6 ]= 7 = 7
a[ 21 ] [ 7 ]= 5 = 5
a[ 22 ] [ 0 ]= 0 = 0
a[ 22 ] [ 1 ]= 29 = 29
a[ 22 ] [ 2 ]= 0 = 0
a[ 22 ] [ 3 ]= 13 = 13
a[ 22 ] [ 4 ]= 40 = 40
a[ 22 ] [ 5 ]= 38 = 38
a[ 22 ] [ 6 ]= 8 = 8
a[ 22 ] [ 7 ]= 6 = 6
a[ 23 ] [ 0 ]= 0 = 0
a[ 23 ] [ 1 ]= 30 = 30
a[ 23 ] [ 2 ]= 0 = 0
a[ 23 ] [ 3 ]= 14 = 14
a[ 23 ] [ 4 ]= 0 = 0
a[ 23 ] [ 5 ]= 39 = 39
a[ 23 ] [ 6 ]= 0 = 0
a[ 23 ] [ 7 ]= 7 = 7
a[ 24 ] [ 0 ]= 35 = 35
a[ 24 ] [ 1 ]= 0 = 0
a[ 24 ] [ 2 ]= 19 = 19
a[ 24 ] [ 3 ]= 0 = 0
a[ 24 ] [ 4 ]= 42 = 42
a[ 24 ] [ 5 ]= 0 = 0
a[ 24 ] [ 6 ]= 10 = 10
a[ 24 ] [ 7 ]= 0 = 0
a[ 25 ] [ 0 ]= 36 = 36
a[ 25 ] [ 1 ]= 0 = 0
a[ 25 ] [ 2 ]= 20 = 20
a[ 25 ] [ 3 ]= 0 = 0
a[ 25 ] [ 4 ]= 43 = 43
a[ 25 ] [ 5 ]= 41 = 41
a[ 25 ] [ 6 ]= 11 = 11
a[ 25 ] [ 7 ]= 9 = 9
a[ 26 ] [ 0 ]= 37 = 37
a[ 26 ] [ 1 ]= 33 = 33
a[ 26 ] [ 2 ]= 21 = 21
a[ 26 ] [ 3 ]= 17 = 17
a[ 26 ] [ 4 ]= 44 = 44
a[ 26 ] [ 5 ]= 42 = 42
a[ 26 ] [ 6 ]= 12 = 12
a[ 26 ] [ 7 ]= 10 = 10
a[ 27 ] [ 0 ]= 38 = 38
a[ 27 ] [ 1 ]= 34 = 34
a[ 27 ] [ 2 ]= 22 = 22
a[ 27 ] [ 3 ]= 18 = 18
a[ 27 ] [ 4 ]= 45 = 45
a[ 27 ] [ 5 ]= 43 = 43
a[ 27 ] [ 6 ]= 13 = 13
a[ 27 ] [ 7 ]= 11 = 11
a[ 28 ] [ 0 ]= 39 = 39
a[ 28 ] [ 1 ]= 35 = 35
a[ 28 ] [ 2 ]= 23 = 23
a[ 28 ] [ 3 ]= 19 = 19
a[ 28 ] [ 4 ]= 46 = 46
a[ 28 ] [ 5 ]= 44 = 44
a[ 28 ] [ 6 ]= 14 = 14
a[ 28 ] [ 7 ]= 12 = 12
a[ 29 ] [ 0 ]= 40 = 40
a[ 29 ] [ 1 ]= 36 = 36
a[ 29 ] [ 2 ]= 24 = 24
a[ 29 ] [ 3 ]= 20 = 20
a[ 29 ] [ 4 ]= 47 = 47
a[ 29 ] [ 5 ]= 45 = 45
a[ 29 ] [ 6 ]= 15 = 15
a[ 29 ] [ 7 ]= 13 = 13
a[ 30 ] [ 0 ]= 0 = 0
a[ 30 ] [ 1 ]= 37 = 37
a[ 30 ] [ 2 ]= 0 = 0
a[ 30 ] [ 3 ]= 21 = 21
a[ 30 ] [ 4 ]= 48 = 48
a[ 30 ] [ 5 ]= 46 = 46
a[ 30 ] [ 6 ]= 16 = 16
a[ 30 ] [ 7 ]= 14 = 14
a[ 31 ] [ 0 ]= 0 = 0
a[ 31 ] [ 1 ]= 38 = 38
a[ 31 ] [ 2 ]= 0 = 0
a[ 31 ] [ 3 ]= 22 = 22
a[ 31 ] [ 4 ]= 0 = 0
a[ 31 ] [ 5 ]= 47 = 47
a[ 31 ] [ 6 ]= 0 = 0
a[ 31 ] [ 7 ]= 15 = 15
a[ 32 ] [ 0 ]= 43 = 43
a[ 32 ] [ 1 ]= 0 = 0
a[ 32 ] [ 2 ]= 27 = 27
a[ 32 ] [ 3 ]= 0 = 0
a[ 32 ] [ 4 ]= 50 = 50
a[ 32 ] [ 5 ]= 0 = 0
a[ 32 ] [ 6 ]= 18 = 18
a[ 32 ] [ 7 ]= 0 = 0
a[ 33 ] [ 0 ]= 44 = 44
a[ 33 ] [ 1 ]= 0 = 0
a[ 33 ] [ 2 ]= 28 = 28
a[ 33 ] [ 3 ]= 0 = 0
a[ 33 ] [ 4 ]= 51 = 51
a[ 33 ] [ 5 ]= 49 = 49
a[ 33 ] [ 6 ]= 19 = 19
a[ 33 ] [ 7 ]= 17 = 17
a[ 34 ] [ 0 ]= 45 = 45
a[ 34 ] [ 1 ]= 41 = 41
a[ 34 ] [ 2 ]= 29 = 29
a[ 34 ] [ 3 ]= 25 = 25
a[ 34 ] [ 4 ]= 52 = 52
a[ 34 ] [ 5 ]= 50 = 50
a[ 34 ] [ 6 ]= 20 = 20
a[ 34 ] [ 7 ]= 18 = 18
a[ 35 ] [ 0 ]= 46 = 46
a[ 35 ] [ 1 ]= 42 = 42
a[ 35 ] [ 2 ]= 30 = 30
a[ 35 ] [ 3 ]= 26 = 26
a[ 35 ] [ 4 ]= 53 = 53
a[ 35 ] [ 5 ]= 51 = 51
a[ 35 ] [ 6 ]= 21 = 21
a[ 35 ] [ 7 ]= 19 = 19
a[ 36 ] [ 0 ]= 47 = 47
a[ 36 ] [ 1 ]= 43 = 43
a[ 36 ] [ 2 ]= 31 = 31
a[ 36 ] [ 3 ]= 27 = 27
a[ 36 ] [ 4 ]= 54 = 54
a[ 36 ] [ 5 ]= 52 = 52
a[ 36 ] [ 6 ]= 22 = 22
a[ 36 ] [ 7 ]= 20 = 20
a[ 37 ] [ 0 ]= 48 = 48
a[ 37 ] [ 1 ]= 44 = 44
a[ 37 ] [ 2 ]= 32 = 32
a[ 37 ] [ 3 ]= 28 = 28
a[ 37 ] [ 4 ]= 55 = 55
a[ 37 ] [ 5 ]= 53 = 53
a[ 37 ] [ 6 ]= 23 = 23
a[ 37 ] [ 7 ]= 21 = 21
a[ 38 ] [ 0 ]= 0 = 0
a[ 38 ] [ 1 ]= 45 = 45
a[ 38 ] [ 2 ]= 0 = 0
a[ 38 ] [ 3 ]= 29 = 29
a[ 38 ] [ 4 ]= 56 = 56
a[ 38 ] [ 5 ]= 54 = 54
a[ 38 ] [ 6 ]= 24 = 24
a[ 38 ] [ 7 ]= 22 = 22
a[ 39 ] [ 0 ]= 0 = 0
a[ 39 ] [ 1 ]= 46 = 46
a[ 39 ] [ 2 ]= 0 = 0
a[ 39 ] [ 3 ]= 30 = 30
a[ 39 ] [ 4 ]= 0 = 0
a[ 39 ] [ 5 ]= 55 = 55
a[ 39 ] [ 6 ]= 0 = 0
a[ 39 ] [ 7 ]= 23 = 23
a[ 40 ] [ 0 ]= 51 = 51
a[ 40 ] [ 1 ]= 0 = 0
a[ 40 ] [ 2 ]= 35 = 35
a[ 40 ] [ 3 ]= 0 = 0
a[ 40 ] [ 4 ]= 58 = 58
a[ 40 ] [ 5 ]= 0 = 0
a[ 40 ] [ 6 ]= 26 = 26
a[ 40 ] [ 7 ]= 0 = 0
a[ 41 ] [ 0 ]= 52 = 52
a[ 41 ] [ 1 ]= 0 = 0
a[ 41 ] [ 2 ]= 36 = 36
a[ 41 ] [ 3 ]= 0 = 0
a[ 41 ] [ 4 ]= 59 = 59
a[ 41 ] [ 5 ]= 57 = 57
a[ 41 ] [ 6 ]= 27 = 27
a[ 41 ] [ 7 ]= 25 = 25
a[ 42 ] [ 0 ]= 53 = 53
a[ 42 ] [ 1 ]= 49 = 49
a[ 42 ] [ 2 ]= 37 = 37
a[ 42 ] [ 3 ]= 33 = 33
a[ 42 ] [ 4 ]= 60 = 60
a[ 42 ] [ 5 ]= 58 = 58
a[ 42 ] [ 6 ]= 28 = 28
a[ 42 ] [ 7 ]= 26 = 26
a[ 43 ] [ 0 ]= 54 = 54
a[ 43 ] [ 1 ]= 50 = 50
a[ 43 ] [ 2 ]= 38 = 38
a[ 43 ] [ 3 ]= 34 = 34
a[ 43 ] [ 4 ]= 61 = 61
a[ 43 ] [ 5 ]= 59 = 59
a[ 43 ] [ 6 ]= 29 = 29
a[ 43 ] [ 7 ]= 27 = 27
a[ 44 ] [ 0 ]= 55 = 55
a[ 44 ] [ 1 ]= 51 = 51
a[ 44 ] [ 2 ]= 39 = 39
a[ 44 ] [ 3 ]= 35 = 35
a[ 44 ] [ 4 ]= 62 = 62
a[ 44 ] [ 5 ]= 60 = 60
a[ 44 ] [ 6 ]= 30 = 30
a[ 44 ] [ 7 ]= 28 = 28
a[ 45 ] [ 0 ]= 56 = 56
a[ 45 ] [ 1 ]= 52 = 52
a[ 45 ] [ 2 ]= 40 = 40
a[ 45 ] [ 3 ]= 36 = 36
a[ 45 ] [ 4 ]= 63 = 63
a[ 45 ] [ 5 ]= 61 = 61
a[ 45 ] [ 6 ]= 31 = 31
a[ 45 ] [ 7 ]= 29 = 29
a[ 46 ] [ 0 ]= 0 = 0
a[ 46 ] [ 1 ]= 53 = 53
a[ 46 ] [ 2 ]= 0 = 0
a[ 46 ] [ 3 ]= 37 = 37
a[ 46 ] [ 4 ]= 64 = 64
a[ 46 ] [ 5 ]= 62 = 62
a[ 46 ] [ 6 ]= 32 = 32
a[ 46 ] [ 7 ]= 30 = 30
a[ 47 ] [ 0 ]= 0 = 0
a[ 47 ] [ 1 ]= 54 = 54
a[ 47 ] [ 2 ]= 0 = 0
a[ 47 ] [ 3 ]= 38 = 38
a[ 47 ] [ 4 ]= 0 = 0
a[ 47 ] [ 5 ]= 63 = 63
a[ 47 ] [ 6 ]= 0 = 0
a[ 47 ] [ 7 ]= 31 = 31
a[ 48 ] [ 0 ]= 59 = 59
a[ 48 ] [ 1 ]= 0 = 0
a[ 48 ] [ 2 ]= 43 = 43
a[ 48 ] [ 3 ]= 0 = 0
a[ 48 ] [ 4 ]= 0 = 0
a[ 48 ] [ 5 ]= 0 = 0
a[ 48 ] [ 6 ]= 34 = 34
a[ 48 ] [ 7 ]= 0 = 0
a[ 49 ] [ 0 ]= 60 = 60
a[ 49 ] [ 1 ]= 0 = 0
a[ 49 ] [ 2 ]= 44 = 44
a[ 49 ] [ 3 ]= 0 = 0
a[ 49 ] [ 4 ]= 0 = 0
a[ 49 ] [ 5 ]= 0 = 0
a[ 49 ] [ 6 ]= 35 = 35
a[ 49 ] [ 7 ]= 33 = 33
a[ 50 ] [ 0 ]= 61 = 61
a[ 50 ] [ 1 ]= 57 = 57
a[ 50 ] [ 2 ]= 45 = 45
a[ 50 ] [ 3 ]= 41 = 41
a[ 50 ] [ 4 ]= 0 = 0
a[ 50 ] [ 5 ]= 0 = 0
a[ 50 ] [ 6 ]= 36 = 36
a[ 50 ] [ 7 ]= 34 = 34
a[ 51 ] [ 0 ]= 62 = 62
a[ 51 ] [ 1 ]= 58 = 58
a[ 51 ] [ 2 ]= 46 = 46
a[ 51 ] [ 3 ]= 42 = 42
a[ 51 ] [ 4 ]= 0 = 0
a[ 51 ] [ 5 ]= 0 = 0
a[ 51 ] [ 6 ]= 37 = 37
a[ 51 ] [ 7 ]= 35 = 35
a[ 52 ] [ 0 ]= 63 = 63
a[ 52 ] [ 1 ]= 59 = 59
a[ 52 ] [ 2 ]= 47 = 47
a[ 52 ] [ 3 ]= 43 = 43
a[ 52 ] [ 4 ]= 0 = 0
a[ 52 ] [ 5 ]= 0 = 0
a[ 52 ] [ 6 ]= 38 = 38
a[ 52 ] [ 7 ]= 36 = 36
a[ 53 ] [ 0 ]= 64 = 64
a[ 53 ] [ 1 ]= 60 = 60
a[ 53 ] [ 2 ]= 48 = 48
a[ 53 ] [ 3 ]= 44 = 44
a[ 53 ] [ 4 ]= 0 = 0
a[ 53 ] [ 5 ]= 0 = 0
a[ 53 ] [ 6 ]= 39 = 39
a[ 53 ] [ 7 ]= 37 = 37
a[ 54 ] [ 0 ]= 0 = 0
a[ 54 ] [ 1 ]= 61 = 61
a[ 54 ] [ 2 ]= 0 = 0
a[ 54 ] [ 3 ]= 45 = 45
a[ 54 ] [ 4 ]= 0 = 0
a[ 54 ] [ 5 ]= 0 = 0
a[ 54 ] [ 6 ]= 40 = 40
a[ 54 ] [ 7 ]= 38 = 38
a[ 55 ] [ 0 ]= 0 = 0
a[ 55 ] [ 1 ]= 62 = 62
a[ 55 ] [ 2 ]= 0 = 0
a[ 55 ] [ 3 ]= 46 = 46
a[ 55 ] [ 4 ]= 0 = 0
a[ 55 ] [ 5 ]= 0 = 0
a[ 55 ] [ 6 ]= 0 = 0
a[ 55 ] [ 7 ]= 39 = 39
a[ 56 ] [ 0 ]= 0 = 0
a[ 56 ] [ 1 ]= 0 = 0
a[ 56 ] [ 2 ]= 51 = 51
a[ 56 ] [ 3 ]= 0 = 0
a[ 56 ] [ 4 ]= 0 = 0
a[ 56 ] [ 5 ]= 0 = 0
a[ 56 ] [ 6 ]= 42 = 42
a[ 56 ] [ 7 ]= 0 = 0
a[ 57 ] [ 0 ]= 0 = 0
a[ 57 ] [ 1 ]= 0 = 0
a[ 57 ] [ 2 ]= 52 = 52
a[ 57 ] [ 3 ]= 0 = 0
a[ 57 ] [ 4 ]= 0 = 0
a[ 57 ] [ 5 ]= 0 = 0
a[ 57 ] [ 6 ]= 43 = 43
a[ 57 ] [ 7 ]= 41 = 41
a[ 58 ] [ 0 ]= 0 = 0
a[ 58 ] [ 1 ]= 0 = 0
a[ 58 ] [ 2 ]= 53 = 53
a[ 58 ] [ 3 ]= 49 = 49
a[ 58 ] [ 4 ]= 0 = 0
a[ 58 ] [ 5 ]= 0 = 0
a[ 58 ] [ 6 ]= 44 = 44
a[ 58 ] [ 7 ]= 42 = 42
a[ 59 ] [ 0 ]= 0 = 0
a[ 59 ] [ 1 ]= 0 = 0
a[ 59 ] [ 2 ]= 54 = 54
a[ 59 ] [ 3 ]= 50 = 50
a[ 59 ] [ 4 ]= 0 = 0
a[ 59 ] [ 5 ]= 0 = 0
a[ 59 ] [ 6 ]= 45 = 45
a[ 59 ] [ 7 ]= 43 = 43
a[ 60 ] [ 0 ]= 0 = 0
a[ 60 ] [ 1 ]= 0 = 0
a[ 60 ] [ 2 ]= 55 = 55
a[ 60 ] [ 3 ]= 51 = 51
a[ 60 ] [ 4 ]= 0 = 0
a[ 60 ] [ 5 ]= 0 = 0
a[ 60 ] [ 6 ]= 46 = 46
a[ 60 ] [ 7 ]= 44 = 44
a[ 61 ] [ 0 ]= 0 = 0
a[ 61 ] [ 1 ]= 0 = 0
a[ 61 ] [ 2 ]= 56 = 56
a[ 61 ] [ 3 ]= 52 = 52
a[ 61 ] [ 4 ]= 0 = 0
a[ 61 ] [ 5 ]= 0 = 0
a[ 61 ] [ 6 ]= 47 = 47
a[ 61 ] [ 7 ]= 45 = 45
a[ 62 ] [ 0 ]= 0 = 0
a[ 62 ] [ 1 ]= 0 = 0
a[ 62 ] [ 2 ]= 0 = 0
a[ 62 ] [ 3 ]= 53 = 53
a[ 62 ] [ 4 ]= 0 = 0
a[ 62 ] [ 5 ]= 0 = 0
a[ 62 ] [ 6 ]= 48 = 48
a[ 62 ] [ 7 ]= 46 = 46
a[ 63 ] [ 0 ]= 0 = 0
a[ 63 ] [ 1 ]= 0 = 0
a[ 63 ] [ 2 ]= 0 = 0
a[ 63 ] [ 3 ]= 54 = 54
a[ 63 ] [ 4 ]= 0 = 0
a[ 63 ] [ 5 ]= 0 = 0
a[ 63 ] [ 6 ]= 0 = 0
a[ 63 ] [ 7 ]= 47 = 47

[11 0 0 0 18 0 0 0]
[12 0 0 0 19 17 0 0]
[13 9 0 0 20 18 0 0]
[14 10 0 0 21 19 0 0]
[15 11 0 0 22 20 0 0]
[16 12 0 0 23 21 0 0]
[0 13 0 0 24 22 0 0]
[0 14 0 0 0 23 0 0]
[19 0 3 0 26 0 0 0]
[20 0 4 0 27 25 0 0]
[21 17 5 1 28 26 0 0]
[22 18 6 2 29 27 0 0]
[23 19 7 3 30 28 0 0]
[24 20 8 4 31 29 0 0]
[0 21 0 5 32 30 0 0]
[0 22 0 6 0 31 0 0]
[27 0 11 0 34 0 2 0]
[28 0 12 0 35 33 3 1]
[29 25 13 9 36 34 4 2]
[30 26 14 10 37 35 5 3]
[31 27 15 11 38 36 6 4]
[32 28 16 12 39 37 7 5]
[0 29 0 13 40 38 8 6]
[0 30 0 14 0 39 0 7]
[35 0 19 0 42 0 10 0]
[36 0 20 0 43 41 11 9]
[37 33 21 17 44 42 12 10]
[38 34 22 18 45 43 13 11]
[39 35 23 19 46 44 14 12]
[40 36 24 20 47 45 15 13]
[0 37 0 21 48 46 16 14]
[0 38 0 22 0 47 0 15]
[43 0 27 0 50 0 18 0]
[44 0 28 0 51 49 19 17]
[45 41 29 25 52 50 20 18]
[46 42 30 26 53 51 21 19]
[47 43 31 27 54 52 22 20]
[48 44 32 28 55 53 23 21]
[0 45 0 29 56 54 24 22]
[0 46 0 30 0 55 0 23]
[51 0 35 0 58 0 26 0]
[52 0 36 0 59 57 27 25]
[53 49 37 33 60 58 28 26]
[54 50 38 34 61 59 29 27]
[55 51 39 35 62 60 30 28]
[56 52 40 36 63 61 31 29]
[0 53 0 37 64 62 32 30]
[0 54 0 38 0 63 0 31]
[59 0 43 0 0 0 34 0]
[60 0 44 0 0 0 35 33]
[61 57 45 41 0 0 36 34]
[62 58 46 42 0 0 37 35]
[63 59 47 43 0 0 38 36]
[64 60 48 44 0 0 39 37]
[0 61 0 45 0 0 40 38]
[0 62 0 46 0 0 0 39]
[0 0 51 0 0 0 42 0]
[0 0 52 0 0 0 43 41]
[0 0 53 49 0 0 44 42]
[0 0 54 50 0 0 45 43]
[0 0 55 51 0 0 46 44]
[0 0 56 52 0 0 47 45]
[0 0 0 53 0 0 48 46]
[0 0 0 54 0 0 0 47]
",13900
367,38927101,"genes = readGenes(""lists/genes.csv"") // read the gene list
n := runtime.NumCPU()                // the number of goroutines
wg.Add(n + 1)
go scan() // read the ""fasta/sequences.tsv""
for i := 0; i < n; i++ {
    go search()
}
go WaitClose()
slice := []string{}
for t := range queue {
    slice = append(slice, t)
}
fmt.Println(slice)
",333
368,38927101,scan(),6
369,38927101,"var ch = make(chan string, 100)",31
370,38927101,search(),8
371,38927101,NumCPU,6
372,38927101,"package main

import (
    ""bufio""
    ""fmt""
    //""os""
    ""runtime""
    ""strings""
    ""sync""
    //""github.com/mathpl/golang-pkg-pcre/src/pkg/pcre""
)

func main() {
    genes = readGenes(""lists/genes.csv"") // read the gene list
    n := runtime.NumCPU()                // the number of goroutines
    wg.Add(n + 1)
    go scan() // read the ""fasta/sequences.tsv""
    for i := 0; i < n; i++ {
        go search()
    }
    go WaitClose()
    slice := []string{}
    for t := range queue {
        slice = append(slice, t)
    }
    fmt.Println(slice)
}

var wg sync.WaitGroup
var genes []string
var ch = make(chan string, 100)
var queue = make(chan string, 100)

func scan() {
    defer wg.Done()
    defer close(ch)
    scanner := bufio.NewScanner(strings.NewReader(strings.Join([]string{""A2"", ""B2"", ""C2"", ""D2"", ""E2"", ""F2"", ""G2"", ""H2"", ""I2""}, ""\n"")))
    /*f, err := os.Open(""fasta/sequences.tsv"")
    if err != nil {
        panic(err)
    }
    defer f.Close()
     scanner := bufio.NewScanner(f)*/
    for scanner.Scan() {
        ch <- scanner.Text()
    }
}

func match(pattern, seq string) bool {
    //return pcre.MustCompile(pattern, 0).MatcherString(seq, 0).Matches()
    return pattern[0] == seq[0]
}

func search() {
    defer wg.Done()
    for seq := range ch {
        for _, gene := range genes {
            if match(gene, seq) {
                queue <- seq
                break
            }
        }
    }
}

func WaitClose() {
    wg.Wait()
    close(queue)
}

// function read a list of genes and return a slice of gene names.
func readGenes(filename string) []string {
    return []string{""A1"", ""B1"", ""C1"", ""D1"", ""E1"", ""F1"", ""G1"", ""H1"", ""I1""}
    /*var genes []string // slice of genes names
    f, err := os.Open(filename)
    if err != nil {
        panic(err)
    }
    defer f.Close()
    scanner := bufio.NewScanner(f)
    for scanner.Scan() {
        line := scanner.Text()
        genes = append(genes, line)
    }
    return genes*/
}
",1968
373,38927101,"[A2 B2 C2 D2 E2 F2 G2 H2 I2]
",29
374,38927101,"package main

import (
    ""bufio""
    ""fmt""
    ""os""
    ""runtime""
    //""strings""
    ""sync""

    ""github.com/mathpl/golang-pkg-pcre/src/pkg/pcre""
    //pcre ""regexp""
)

func main() {
    genes = readGenes(""lists/genes.csv"") // read the gene list
    n := runtime.NumCPU()                // the number of goroutines
    wg.Add(n + 1)
    go scan() // read the ""fasta/sequences.tsv""
    for i := 0; i < n; i++ {
        go search()
    }
    go WaitClose()
    slice := []string{}
    for t := range queue {
        slice = append(slice, t)
    }
    fmt.Println(slice)
}

var wg sync.WaitGroup
var genes []string
var ch = make(chan string, 100)
var queue = make(chan string, 100)

func scan() {
    defer wg.Done()
    defer close(ch)
    //scanner := bufio.NewScanner(strings.NewReader(strings.Join([]string{""A2"", ""B2"", ""C2"", ""D2"", ""E2"", ""F2"", ""G2"", ""H2"", ""I2""}, ""\n"")))
    f, err := os.Open(""fasta/sequences.tsv"")
    if err != nil {
        panic(err)
    }
    defer f.Close()
    scanner := bufio.NewScanner(f)
    for scanner.Scan() {
        ch <- scanner.Text()
    }
}

func match(pattern, seq string) bool {
    return pcre.MustCompile(pattern, 0).MatcherString(seq, 0).Matches()
    //return pattern[0] == seq[0]
    //return pcre.MustCompile(pattern).Match([]byte(seq))
}

func search() {
    defer wg.Done()
    for seq := range ch {
        for _, gene := range genes {
            if match(gene, seq) {
                queue <- seq
                break
            }
        }
    }
}

func WaitClose() {
    wg.Wait()
    close(queue)
}

// function read a list of genes and return a slice of gene names.
func readGenes(filename string) []string {
    //return []string{""A1"", ""B1"", ""C1"", ""D1"", ""E1"", ""F1"", ""G1"", ""H1"", ""I1""}
    var genes []string // slice of genes names
    f, err := os.Open(filename)
    if err != nil {
        panic(err)
    }
    defer f.Close()
    scanner := bufio.NewScanner(f)
    for scanner.Scan() {
        line := scanner.Text()
        genes = append(genes, line)
    }
    return genes
}
",2040
375,38927101,read_genes(filename string) []string,36
376,38927101,"f, err := os.Open(filename)
if err!=nil{
    panic(err)
}
",58
377,38927101,read_genes(filename string) []string,36
378,38927101,"defer f.Close()
",16
379,38927101,"filename := ""fasta/sequences.tsv""",33
380,38927101,"f, err := os.Open(filename)
if err!=nil{
    panic(err)
}
",58
381,38927101,"filename := ""fasta/sequences.tsv""",33
382,38927101,"defer f.Close()
",16
383,38927101,for scanner.Scan() {,20
384,38927101,fasta/sequences.tsv,19
385,38927101,if n == read_buff {,19
386,38927101,"package main

import (
    ""bufio""
    ""fmt""
    ""strings""
    ""sync""
)

func match(pattern, str string) bool {
    return pattern[0] == str[0]
}
func search_gene2(genes, seqs []string) (res []string) {
    for _, r := range seqs {
        for _, i := range genes {
            if match(i, r) {
                res = append(res, r) // is the gene matches the gene name is append to res
                break
            }
        }
    }
    return
}

func main() {
    read_buff := 2 // the number of sequences analysed by one goroutine
    var wg sync.WaitGroup
    queue := make(chan []string, read_buff)
    genes := []string{""A1"", ""B1"", ""C1"", ""D1"", ""E1"", ""F1"", ""G1"", ""H1"", ""I1""}
    sequences := strings.Join([]string{""A2"", ""B2"", ""C2"", ""D2"", ""E2"", ""F2"", ""G2"", ""H2"", ""I2""}, ""\n"")
    scanner := bufio.NewScanner(strings.NewReader(sequences))
    buf_Seq := make([]string, 0, read_buff)
    for n := 1; scanner.Scan(); n++ {
        line := scanner.Text()
        buf_Seq = append(buf_Seq, line) // store the sequences into buf_Seq
        if n == read_buff {             // when the read buffer contains 100 sequences one goroutine analyses them
            wg.Add(1)
            temp := make([]string, n)
            copy(temp, buf_Seq)
            buf_Seq = buf_Seq[:0] // reset buf_Seq
            n = 0                 // reset the sequences counter
            go func(genes, Seq []string) {
                defer wg.Done()
                fmt.Println(Seq)
                queue <- search_gene2(genes, Seq)
            }(genes, temp)
        }
    }
    go func() {
        wg.Wait()
        close(queue)
    }()
    slice := []string{}
    for t := range queue {
        slice = append(slice, t...)
    }
    fmt.Println(slice)
}
",1740
387,38927101,I2,2
388,38927101,"[A2 B2]
[C2 D2]
[E2 F2]
[G2 H2]
[A2 B2 C2 D2 E2 F2 G2 H2]
",58
389,38927101,"temp := make([]string, n)
copy(temp, buf_Seq)
buf_Seq = buf_Seq[:0] // reset buf_Seq
n = 0                 // reset the sequences counter
go func(genes, Seq []string) {
    defer wg.Done()
    fmt.Println(Seq)
    queue <- search_gene2(genes, Seq)
}(genes, temp)
",263
390,38927101,"    line 71 is : copy(bufCopy, buf_Seq)
    line 63 is : buf_Seq = append(buf_Seq, line)
    line 73 is :}(genes, buf_Seq)
",123
391,39144961,Stackoverflow,13
392,39144961,Slack,5
393,39144961,reflection,10
394,39144961,struct type,11
395,39144961,"func newItem(modelName string, el models.OrgPack) interface{} {

    var item models.StatRow

    switch modelName {
    case ""noagg"":
        item = &models.NoaggRow{}
    case ""fcr24"":
        item = &models.FcrRow{}
    case ""acsi"":
        item = &models.AcsiRow{}
    case ""aic"":
        item = &models.AicRow{}
    case ""aux"":
        item = &models.AuxRow{}
    case ""cti"":
        item = &models.CtiRow{}
    case ""srv"":
        item = &models.SrvRow{}
    case ""sale"":
        item = &models.SaleRow{}
    case ""pds"":
        item = &models.PdsRow{}
    case ""wfm"":
        item = &models.WfmRow{}
    }

    modelFields := reflect.ValueOf(item).Elem()

    fieldsCounter := modelFields.NumField()

    sliceFields := reflect.ValueOf(&el.SummorisedData).Elem()
    sliceObjFields := reflect.ValueOf(&el).Elem()

    fieldsTypes := modelFields.Type()

    for i := 6; i < fieldsCounter; i++ {
        fmt.Println("" model_field "", fieldsTypes.Field(i).Name)
        modelField := modelFields.Field(i);
        sliceField := sliceFields.Index(i - 6);

        modelField.Set(reflect.Value(sliceField));
    }

    id_line := sliceFields.Index(len(el.SummorisedData) - 1);
    date := sliceObjFields.FieldByName(""PackName"");

    modelFields.FieldByName(""Id_line"").Set(id_line)
    modelFields.FieldByName(""Date"").Set(date)

    return item

}

func formatOutput(output map[string][]OrgStat, sourceName string, modelName string, charts []Chart, mod models.StatRow, cluster string) map[string][]OrgStat {

    if sourceName == modelName {
        var stats []OrgStat
        for _, chart := range charts {
            stats = append(stats, OrgStat{Name:chart.Name, Value: mod.Count(chart.Name)})
        }
        _, group_exist := output[cluster]
        if group_exist {
            inserted_stat := output[cluster]
            output[cluster] = append(stats, inserted_stat...)
        }else {
            output[cluster] = stats
        }

    }
    return output
}

func receiveLightWork(org <-chan models.OrgPack, request ChartOptions) interface{} {

    modelClusters := make(map[string][]models.OrgPack)

    for orgPack := range org {
        _, ok := modelClusters[orgPack.ModelName]
        if ok {
            model := modelClusters[orgPack.ModelName]
            model = append(model, orgPack)
            modelClusters[orgPack.ModelName] = model

        }else {
            var modelSlice []models.OrgPack
            modelSlice = append(modelSlice, orgPack)
            modelClusters[orgPack.ModelName] = modelSlice
        }
    }

    output := make(map[string][]OrgStat)

    for modelName, slice := range modelClusters {

        switch modelName {
        case ""noagg"":
            model := models.NoaggModel{}

            for _, el := range slice {
                newElement := newItem(modelName, el)
                model = append(model, *(newElement.(*models.NoaggRow)))
            }
            customFilter := request.Filters
            customFilter.Cluster = ""clusterDay""

            model.ClusterData(customFilter)


            for _, mod := range model {
                for sourceName, charts := range request.Charts {
                    output = formatOutput(output, sourceName, modelName, charts, mod, mod.Date)
                }
            }
        case ""acsi"":
            model := models.AcsiModel{}

            for _, el := range slice {
                newElement := newItem(modelName, el)
                model = append(model, *(newElement.(*models.AcsiRow)))
            }
            customFilter := request.Filters
            customFilter.Cluster = ""clusterDay""

            model.ClusterData(customFilter)

            for _, mod := range model {
                for sourceName, charts := range request.Charts {
                    output = formatOutput(output, sourceName, modelName, charts, mod, mod.Date)
                }
            }
        case ""fcr24"":
            model := models.FcrModel{}

            for _, el := range slice {
                newElement := newItem(modelName, el)
                model = append(model, *(newElement.(*models.FcrRow)))
            }
            customFilter := request.Filters
            customFilter.Cluster = ""clusterDay""

            model.ClusterData(customFilter)

            for _, mod := range model {
                for sourceName, charts := range request.Charts {
                    output = formatOutput(output, sourceName, modelName, charts, mod, mod.Date)
                }
            }
        case ""aic"":
            model := models.AicModel{}

            for _, el := range slice {
                newElement := newItem(modelName, el)
                model = append(model, *(newElement.(*models.AicRow)))
            }
            customFilter := request.Filters
            customFilter.Cluster = ""clusterDay""

            model.ClusterData(customFilter)

            for _, mod := range model {
                for sourceName, charts := range request.Charts {
                    output = formatOutput(output, sourceName, modelName, charts, mod, mod.Date)
                }
            }
        case ""aux"":
            model := models.AuxModel{}

            for _, el := range slice {
                newElement := newItem(modelName, el)
                model = append(model, *(newElement.(*models.AuxRow)))
            }
            customFilter := request.Filters
            customFilter.Cluster = ""clusterDay""

            model.ClusterData(customFilter)

            for _, mod := range model {
                for sourceName, charts := range request.Charts {
                    output = formatOutput(output, sourceName, modelName, charts, mod, mod.Date)
                }
            }
        case ""cti"":
            model := models.CtiModel{}

            for _, el := range slice {
                newElement := newItem(modelName, el)
                model = append(model, *(newElement.(*models.CtiRow)))
            }
            customFilter := request.Filters
            customFilter.Cluster = ""clusterDay""

            model.ClusterData(customFilter)

            for _, mod := range model {
                for sourceName, charts := range request.Charts {
                    output = formatOutput(output, sourceName, modelName, charts, mod, mod.Date)
                }
            }
        case ""srv"":
            model := models.SrvModel{}

            for _, el := range slice {
                newElement := newItem(modelName, el)
                model = append(model, *(newElement.(*models.SrvRow)))
            }
            customFilter := request.Filters
            customFilter.Cluster = ""clusterDay""

            model.ClusterData(customFilter)

            for _, mod := range model {
                for sourceName, charts := range request.Charts {
                    output = formatOutput(output, sourceName, modelName, charts, mod, mod.Date)
                }
            }
        case ""sale"":
            model := models.SaleModel{}

            for _, el := range slice {
                newElement := newItem(modelName, el)
                model = append(model, *(newElement.(*models.SaleRow)))
            }
            customFilter := request.Filters
            customFilter.Cluster = ""clusterDay""

            model.ClusterData(customFilter)

            for _, mod := range model {
                for sourceName, charts := range request.Charts {
                    output = formatOutput(output, sourceName, modelName, charts, mod, mod.Date)
                }
            }
        case ""pds"":
            model := models.PdsModel{}

            for _, el := range slice {
                newElement := newItem(modelName, el)
                model = append(model, *(newElement.(*models.PdsRow)))
            }
            customFilter := request.Filters
            customFilter.Cluster = ""clusterDay""

            model.ClusterData(customFilter)

            for _, mod := range model {
                for sourceName, charts := range request.Charts {
                    output = formatOutput(output, sourceName, modelName, charts, mod, mod.Date)
                }
            }
        case ""wfm"":
            model := models.WfmModel{}

            for _, el := range slice {
                newElement := newItem(modelName, el)
                model = append(model, *(newElement.(*models.WfmRow)))
            }
            customFilter := request.Filters
            customFilter.Cluster = ""clusterDay""

            model.ClusterData(customFilter)

            for _, mod := range model {
                for sourceName, charts := range request.Charts {
                    output = formatOutput(output, sourceName, modelName, charts, mod, mod.Date)
                }
            }
        }
    }

    return output
}
",8794
396,39144961,receiveLightWork,16
397,39319481,"import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import org.json.JSONObject;

public class mid
{

    static String payload  ="""";
    public static void main (String[] args) throws Exception
  {
    try {
        @SuppressWarnings(""resource"")
        Scanner scanner = new Scanner(System.in);


         payload = scanner.nextLine();


        JSONObject obj = new JSONObject(payload);


        JSONObject response = obj.getJSONObject(""response"");

        response.remove(""status"");

        response.put(""status"", ""500"");



        String newjson = obj.toString();


         write (newjson);

        System.out.print(obj);


    } catch (Exception e) {
        e.printStackTrace();
    }



  }    
}
",791
398,39319481,"./hoverfly -middleware ""java -jar mid.jar""
",43
399,39319481,"{""response"":{""status"":200,""body"":""\u003c?xml version=\""1.0\""?\u003e\u003cpathList xmlns:xlink=\""http://www.w3.org/1999/xlink\""\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/0/\""\u003e0\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/1/\""\u003e1\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/3/\""\u003e3\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/4/\""\u003e4\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/5/\""\u003e5\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/6/\""\u003e6\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/7/\""\u003e7\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/8/\""\u003e8\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/9/\""\u003e9\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/10/\""\u003e10\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/11/\""\u003e11\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/12/\""\u003e12\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/13/\""\u003e13\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/14/\""\u003e14\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/15/\""\u003e15\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/16/\""\u003e16\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/17/\""\u003e17\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/18/\""\u003e18\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/19/\""\u003e19\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/20/\""\u003e20\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/21/\""\u003e21\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/22/\""\u003e22\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/23/\""\u003e23\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/25/\""\u003e25\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/26/\""\u003e26\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/27/\""\u003e27\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/28/\""\u003e28\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/29/\""\u003e29\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/30/\""\u003e30\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/31/\""\u003e31\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/32/\""\u003e32\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/33/\""\u003e33\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/34/\""\u003e34\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/35/\""\u003e35\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/36/\""\u003e36\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/37/\""\u003e37\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/38/\""\u003e38\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/39/\""\u003e39\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/40/\""\u003e40\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/41/\""\u003e41\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/42/\""\u003e42\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/43/\""\u003e43\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/44/\""\u003e44\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/45/\""\u003e45\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/46/\""\u003e46\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/47/\""\u003e47\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/48/\""\u003e48\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/49/\""\u003e49\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/50/\""\u003e50\u003c/path\u003e\n    \u003cpath xlink:href=\""http://www.testapi.com/endpoint/path/5555/\""\u003e5555\u003c/path\u003e\n\u003c/pathList\u003e"",""encodedBody"":false,""headers"":{""Content-Length"":[""4580""],""Content-Type"":[""application/xml""],""Date"":[""Fri, 02 Sep 2016 11:31:17 GMT""],""Hoverfly"":[""Was-Here""],""Server"":[""Apache-Coyote/1.1""]}},""request"":{""requestType"":""recording"",""path"":""/endpoint/path/"",""method"":""GET"",""destination"":""www.testapi.com"",""scheme"":""http"",""query"":"""",""body"":"""",""headers"":{""Accept"":[""text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8""],""Accept-Encoding"":[""gzip, deflate""],""Accept-Language"":[""en-US,sv-SE;q=0.8,sv;q=0.5,en;q=0.3""],""Connection"":[""keep-alive""],""User-Agent"":[""Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:47.0) Gecko/20100101 Firefox/47.0""]}}}
",5642
400,39319481,"{""response"":{""headers"":{""Hoverfly"":[""Was-Here""],""Date"":[""Fri, 02 Sep 2016 11:31:17 GMT""],""Content-Length"":[""4580""],""Content-Type"":[""application/xml""],""Server"":[""Apache-Coyote/1.1""]},""body"":""\n    0\n    1\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    33\n    34\n    35\n    36\n    37\n    38\n    39\n    40\n    41\n    42\n    43\n    44\n    45\n    46\n    47\n    48\n    49\n    50\n    5555\n"",""status"":""500"",""encodedBody"":false},""request"":{""headers"":{""Accept-Language"":[""en-US,sv-SE;q=0.8,sv;q=0.5,en;q=0.3""],""Accept-Encoding"":[""gzip, deflate""],""User-Agent"":[""Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:47.0) Gecko/20100101 Firefox/47.0""],""Connection"":[""keep-alive""],""Accept"":[""text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8""]},""body"":"""",""scheme"":""http"",""query"":"""",""path"":""/path/endpoint/"",""method"":""GET"",""requestType"":""recording"",""destination"":""testapi""}}
",1074
401,39319481,"""error"":""json: cannot unmarshal string into Go value of type int"",""level"":""error"",""msg"":""Failed to unmarshal JSON 
",115
402,39333942,vendor/vendor.json,18
403,39333942,"{
    ""comment"": """",
    ""heroku"": {
        ""goVersion"": ""go1.6"",
        ""install"": [
            "".""
        ]
    },
    ""ignore"": ""test"",
    ""package"": [
        {
            ""path"": ""context"",
            ""revision"": """"
        },
        {
            ""checksumSHA1"": ""eJQuyvuWx82bVvH0+b7a1AOQGqs="",
            ""path"": ""github.com/ChimeraCoder/anaconda"",
            ""revision"": ""00ecb7b4510497dc28cd46a598007ab8fe01f889"",
            ""revisionTime"": ""2016-06-04T23:38:44Z""
        },
        {
            ""checksumSHA1"": ""xE9Zo5ubzdEVBeRf+yD/ZjLALHk="",
            ""path"": ""github.com/ChimeraCoder/tokenbucket"",
            ""revision"": ""c5a927568de7aad8a58127d80bcd36ca4e71e454"",
            ""revisionTime"": ""2013-12-01T22:36:12Z""
        },
        {
            ""checksumSHA1"": ""3RgReu+42CU1EQ6afDsVSvBuPyk="",
            ""path"": ""github.com/azr/backoff"",
            ""revision"": ""53511d3c733003985b0b76f733df1f4d0095ee6a"",
            ""revisionTime"": ""2016-01-15T11:51:03Z""
        },
        {
            ""checksumSHA1"": ""bO0ErJXuVJ7s7DS4AJlN55op8cM="",
            ""path"": ""github.com/dghubble/oauth1"",
            ""revision"": ""d9f485600d309576dfa9764424f537e1f254d9a1"",
            ""revisionTime"": ""2016-08-21T06:27:25Z""
        },
        {
            ""checksumSHA1"": ""ycg56E+pTPAHToKMIj8C5SZ+WYQ="",
            ""path"": ""github.com/dustin/go-jsonpointer"",
            ""revision"": ""ba0abeacc3dcca5b9b20f31509c46794edbc9965"",
            ""revisionTime"": ""2016-08-14T07:29:49Z""
        },
        {
            ""checksumSHA1"": ""2138MttIW/b+UkA4YMYcTc6yzOU="",
            ""path"": ""github.com/dustin/gojson"",
            ""revision"": ""2e71ec9dd5adce3b168cd0dbde03b5cc04951c30"",
            ""revisionTime"": ""2016-03-07T16:12:27Z""
        },
        {
            ""checksumSHA1"": ""PYBCaIzh3RFkxtkkP8x4XCEYLCg="",
            ""path"": ""github.com/garyburd/go-oauth/oauth"",
            ""revision"": ""719b069913e1151a73ea30d2ea4f90deda3ce234"",
            ""revisionTime"": ""2016-04-12T16:13:20Z""
        },
        {
            ""checksumSHA1"": ""mOUDsWfYLlh8f6ekwyIUo3+4xJI="",
            ""path"": ""goji.io"",
            ""revision"": ""e355964ac565b94cf0fc7f218346626529125086"",
            ""revisionTime"": ""2016-05-07T21:13:57Z""
        },
        {
            ""checksumSHA1"": ""Jf3C/refSMB2wVYGp1pssKXVNcI="",
            ""path"": ""goji.io/internal"",
            ""revision"": ""e355964ac565b94cf0fc7f218346626529125086"",
            ""revisionTime"": ""2016-05-07T21:13:57Z""
        },
        {
            ""checksumSHA1"": ""gHp/Mv7vgZWs7iq/F0YHnWgEotQ="",
            ""path"": ""goji.io/pat"",
            ""revision"": ""e355964ac565b94cf0fc7f218346626529125086"",
            ""revisionTime"": ""2016-05-07T21:13:57Z""
        },
        {
            ""checksumSHA1"": ""z2zVlHamw4ufyuSaf49reuusrmg="",
            ""path"": ""goji.io/pattern"",
            ""revision"": ""e355964ac565b94cf0fc7f218346626529125086"",
            ""revisionTime"": ""2016-05-07T21:13:57Z""
        },
        {
            ""checksumSHA1"": ""9jjO5GjLa0XF/nfWihF02RoH4qc="",
            ""path"": ""golang.org/x/net/context"",
            ""revision"": ""6c89f9617983ee917132513a791d8b5850fe90c5"",
            ""revisionTime"": ""2016-08-24T21:03:21Z""
        }
    ],
    ""rootPath"": ""thinkwire.com/thw1""
}
",3250
404,39333942,"$ govendor fetch lib/pq
panic: Empty package path

goroutine 1 [running]:
panic(0x4b9c20, 0xc8200123e0)
    /usr/local/Cellar/go/1.6.2/libexec/src/runtime/panic.go:481 +0x3e6
github.com/kardianos/govendor/context.(*Context).setPackage(0xc820122000, 0xc820326420, 0x26, 0xc82029d5a0, 0x0, 0xc82029d5a0, 0x0, 0xc820112060, 0x26, 0x10201, ...)
    $GOPATH/src/github.com/kardianos/govendor/context/resolve.go:335 +0x8ba
github.com/kardianos/govendor/context.(*Context).addSingleImport(0xc820122000, 0xc8203189c0, 0x2b, 0xc82029d5a0, 0x0, 0x0, 0x0, 0x0, 0x0)
    $GOPATH/src/github.com/kardianos/govendor/context/resolve.go:383 +0x457
github.com/kardianos/govendor/context.(*Context).addFileImports(0xc820122000, 0xc8203189c0, 0x30, 0xc820118080, 0x15, 0x27, 0x0, 0x0)
    $GOPATH/src/github.com/kardianos/govendor/context/resolve.go:251 +0x13e8
github.com/kardianos/govendor/context.(*Context).loadPackage.func1(0xc8203189c0, 0x30, 0xda5950, 0xc820312820, 0x0, 0x0, 0x0, 0x0)
    $GOPATH/src/github.com/kardianos/govendor/context/resolve.go:55 +0x150
github.com/kardianos/govendor/internal/vfilepath.walk(0xc8203189c0, 0x30, 0xda5950, 0xc820312820, 0xc820118780, 0x0, 0x0)
    $GOPATH/src/github.com/kardianos/govendor/internal/vfilepath/walk.go:19 +0x80
github.com/kardianos/govendor/internal/vfilepath.walk(0xc8203188a0, 0x2a, 0xda5950, 0xc820312680, 0xc820118780, 0x0, 0x0)
    $GOPATH/src/github.com/kardianos/govendor/internal/vfilepath/walk.go:44 +0x4f5
github.com/kardianos/govendor/internal/vfilepath.walk(0xc820112990, 0x27, 0xda5950, 0xc820134680, 0xc820118780, 0x0, 0x0)
    $GOPATH/src/github.com/kardianos/govendor/internal/vfilepath/walk.go:44 +0x4f5
github.com/kardianos/govendor/internal/vfilepath.Walk(0xc820112990, 0x27, 0xc820118780, 0x0, 0x0)
    $GOPATH/src/github.com/kardianos/govendor/internal/vfilepath/walk.go:82 +0xe1
github.com/kardianos/govendor/context.(*Context).loadPackage(0xc820122000, 0x0, 0x0)
    $GOPATH/src/github.com/kardianos/govendor/context/resolve.go:72 +0x19a
github.com/kardianos/govendor/context.(*Context).modify(0xc820122000, 0xc820120140, 0x7fff5fbff804, 0xc8200f77e5, 0x0, 0x3, 0x0, 0x0)
    $GOPATH/src/github.com/kardianos/govendor/context/modify.go:232 +0xfcf
github.com/kardianos/govendor/context.(*Context).ModifyImport(0xc820122000, 0xc820120140, 0xc82000a204, 0xc8200f77e5, 0x0, 0x3, 0x0, 0x0)
    $GOPATH/src/github.com/kardianos/govendor/context/modify.go:183 +0x23b
github.com/kardianos/govendor/run.(*runner).Modify(0xc8200f7d50, 0xda51c0, 0xc82002a010, 0xc82000a260, 0x1, 0x1, 0x81de04, 0xda5808, 0xc8200f7db7, 0x12ec8, ...)
    $GOPATH/src/github.com/kardianos/govendor/run/modify.go:105 +0x9e7
github.com/kardianos/govendor/run.(*runner).run(0xc8200f7d50, 0xda51c0, 0xc82002a010, 0xc82000a240, 0x3, 0x3, 0xda5808, 0xc8200f7db7, 0xda5808, 0x0, ...)
    $GOPATH/src/github.com/kardianos/govendor/run/run.go:83 +0x662
github.com/kardianos/govendor/run.Run(0xda51c0, 0xc82002a010, 0xc82000a240, 0x3, 0x3, 0xda5808, 0xc8200f7db7, 0x0, 0x0, 0x0)
    $GOPATH/src/github.com/kardianos/govendor/run/run.go:41 +0x95
main.main()
    $GOPATH/src/github.com/kardianos/govendor/main.go:35 +0x453
",3144
405,39341513,go vet ./...,12
406,39341513,"% go version 
go version go1.6.2 darwin/amd64 
% go vet ./... 
% go version 
go version go1.7beta1 darwin/amd64 
% go vet ./... panic: inconsistent import:
    var crypto/rand.Reader io.Reader previously imported as:
    var Reader io.Reader  [recovered]
    panic: inconsistent import:
    var crypto/rand.Reader io.Reader previously imported as:
    var Reader io.Reader


goroutine 1 [running]: panic(0x25f720, 0xc4203fc1f0)
    /usr/local/go/src/runtime/panic.go:500 +0x1a1 go/types.(*Checker).handleBailout(0xc4200b61c0, 0xc4200c78e8)
    /usr/local/go/src/go/types/check.go:213 +0xae panic(0x25f720, 0xc4203fc1f0)
    /usr/local/go/src/runtime/panic.go:458 +0x243 go/internal/gcimporter.(*importer).declare(0xc42008e000, 0x3d81c0, 0xc4203ea5f0)
    /usr/local/go/src/go/internal/gcimporter/bimport.go:173 +0x17c go/internal/gcimporter.(*importer).obj(0xc42008e000, 0xfffffffffffffffc)
    /usr/local/go/src/go/internal/gcimporter/bimport.go:193 +0x1af go/internal/gcimporter.BImportData(0xc42000af00, 0xc420334000, 0x703e, 0x7e00, 0xc420166a51, 0xb, 0x0, 0xb, 0xc4203f4ff0, 0xc4200c70c8)
    /usr/local/go/src/go/internal/gcimporter/bimport.go:86 +0x34c go/internal/gcimporter.Import(0xc42000af00, 0xc420166a51, 0xb, 0x7fff5fbff610, 0x8, 0xc420320190, 0x0, 0x0)
    /usr/local/go/src/go/internal/gcimporter/gcimporter.go:166 +0x551 go/importer.gcimports.ImportFrom(0xc42000af00, 0xc420166a51, 0xb, 0x7fff5fbff610, 0x8, 0x0, 0xc4202d55e0, 0x0, 0x0)
    /usr/local/go/src/go/importer/importer.go:70 +0x67 go/types.(*Checker).collectObjects(0xc4200b61c0)
    /usr/local/go/src/go/types/resolver.go:191 +0x81d go/types.(*Checker).checkFiles(0xc4200b61c0, 0xc42018b600, 0x2, 0x2, 0x0, 0x0)
    /usr/local/go/src/go/types/check.go:225 +0xaa go/types.(*Checker).Files(0xc4200b61c0, 0xc42018b600, 0x2, 0x2, 0xc420192a80, 0xc4200cb960)
    /usr/local/go/src/go/types/check.go:218 +0x49 go/types.(*Config).Check(0xc42018d9c0, 0xc420015817, 0x5, 0xc420013f00, 0xc42018b600, 0x2, 0x2, 0xc420187400, 0x45e000, 0x0, ...)
    /usr/local/go/src/go/types/api.go:344 +0x19f main.(*Package).check(0xc42001a8a0, 0xc420013f00, 0xc42018b600, 0x2, 0x2, 0xc42018b610, 0x1)
    /usr/local/go/src/cmd/vet/types.go:76 +0x36c main.doPackage(0x2b769c, 0x1, 0xc42000a220, 0x2, 0x2, 0x0)
    /usr/local/go/src/cmd/vet/main.go:333 +0x992 main.main()
    /usr/local/go/src/cmd/vet/main.go:241 +0x335 exit status 2 panic: inconsistent import:
    var time.UTC *time.Location previously imported as:
    var UTC *time.Location  [recovered]
    panic: inconsistent import:
    var time.UTC *time.Location previously imported as:
    var UTC *time.Location


goroutine 1 [running]: panic(0x25f720, 0xc420141b10)
    /usr/local/go/src/runtime/panic.go:500 +0x1a1 go/types.(*Checker).handleBailout(0xc4200ce1c0, 0xc42004b8d8)
    /usr/local/go/src/go/types/check.go:213 +0xae panic(0x25f720, 0xc420141b10)
    /usr/local/go/src/runtime/panic.go:458 +0x243 go/internal/gcimporter.(*importer).declare(0xc4200a2cc0, 0x3d81c0, 0xc4205f6d70)
    /usr/local/go/src/go/internal/gcimporter/bimport.go:173 +0x17c go/internal/gcimporter.(*importer).obj(0xc4200a2cc0, 0xfffffffffffffffc)
    /usr/local/go/src/go/internal/gcimporter/bimport.go:193 +0x1af go/internal/gcimporter.BImportData(0xc42007ae40, 0xc42035a000, 0x3a210, 0x3fe00, 0xc42007995b, 0x4, 0x0, 0x4, 0xc4201392f0, 0xc42004b0b8)
    /usr/local/go/src/go/internal/gcimporter/bimport.go:86 +0x34c go/internal/gcimporter.Import(0xc42007ae40, 0xc42007995b, 0x4, 0x7fff5fbff598, 0x7, 0xc4205b7040, 0x0, 0x0)
    /usr/local/go/src/go/internal/gcimporter/gcimporter.go:166 +0x551 go/importer.gcimports.ImportFrom(0xc42007ae40, 0xc42007995b, 0x4, 0x7fff5fbff598, 0x7, 0x0, 0xc42017ec80, 0x0, 0x0)
    /usr/local/go/src/go/importer/importer.go:70 +0x67 go/types.(*Checker).collectObjects(0xc4200ce1c0)
    /usr/local/go/src/go/types/resolver.go:191 +0x81d go/types.(*Checker).checkFiles(0xc4200ce1c0, 0xc42018b600, 0x8, 0x8, 0x0, 0x0)
    /usr/local/go/src/go/types/check.go:225 +0xaa go/types.(*Checker).Files(0xc4200ce1c0, 0xc42018b600, 0x8, 0x8, 0xc420199800, 0xc4200e3960)
    /usr/local/go/src/go/types/check.go:218 +0x49 go/types.(*Config).Check(0xc420193cc0, 0xc420079667, 0x7, 0xc420095c00, 0xc42018b600, 0x8, 0x8, 0xc420194b40, 0x45e4b0, 0x0, ...)
    /usr/local/go/src/go/types/api.go:344 +0x19f main.(*Package).check(0xc420076a80, 0xc420095c00, 0xc42018b600, 0x8, 0x8, 0x0, 0xc4200b9980)
    /usr/local/go/src/cmd/vet/types.go:76 +0x36c main.doPackage(0x2b769c, 0x1, 0xc420098010, 0x8, 0x8, 0x0)
    /usr/local/go/src/cmd/vet/main.go:333 +0x992 main.main()
    /usr/local/go/src/cmd/vet/main.go:241 +0x335 exit status 2 panic: inconsistent import:
    func errors.New(text string) error previously imported as:
    func errors.New(text string) error  [recovered]
    panic: inconsistent import:
    func errors.New(text string) error previously imported as:
    func errors.New(text string) error


goroutine 1 [running]: panic(0x25f720, 0xc4203f73c0)
    /usr/local/go/src/runtime/panic.go:500 +0x1a1 go/types.(*Checker).handleBailout(0xc4200b61c0, 0xc4200c98e8)
    /usr/local/go/src/go/types/check.go:213 +0xae panic(0x25f720, 0xc4203f73c0)
    /usr/local/go/src/runtime/panic.go:458 +0x243 go/internal/gcimporter.(*importer).declare(0xc4204b60c0, 0x3d7ea0, 0xc4203fe460)
    /usr/local/go/src/go/internal/gcimporter/bimport.go:173 +0x17c go/internal/gcimporter.(*importer).obj(0xc4204b60c0, 0xfffffffffffffffb)
    /usr/local/go/src/go/internal/gcimporter/bimport.go:201 +0x49d go/internal/gcimporter.BImportData(0xc420014ea0, 0xc420406000, 0xb62, 0xe00, 0xc420169771, 0x6, 0x0, 0x6, 0x10, 0x10)
    /usr/local/go/src/go/internal/gcimporter/bimport.go:86 +0x34c go/internal/gcimporter.Import(0xc420014ea0, 0xc420169771, 0x6, 0x7fff5fbff5f0, 0x5, 0xc420430f00, 0x0, 0x0)
    /usr/local/go/src/go/internal/gcimporter/gcimporter.go:166 +0x551 go/importer.gcimports.ImportFrom(0xc420014ea0, 0xc420169771, 0x6, 0x7fff5fbff5f0, 0x5, 0x0, 0x1, 0x2, 0x0)
    /usr/local/go/src/go/importer/importer.go:70 +0x67 go/types.(*Checker).collectObjects(0xc4200b61c0)
    /usr/local/go/src/go/types/resolver.go:191 +0x81d go/types.(*Checker).checkFiles(0xc4200b61c0, 0xc42017df00, 0x4, 0x4, 0x0, 0x0)
    /usr/local/go/src/go/types/check.go:225 +0xaa go/types.(*Checker).Files(0xc4200b61c0, 0xc42017df00, 0x4, 0x4, 0xc420192360, 0xc4200c9960)
    /usr/local/go/src/go/types/check.go:218 +0x49 go/types.(*Config).Check(0xc42018b700, 0xc420017837, 0x5, 0xc420013e80, 0xc42017df00, 0x4, 0x4, 0xc42017fdb0, 0x45e000, 0x0, ...)
    /usr/local/go/src/go/types/api.go:344 +0x19f main.(*Package).check(0xc42001a960, 0xc420013e80, 0xc42017df00, 0x4, 0x4, 0x0, 0xc420011880)
    /usr/local/go/src/cmd/vet/types.go:76 +0x36c main.doPackage(0x2b769c, 0x1, 0xc42000a1a0, 0x4, 0x4, 0x0)
    /usr/local/go/src/cmd/vet/main.go:333 +0x992 main.main()
    /usr/local/go/src/cmd/vet/main.go:241 +0x335 exit status 2
",6906
407,39502310,"TEXT ·CountBitsUint64PopCnt(SB),NOSPLIT,$0
    POPCNTQ    x+0(FP), AX
    MOVQ       AX, ret+8(FP)
    RET
",107
408,39502310,"const (
    m1q uint64 = 0x5555555555555555
    m2q        = 0x3333333333333333
    m4q        = 0x0f0f0f0f0f0f0f0f
    hq         = 0x0101010101010101
)

func CountBitsUint64(x uint64) int {
    x -= (x >> 1) & m1q              // put count of each 2 bits into those 2 bits
    x = (x & m2q) + ((x >> 2) & m2q) // put count of each 4 bits into those 4 bits
    x = (x + (x >> 4)) & m4q         // put count of each 8 bits into those 8 bits
    return int((x * hq) >> 56)       // returns left 8 bits of x + (x<<8) + (x<<16) + (x<<24) + ...
}
",543
409,39502310,go tool compile -S popcount.go,30
410,39502310,""""".CountBitsUint64 t=1 size=101 args=0x10 locals=0x0
    0x0000 00000 (popcount.go:81)   TEXT    """".CountBitsUint64(SB), $0-16
    0x0000 00000 (popcount.go:81)   NOP
    0x0000 00000 (popcount.go:81)   NOP
    0x0000 00000 (popcount.go:81)   FUNCDATA    $0, gclocals·23e8278e2b69a3a75fa59b23c49ed6ad(SB)
    0x0000 00000 (popcount.go:81)   FUNCDATA    $1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
    0x0000 00000 (popcount.go:82)   MOVQ    """".x+8(FP), AX
    0x0005 00005 (popcount.go:82)   MOVQ    AX, CX
    0x0008 00008 (popcount.go:82)   SHRQ    $1, AX
    0x000b 00011 (popcount.go:82)   MOVQ    $6148914691236517205, DX
    0x0015 00021 (popcount.go:82)   ANDQ    DX, AX
    0x0018 00024 (popcount.go:82)   SUBQ    AX, CX
    0x001b 00027 (popcount.go:83)   MOVQ    $3689348814741910323, AX
    0x0025 00037 (popcount.go:83)   MOVQ    CX, DX
    0x0028 00040 (popcount.go:83)   ANDQ    AX, CX
    0x002b 00043 (popcount.go:83)   SHRQ    $2, DX
    0x002f 00047 (popcount.go:83)   ANDQ    AX, DX
    0x0032 00050 (popcount.go:83)   LEAQ    (CX)(DX*1), AX
    0x0036 00054 (popcount.go:84)   MOVQ    AX, CX
    0x0039 00057 (popcount.go:84)   SHRQ    $4, AX
    0x003d 00061 (popcount.go:84)   ADDQ    CX, AX
    0x0040 00064 (popcount.go:84)   MOVQ    $1085102592571150095, CX
    0x004a 00074 (popcount.go:84)   ANDQ    CX, AX
    0x004d 00077 (popcount.go:85)   MOVQ    $72340172838076673, CX
    0x0057 00087 (popcount.go:85)   IMULQ   AX, CX
    0x005b 00091 (popcount.go:85)   SHRQ    $56, CX
    0x005f 00095 (popcount.go:85)   MOVQ    CX, """".~r1+16(FP)
    0x0064 00100 (popcount.go:85)   RET
    0x0000 48 8b 44 24 08 48 89 c1 48 d1 e8 48 ba 55 55 55  H.D$.H..H..H.UUU
    0x0010 55 55 55 55 55 48 21 d0 48 29 c1 48 b8 33 33 33  UUUUUH!.H).H.333
    0x0020 33 33 33 33 33 48 89 ca 48 21 c1 48 c1 ea 02 48  33333H..H!.H...H
    0x0030 21 c2 48 8d 04 11 48 89 c1 48 c1 e8 04 48 01 c8  !.H...H..H...H..
    0x0040 48 b9 0f 0f 0f 0f 0f 0f 0f 0f 48 21 c8 48 b9 01  H.........H!.H..
    0x0050 01 01 01 01 01 01 01 48 0f af c8 48 c1 e9 38 48  .......H...H..8H
    0x0060 89 4c 24 10 c3
"""".CountBitsUint64Alt t=1 size=142 args=0x10 locals=0x0
    0x0000 00000 (popcount.go:88)   TEXT    """".CountBitsUint64Alt(SB), $0-16
    0x0000 00000 (popcount.go:88)   NOP
    0x0000 00000 (popcount.go:88)   NOP
    0x0000 00000 (popcount.go:88)   FUNCDATA    $0, gclocals·23e8278e2b69a3a75fa59b23c49ed6ad(SB)
    0x0000 00000 (popcount.go:88)   FUNCDATA    $1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
    0x0000 00000 (popcount.go:89)   MOVQ    """".x+8(FP), AX
    0x0005 00005 (popcount.go:89)   MOVQ    AX, CX
    0x0008 00008 (popcount.go:89)   SHRQ    $32, AX
    0x000c 00012 (popcount.go:89)   MOVQ    AX, DX
    0x000f 00015 (popcount.go:89)   SHRL    $1, AX
    0x0011 00017 (popcount.go:89)   ANDL    $1431655765, AX
    0x0016 00022 (popcount.go:89)   SUBL    AX, DX
    0x0018 00024 (popcount.go:89)   MOVL    DX, AX
    0x001a 00026 (popcount.go:89)   ANDL    $858993459, DX
    0x0020 00032 (popcount.go:89)   SHRL    $2, AX
    0x0023 00035 (popcount.go:89)   ANDL    $858993459, AX
    0x0028 00040 (popcount.go:89)   ADDL    DX, AX
    0x002a 00042 (popcount.go:89)   MOVL    AX, DX
    0x002c 00044 (popcount.go:89)   SHRL    $4, AX
    0x002f 00047 (popcount.go:89)   ADDL    DX, AX
    0x0031 00049 (popcount.go:89)   ANDL    $252645135, AX
    0x0036 00054 (popcount.go:89)   MOVL    AX, DX
    0x0038 00056 (popcount.go:89)   SHRL    $8, AX
    0x003b 00059 (popcount.go:89)   ADDL    DX, AX
    0x003d 00061 (popcount.go:89)   MOVL    AX, DX
    0x003f 00063 (popcount.go:89)   SHRL    $16, AX
    0x0042 00066 (popcount.go:89)   ADDL    DX, AX
    0x0044 00068 (popcount.go:89)   MOVQ    CX, DX
    0x0047 00071 (popcount.go:89)   SHRL    $1, CX
    0x0049 00073 (popcount.go:89)   ANDL    $1431655765, CX
    0x004f 00079 (popcount.go:89)   SUBL    CX, DX
    0x0051 00081 (popcount.go:89)   MOVL    DX, CX
    0x0053 00083 (popcount.go:89)   ANDL    $858993459, DX
    0x0059 00089 (popcount.go:89)   SHRL    $2, CX
    0x005c 00092 (popcount.go:89)   ANDL    $858993459, CX
    0x0062 00098 (popcount.go:89)   ADDL    DX, CX
    0x0064 00100 (popcount.go:89)   MOVL    CX, DX
    0x0066 00102 (popcount.go:89)   SHRL    $4, CX
    0x0069 00105 (popcount.go:89)   ADDL    DX, CX
    0x006b 00107 (popcount.go:89)   ANDL    $252645135, CX
    0x0071 00113 (popcount.go:89)   MOVL    CX, DX
    0x0073 00115 (popcount.go:89)   SHRL    $8, CX
    0x0076 00118 (popcount.go:89)   ADDL    DX, CX
    0x0078 00120 (popcount.go:89)   MOVL    CX, DX
    0x007a 00122 (popcount.go:89)   SHRL    $16, CX
    0x007d 00125 (popcount.go:89)   ADDL    DX, CX
    0x007f 00127 (popcount.go:89)   ANDL    $63, AX
    0x0082 00130 (popcount.go:89)   ANDL    $63, CX
    0x0085 00133 (popcount.go:89)   ADDQ    CX, AX
    0x0088 00136 (popcount.go:89)   MOVQ    AX, """".~r1+16(FP)
    0x008d 00141 (popcount.go:89)   RET
    0x0000 48 8b 44 24 08 48 89 c1 48 c1 e8 20 48 89 c2 d1  H.D$.H..H.. H...
    0x0010 e8 25 55 55 55 55 29 c2 89 d0 81 e2 33 33 33 33  .%UUUU).....3333
    0x0020 c1 e8 02 25 33 33 33 33 01 d0 89 c2 c1 e8 04 01  ...%3333........
    0x0030 d0 25 0f 0f 0f 0f 89 c2 c1 e8 08 01 d0 89 c2 c1  .%..............
    0x0040 e8 10 01 d0 48 89 ca d1 e9 81 e1 55 55 55 55 29  ....H......UUUU)
    0x0050 ca 89 d1 81 e2 33 33 33 33 c1 e9 02 81 e1 33 33  .....3333.....33
    0x0060 33 33 01 d1 89 ca c1 e9 04 01 d1 81 e1 0f 0f 0f  33..............
    0x0070 0f 89 ca c1 e9 08 01 d1 89 ca c1 e9 10 01 d1 83  ................
    0x0080 e0 3f 83 e1 3f 48 01 c8 48 89 44 24 10 c3        .?..?H..H.D$..
",5625
411,39502310,"$ go test -bench=.
BenchmarkCountBitsInt8PopCnt-4          500000000            3.96 ns/op
BenchmarkCountBitsInt16PopCnt-4         500000000            3.24 ns/op
BenchmarkCountBitsInt32PopCnt-4         500000000            3.36 ns/op
BenchmarkCountBitsInt64PopCnt-4         500000000            3.44 ns/op
BenchmarkCountBitsIntPopCnt-4           300000000            5.42 ns/op
BenchmarkCountBitsUint8PopCnt-4         1000000000           2.60 ns/op
BenchmarkCountBitsUint16PopCnt-4        1000000000           2.59 ns/op
BenchmarkCountBitsUint32PopCnt-4        1000000000           2.55 ns/op
> BenchmarkCountBitsUint64PopCnt-4        1000000000           2.51 ns/op
BenchmarkCountBitsUintPopCnt-4          300000000            4.38 ns/op
BenchmarkCountBitsBytePopCnt-4          500000000            3.21 ns/op
BenchmarkCountBitsRunePopCnt-4          500000000            3.29 ns/op
BenchmarkCountBitsInt8-4                2000000000           0.38 ns/op
BenchmarkCountBitsInt16-4               2000000000           0.41 ns/op
BenchmarkCountBitsInt32-4               2000000000           0.36 ns/op
BenchmarkCountBitsInt64-4               2000000000           0.37 ns/op
BenchmarkCountBitsInt-4                 200000000            6.36 ns/op
BenchmarkCountBitsUint16-4              2000000000           0.36 ns/op
BenchmarkCountBitsUint32-4              2000000000           0.35 ns/op
> BenchmarkCountBitsUint64-4              2000000000           0.37 ns/op
> BenchmarkCountBitsUint64Alt-4           200000000            7.06 ns/op
BenchmarkCountBitsUint-4                300000000            4.16 ns/op
BenchmarkCountBitsUintReference-4       100000000           16.9 ns/op
BenchmarkCountBitsByte-4                2000000000           0.36 ns/op
BenchmarkCountBitsByteAlt-4             2000000000           0.36 ns/op
BenchmarkCountBitsRune-4                2000000000           0.37 ns/op
PASS
ok      github.com/steakknife/hamming   42.730s
$
",1951
412,39502310,"   0x0177 00375 (popcnt_amd64_test.go:189) CALL    """".CountBitsUint64PopCnt(SB)
",80
413,39634610,"type (
    SessionStore struct {
        c      *mgo.Session
        sid    string
        lock   sync.RWMutex
        values map[interface{}]interface{}
    }
)

var mgopder = &Provider{}

func (st *SessionStore) Set(key, value interface{}) error {
    st.lock.Lock()
    defer st.lock.Unlock()
    st.values[key] = value
    return nil
}

// Get value from mongodb session
func (st *SessionStore) Get(key interface{}) interface{} {
    st.lock.RLock()
    defer st.lock.RUnlock()
    if v, ok := st.values[key]; ok {
        return v
    }
    return nil
}

// Delete value in mongodb session
func (st *SessionStore) Delete(key interface{}) error {
    st.lock.Lock()
    defer st.lock.Unlock()
    delete(st.values, key)
    return nil
}

// Flush clear all values in mongodb session
func (st *SessionStore) Flush() error {
    st.lock.Lock()
    defer st.lock.Unlock()
    st.values = make(map[interface{}]interface{})
    return nil
}

// SessionID get session id of this mongodb session store
func (st *SessionStore) SessionID() string {
    return st.sid
}

// SessionRelease save mongodb session values to database.
// must call this method to save values to database.
func (st *SessionStore) SessionRelease(w http.ResponseWriter) {
    defer st.c.Close()
    b, err := session.EncodeGob(st.values)
    if err != nil {
        return
    }
    st.c.DB(""Employee"").C(""Sessions"").Update(nil, bson.M{""$set"": bson.M{
        ""session_data"":   b,
        ""session_expiry"": time.Now().Unix(),
        ""session_key"":    st.sid,
    },
    },
    )

    /*st.c.Exec(""UPDATE ""+TableName+"" set `session_data`=?, `session_expiry`=? where session_key=?"",
    b, time.Now().Unix(), st.sid)*/
}

type Provider struct {
    maxlifetime int64
    savePath    string
    Database    string
}

// connect to mongodb
func (mp *Provider) connectInit() *mgo.Session {
    ds, err := mgo.Dial(""Employee"")
    if err != nil {
        return nil
    }
    return ds
}

// SessionInit init mongodb session.
// savepath is the connection string of mongodb
func (mp *Provider) SessionInit(maxlifetime int64, savePath string) error {
    mp.maxlifetime = maxlifetime
    mp.savePath = savePath
    mp.Database = ""Employee""
    return nil
}

// SessionRead get mysql session by sid
func (mp *Provider) SessionRead(sid string) (session.Store, error) {
    var sessiondata []byte
    ds := mp.connectInit()
    defer ds.Close()
    c := ds.DB(mp.Database).C(""Session"")
    err := c.Find(bson.M{
        ""session_key"": sid,
    }).Select(bson.M{""session_data"": 1}).All(&sessiondata)
    if err != nil {
        if err.Error() == ""not found"" {
            c.Insert(bson.M{
                ""session_key"":    sid,
                ""session_data"":   "" "",
                ""session_expiry"": time.Now().Unix(),
            })
        }
    }

    var kv map[interface{}]interface{}
    if len(sessiondata) == 0 {
        kv = make(map[interface{}]interface{})
    } else {
        kv, err = session.DecodeGob(sessiondata)
        if err != nil {
            return nil, err
        }
    }
    rs := &SessionStore{c: ds, sid: sid, values: kv}
    return rs, nil
}

// SessionExist check mongodb session exist
func (mp *Provider) SessionExist(sid string) bool {
    var sessiondata []byte
    ds := mp.connectInit()
    defer ds.Close()
    c := ds.DB(""Employee"").C(""Sessions"")
    err := c.Find(bson.M{
        ""session_key"": sid,
    }).Select(bson.M{
        ""session_data"": 1,
    }).One(&sessiondata)
    if err != nil {
        if err.Error() == ""not found"" {
            return false
        }
    }
    return true

}

// SessionRegenerate generate new sid for mysql session
func (mp *Provider) SessionRegenerate(oldsid, sid string) (session.Store, error) {
    var sessiondata []byte
    ds := mp.connectInit()
    defer ds.Close()
    c := ds.DB(""Employee"").C(""Sessions"")
    err := c.Find(bson.M{
        ""session_key"": oldsid,
    }).Select(bson.M{
        ""session_data"": 1,
    }).One(&sessiondata)
    if err != nil {
        if err.Error() == ""not found"" {
            c.Insert(bson.M{
                ""sessoin_key"":    oldsid,
                ""session_data"":   "" "",
                ""session_expiry"": time.Now().Unix(),
            })
        }
    }
    /*  row := c.QueryRow(""select session_data from ""+TableName+"" where session_key=?"", oldsid)

        err := row.Scan(&sessiondata)

    c.Update(bson.M{""sessoin_key"": oldsid}, bson.M{
        ""$set"": bson.M{
            ""session_key"": sid,
        },
    })
    /*c.Exec(""update ""+TableName+"" set `session_key`=? where session_key=?"", sid, oldsid)
     */
    var kv map[interface{}]interface{}
    if len(sessiondata) == 0 {
        kv = make(map[interface{}]interface{})
    } else {
        kv, err = session.DecodeGob(sessiondata)
        if err != nil {
            return nil, err
        }
    }
    rs := &SessionStore{c: ds, sid: sid, values: kv}
    return rs, nil
}

// SessionDestroy delete mysql session by sid
func (mp *Provider) SessionDestroy(sid string) error {
    ds := mp.connectInit()
    defer ds.Close()
    c := ds.DB(""Employee"").C(""Sessions"")
    c.Remove(bson.M{
        ""session_key"": sid,
    }) 
    return nil
}

// SessionGC delete expired values in mysql session
func (mp *Provider) SessionGC() {
    ds := mp.connectInit()
    defer ds.Close()
    c := ds.DB(""Employee"").C(""Sessions"")
    c.Remove(bson.M{
        ""session_expiry"": bson.M{
            ""$lt"": time.Now().Unix() - mp.maxlifetime,
        },
    })
return
}

// SessionAll count values in mysql session
func (mp *Provider) SessionAll() int {
    var total int
    ds := mp.connectInit()
    defer ds.Close()
    c := ds.DB(""Employee"").C(""Sessions"")
    total, err := c.Count()

    if err != nil {
        return 0
    }
    return total
}

func init() {
    session.Register(""mongodb"", mgopder)
}
",5833
414,39634610,"panic: runtime error: invalid memory address or nil pointer dereference
        panic: runtime error: invalid memory address or nil pointer dereference
[signal 0xc0000005 code=0x1 addr=0x0 pc=0x6db254]

goroutine 6 [running]:
panic(0xa2f560, 0xc0820080b0)
        C:/Go/src/runtime/panic.go:481 +0x3f4
gopkg.in/mgo%2ev2.(*Session).Close(0x0)
        C:/Projects/Go/src/gopkg.in/mgo.v2/session.go:1612 +0x144
panic(0xa2f560, 0xc0820080b0)
        C:/Go/src/runtime/panic.go:443 +0x4f7
gopkg.in/mgo%2ev2.(*Session).acquireSocket(0x0, 0xc082290000, 0x0, 0x0, 0x0)
        C:/Projects/Go/src/gopkg.in/mgo.v2/session.go:4409 +0x4ba
gopkg.in/mgo%2ev2.(*Collection).writeOp(0xc082279f30, 0x8feb80, 0xc082326060, 0xc082326001, 0x0, 0x0, 0x0)
        C:/Projects/Go/src/gopkg.in/mgo.v2/session.go:4604 +0xe7
gopkg.in/mgo%2ev2.(*Collection).Remove(0xc082279f30, 0x9d4700, 0xc082326030, 0x0, 0x0)
        C:/Projects/Go/src/gopkg.in/mgo.v2/session.go:2586 +0x15c
sample/models.(*Provider).SessionGC(0xe2f5a0)
        C:/Projects/Go/src/sample/models/model.go:234 +0x3dc
github.com/astaxie/beego/session.(*Manager).GC(0xc082258b20)
        C:/Projects/Go/src/github.com/astaxie/beego/session/session.go:271 +0x48
created by github.com/astaxie/beego.registerSession
        C:/Projects/Go/src/github.com/astaxie/beego/hooks.go:68 +0x31d
",1324
415,39990618," // popcount_test.go:226
 func BenchmarkCountBitsUint64(b *testing.B) {
+       stopDeadCodeElimination := 0
        for i := 0; i < b.N; i++ {
-               CountBitsUint64(uint64(i))
+               stopDeadCodeElimination |= CountBitsUint64(uint64(i))
        }
+       b.Logf(""stopDeadCodeElimination: %d"", stopDeadCodeElimination)
 }

 func BenchmarkCountBitsUint64Alt(b *testing.B) {
",392
416,39990618,"// popcount_test.go:226
func BenchmarkCountBitsUint64(b *testing.B) {
        for i := 0; i < b.N; i++ {
                CountBitsUint64(uint64(i))
        }
}
",160
417,39990618,""""".BenchmarkCountBitsInt64(SB), $
0-8
        0x0000 00000 (popcount_test.go:202)     NOP
        0x0000 00000 (popcount_test.go:202)     NOP
        0x0000 00000 (popcount_test.go:202)     FUNCDATA        $0, gclocals·87d20ce1b583
90b294df80b886db78bf(SB)
        0x0000 00000 (popcount_test.go:202)     FUNCDATA        $1, gclocals·33cdeccccebe
80329f1fdbee7f5874cb(SB)
        0x0000 00000 (popcount_test.go:203)     MOVQ    """".b+8(FP), AX
        0x0005 00005 (popcount_test.go:203)     MOVQ    $0, CX
        0x0007 00007 (popcount_test.go:203)     MOVQ    184(AX), DX
        0x000e 00014 (popcount_test.go:203)     CMPQ    CX, DX
        0x0011 00017 (popcount_test.go:203)     JGE     $0, 34
        0x0013 00019 (popcount_test.go:203)     INCQ    CX
        0x0016 00022 (popcount_test.go:203)     MOVQ    184(AX), DX
        0x001d 00029 (popcount_test.go:203)     CMPQ    CX, DX
        0x0020 00032 (popcount_test.go:203)     JLT     $0, 19
        0x0022 00034 (popcount_test.go:206)     RET
        0x0000 48 8b 44 24 08 31 c9 48 8b 90 b8 00 00 00 48 39  H.D$.1.H......H9
        0x0010 d1 7d 0f 48 ff c1 48 8b 90 b8 00 00 00 48 39 d1  .}.H..H......H9.
        0x0020 7c f1 c3
",1191
418,39990618,stopDeadCodeElimination,23
419,39990618,"// popcount_test.go:226
func BenchmarkCountBitsUint64(b *testing.B) {
    stopDeadCodeElimination := 0
    for i := 0; i < b.N; i++ {
            stopDeadCodeElimination |= CountBitsUint64(uint64(i))
    }
    b.Logf(""stopDeadCodeElimination: %d"", stopDeadCodeElimination)
}
",275
420,39990618,stopDeadCodeElimination,23
421,39990618,""""".BenchmarkCountBitsUint64 t=1 size=327 args=0x8 locals=0x50
    0x0000 00000 (popcount_test.go:226) TEXT    """".BenchmarkCountBitsUint64(SB), $80-8
    0x0000 00000 (popcount_test.go:226) MOVQ    (TLS), CX
    0x0009 00009 (popcount_test.go:226) CMPQ    SP, 16(CX)
    0x000d 00013 (popcount_test.go:226) JLS 317
    0x0013 00019 (popcount_test.go:226) SUBQ    $80, SP
    0x0017 00023 (popcount_test.go:226) MOVQ    BP, 72(SP)
    0x001c 00028 (popcount_test.go:226) LEAQ    72(SP), BP
    0x0021 00033 (popcount_test.go:226) FUNCDATA    $0, gclocals·51fa0e13d53d6bad7f86670d3edaeac6(SB)
    0x0021 00033 (popcount_test.go:226) FUNCDATA    $1, gclocals·21a8f585a14d020f181242c5256583dc(SB)
    0x0021 00033 (popcount_test.go:228) MOVQ    """".b+88(FP), AX
    0x0026 00038 (popcount_test.go:227) MOVQ    $0, CX
    0x0028 00040 (popcount_test.go:227) MOVQ    CX, DX
    0x002b 00043 (popcount_test.go:228) MOVQ    184(AX), BX
    0x0032 00050 (popcount_test.go:228) CMPQ    CX, BX
    0x0035 00053 (popcount_test.go:228) JGE $0, 166
    0x0037 00055 (popcount_test.go:228) LEAQ    1(CX), BX
    0x003b 00059 (popcount_test.go:229) MOVQ    CX, SI
    0x003e 00062 (popcount_test.go:229) SHRQ    $1, CX
    0x0041 00065 (popcount_test.go:229) MOVQ    $6148914691236517205, DI
    0x004b 00075 (popcount_test.go:229) ANDQ    CX, DI
    0x004e 00078 (popcount_test.go:229) SUBQ    DI, SI
    0x0051 00081 (popcount_test.go:229) MOVQ    $3689348814741910323, DI
    0x005b 00091 (popcount_test.go:229) MOVQ    SI, R8
    0x005e 00094 (popcount_test.go:229) ANDQ    DI, SI
    0x0061 00097 (popcount_test.go:229) SHRQ    $2, R8
    0x0065 00101 (popcount_test.go:229) ANDQ    R8, DI
    0x0068 00104 (popcount_test.go:229) ADDQ    DI, SI
    0x006b 00107 (popcount_test.go:229) MOVQ    SI, DI
    0x006e 00110 (popcount_test.go:229) SHRQ    $4, SI
    0x0072 00114 (popcount_test.go:229) ADDQ    DI, SI
    0x0075 00117 (popcount_test.go:229) MOVQ    $1085102592571150095, DI
    0x007f 00127 (popcount_test.go:229) ANDQ    DI, SI
    0x0082 00130 (popcount_test.go:229) MOVQ    $72340172838076673, DI
    0x008c 00140 (popcount_test.go:229) IMULQ   DI, SI
    0x0090 00144 (popcount_test.go:229) SHRQ    $56, SI
    0x0094 00148 (popcount_test.go:229) ORQ SI, DX
    0x0097 00151 (popcount_test.go:228) MOVQ    BX, CX
    0x009a 00154 (popcount_test.go:228) MOVQ    184(AX), BX
    0x00a1 00161 (popcount_test.go:228) CMPQ    CX, BX
    0x00a4 00164 (popcount_test.go:228) JLT $0, 55
    0x00a6 00166 (popcount_test.go:231) MOVQ    DX, """".autotmp_1657+48(SP)
    0x00ab 00171 (popcount_test.go:231) MOVQ    $0, """".autotmp_1663+56(SP)
    0x00b4 00180 (popcount_test.go:231) MOVQ    $0, """".autotmp_1663+64(SP)
    0x00bd 00189 (popcount_test.go:231) LEAQ    type.int(SB), CX
    0x00c4 00196 (popcount_test.go:231) MOVQ    CX, (SP)
    0x00c8 00200 (popcount_test.go:231) LEAQ    """".autotmp_1657+48(SP), CX
    0x00cd 00205 (popcount_test.go:231) MOVQ    CX, 8(SP)
    0x00d2 00210 (popcount_test.go:231) MOVQ    $0, 16(SP)
    0x00db 00219 (popcount_test.go:231) PCDATA  $0, $1
    0x00db 00219 (popcount_test.go:231) CALL    runtime.convT2E(SB)
    0x00e0 00224 (popcount_test.go:231) MOVQ    24(SP), AX
    0x00e5 00229 (popcount_test.go:231) MOVQ    32(SP), CX
    0x00ea 00234 (popcount_test.go:231) MOVQ    AX, """".autotmp_1663+56(SP)
    0x00ef 00239 (popcount_test.go:231) MOVQ    CX, """".autotmp_1663+64(SP)
    0x00f4 00244 (popcount_test.go:231) MOVQ    """".b+88(FP), AX
    0x00f9 00249 (popcount_test.go:231) MOVQ    AX, (SP)
    0x00fd 00253 (popcount_test.go:231) LEAQ    go.string.""stopDeadCodeElimination: %d""(SB), CX
    0x0104 00260 (popcount_test.go:231) MOVQ    CX, 8(SP)
    0x0109 00265 (popcount_test.go:231) MOVQ    $27, 16(SP)
    0x0112 00274 (popcount_test.go:231) LEAQ    """".autotmp_1663+56(SP), CX
    0x0117 00279 (popcount_test.go:231) MOVQ    CX, 24(SP)
    0x011c 00284 (popcount_test.go:231) MOVQ    $1, 32(SP)
    0x0125 00293 (popcount_test.go:231) MOVQ    $1, 40(SP)
    0x012e 00302 (popcount_test.go:231) PCDATA  $0, $1
    0x012e 00302 (popcount_test.go:231) CALL    testing.(*common).Logf(SB)
    0x0133 00307 (popcount_test.go:232) MOVQ    72(SP), BP
    0x0138 00312 (popcount_test.go:232) ADDQ    $80, SP
    0x013c 00316 (popcount_test.go:232) RET
    0x013d 00317 (popcount_test.go:232) NOP
    0x013d 00317 (popcount_test.go:226) CALL    runtime.morestack_noctxt(SB)
    0x0142 00322 (popcount_test.go:226) JMP 0
    0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 2a  eH..%....H;a...*
    0x0010 01 00 00 48 83 ec 50 48 89 6c 24 48 48 8d 6c 24  ...H..PH.l$HH.l$
    0x0020 48 48 8b 44 24 58 31 c9 48 89 ca 48 8b 98 b8 00  HH.D$X1.H..H....
    0x0030 00 00 48 39 d9 7d 6f 48 8d 59 01 48 89 ce 48 d1  ..H9.}oH.Y.H..H.
    0x0040 e9 48 bf 55 55 55 55 55 55 55 55 48 21 cf 48 29  .H.UUUUUUUUH!.H)
    0x0050 fe 48 bf 33 33 33 33 33 33 33 33 49 89 f0 48 21  .H.33333333I..H!
    0x0060 fe 49 c1 e8 02 4c 21 c7 48 01 fe 48 89 f7 48 c1  .I...L!.H..H..H.
    0x0070 ee 04 48 01 fe 48 bf 0f 0f 0f 0f 0f 0f 0f 0f 48  ..H..H.........H
    0x0080 21 fe 48 bf 01 01 01 01 01 01 01 01 48 0f af f7  !.H.........H...
    0x0090 48 c1 ee 38 48 09 f2 48 89 d9 48 8b 98 b8 00 00  H..8H..H..H.....
    0x00a0 00 48 39 d9 7c 91 48 89 54 24 30 48 c7 44 24 38  .H9.|.H.T$0H.D$8
    0x00b0 00 00 00 00 48 c7 44 24 40 00 00 00 00 48 8d 0d  ....H.D$@....H..
    0x00c0 00 00 00 00 48 89 0c 24 48 8d 4c 24 30 48 89 4c  ....H..$H.L$0H.L
    0x00d0 24 08 48 c7 44 24 10 00 00 00 00 e8 00 00 00 00  $.H.D$..........
    0x00e0 48 8b 44 24 18 48 8b 4c 24 20 48 89 44 24 38 48  H.D$.H.L$ H.D$8H
    0x00f0 89 4c 24 40 48 8b 44 24 58 48 89 04 24 48 8d 0d  .L$@H.D$XH..$H..
    0x0100 00 00 00 00 48 89 4c 24 08 48 c7 44 24 10 1b 00  ....H.L$.H.D$...
    0x0110 00 00 48 8d 4c 24 38 48 89 4c 24 18 48 c7 44 24  ..H.L$8H.L$.H.D$
    0x0120 20 01 00 00 00 48 c7 44 24 28 01 00 00 00 e8 00   ....H.D$(......
    0x0130 00 00 00 48 8b 6c 24 48 48 83 c4 50 c3 e8 00 00  ...H.l$HH..P....
    0x0140 00 00 e9 b9 fe ff ff                             .......
    rel 5+4 t=15 TLS+0
    rel 192+4 t=14 type.int+0
    rel 220+4 t=7 runtime.convT2E+0
    rel 256+4 t=14 go.string.""stopDeadCodeElimination: %d""+0
    rel 303+4 t=7 testing.(*common).Logf+0
    rel 318+4 t=7 runtime.morestack_noctxt+0
",6298
422,40077813,"package main
//This file is generated automatically. Do not try to edit it manually.

var resourceListingJson = `{
    ""apiVersion"": ""1.0.0"",
    ""swaggerVersion"": ""1.2"",
    ""basePath"": ""http://127.0.0.1:3000/"",
    ""apis"": [
        {
            ""path"": ""/testapi"",
            ""description"": ""Test API""
        }
    ],
    ""info"": {
        ""title"": ""Swagger Example API"",
        ""description"": ""Swagger Example API"",
        ""contact"": ""varyous@gmail.com"",
        ""termsOfServiceUrl"": ""http://yvasiyarov.com/"",
        ""license"": ""BSD"",
        ""licenseUrl"": ""http://yvasiyarov.com/""
    }
}`
var apiDescriptionsJson = map[string]string{""testapi"":`{
    ""apiVersion"": ""1.0.0"",
    ""swaggerVersion"": ""1.2"",
    ""basePath"": ""http://127.0.0.1:3000/"",
    ""resourcePath"": ""/testapi"",
    ""produces"": [
        ""application/json""
    ],
    ""apis"": [
        {
            ""path"": ""/testapi/get-string-by-int/{some_id}"",
            ""description"": ""get string by ID"",
            ""operations"": [
                {
                    ""httpMethod"": ""GET"",
                    ""nickname"": ""GetStringByInt"",
                    ""type"": ""string"",
                    ""items"": {},
                    ""summary"": ""get string by ID"",
                    ""parameters"": [
                        {
                            ""paramType"": ""path"",
                            ""name"": ""some_id"",
                            ""description"": ""Some ID"",
                            ""dataType"": ""int"",
                            ""type"": ""int"",
                            ""format"": """",
                            ""allowMultiple"": false,
                            ""required"": true,
                            ""minimum"": 0,
                            ""maximum"": 0
                        }
                    ],
                    ""responseMessages"": [
                        {
                            ""code"": 200,
                            ""message"": """",
                            ""responseType"": ""object"",
                            ""responseModel"": ""string""
                        },
                        {
                            ""code"": 400,
                            ""message"": ""We need ID!!"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        },
                        {
                            ""code"": 404,
                            ""message"": ""Can not find ID"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        }
                    ],
                    ""produces"": [
                        ""application/json""
                    ]
                }
            ]
        },
        {
            ""path"": ""/testapi/get-struct-by-int/{some_id}"",
            ""description"": ""get struct by ID"",
            ""operations"": [
                {
                    ""httpMethod"": ""GET"",
                    ""nickname"": ""GetStructByInt"",
                    ""type"": ""git.corp.adobe.com.personal.test1.StructureWithEmbededStructure"",
                    ""items"": {},
                    ""summary"": ""get struct by ID"",
                    ""parameters"": [
                        {
                            ""paramType"": ""path"",
                            ""name"": ""some_id"",
                            ""description"": ""Some ID"",
                            ""dataType"": ""int"",
                            ""type"": ""int"",
                            ""format"": """",
                            ""allowMultiple"": false,
                            ""required"": true,
                            ""minimum"": 0,
                            ""maximum"": 0
                        },
                        {
                            ""paramType"": ""query"",
                            ""name"": ""offset"",
                            ""description"": ""Offset"",
                            ""dataType"": ""int"",
                            ""type"": ""int"",
                            ""format"": """",
                            ""allowMultiple"": false,
                            ""required"": true,
                            ""minimum"": 0,
                            ""maximum"": 0
                        },
                        {
                            ""paramType"": ""query"",
                            ""name"": ""limit"",
                            ""description"": ""Offset"",
                            ""dataType"": ""int"",
                            ""type"": ""int"",
                            ""format"": """",
                            ""allowMultiple"": false,
                            ""required"": true,
                            ""minimum"": 0,
                            ""maximum"": 0
                        }
                    ],
                    ""responseMessages"": [
                        {
                            ""code"": 200,
                            ""message"": """",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.StructureWithEmbededStructure""
                        },
                        {
                            ""code"": 400,
                            ""message"": ""We need ID!!"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        },
                        {
                            ""code"": 404,
                            ""message"": ""Can not find ID"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        }
                    ],
                    ""produces"": [
                        ""application/json""
                    ]
                }
            ]
        },
        {
            ""path"": ""/testapi/get-struct2-by-int/{some_id}"",
            ""description"": ""get struct2 by ID"",
            ""operations"": [
                {
                    ""httpMethod"": ""GET"",
                    ""nickname"": ""GetStruct2ByInt"",
                    ""type"": ""git.corp.adobe.com.personal.test1.StructureWithEmbededPointer"",
                    ""items"": {},
                    ""summary"": ""get struct2 by ID"",
                    ""parameters"": [
                        {
                            ""paramType"": ""path"",
                            ""name"": ""some_id"",
                            ""description"": ""Some ID"",
                            ""dataType"": ""int"",
                            ""type"": ""int"",
                            ""format"": """",
                            ""allowMultiple"": false,
                            ""required"": true,
                            ""minimum"": 0,
                            ""maximum"": 0
                        },
                        {
                            ""paramType"": ""query"",
                            ""name"": ""offset"",
                            ""description"": ""Offset"",
                            ""dataType"": ""int"",
                            ""type"": ""int"",
                            ""format"": """",
                            ""allowMultiple"": false,
                            ""required"": true,
                            ""minimum"": 0,
                            ""maximum"": 0
                        },
                        {
                            ""paramType"": ""query"",
                            ""name"": ""limit"",
                            ""description"": ""Offset"",
                            ""dataType"": ""int"",
                            ""type"": ""int"",
                            ""format"": """",
                            ""allowMultiple"": false,
                            ""required"": true,
                            ""minimum"": 0,
                            ""maximum"": 0
                        }
                    ],
                    ""responseMessages"": [
                        {
                            ""code"": 200,
                            ""message"": """",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.StructureWithEmbededPointer""
                        },
                        {
                            ""code"": 400,
                            ""message"": ""We need ID!!"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        },
                        {
                            ""code"": 404,
                            ""message"": ""Can not find ID"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        }
                    ],
                    ""produces"": [
                        ""application/json""
                    ]
                }
            ]
        },
        {
            ""path"": ""/testapi/get-simple-array-by-string/{some_id}"",
            ""description"": ""get simple array by ID"",
            ""operations"": [
                {
                    ""httpMethod"": ""GET"",
                    ""nickname"": ""GetSimpleArrayByString"",
                    ""type"": ""array"",
                    ""items"": {
                        ""type"": ""string""
                    },
                    ""summary"": ""get simple array by ID"",
                    ""parameters"": [
                        {
                            ""paramType"": ""path"",
                            ""name"": ""some_id"",
                            ""description"": ""Some ID"",
                            ""dataType"": ""string"",
                            ""type"": ""string"",
                            ""format"": """",
                            ""allowMultiple"": false,
                            ""required"": true,
                            ""minimum"": 0,
                            ""maximum"": 0
                        },
                        {
                            ""paramType"": ""query"",
                            ""name"": ""offset"",
                            ""description"": ""Offset"",
                            ""dataType"": ""int"",
                            ""type"": ""int"",
                            ""format"": """",
                            ""allowMultiple"": false,
                            ""required"": true,
                            ""minimum"": 0,
                            ""maximum"": 0
                        },
                        {
                            ""paramType"": ""query"",
                            ""name"": ""limit"",
                            ""description"": ""Offset"",
                            ""dataType"": ""int"",
                            ""type"": ""int"",
                            ""format"": """",
                            ""allowMultiple"": false,
                            ""required"": true,
                            ""minimum"": 0,
                            ""maximum"": 0
                        }
                    ],
                    ""responseMessages"": [
                        {
                            ""code"": 200,
                            ""message"": """",
                            ""responseType"": ""array"",
                            ""responseModel"": ""string""
                        },
                        {
                            ""code"": 400,
                            ""message"": ""We need ID!!"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        },
                        {
                            ""code"": 404,
                            ""message"": ""Can not find ID"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        }
                    ],
                    ""produces"": [
                        ""application/json""
                    ]
                }
            ]
        },
        {
            ""path"": ""/testapi/get-struct-array-by-string/{some_id}"",
            ""description"": ""get struct array by ID"",
            ""operations"": [
                {
                    ""httpMethod"": ""GET"",
                    ""nickname"": ""GetStructArrayByString"",
                    ""type"": ""array"",
                    ""items"": {
                        ""$ref"": ""git.corp.adobe.com.personal.test1.SimpleStructureWithAnnotations""
                    },
                    ""summary"": ""get struct array by ID"",
                    ""parameters"": [
                        {
                            ""paramType"": ""path"",
                            ""name"": ""some_id"",
                            ""description"": ""Some ID"",
                            ""dataType"": ""string"",
                            ""type"": ""string"",
                            ""format"": """",
                            ""allowMultiple"": false,
                            ""required"": true,
                            ""minimum"": 0,
                            ""maximum"": 0
                        },
                        {
                            ""paramType"": ""query"",
                            ""name"": ""offset"",
                            ""description"": ""Offset"",
                            ""dataType"": ""int"",
                            ""type"": ""int"",
                            ""format"": """",
                            ""allowMultiple"": false,
                            ""required"": true,
                            ""minimum"": 0,
                            ""maximum"": 0
                        },
                        {
                            ""paramType"": ""query"",
                            ""name"": ""limit"",
                            ""description"": ""Offset"",
                            ""dataType"": ""int"",
                            ""type"": ""int"",
                            ""format"": """",
                            ""allowMultiple"": false,
                            ""required"": true,
                            ""minimum"": 0,
                            ""maximum"": 0
                        }
                    ],
                    ""responseMessages"": [
                        {
                            ""code"": 200,
                            ""message"": """",
                            ""responseType"": ""array"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.SimpleStructureWithAnnotations""
                        },
                        {
                            ""code"": 400,
                            ""message"": ""We need ID!!"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        },
                        {
                            ""code"": 404,
                            ""message"": ""Can not find ID"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        }
                    ],
                    ""produces"": [
                        ""application/json""
                    ]
                }
            ]
        },
        {
            ""path"": ""/testapi/get-interface"",
            ""description"": ""get interface"",
            ""operations"": [
                {
                    ""httpMethod"": ""GET"",
                    ""nickname"": ""GetInterface"",
                    ""type"": ""git.corp.adobe.com.personal.test1.InterfaceType"",
                    ""items"": {},
                    ""summary"": ""get interface"",
                    ""responseMessages"": [
                        {
                            ""code"": 200,
                            ""message"": """",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.InterfaceType""
                        },
                        {
                            ""code"": 400,
                            ""message"": ""We need ID!!"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        },
                        {
                            ""code"": 404,
                            ""message"": ""Can not find ID"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        }
                    ],
                    ""produces"": [
                        ""application/json""
                    ]
                }
            ]
        },
        {
            ""path"": ""/testapi/get-simple-aliased"",
            ""description"": ""get simple aliases"",
            ""operations"": [
                {
                    ""httpMethod"": ""GET"",
                    ""nickname"": ""GetSimpleAliased"",
                    ""type"": ""string"",
                    ""items"": {},
                    ""summary"": ""get simple aliases"",
                    ""responseMessages"": [
                        {
                            ""code"": 200,
                            ""message"": """",
                            ""responseType"": ""object"",
                            ""responseModel"": ""string""
                        },
                        {
                            ""code"": 400,
                            ""message"": ""We need ID!!"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        },
                        {
                            ""code"": 404,
                            ""message"": ""Can not find ID"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        }
                    ],
                    ""produces"": [
                        ""application/json""
                    ]
                }
            ]
        },
        {
            ""path"": ""/testapi/get-array-of-interfaces"",
            ""description"": ""get array of interfaces"",
            ""operations"": [
                {
                    ""httpMethod"": ""GET"",
                    ""nickname"": ""GetArrayOfInterfaces"",
                    ""type"": ""array"",
                    ""items"": {
                        ""$ref"": ""git.corp.adobe.com.personal.test1.InterfaceType""
                    },
                    ""summary"": ""get array of interfaces"",
                    ""responseMessages"": [
                        {
                            ""code"": 200,
                            ""message"": """",
                            ""responseType"": ""array"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.InterfaceType""
                        },
                        {
                            ""code"": 400,
                            ""message"": ""We need ID!!"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        },
                        {
                            ""code"": 404,
                            ""message"": ""Can not find ID"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        }
                    ],
                    ""produces"": [
                        ""application/json""
                    ]
                }
            ]
        },
        {
            ""path"": ""/testapi/get-struct3"",
            ""description"": ""get struct3"",
            ""operations"": [
                {
                    ""httpMethod"": ""GET"",
                    ""nickname"": ""GetStruct3"",
                    ""type"": ""git.corp.adobe.com.personal.test1.StructureWithSlice"",
                    ""items"": {},
                    ""summary"": ""get struct3"",
                    ""responseMessages"": [
                        {
                            ""code"": 200,
                            ""message"": """",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.StructureWithSlice""
                        },
                        {
                            ""code"": 400,
                            ""message"": ""We need ID!!"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        },
                        {
                            ""code"": 404,
                            ""message"": ""Can not find ID"",
                            ""responseType"": ""object"",
                            ""responseModel"": ""git.corp.adobe.com.personal.test1.APIError""
                        }
                    ],
                    ""produces"": [
                        ""application/json""
                    ]
                }
            ]
        }
    ],
    ""models"": {
        ""git.corp.adobe.com.personal.test1.APIError"": {
            ""id"": ""git.corp.adobe.com.personal.test1.APIError"",
            ""properties"": {
                ""ErrorCode"": {
                    ""type"": ""int"",
                    ""description"": """",
                    ""items"": {},
                    ""format"": """"
                },
                ""ErrorMessage"": {
                    ""type"": ""string"",
                    ""description"": """",
                    ""items"": {},
                    ""format"": """"
                }
            }
        },
        ""git.corp.adobe.com.personal.test1.InterfaceType"": {
            ""id"": ""git.corp.adobe.com.personal.test1.InterfaceType"",
            ""properties"": null
        },
        ""git.corp.adobe.com.personal.test1.SimpleStructureWithAnnotations"": {
            ""id"": ""git.corp.adobe.com.personal.test1.SimpleStructureWithAnnotations"",
            ""required"": [
                ""Name""
            ],
            ""properties"": {
                ""Name"": {
                    ""type"": ""string"",
                    ""description"": """",
                    ""items"": {},
                    ""format"": """"
                },
                ""id"": {
                    ""type"": ""int"",
                    ""description"": """",
                    ""items"": {},
                    ""format"": """"
                }
            }
        },
        ""git.corp.adobe.com.personal.test1.StructureWithEmbededPointer"": {
            ""id"": ""git.corp.adobe.com.personal.test1.StructureWithEmbededPointer"",
            ""properties"": {
                ""Id"": {
                    ""type"": ""int"",
                    ""description"": """",
                    ""items"": {},
                    ""format"": """"
                },
                ""Name"": {
                    ""type"": ""array"",
                    ""description"": """",
                    ""items"": {
                        ""type"": ""byte""
                    },
                    ""format"": """"
                }
            }
        },
        ""git.corp.adobe.com.personal.test1.StructureWithEmbededStructure"": {
            ""id"": ""git.corp.adobe.com.personal.test1.StructureWithEmbededStructure"",
            ""properties"": {
                ""Id"": {
                    ""type"": ""int"",
                    ""description"": """",
                    ""items"": {},
                    ""format"": """"
                },
                ""Name"": {
                    ""type"": ""array"",
                    ""description"": """",
                    ""items"": {
                        ""type"": ""byte""
                    },
                    ""format"": """"
                }
            }
        },
        ""git.corp.adobe.com.personal.test1.StructureWithSlice"": {
            ""id"": ""git.corp.adobe.com.personal.test1.StructureWithSlice"",
            ""properties"": {
                ""Id"": {
                    ""type"": ""int"",
                    ""description"": """",
                    ""items"": {},
                    ""format"": """"
                },
                ""Name"": {
                    ""type"": ""array"",
                    ""description"": """",
                    ""items"": {
                        ""type"": ""byte""
                    },
                    ""format"": """"
                }
            }
        }
    }
}`,}
",24714
423,40331761,2>&1,4
424,40331761,"$ ./gentestdata -i 5 -d -l -n 12 -w 32 -a 'Lorem ipsum dolor sit amet'
     1 Lorem ipsum dolor sit am
     2 Lorem ipsum dolor sit am
     3 Lorem ipsum dolor sit am
     4 Lorem ipsum dolor sit am
     5 Lorem ipsum dolor sit am
     6 Lorem ipsum dolor sit am
     7 Lorem ipsum dolor sit am
     8 Lorem ipsum dolor sit am
     9 Lorem ipsum dolor sit am
    10 Lorem ipsum dolor sit am
    11 Lorem ipsum dolor sit am
    12 Lorem ipsum dolor sit am

$ # note that two of the lines were output to stderr
$ ./gentestdata -i 5 -d -l -n 12 -w 32 -a 'Lorem ipsum dolor sit amet' 1>/dev/null
     5 Lorem ipsum dolor sit am
    10 Lorem ipsum dolor sit am
",656
425,40331761,"$ ./sshx $(pwd)/gentestdata -i 5 -d -l -n 12 -w 32 -a 'Lorem ipsum dolor sit amet'
     1 Lorem ipsum dolor sit am
     2 Lorem ipsum dolor sit am
     3 Lorem ipsum dolor sit am
     4 Lorem ipsum dolor sit am
     6 Lorem ipsum dolor sit am
     7 Lorem ipsum dolor sit am
     8 Lorem ipsum dolor sit am
     9 Lorem ipsum dolor sit am
    11 Lorem ipsum dolor sit am
    12 Lorem ipsum dolor sit am
     5 Lorem ipsum dolor sit am
    10 Lorem ipsum dolor sit am
",467
426,40331761,"// Simple demonstration of how I thought that I could capture interleaved
// stdout and stderr output generated during go ssh.Session to model the
// bash 2>&1 redirection behavior.
package main

import (
    ""bufio""
    ""fmt""
    ""io""
    ""log""
    ""os""
    ""os/signal""
    ""runtime""
    ""strings""
    ""syscall""

    ""golang.org/x/crypto/ssh""
    ""golang.org/x/crypto/ssh/terminal""
)

func main() {
    user := strings.TrimSpace(os.Getenv(""LOGNAME""))
    auth := getPassword(fmt.Sprintf(""%v's password: "", user))
    addr := ""localhost:22""
    if len(os.Args) > 1 {
        cmd := getCmd(os.Args[1:])
        config := &ssh.ClientConfig{
            User: user,
            Auth: []ssh.AuthMethod{
                ssh.Password(auth),
            },
        }
        exec(cmd, addr, config)
    }
}

// Execute the command.
func exec(cmd string, addr string, config *ssh.ClientConfig) {
    // Create the connection.
    conn, err := ssh.Dial(""tcp"", addr, config)
    check(err)
    session, err := conn.NewSession()
    check(err)
    defer session.Close()

    // Collect the output from stdout and stderr.
    // The idea is to duplicate the shell IO redirection
    // 2>&1 where both streams are interleaved.
    stdoutPipe, err := session.StdoutPipe()
    check(err)
    stderrPipe, err := session.StderrPipe()
    check(err)
    outputReader := io.MultiReader(stdoutPipe, stderrPipe)
    outputScanner := bufio.NewScanner(outputReader)

    // Start the session.
    err = session.Start(cmd)
    check(err)

    // Capture the output asynchronously.
    outputLine := make(chan string)
    outputDone := make(chan bool)
    go func(scan *bufio.Scanner, line chan string, done chan bool) {
        defer close(line)
        defer close(done)
        for scan.Scan() {
            line <- scan.Text()
        }
        done <- true
    }(outputScanner, outputLine, outputDone)

    // Use a custom wait.
    outputBuf := """"
    running := true
    for running {
        select {
        case <-outputDone:
            running = false
        case line := <-outputLine:
            outputBuf += line + ""\n""
        }
    }
    session.Close()

    // Output the data.
    fmt.Print(outputBuf)
}

func check(e error) {
    if e != nil {
        _, _, lineno, _ := runtime.Caller(1)
        log.Fatalf(""ERROR:%v %v"", lineno, e)
    }
}

// Convert a slice of tokens to a command string.
// It inserts quotes where necessary.
func getCmd(args []string) (cmd string) {
    cmd = """"
    for i, token := range args {
        if i > 0 {
            cmd += "" ""
        }
        cmd += quote(token)
    }
    return
}

// Quote an individual token.
// Very simple, not suitable for production.
func quote(token string) string {
    q := false
    r := """"
    for _, c := range token {
        switch c {
        case '""':
            q = true
            r += ""\""""
        case ' ', '\t':
            q = true
        }
        r += string(c)
    }
    if q {
        r = ""\"""" + r + ""\""""
    }
    return r
}

func getPassword(prompt string) string {
    // Get the initial state of the terminal.
    initialTermState, e1 := terminal.GetState(syscall.Stdin)
    if e1 != nil {
        panic(e1)
    }

    // Restore it in the event of an interrupt.
    // CITATION: Konstantin Shaposhnikov - https://groups.google.com/forum/#!topic/golang-nuts/kTVAbtee9UA
    c := make(chan os.Signal)
    signal.Notify(c, os.Interrupt, os.Kill)
    go func() {
        <-c
        _ = terminal.Restore(syscall.Stdin, initialTermState)
        os.Exit(1)
    }()

    // Now get the password.
    fmt.Print(prompt)
    p, err := terminal.ReadPassword(syscall.Stdin)
    fmt.Println("""")
    if err != nil {
        panic(err)
    }

    // Stop looking for ^C on the channel.
    signal.Stop(c)

    // Return the password as a string.
    return string(p)
}
",3840
427,40331761,"// Execute the command.
func exec(cmd string, addr string, config *ssh.ClientConfig) {
    // Create the connection.
    conn, err := ssh.Dial(""tcp"", addr, config)
    check(err)
    session, err := conn.NewSession()
    check(err)
    defer session.Close()

    // Run the command.
    b, err := session.CombinedOutput(cmd)
    check(err)

    // Output the data.
    outputBuf := string(b)
    fmt.Print(outputBuf)
}
",419
428,40331761,"     5 9FqBZonjaaWDcXMm8biABker
    10 zMd1JTT3ZGR5mEuJOaJCo9AZ
     1 bPlNFGdSC2wd8f2QnFhk5A84
     2 H9H2FHFuvUs9Jz8UvBHv3Vc5
     3 wsp2nChCIwVQztA2n95rXrtz
     4 eDZ0tHBxFq6Pysq3N267L1vq
     6 DF2EsjYyTQWCfIuilZxV2FCn
     7 fGOILa0u1wXnEw1GDGuvdSew
     8 fj84Qyu6uRn8CTECWzT5s4ZJ
     9 KykqOn91fMwNqsk2Wrc5uhk2
    11 0p7opMMsnA87D6TSTAXY5NAC
    12 HYixe6pj0dHuKlxQyyNenUNQ
",384
429,40331761,"$ # Interleaved on the terminal.
$ /user/jlinoff/bin/gentestdata -l -i 5 -w 32 -n 12
     1 bPlNFGdSC2wd8f2QnFhk5A84
     2 H9H2FHFuvUs9Jz8UvBHv3Vc5
     3 wsp2nChCIwVQztA2n95rXrtz
     4 eDZ0tHBxFq6Pysq3N267L1vq
     5 9FqBZonjaaWDcXMm8biABker
     6 DF2EsjYyTQWCfIuilZxV2FCn
     7 fGOILa0u1wXnEw1GDGuvdSew
     8 fj84Qyu6uRn8CTECWzT5s4ZJ
     9 KykqOn91fMwNqsk2Wrc5uhk2
    10 zMd1JTT3ZGR5mEuJOaJCo9AZ
    11 0p7opMMsnA87D6TSTAXY5NAC
    12 HYixe6pj0dHuKlxQyyNenUNQ
",469
430,40331761,"$ ssh hqxsv-cmdev3-jlinoff /user/jlinoff/bin/gentestdata -l -i 5 -w 32 -n 12
     1 bPlNFGdSC2wd8f2QnFhk5A84
     2 H9H2FHFuvUs9Jz8UvBHv3Vc5
     3 wsp2nChCIwVQztA2n95rXrtz
     4 eDZ0tHBxFq6Pysq3N267L1vq
     6 DF2EsjYyTQWCfIuilZxV2FCn
     7 fGOILa0u1wXnEw1GDGuvdSew
     8 fj84Qyu6uRn8CTECWzT5s4ZJ
     9 KykqOn91fMwNqsk2Wrc5uhk2
    11 0p7opMMsnA87D6TSTAXY5NAC
    12 HYixe6pj0dHuKlxQyyNenUNQ
     5 9FqBZonjaaWDcXMm8biABker
    10 zMd1JTT3ZGR5mEuJOaJCo9AZ
",461
431,40511495,"2016-11-09T03:06:41.240-0500 I JOURNAL  [journal writer] warning couldn't write to / rename file /data/data/db/journal/prealloc.2: Couldn't open directory '/data/data/db/journal' for flushing: errno:24 Too many open files
2016-11-09T03:06:41.240-0500 I JOURNAL  [journal writer] warning exception opening journal file couldn't open file /data/data/db/journal/j._213 for writing errno:9 Bad file descriptor
2016-11-09T03:06:41.240-0500 I JOURNAL  [journal writer] error exception in dur::journal couldn't open file /data/data/db/journal/j._213 for writing errno:9 Bad file descriptor
2016-11-09T03:06:41.242-0500 F JOURNAL  [journal writer] dbexception in journalWriterThread causing immediate shutdown: 13516 couldn't open file /data/data/db/journal/j._213 for writing errno:9 Bad file descriptor
2016-11-09T03:06:41.242-0500 I -        [journal writer] Invariant failure false src/mongo/db/storage/mmap_v1/dur_journal_writer.cpp 258
2016-11-09T03:06:41.246-0500 I JOURNAL  [durability] warning couldn't write to / rename file /data/data/db/journal/prealloc.2: couldn't open file /data/data/db/journal/prealloc.2 for writing errno:9 Bad file descriptor
2016-11-09T03:06:41.246-0500 F JOURNAL  [durability] dbexception in durThread causing immediate shutdown: 13516 couldn't open file /data/data/db/journal/j._213 for writing errno:9 Bad file descriptor
2016-11-09T03:06:41.246-0500 I -        [durability] Invariant failure false src/mongo/db/storage/mmap_v1/dur.cpp 862
2016-11-09T03:06:41.246-0500 I CONTROL  [journal writer]
 0xf51949 0xef1671 0xed6192 0xd17613 0xf9f9b4 0x7fd09697d184 0x7fd09544337d
----- BEGIN BACKTRACE -----
{""backtrace"":[{""b"":""400000"",""o"":""B51949""},{""b"":""400000"",""o"":""AF1671""},{""b"":""400000"",""o"":""AD6192""},{""b"":""400000"",""o"":""917613""},{""b"":""400000"",""o"":""B9F9B4""},{""b"":""7FD096975000"",""o"":""8184""},{""b"":""7FD095349000"",""o"":""FA37D""}],""processInfo"":{ ""mongodbVersion"" : ""3.0.3"", ""gitVersion"" : ""b40106b36eecd1b4407eb1ad1af6bc60593c6105"", ""uname"" : { ""sysname"" : ""Linux"", ""release"" : ""3.13.0-54-generic"", ""version"" : ""#91-Ubuntu SMP Tue May 26 19:15:08 UTC 2015"", ""machine"" : ""x86_64"" }, ""somap"" : [ { ""elfType"" : 2, ""b"" : ""400000"", ""buildId"" : ""F56F80CB96B4DBFC070BEB0ADAC7D6B274BFC6B1"" }, { ""b"" : ""7FFF14FD0000"", ""elfType"" : 3, ""buildId"" : ""1C0D0A18FF043EED9EE11DB5E5E90A3F74729341"" }, { ""b"" : ""7FD096975000"", ""path"" : ""/lib/x86_64-linux-gnu/libpthread.so.0"", ""elfType"" : 3, ""buildId"" : ""31E9F21AE8C10396171F1E13DA15780986FA696C"" }, { ""b"" : ""7FD096716000"", ""path"" : ""/lib/x86_64-linux-gnu/libssl.so.1.0.0"", ""elfType"" : 3, ""buildId"" : ""74864DB9D5F69D39A67E4755012FB6573C469B3D"" }, { ""b"" : ""7FD09633A000"", ""path"" : ""/lib/x86_64-linux-gnu/libcrypto.so.1.0.0"", ""elfType"" : 3, ""buildId"" : ""AAE7CFF8351B730830BDBCE0DCABBE06574B7144"" }, { ""b"" : ""7FD096132000"", ""path"" : ""/lib/x86_64-linux-gnu/librt.so.1"", ""elfType"" : 3, ""buildId"" : ""E2A6DD5048A0A051FD61043BDB69D8CC68192AB7"" }, { ""b"" : ""7FD095F2E000"", ""path"" : ""/lib/x86_64-linux-gnu/libdl.so.2"", ""elfType"" : 3, ""buildId"" : ""DA9B8C234D0FE9FD8CAAC8970A7EC1B6C8F6623F"" }, { ""b"" : ""7FD095C2A000"", ""path"" : ""/usr/lib/x86_64-linux-gnu/libstdc++.so.6"", ""elfType"" : 3, ""buildId"" : ""76190E922AF7457D078F75C9B15FA184E83EB506"" }, { ""b"" : ""7FD095924000"", ""path"" : ""/lib/x86_64-linux-gnu/libm.so.6"", ""elfType"" : 3, ""buildId"" : ""D144258E614900B255A31F3FD2283A878670D5BC"" }, { ""b"" : ""7FD09570E000"", ""path"" : ""/lib/x86_64-linux-gnu/libgcc_s.so.1"", ""elfType"" : 3, ""buildId"" : ""36311B4457710AE5578C4BF00791DED7359DBB92"" }, { ""b"" : ""7FD095349000"", ""path"" : ""/lib/x86_64-linux-gnu/libc.so.6"", ""elfType"" : 3, ""buildId"" : ""CF699A15CAAE64F50311FC4655B86DC39A479789"" }, { ""b"" : ""7FD096B93000"", ""path"" : ""/lib64/ld-linux-x86-64.so.2"", ""elfType"" : 3, ""buildId"" : ""D0F537904076D73F29E4A37341F8A449E2EF6CD0"" } ] }}
 mongod(_ZN5mongo15printStackTraceERSo+0x29) [0xf51949]
 mongod(_ZN5mongo10logContextEPKc+0xE1) [0xef1671]
 mongod(_ZN5mongo15invariantFailedEPKcS1_j+0xB2) [0xed6192]
 mongod(_ZN5mongo3dur13JournalWriter20_journalWriterThreadEv+0x953) [0xd17613]
 mongod(+0xB9F9B4) [0xf9f9b4]
 libpthread.so.0(+0x8184) [0x7fd09697d184]
 libc.so.6(clone+0x6D) [0x7fd09544337d]
",4109
432,40511495,"package mongo

import (
    ""time""

    ""gopkg.in/mgo.v2""
)

var (
    // TagDB ...
    TagDB DataStore
    // LogDB ...
    LogDB DataStore
)

func init() {
    TagDB.ConnectToTagserver()
    LogDB.ConnectToLogServer()
}

// DataStore containing a pointer to a mgo session
type DataStore struct {
    Session *mgo.Session
}

// ConnectToTagserver is a helper method that connections to pubgears' tagserver
// database
func (ds *DataStore) ConnectToTagserver() {
    mongoDBDialInfo := &mgo.DialInfo{
        Addrs:    []string{""some_IP""},
        Timeout:  60 * time.Second,
        Database: ""tagserver"",
    }
    sess, err := mgo.DialWithInfo(mongoDBDialInfo)
    if err != nil {
        panic(err)
    }
    sess.SetMode(mgo.Monotonic, true)
    TagDB.Session = sess
}


// database SERVER IN QUESTION
func (ds *DataStore) ConnectToLogServer() {
    mongoDBDialInfo := &mgo.DialInfo{
        Addrs:    []string{""some_IP""}, 
        Timeout:  60 * time.Second,
        Database: ""nginx_logs"",
    }
    sess, err := mgo.DialWithInfo(mongoDBDialInfo)
    if err != nil {
        println(1)
        panic(err)
    }
    sess.SetMode(mgo.Monotonic, true)
    LogDB.Session = sess
}

// Close is a helper method that ensures the session is properly terminated
func (ds *DataStore) Close() {
    ds.Session.Close()
}
",1316
433,40511495,"package models

import (
    ""errors""
    ""fmt""
    ""strconv""
    ""time""

    ""gopkg.in/mgo.v2/bson""

    ""./mongo""
)

// RawRequests ...
type RawRequests struct {
    TagServer   string            `json:""tag_server""`
    Server      string            `json:""server""`
    Slug        string            `json:""slug""`
    Zone        string            `json:""zone""`
    Size        string            `json:""size""`
    Network     string            `json:""network""`
    TagHash     string            `json:""tag_hash""`
    Extra       string            `json:""extra""`
    Logged      time.Time         `json:""logged""`
    Date        string            `json:""date""`
    Hour        int               `json:""hour""`
    QueryParams map[string]string `json:""query_params""`
}

// RawTagRequests ...
type RawTagRequests struct {
    TagServer   string            `json:""tag_server""`
    Server      string            `json:""server""`
    Slug        string            `json:""slug""`
    Zone        string            `json:""zone""`
    Size        string            `json:""size""`
    Network     string            `json:""network""`
    TagHash     string            `json:""tag_hash""`
    Extra       string            `json:""extra""`
    Logged      time.Time         `json:""logged""`
    Date        string            `json:""date""`
    Hour        int               `json:""hour""`
    QueryParams map[string]string `json:""query_params""`
    ChainNext   string            `json:""chain_next""`
}

// LogRequest ...
func LogRequest(tagServer string, server string, slug string, zone string, size string, network string, extra string, tagHash string, queryParams map[string]string) error {
    dbsession := mongo.LogDB.Session.Copy()
    defer dbsession.Close()
    logCollection := dbsession.DB(""nginx_logs"").C(""raw_requests"")
    d := time.Now()
    hour, _, _ := d.Clock()
    year, month, day, _ := formatDate(d.Year(), int(d.Month()), d.Day())
    date := fmt.Sprintf(""%s-%s-%s"", year, month, day)
    return logCollection.Insert(bson.M{""tag_server"": tagServer, ""server"": server, ""slug"": slug, ""zone"": zone, ""size"": size, ""network"": network, ""tag_hash"": tagHash, ""extra"": extra, ""logged"": time.Now(), ""date"": date, ""hour"": hour, ""query_params"": queryParams})
}

// LogTagRequests ...
func LogTagRequests(tagServer string, server string, slug string, zone string, size string, network string, extra string, tagHash string, queryParams map[string]string, chainHash string) error {
    dbsession := mongo.LogDB.Session.Copy()
    defer dbsession.Close()
    logCollection := dbsession.DB(""nginx_logs"").C(""raw_tag_requests"")
    d := time.Now()
    hour, _, _ := d.Clock()
    year, month, day, _ := formatDate(d.Year(), int(d.Month()), d.Day())
    date := fmt.Sprintf(""%s-%s-%s"", year, month, day)
    return logCollection.Insert(bson.M{""tag_server"": tagServer, ""server"": server, ""slug"": slug, ""zone"": zone, ""size"": size, ""network"": network, ""tag_hash"": tagHash, ""extra"": extra, ""logged"": time.Now(), ""date"": date, ""hour"": hour, ""query_params"": queryParams, ""chain_hash"": chainHash})
}

func formatDate(year int, month int, day int) (y string, m string, d string, err error) {
    var tmonth, tday, tyear string
    tyear = strconv.Itoa(year)
    // convert the month and year and replace with the correct number of digits
    if month < 10 {
        tmonth = ""0"" + strconv.Itoa(int(month))
    } else {
        tmonth = strconv.Itoa(int(month))
    }
    if day < 10 {
        tday = ""0"" + strconv.Itoa(int(day))
    } else {
        tday = strconv.Itoa(int(day))
    }
    if len(tmonth) == 2 && len(tday) == 2 && len(tyear) == 4 {
        return tyear, tmonth, tday, nil
    }
    return tyear, tmonth, tday, errors.New(""One of the values passed in does not meet the time format requirement month-day-year --> 1991-01-15"")
}
",3811
434,40511495,"go LogRequest(tagServer, host, site, channel, adSize, network, tagExtra, tagHash, queryParams)",94
435,40770786,go get github.com/go-vgo/robotgo,32
436,40770786,"> G:\ProgramFiles\Go32>go get github.com/go-vgo/robotgo \#
> github.com/go-vgo/robotgo In file included from
> ./mouse/goMouse.h:12:0,
>                  from src\github.com\go-vgo\robotgo\robotgo.go:24: ./mouse/mouse_c.h: In function 'moveMouse': ./mouse/mouse_c.h:116:2:
> error: unknown type name 'INPUT' ./mouse/mouse_c.h:117:12: error:
> request for member 'type' in something not a structure or union
> ./mouse/mouse_c.h:117:20: error: 'INPUT_MOUSE' undeclared (first use
> in this function) ./mouse/mouse_c.h:117:20: note: each undeclared
> identifier is reported only once for each function it appears in
> ./mouse/mouse_c.h:118:12: error: request for member 'mi' in something
> not a structure or union ./mouse/mouse_c.h:119:12: error: request for
> member 'mi' in something not a structure or union
> ./mouse/mouse_c.h:120:12: error: request for member 'mi' in something
> not a structure or union ./mouse/mouse_c.h:121:12: error: request for
> member 'mi' in something not a structure or union
> ./mouse/mouse_c.h:122:12: error: request for member 'mi' in something
> not a structure or union ./mouse/mouse_c.h:123:12: error: request for
> member 'mi' in something not a structure or union ./mouse/mouse_c.h:
> In function 'scrollMouse': ./mouse/mouse_c.h:249:3: error: unknown
> type name 'INPUT' ./mouse/mouse_c.h:293:19: error: request for member
> 'type' in something not a structure or union ./mouse/mouse_c.h:293:27:
> error: 'INPUT_MOUSE' undeclared (first use in this function)
> ./mouse/mouse_c.h:294:19: error: request for member 'mi' in something
> not a structure or union ./mouse/mouse_c.h:295:19: error: request for
> member 'mi' in something not a structure or union
> ./mouse/mouse_c.h:296:19: error: request for member 'mi' in something
> not a structure or union ./mouse/mouse_c.h:297:19: error: request for
> member 'mi' in something not a structure or union
> ./mouse/mouse_c.h:298:19: error: request for member 'mi' in something
> not a structure or union ./mouse/mouse_c.h:299:19: error: request for
> member 'mi' in something not a structure or union In file included
> from ./key/keypress.h:6:0,
>                  from ./key/keypress_c.h:1,
>                  from ./key/goKey.h:14,
>                  from src\github.com\go-vgo\robotgo\robotgo.go:25: ./key/keycode.h: At top level: ./key/keycode.h:249:24: error:
> 'VK_VOLUME_MUTE' undeclared here (not in a function)
> ./key/keycode.h:250:24: error: 'VK_VOLUME_DOWN' undeclared here (not
> in a function) ./key/keycode.h:251:22: error: 'VK_VOLUME_UP'
> undeclared here (not in a function) ./key/keycode.h:252:17: error:
> 'VK_MEDIA_PLAY_PAUSE' undeclared here (not in a function)
> ./key/keycode.h:253:17: error: 'VK_MEDIA_STOP' undeclared here (not in
> a function) ./key/keycode.h:255:17: error: 'VK_MEDIA_PREV_TRACK'
> undeclared here (not in a function) ./key/keycode.h:256:17: error:
> 'VK_MEDIA_NEXT_TRACK' undeclared here (not in a function) In file
> included from ./key/goKey.h:14:0,
>                  from src\github.com\go-vgo\robotgo\robotgo.go:25: ./key/keypress_c.h: In function 'win32KeyEvent':
> ./key/keypress_c.h:57:39: error: 'MAPVK_VK_TO_VSC' undeclared (first
> use in this function) ./key/keypress_c.h:86:8: error:
> 'VK_BROWSER_BACK' undeclared (first use in this function)
> ./key/keypress_c.h:87:8: error: 'VK_BROWSER_FORWARD' undeclared (first
> use in this function) ./key/keypress_c.h:88:8: error:
> 'VK_BROWSER_REFRESH' undeclared (first use in this function)
> ./key/keypress_c.h:89:8: error: 'VK_BROWSER_STOP' undeclared (first
> use in this function) ./key/keypress_c.h:90:8: error:
> 'VK_BROWSER_SEARCH' undeclared (first use in this function)
> ./key/keypress_c.h:91:8: error: 'VK_BROWSER_FAVORITES' undeclared
> (first use in this function) ./key/keypress_c.h:92:8: error:
> 'VK_BROWSER_HOME' undeclared (first use in this function)
> ./key/keypress_c.h:93:8: error: 'VK_LAUNCH_MAIL' undeclared (first use
> in this function) In file included from ./event/goEvent.h:29:0,
>                  from src\github.com\go-vgo\robotgo\robotgo.go:27: ./event/hook/windows/input_c.h: At top level:
> ./event/hook/windows/input_c.h:31:27: error: 'VK_OEM_MINUS' undeclared
> here (not in a function) ./event/hook/windows/input_c.h:32:27: error:
> 'VK_OEM_PLUS' undeclared here (not in a function)
> ./event/hook/windows/input_c.h:70:24: error: 'VK_OEM_COMMA' undeclared
> here (not in a function) ./event/hook/windows/input_c.h:71:24: error:
> 'VK_OEM_PERIOD' undeclared here (not in a function)
> ./event/hook/windows/input_c.h:183:28: error: 'VK_LAUNCH_APP2'
> undeclared here (not in a function)
> ./event/hook/windows/input_c.h:200:30: error: 'VK_BROWSER_HOME'
> undeclared here (not in a function) In file included from
> ./event/goEvent.h:29:0,
>                  from src\github.com\go-vgo\robotgo\robotgo.go:27: ./event/hook/windows/input_c.h:251:32: error: 'VK_BROWSER_SEARCH'
> undeclared here (not in a function)
> ./event/hook/windows/input_c.h:252:30: error: 'VK_BROWSER_FAVORITES'
> undeclared here (not in a function)
> ./event/hook/windows/input_c.h:253:30: error: 'VK_BROWSER_REFRESH'
> undeclared here (not in a function)
> ./event/hook/windows/input_c.h:254:30: error: 'VK_BROWSER_STOP'
> undeclared here (not in a function)
> ./event/hook/windows/input_c.h:255:30: error: 'VK_BROWSER_FORWARD'
> undeclared here (not in a function)
> ./event/hook/windows/input_c.h:256:30: error: 'VK_BROWSER_BACK'
> undeclared here (not in a function)
> ./event/hook/windows/input_c.h:258:30: error: 'VK_LAUNCH_APP1'
> undeclared here (not in a function)
> ./event/hook/windows/input_c.h:259:30: error: 'VK_LAUNCH_MEDIA_SELECT'
> undeclared here (not in a function) In file included from
> ./event/goEvent.h:30:0,
>                  from src\github.com\go-vgo\robotgo\robotgo.go:27: ./event/hook/windows/hook_c.h: In function 'initialize_modifiers':
> ./event/hook/windows/hook_c.h:90:18: error: 'VK_XBUTTON1' undeclared
> (first use in this function) ./event/hook/windows/hook_c.h:91:18:
> error: 'VK_XBUTTON2' undeclared (first use in this function)
> ./event/hook/windows/hook_c.h: In function 'mouse_hook_event_proc':
> ./event/hook/windows/hook_c.h:509:8: error: 'WM_XBUTTONDOWN'
> undeclared (first use in this function)
> ./event/hook/windows/hook_c.h:510:8: error: 'WM_NCXBUTTONDOWN'
> undeclared (first use in this function)
> ./event/hook/windows/hook_c.h:511:37: error: 'XBUTTON1' undeclared
> (first use in this function) ./event/hook/windows/hook_c.h:515:42:
> error: 'XBUTTON2' undeclared (first use in this function)
> ./event/hook/windows/hook_c.h:551:8: error: 'WM_XBUTTONUP' undeclared
> (first use in this function) ./event/hook/windows/hook_c.h:552:8:
> error: 'WM_NCXBUTTONUP' undeclared (first use in this function) In
> file included from ./event/goEvent.h:30:0,
>                  from src\github.com\go-vgo\robotgo\robotgo.go:27: ./event/hook/windows/hook_c.h: In function 'win_hook_event_proc':
> ./event/hook/windows/hook_c.h:616:8: error: 'EVENT_OBJECT_NAMECHANGE'
> undeclared (first use in this function) ./event/hook/windows/hook_c.h:
> In function 'hook_run': ./event/hook/windows/hook_c.h:684:4: error:
> 'EVENT_OBJECT_NAMECHANGE' undeclared (first use in this function)
> ./event/hook/windows/hook_c.h:688:4: error: 'WINEVENT_OUTOFCONTEXT'
> undeclared (first use in this function)
> ./event/hook/windows/hook_c.h:688:28: error: 'WINEVENT_SKIPOWNPROCESS'
> undeclared (first use in this function)
> ./event/hook/windows/hook_c.h:688:26: error: invalid operands to
> binary | (have 'const uint16_t (*)[2]' and 'const uint16_t (*)[2]') In
> file included from ./event/goEvent.h:31:0,
>                  from src\github.com\go-vgo\robotgo\robotgo.go:27: ./event/hook/windows/event_c.h: In function 'hook_post_event':
> ./event/hook/windows/event_c.h:57:2: error: unknown type name 'INPUT'
> ./event/hook/windows/event_c.h:57:32: error: 'INPUT' undeclared (first
> use in this function) ./event/hook/windows/event_c.h:57:39: error:
> invalid operands to binary * (have 'const uint16_t (*)[2]' and 'int')
> ./event/hook/windows/event_c.h:63:24: error: request for member 'type'
> in something not a structure or union
> ./event/hook/windows/event_c.h:63:32: error: 'INPUT_KEYBOARD'
> undeclared (first use in this function)
> ./event/hook/windows/event_c.h:64:24: error: request for member 'ki'
> in something not a structure or union
> ./event/hook/windows/event_c.h:64:27: error: request for member 'wVk'
> in something not a structure or union
> ./event/hook/windows/event_c.h:65:24: error: request for member 'ki'
> in something not a structure or union
> ./event/hook/windows/event_c.h:65:27: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:66:24: error: request for member 'ki'
> in something not a structure or union
> ./event/hook/windows/event_c.h:66:27: error: request for member 'time'
> in something not a structure or union
> ./event/hook/windows/event_c.h:73:22: error: request for member 'type'
> in something not a structure or union
> ./event/hook/windows/event_c.h:73:30: error: 'INPUT_MOUSE' undeclared
> (first use in this function) ./event/hook/windows/event_c.h:74:22:
> error: request for member 'mi' in something not a structure or union
> ./event/hook/windows/event_c.h:74:25: error: request for member 'dx'
> in something not a structure or union
> ./event/hook/windows/event_c.h:75:22: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:75:25: error: request for member 'dy'
> in something not a structure or union
> ./event/hook/windows/event_c.h:76:22: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:76:25: error: request for member
> 'mouseData' in something not a structure or union
> ./event/hook/windows/event_c.h:77:22: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:77:25: error: request for member 'time'
> in something not a structure or union
> ./event/hook/windows/event_c.h:80:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:80:26: error: request for member
> 'mouseData' in something not a structure or union
> ./event/hook/windows/event_c.h:84:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:84:26: error: request for member
> 'mouseData' in something not a structure or union
> ./event/hook/windows/event_c.h:88:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:88:26: error: request for member
> 'mouseData' in something not a structure or union
> ./event/hook/windows/event_c.h:92:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:92:26: error: request for member
> 'mouseData' in something not a structure or union
> ./event/hook/windows/event_c.h:92:39: error: 'XBUTTON1' undeclared
> (first use in this function) ./event/hook/windows/event_c.h:93:23:
> error: request for member 'mi' in something not a structure or union
> ./event/hook/windows/event_c.h:93:26: error: request for member
> 'mouseData' in something not a structure or union
> ./event/hook/windows/event_c.h:93:40: error: 'MOUSEEVENTF_XDOWN'
> undeclared (first use in this function)
> ./event/hook/windows/event_c.h:97:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:97:26: error: request for member
> 'mouseData' in something not a structure or union
> ./event/hook/windows/event_c.h:97:39: error: 'XBUTTON2' undeclared
> (first use in this function) ./event/hook/windows/event_c.h:98:23:
> error: request for member 'mi' in something not a structure or union
> ./event/hook/windows/event_c.h:98:26: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:107:23: error: request for member 'ki'
> in something not a structure or union
> ./event/hook/windows/event_c.h:107:26: error: request for member 'wVk'
> in something not a structure or union
> ./event/hook/windows/event_c.h:108:27: error: request for member 'ki'
> in something not a structure or union
> ./event/hook/windows/event_c.h:108:30: error: request for member 'wVk'
> in something not a structure or union
> ./event/hook/windows/event_c.h:109:24: error: request for member
> 'type' in something not a structure or union
> ./event/hook/windows/event_c.h:110:24: error: request for member 'ki'
> in something not a structure or union
> ./event/hook/windows/event_c.h:110:27: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:111:24: error: request for member 'ki'
> in something not a structure or union
> ./event/hook/windows/event_c.h:111:27: error: request for member
> 'wScan' in something not a structure or union
> ./event/hook/windows/event_c.h:112:24: error: request for member 'ki'
> in something not a structure or union
> ./event/hook/windows/event_c.h:112:27: error: request for member
> 'time' in something not a structure or union
> ./event/hook/windows/event_c.h:123:23: error: request for member 'ki'
> in something not a structure or union
> ./event/hook/windows/event_c.h:123:26: error: request for member 'wVk'
> in something not a structure or union
> ./event/hook/windows/event_c.h:124:27: error: request for member 'ki'
> in something not a structure or union
> ./event/hook/windows/event_c.h:124:30: error: request for member 'wVk'
> in something not a structure or union
> ./event/hook/windows/event_c.h:125:24: error: request for member
> 'type' in something not a structure or union
> ./event/hook/windows/event_c.h:126:24: error: request for member 'ki'
> in something not a structure or union
> ./event/hook/windows/event_c.h:126:27: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:127:24: error: request for member 'ki'
> in something not a structure or union
> ./event/hook/windows/event_c.h:127:27: error: request for member 'wVk'
> in something not a structure or union
> ./event/hook/windows/event_c.h:128:24: error: request for member 'ki'
> in something not a structure or union
> ./event/hook/windows/event_c.h:128:27: error: request for member
> 'wScan' in something not a structure or union
> ./event/hook/windows/event_c.h:129:24: error: request for member 'ki'
> in something not a structure or union
> ./event/hook/windows/event_c.h:129:27: error: request for member
> 'time' in something not a structure or union
> ./event/hook/windows/event_c.h:141:23: error: request for member
> 'type' in something not a structure or union
> ./event/hook/windows/event_c.h:142:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:142:26: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:146:25: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:146:28: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:150:25: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:150:28: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:154:25: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:154:28: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:158:25: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:158:28: error: request for member
> 'mouseData' in something not a structure or union
> ./event/hook/windows/event_c.h:162:25: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:162:28: error: request for member
> 'mouseData' in something not a structure or union
> ./event/hook/windows/event_c.h:168:26: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:168:29: error: request for member
> 'mouseData' in something not a structure or union
> ./event/hook/windows/event_c.h:172:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:172:26: error: request for member 'dx'
> in something not a structure or union
> ./event/hook/windows/event_c.h:173:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:173:26: error: request for member 'dy'
> in something not a structure or union
> ./event/hook/windows/event_c.h:175:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:175:26: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:176:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:176:26: error: request for member
> 'time' in something not a structure or union
> ./event/hook/windows/event_c.h:182:23: error: request for member
> 'type' in something not a structure or union
> ./event/hook/windows/event_c.h:183:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:183:26: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:183:37: error: 'MOUSEEVENTF_XUP'
> undeclared (first use in this function)
> ./event/hook/windows/event_c.h:187:25: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:187:28: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:191:25: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:191:28: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:195:25: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:195:28: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:199:25: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:199:28: error: request for member
> 'mouseData' in something not a structure or union
> ./event/hook/windows/event_c.h:203:25: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:203:28: error: request for member
> 'mouseData' in something not a structure or union
> ./event/hook/windows/event_c.h:209:26: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:209:29: error: request for member
> 'mouseData' in something not a structure or union
> ./event/hook/windows/event_c.h:213:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:213:26: error: request for member 'dx'
> in something not a structure or union
> ./event/hook/windows/event_c.h:214:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:214:26: error: request for member 'dy'
> in something not a structure or union
> ./event/hook/windows/event_c.h:216:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:216:26: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:217:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:217:26: error: request for member
> 'time' in something not a structure or union
> ./event/hook/windows/event_c.h:223:23: error: request for member
> 'type' in something not a structure or union
> ./event/hook/windows/event_c.h:224:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:224:26: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:227:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:227:26: error: request for member
> 'mouseData' in something not a structure or union
> ./event/hook/windows/event_c.h:229:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:229:26: error: request for member 'dx'
> in something not a structure or union
> ./event/hook/windows/event_c.h:230:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:230:26: error: request for member 'dy'
> in something not a structure or union
> ./event/hook/windows/event_c.h:232:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:232:26: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:233:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:233:26: error: request for member
> 'time' in something not a structure or union
> ./event/hook/windows/event_c.h:242:23: error: request for member
> 'type' in something not a structure or union
> ./event/hook/windows/event_c.h:243:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:243:26: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:245:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:245:26: error: request for member 'dx'
> in something not a structure or union
> ./event/hook/windows/event_c.h:246:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:246:26: error: request for member 'dy'
> in something not a structure or union
> ./event/hook/windows/event_c.h:248:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:248:26: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:249:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:249:26: error: request for member
> 'time' in something not a structure or union
> ./event/hook/windows/event_c.h:274:24: error: request for member
> 'type' in something not a structure or union
> ./event/hook/windows/event_c.h:275:24: error: request for member 'ki'
> in something not a structure or union
> ./event/hook/windows/event_c.h:275:27: error: request for member 'wVk'
> in something not a structure or union
> ./event/hook/windows/event_c.h:276:24: error: request for member 'ki'
> in something not a structure or union
> ./event/hook/windows/event_c.h:276:27: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:277:24: error: request for member 'ki'
> in something not a structure or union
> ./event/hook/windows/event_c.h:277:27: error: request for member
> 'time' in something not a structure or union
> ./event/hook/windows/event_c.h:284:22: error: request for member
> 'type' in something not a structure or union
> ./event/hook/windows/event_c.h:285:22: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:285:25: error: request for member 'dx'
> in something not a structure or union
> ./event/hook/windows/event_c.h:286:22: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:286:25: error: request for member 'dy'
> in something not a structure or union
> ./event/hook/windows/event_c.h:287:22: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:287:25: error: request for member
> 'mouseData' in something not a structure or union
> ./event/hook/windows/event_c.h:288:22: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:288:25: error: request for member
> 'time' in something not a structure or union
> ./event/hook/windows/event_c.h:294:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:294:26: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:298:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:298:26: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:302:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:302:26: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:306:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:306:26: error: request for member
> 'mouseData' in something not a structure or union
> ./event/hook/windows/event_c.h:307:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:307:26: error: request for member
> 'dwFlags' in something not a structure or union
> ./event/hook/windows/event_c.h:311:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:311:26: error: request for member
> 'mouseData' in something not a structure or union
> ./event/hook/windows/event_c.h:312:23: error: request for member 'mi'
> in something not a structure or union
> ./event/hook/windows/event_c.h:312:26: error: request for member
> 'dwFlags' in something not a structure or union
> 
> G:\ProgramFiles\Go32>go get github.com/go-vgo/robotgo
",26237
437,40785588,defer profile.Start(profile.CPUProfile).Stop(),46
438,40785588,github.com/pkg/profile,22
439,40785588,"2016/11/24 18:41:24 profile: caught interrupt, stopping profiles
2016/11/24 18:41:24 profile: cpu profiling disabled, /tmp/profile627033993/cpu.pprof
",150
440,40785588,go tool pprof -text /tmp/profile627033993/cpu.pprof,51
441,40785588,"$ go tool pprof -text /tmp/profile627033993/cpu.pprof
12.89s of 16.31s total (79.03%)
Dropped 386 nodes (cum <= 0.08s)
  flat  flat%   sum%        cum   cum%
 7.26s 44.51% 44.51%      7.40s 45.37%  syscall.Syscall
 0.42s  2.58% 47.09%      0.62s  3.80%  runtime.scanobject
 0.38s  2.33% 49.42%      1.09s  6.68%  runtime.mallocgc
 0.32s  1.96% 51.38%      0.32s  1.96%  runtime.memmove
 0.27s  1.66% 53.03%      0.27s  1.66%  runtime.futex
 0.25s  1.53% 54.57%      1.21s  7.42%  runtime.gentraceback
 0.21s  1.29% 55.86%      0.59s  3.62%  runtime.pcvalue
 0.19s  1.16% 57.02%      0.19s  1.16%  runtime.usleep
 0.18s  1.10% 58.12%      0.18s  1.10%  runtime.readvarint
 0.15s  0.92% 59.04%      0.15s  0.92%  runtime.heapBitsForObject
 0.15s  0.92% 59.96%      0.15s  0.92%  runtime.heapBitsSetType
 0.14s  0.86% 60.82%      0.14s  0.86%  runtime._ExternalCode
 0.14s  0.86% 61.68%      0.14s  0.86%  runtime.epollctl
 0.13s   0.8% 62.48%      0.13s   0.8%  runtime.rtsigprocmask
 0.12s  0.74% 63.21%      0.16s  0.98%  runtime.deferreturn
 0.12s  0.74% 63.95%      0.17s  1.04%  runtime.greyobject
 0.12s  0.74% 64.68%      0.16s  0.98%  syscall.Syscall6
 0.11s  0.67% 65.36%      0.40s  2.45%  runtime.adjustframe
 0.11s  0.67% 66.03%      0.11s  0.67%  runtime.adjustpointers
 0.11s  0.67% 66.71%      0.11s  0.67%  runtime.memclr
 0.11s  0.67% 67.38%      0.29s  1.78%  runtime.step
 0.10s  0.61% 68.00%      1.53s  9.38%  runtime.systemstack
 0.07s  0.43% 68.42%      0.21s  1.29%  runtime.mapassign1
 0.07s  0.43% 68.85%      0.25s  1.53%  runtime.rawstring
 0.06s  0.37% 69.22%      0.17s  1.04%  runtime.scanblock
 0.06s  0.37% 69.59%      0.17s  1.04%  time.Time.AppendFormat
 0.05s  0.31% 69.90%      0.12s  0.74%  runtime.casgstatus
 0.05s  0.31% 70.20%      0.10s  0.61%  runtime.lock
 0.05s  0.31% 70.51%      0.56s  3.43%  runtime.newobject
 0.05s  0.31% 70.82%      0.18s  1.10%  runtime.tracebackdefers
 0.04s  0.25% 71.06%      0.75s  4.60%  bufio.(*Reader).ReadSlice
 0.04s  0.25% 71.31%      0.32s  1.96%  fmt.(*pp).doPrintf
 0.04s  0.25% 71.55%      7.22s 44.27%  gitlab.com/kokizzu/gokil/W.LoadSession
 0.04s  0.25% 71.80%      0.32s  1.96%  runtime.scanframeworker
 0.04s  0.25% 72.04%      0.12s  0.74%  runtime.typedmemmove
 0.03s  0.18% 72.23%      0.25s  1.53%  fmt.(*pp).printArg
 0.03s  0.18% 72.41%      0.47s  2.88%  github.com/op/go-logging.(*stringFormatter).Format
 0.03s  0.18% 72.59%      0.67s  4.11%  net.(*netFD).Read
 0.03s  0.18% 72.78%     12.43s 76.21%  net/http.(*conn).serve
 0.03s  0.18% 72.96%      0.11s  0.67%  runtime.(*mcentral).cacheSpan
 0.03s  0.18% 73.15%      0.10s  0.61%  runtime.deferproc.func1
 0.03s  0.18% 73.33%      0.10s  0.61%  runtime.exitsyscall
 0.03s  0.18% 73.51%      0.09s  0.55%  runtime.makemap
 0.03s  0.18% 73.70%      0.72s  4.41%  runtime.markroot
 0.03s  0.18% 73.88%      0.09s  0.55%  runtime.runqgrab
 0.02s  0.12% 74.00%      0.65s  3.99%  github.com/garyburd/redigo/redis.(*conn).readLine
 0.02s  0.12% 74.13%      0.78s  4.78%  github.com/garyburd/redigo/redis.(*conn).readReply
 0.02s  0.12% 74.25%      0.09s  0.55%  github.com/garyburd/redigo/redis.(*conn).writeCommand
 0.02s  0.12% 74.37%      0.39s  2.39%  gitlab.com/kokizzu/gokil/Z.(*TemplateChain).Render
 0.02s  0.12% 74.49%      1.28s  7.85%  main.AuthFilter
 0.02s  0.12% 74.62%      0.32s  1.96%  net.(*netFD).accept
 0.02s  0.12% 74.74%      4.74s 29.06%  net.dialSingle
 0.02s  0.12% 74.86%      0.11s  0.67%  net/http.(*connReader).Read
 0.02s  0.12% 74.98%      0.66s  4.05%  net/http.(*response).finishRequest
 0.02s  0.12% 75.11%      0.49s  3.00%  net/http.readRequest
 0.02s  0.12% 75.23%      0.10s  0.61%  runtime.SetFinalizer
 0.02s  0.12% 75.35%      0.10s  0.61%  runtime.concatstrings
 0.02s  0.12% 75.48%      0.68s  4.17%  runtime.findrunnable
 0.02s  0.12% 75.60%      0.27s  1.66%  runtime.makeslice
 0.02s  0.12% 75.72%      0.90s  5.52%  runtime.morestack
 0.02s  0.12% 75.84%      0.12s  0.74%  runtime.newarray
 0.02s  0.12% 75.97%      0.32s  1.96%  runtime.pcdatavalue
 0.02s  0.12% 76.09%      0.27s  1.66%  runtime.rawstringtmp
 0.02s  0.12% 76.21%      0.78s  4.78%  runtime.schedule
 0.02s  0.12% 76.33%      0.57s  3.49%  syscall.read
 0.01s 0.061% 76.39%      0.71s  4.35%  bufio.(*Reader).fill
 0.01s 0.061% 76.46%      1.82s 11.16%  bufio.(*Writer).flush
 0.01s 0.061% 76.52%      0.34s  2.08%  fmt.Sprintf
 0.01s 0.061% 76.58%      5.19s 31.82%  github.com/garyburd/redigo/redis.(*Pool).get
 0.01s 0.061% 76.64%      0.25s  1.53%  github.com/garyburd/redigo/redis.(*Pool).put
 0.01s 0.061% 76.70%      2.14s 13.12%  github.com/garyburd/redigo/redis.(*conn).Do
 0.01s 0.061% 76.76%      0.31s  1.90%  github.com/garyburd/redigo/redis.(*pooledConnection).Close
 0.01s 0.061% 76.82%      1.96s 12.02%  github.com/garyburd/redigo/redis.(*pooledConnection).Do
 0.01s 0.061% 76.89%      0.75s  4.60%  github.com/op/go-logging.(*Logger).Notice
 0.01s 0.061% 76.95%      0.74s  4.54%  github.com/op/go-logging.(*backendFormatter).Log
 0.01s 0.061% 77.01%      0.42s  2.58%  gitlab.com/kokizzu/gokil/W.(*Context).Finish
 0.01s 0.061% 77.07%      0.42s  2.58%  gitlab.com/kokizzu/gokil/W.(*Context).Render
 0.01s 0.061% 77.13%     10.37s 63.58%  gitlab.com/kokizzu/gokil/W.(*Engine).ServeHTTP
 0.01s 0.061% 77.19%      0.10s  0.61%  gitlab.com/kokizzu/gokil/W.(*Session).parseIpAddr
 0.01s 0.061% 77.25%      2.57s 15.76%  gitlab.com/kokizzu/gokil/W.Logger
 0.01s 0.061% 77.31%      0.37s  2.27%  net.(*TCPListener).AcceptTCP
 0.01s 0.061% 77.38%      0.68s  4.17%  net.(*conn).Read
 0.01s 0.061% 77.44%      1.62s  9.93%  net.(*conn).Write
 0.01s 0.061% 77.50%      4.62s 28.33%  net.(*netFD).connect
 0.01s 0.061% 77.56%      0.10s  0.61%  net.(*pollDesc).init
 0.01s 0.061% 77.62%      4.71s 28.88%  net.doDialTCP
 0.01s 0.061% 77.68%      0.09s  0.55%  net.runtime_pollClose
 0.01s 0.061% 77.74%      0.18s  1.10%  net/http.(*chunkWriter).writeHeader
 0.01s 0.061% 77.81%     10.38s 63.64%  net/http.serverHandler.ServeHTTP
 0.01s 0.061% 77.87%      0.43s  2.64%  net/http.tcpKeepAliveListener.Accept
 0.01s 0.061% 77.93%      0.14s  0.86%  runtime.adjustdefers
 0.01s 0.061% 77.99%      0.11s  0.67%  runtime.callers.func1
 0.01s 0.061% 78.05%      0.23s  1.41%  runtime.convT2E
 0.01s 0.061% 78.11%      0.12s  0.74%  runtime.deferproc
 0.01s 0.061% 78.17%      0.29s  1.78%  runtime.funcspdelta
 0.01s 0.061% 78.23%      0.14s  0.86%  runtime.futexsleep
 0.01s 0.061% 78.30%      0.24s  1.47%  runtime.gcAssistAlloc
 0.01s 0.061% 78.36%      1.18s  7.23%  runtime.gcDrain
 0.01s 0.061% 78.42%      0.20s  1.23%  runtime.gcDrainN
 0.01s 0.061% 78.48%      0.09s  0.55%  runtime.gcMarkTermination
 0.01s 0.061% 78.54%      0.10s  0.61%  runtime.netpoll
 0.01s 0.061% 78.60%      0.88s  5.40%  runtime.newstack
 0.01s 0.061% 78.66%      0.14s  0.86%  runtime.notesleep
 0.01s 0.061% 78.72%      0.64s  3.92%  runtime.park_m
 0.01s 0.061% 78.79%      0.10s  0.61%  runtime.runqsteal
 0.01s 0.061% 78.85%      0.59s  3.62%  runtime.scang
 0.01s 0.061% 78.91%      0.53s  3.25%  runtime.scanstack
 0.01s 0.061% 78.97%      0.14s  0.86%  runtime.startm
 0.01s 0.061% 79.03%      1.67s 10.24%  syscall.Write
     0     0% 79.03%      0.12s  0.74%  bufio.(*Reader).ReadLine
     0     0% 79.03%      1.82s 11.16%  bufio.(*Writer).Flush
     0     0% 79.03%      0.09s  0.55%  bytes.(*Buffer).Write
     0     0% 79.03%      0.14s  0.86%  fmt.Fprintf
     0     0% 79.03%      0.17s  1.04%  github.com/fatih/color.(*Color).SprintfFunc.func1
     0     0% 79.03%      0.17s  1.04%  github.com/fatih/color.BlueString
     0     0% 79.03%      0.17s  1.04%  github.com/fatih/color.printString
     0     0% 79.03%      5.21s 31.94%  github.com/garyburd/redigo/redis.(*Pool).Get
     0     0% 79.03%      0.17s  1.04%  github.com/garyburd/redigo/redis.(*conn).Close
     0     0% 79.03%      4.91s 30.10%  github.com/garyburd/redigo/redis.(*xDialer).Dial
     0     0% 79.03%      4.93s 30.23%  github.com/garyburd/redigo/redis.Dial
     0     0% 79.03%      0.73s  4.48%  github.com/op/go-logging.(*LogBackend).Log
     0     0% 79.03%      0.74s  4.54%  github.com/op/go-logging.(*Logger).log
     0     0% 79.03%      0.49s  3.00%  github.com/op/go-logging.(*Record).Formatted
     0     0% 79.03%      0.74s  4.54%  github.com/op/go-logging.(*moduleLeveled).Log
     0     0% 79.03%      0.46s  2.82%  gitlab.com/kokizzu/gokil/W.(*Engine).StartServer
     0     0% 79.03%      0.30s  1.84%  gitlab.com/kokizzu/gokil/W.(*Session).Save
     0     0% 79.03%      0.73s  4.48%  gitlab.com/kokizzu/gokil/W.(*Session).Touch
     0     0% 79.03%      5.16s 31.64%  gitlab.com/kokizzu/gokil/W.InitSession.func1
     0     0% 79.03%      1.32s  8.09%  gitlab.com/kokizzu/gokil/W.Recover
     0     0% 79.03%      0.73s  4.48%  gitlab.com/kokizzu/gokil/W.Session.ShouldRenew
     0     0% 79.03%      0.09s  0.55%  gitlab.com/kokizzu/gokil/W.hashCookie
     0     0% 79.03%      0.24s  1.47%  gitlab.com/kokizzu/gokil/W.newSession
     0     0% 79.03%      0.27s  1.66%  gitlab.com/kokizzu/gokil/Z.(*TemplateChain).Reload
     0     0% 79.03%      0.24s  1.47%  log.(*Logger).Output
     0     0% 79.03%      0.52s  3.19%  main.Test
     0     0% 79.03%      0.46s  2.82%  main.main
     0     0% 79.03%      4.81s 29.49%  net.(*Dialer).Dial
     0     0% 79.03%      4.81s 29.49%  net.(*Dialer).DialContext
     0     0% 79.03%      0.36s  2.21%  net.(*TCPListener).accept
     0     0% 79.03%      0.58s  3.56%  net.(*conn).Close
     0     0% 79.03%      0.58s  3.56%  net.(*netFD).Close
     0     0% 79.03%      1.61s  9.87%  net.(*netFD).Write
     0     0% 79.03%      0.57s  3.49%  net.(*netFD).decref
     0     0% 79.03%      0.57s  3.49%  net.(*netFD).destroy
     0     0% 79.03%      4.65s 28.51%  net.(*netFD).dial
     0     0% 79.03%      0.10s  0.61%  net.(*netFD).init
     0     0% 79.03%      0.09s  0.55%  net.(*pollDesc).close
     0     0% 79.03%      4.81s 29.49%  net.Dial
     0     0% 79.03%      0.11s  0.67%  net.accept
     0     0% 79.03%      4.74s 29.06%  net.dialSerial
     0     0% 79.03%      4.71s 28.88%  net.dialTCP
     0     0% 79.03%      4.69s 28.76%  net.internetSocket
     0     0% 79.03%      4.69s 28.76%  net.socket
     0     0% 79.03%      0.26s  1.59%  net/http.(*Cookie).String
     0     0% 79.03%      0.46s  2.82%  net/http.(*Server).ListenAndServe
     0     0% 79.03%      0.46s  2.82%  net/http.(*Server).Serve
     0     0% 79.03%      0.18s  1.10%  net/http.(*chunkWriter).Write
     0     0% 79.03%      0.47s  2.88%  net/http.(*conn).close
     0     0% 79.03%      0.61s  3.74%  net/http.(*conn).readRequest
     0     0% 79.03%      0.47s  2.88%  net/http.(*conn).serve.func1
     0     0% 79.03%      0.10s  0.61%  net/http.(*response).WriteHeader
     0     0% 79.03%      0.46s  2.82%  net/http.ListenAndServe
     0     0% 79.03%      0.26s  1.59%  net/http.SetCookie
     0     0% 79.03%      0.40s  2.45%  net/http.checkConnErrorWriter.Write
     0     0% 79.03%      0.16s  0.98%  net/textproto.(*Reader).ReadLine
     0     0% 79.03%      0.16s  0.98%  net/textproto.(*Reader).ReadMIMEHeader
     0     0% 79.03%      0.12s  0.74%  net/textproto.(*Reader).readLineSlice
     0     0% 79.03%      0.20s  1.23%  os.(*File).Write
     0     0% 79.03%      0.20s  1.23%  os.(*File).write
     0     0% 79.03%      0.22s  1.35%  os.Stat
     0     0% 79.03%      0.17s  1.04%  runtime.(*mcache).nextFree
     0     0% 79.03%      0.11s  0.67%  runtime.(*mcache).nextFree.func1
     0     0% 79.03%      0.11s  0.67%  runtime.(*mcache).refill
     0     0% 79.03%      0.13s   0.8%  runtime.Caller
     0     0% 79.03%      0.30s  1.84%  runtime._System
     0     0% 79.03%      0.11s  0.67%  runtime.callers
     0     0% 79.03%      0.86s  5.27%  runtime.copystack
     0     0% 79.03%      0.14s  0.86%  runtime.futexwakeup
     0     0% 79.03%      0.20s  1.23%  runtime.gcAssistAlloc.func1
     0     0% 79.03%      1.07s  6.56%  runtime.gcBgMarkWorker
     0     0% 79.03%      0.09s  0.55%  runtime.gcMarkDone
     0     0% 79.03%      0.19s  1.16%  runtime.gchelper
     0     0% 79.03%        14s 85.84%  runtime.goexit
     0     0% 79.03%      0.16s  0.98%  runtime.goexit0
     0     0% 79.03%      0.46s  2.82%  runtime.main
     0     0% 79.03%      0.59s  3.62%  runtime.markroot.func1
     0     0% 79.03%      0.87s  5.33%  runtime.mcall
     0     0% 79.03%      0.13s   0.8%  runtime.minit
     0     0% 79.03%      0.26s  1.59%  runtime.mstart
     0     0% 79.03%      0.26s  1.59%  runtime.mstart1
     0     0% 79.03%      0.12s  0.74%  runtime.notewakeup
     0     0% 79.03%      0.32s  1.96%  runtime.scanstack.func1
     0     0% 79.03%      0.24s  1.47%  runtime.slicebytetostring
     0     0% 79.03%      0.35s  2.15%  runtime.stopm
     0     0% 79.03%      0.13s   0.8%  runtime.sysmon
     0     0% 79.03%      0.10s  0.61%  syscall.Accept4
     0     0% 79.03%      0.43s  2.64%  syscall.Close
     0     0% 79.03%      4.56s 27.96%  syscall.Connect
     0     0% 79.03%      0.57s  3.49%  syscall.Read
     0     0% 79.03%      0.21s  1.29%  syscall.Stat
     0     0% 79.03%      0.10s  0.61%  syscall.accept4
     0     0% 79.03%      4.56s 27.96%  syscall.connect
     0     0% 79.03%      1.66s 10.18%  syscall.write
     0     0% 79.03%      0.18s  1.10%  time.Time.Format
",13342
442,40796666,"type Employee struct {
        Name               string
        EmpId              string
        Password           string
        PhoneNumber        int32
        EmailAddress       string
        Position           string
        AccessLevel        string
        Gender             string
        MaritalStatus      string
        Nationality        string
        Department         string
        ICNumber           string
        JoinDate           time.Time
        ConfirmationDate   time.Time
        EndDate            time.Time
        AnnualLeave        []*AnnualLeaveInfo
        MedicalLeave       []*MedicalLeaveInfo
        NopayLeave         []*NopayLeaveInfo
        ChildcareLeave     []*ChildcareLeaveInfo
    }

type AnnualLeaveInfo struct {
        Id           int
        Days         float64
        Type         string
        From         time.Time
        To           time.Time
        AppliedDate  time.Time
        Status       string
        Certificate  []*CertificateInfo
    }
",1014
443,40796666,"  ""0"": {
    ""LeaveEmpId"": ""rajeshk"",
    ""Name"": ""rahul"",
    ""LeaveId"": 8,
    ""LeaveType"": ""annualleave"",
    ""LeaveTotal"": 2,
    ""LeaveDays"": 1,
    ""LeaveFrom"": ""2016-12-12T08:00:00+08:00"",
    ""LeaveTo"": ""2016-12-12T08:00:00+08:00"",
    ""LeaveAppliedDate"": ""2016-11-21T10:29:33.713+08:00"",
    ""LeaveStatus"": ""Processing"",
    ""CertificateName"": [
      ""1.pdf"",
      ""2.pdf""
    ]
  },
  ""1"": {
    ""LeaveEmpId"": ""rajeshk"",
    ""LeaveName"": ""Rajesh"",
    ""LeaveId"": 7,
    ""LeaveType"": ""medicalleave"",
    ""LeaveTotal"": 3,
    ""LeaveDays"": 1,
    ""LeaveFrom"": ""2016-12-12T08:00:00+08:00"",
    ""LeaveTo"": ""2016-12-12T08:00:00+08:00"",
    ""LeaveAppliedDate"": ""2016-11-21T10:27:06.12+08:00"",
    ""LeaveStatus"": ""Processing"",
    ""CertificateName"": [
      ""1.pdf"",
      ""2.pdf""
    ]
  },
  ""2"": {
    ""LeaveEmpId"": ""kumar"",
    ""LeaveName"": ""madia"",
    ""LeaveId"": 6,
    ""LeaveType"": ""nopayleave"",
    ""LeaveTotal"": 4,
    ""LeaveDays"": 1,
    ""LeaveFrom"": ""2016-12-12T08:00:00+08:00"",
    ""LeaveTo"": ""2016-12-12T08:00:00+08:00"",
    ""LeaveAppliedDate"": ""2016-11-21T10:11:58.283+08:00"",
    ""LeaveStatus"": ""Processing"",
    ""CertificateName"": [
      ""1.pdf"",
      ""2.pdf""
    ]
  },
  ""3"": {
    ""LeaveEmpId"": ""master"",
    ""LeaveName"": ""kumar"",
    ""LeaveId"": 5,
    ""LeaveType"": ""nopayleave"",
    ""LeaveTotal"": 5,
    ""LeaveDays"": 1,
    ""LeaveFrom"": ""2016-12-12T08:00:00+08:00"",
    ""LeaveTo"": ""2016-12-12T08:00:00+08:00"",
    ""LeaveAppliedDate"": ""2016-11-21T10:02:17.565+08:00"",
    ""LeaveStatus"": ""Processing"",
    ""CertificateName"": [
      ""1.pdf"",
      ""2.pdf""
    ]
  },
  ""4"": {
    ""LeaveEmpId"": ""rajeshk"",
    ""LeaveName"": ""Rajesh"",
    ""LeaveId"": 4,
    ""LeaveType"": ""medicalleave"",
    ""LeaveTotal"": 6,
    ""LeaveDays"": 1,
    ""LeaveFrom"": ""2016-12-12T08:00:00+08:00"",
    ""LeaveTo"": ""2016-12-12T08:00:00+08:00"",
    ""LeaveAppliedDate"": ""2016-11-21T09:52:20.185+08:00"",
    ""LeaveStatus"": ""Processing"",
    ""CertificateName"": [
      ""1.pdf"",
      ""2.pdf""
    ]
  },
  ""5"": {
    ""LeaveEmpId"": ""rajeshk"",
    ""LeaveName"": ""Rajesh"",
    ""LeaveId"": 3,
    ""LeaveType"": ""annualleave"",
    ""LeaveTotal"": 7,
    ""LeaveDays"": 1,
    ""LeaveFrom"": ""2016-12-12T08:00:00+08:00"",
    ""LeaveTo"": ""2016-12-12T08:00:00+08:00"",
    ""LeaveAppliedDate"": ""2016-11-21T09:49:18.702+08:00"",
    ""LeaveStatus"": ""Processing"",
    ""CertificateName"": [
      ""1.pdf"",
      ""2.pdf""
    ]
  },
  ""6"": {
    ""LeaveEmpId"": ""india"",
    ""LeaveName"": ""rahul"",
    ""LeaveId"": 2,
    ""LeaveType"": ""nopayleave"",
    ""LeaveTotal"": 8,
    ""LeaveDays"": 1,
    ""LeaveFrom"": ""2016-12-12T08:00:00+08:00"",
    ""LeaveTo"": ""2016-12-12T08:00:00+08:00"",
    ""LeaveAppliedDate"": ""2016-11-21T09:30:14.99+08:00"",
    ""LeaveStatus"": ""Processing"",
    ""CertificateName"": [
      ""1.pdf"",
      ""2.pdf""
    ]
  },
  ""7"": {
    ""LeaveEmpId"": ""rajeshk"",
    ""LeaveName"": ""Rajesh"",
    ""LeaveId"": 1,
    ""LeaveType"": ""medicalleave"",
    ""LeaveTotal"": 9,
    ""LeaveDays"": 1,
    ""LeaveFrom"": ""2016-12-12T08:00:00+08:00"",
    ""LeaveTo"": ""2016-12-12T08:00:00+08:00"",
    ""LeaveAppliedDate"": ""2016-11-21T09:28:02.785+08:00"",
    ""LeaveStatus"": ""Processing"",
    ""CertificateName"": [
      ""1.pdf"",
      ""2.pdf""
    ]
 }
",3190
444,40796666,"{
    ""_id"" : ObjectId(""58320cec720fed31a3243683""),
    ""name"" : ""Rajesh"",
    ""empid"" : ""rajeshk"",
    ""password"" : ""c1e1a43a3d65ff4d669f2831b9908acb9e2f755c48280e99f0d7a3e92592fa29"",
    ""phonenumber"" : 0,
    ""emailaddress"" : ""example@example.com.sg"",
    ""position"" : ""string"",
    ""accesslevel"" : ""string"",
    ""gender"" : ""string"",
    ""maritalstatus"" : ""string"",
    ""nationality"" : ""india"",
    ""department"" : ""it"",
    ""icnumber"" : ""string"",
    ""childcitizenship"" : ""string"",
    ""joindate"" : ISODate(""2015-11-21T00:00:00.000Z""),
    ""confirmationdate"" : Date(-62135596800000),
    ""enddate"" : Date(-62135596800000),
    ""totalchild"" : 0,
    ""annualleave"" : [ 
        {

            ""id"" : 0,
            ""days"" : 0.0,
            ""type"" : """",
            ""from"" : Date(-62135596800000),
            ""to"" : Date(-62135596800000),
            ""applieddate"" : Date(-62135596800000),
            ""status"" : """",
            ""approveddate"" : Date(-62135596800000),
            ""certificate"" : []
        }
    ],
    ""medicalleave"" : [ 
        {

            ""id"" : 0,
            ""days"" : 0.0,
            ""type"" : """",
            ""from"" : Date(-62135596800000),
            ""to"" : Date(-62135596800000),
            ""applieddate"" : Date(-62135596800000),
            ""status"" : """",
            ""approveddate"" : Date(-62135596800000),
            ""certificate"" : []
        }
    ],
    ""nopayleave"" : [ 
        {
            ""total"" : 10.0,
            ""id"" : 0,
            ""days"" : 0.0,
            ""type"" : """",
            ""from"" : Date(-62135596800000),
            ""to"" : Date(-62135596800000),
            ""applieddate"" : Date(-62135596800000),
            ""status"" : """",
            ""approveddate"" : Date(-62135596800000),
            ""certificate"" : []
        }, 
        {
            ""total"" : 9.0,
            ""id"" : 1,
            ""days"" : 1.0,
            ""mdays"" : 0.0,
            ""type"" : ""nopayleave"",
            ""daytype"" : ""FullDay"",
            ""from"" : ISODate(""2016-12-12T00:00:00.000Z""),
            ""to"" : ISODate(""2016-12-12T00:00:00.000Z""),
            ""applieddate"" : ISODate(""2016-11-21T01:28:02.785Z""),
            ""status"" : ""Processing"",
            ""approveddate"" : Date(-62135596800000),
            ""certificatename"" : """",
            ""certificate"" : [ 
                {
                    ""filename"" : ""Rajesh"",
                    ""filetype"" : "".zip"",
                    ""filesize"" : 1234
                }, 
                {
                    ""filename"" : ""Rajesh"",
                    ""filetype"" : "".zip"",
                    ""filesize"" : 1234
                }
            ]
        }, 
        {
            ""total"" : 8.0,
            ""id"" : 2,
            ""days"" : 1.0,
            ""mdays"" : 0.0,
            ""type"" : ""nopayleave"",
            ""daytype"" : ""FullDay"",
            ""from"" : ISODate(""2016-12-12T00:00:00.000Z""),
            ""to"" : ISODate(""2016-12-12T00:00:00.000Z""),
            ""applieddate"" : ISODate(""2016-11-21T01:30:14.990Z""),
            ""status"" : ""Processing"",
            ""approveddate"" : Date(-62135596800000),
            ""certificatename"" : """",
            ""certificate"" : [ 
                {
                    ""filename"" : ""Rajesh"",
                    ""filetype"" : "".zip"",
                    ""filesize"" : 1234
                }, 
                {
                    ""filename"" : ""Rajesh"",
                    ""filetype"" : "".zip"",
                    ""filesize"" : 1234
                }
            ]
        }, 
        {
            ""total"" : 7.0,
            ""id"" : 3,
            ""days"" : 1.0,
            ""mdays"" : 0.0,
            ""type"" : ""nopayleave"",
            ""daytype"" : ""FullDay"",
            ""from"" : ISODate(""2016-12-12T00:00:00.000Z""),
            ""to"" : ISODate(""2016-12-12T00:00:00.000Z""),
            ""applieddate"" : ISODate(""2016-11-21T01:49:18.702Z""),
            ""status"" : ""Processing"",
            ""approveddate"" : Date(-62135596800000),
            ""certificatename"" : """",
            ""certificate"" : [ 
                {
                    ""filename"" : ""Rajesh"",
                    ""filetype"" : "".zip"",
                    ""filesize"" : 1234
                }, 
                {
                    ""filename"" : ""Rajesh"",
                    ""filetype"" : "".zip"",
                    ""filesize"" : 1234
                }
            ]
        }, 
        {
            ""total"" : 6.0,
            ""id"" : 4,
            ""days"" : 1.0,
            ""mdays"" : 0.0,
            ""type"" : ""nopayleave"",
            ""daytype"" : ""FullDay"",
            ""from"" : ISODate(""2016-12-12T00:00:00.000Z""),
            ""to"" : ISODate(""2016-12-12T00:00:00.000Z""),
            ""applieddate"" : ISODate(""2016-11-21T01:52:20.185Z""),
            ""status"" : ""Processing"",
            ""approveddate"" : Date(-62135596800000),
            ""certificatename"" : """",
            ""certificate"" : [ 
                {
                    ""filename"" : ""Rajesh"",
                    ""filetype"" : "".zip"",
                    ""filesize"" : 1234
                }, 
                {
                    ""filename"" : ""Rajesh"",
                    ""filetype"" : "".zip"",
                    ""filesize"" : 1234
                }
            ]
        }, 
        {
            ""total"" : 5.0,
            ""id"" : 5,
            ""days"" : 1.0,
            ""mdays"" : 0.0,
            ""type"" : ""nopayleave"",
            ""daytype"" : ""FullDay"",
            ""from"" : ISODate(""2016-12-12T00:00:00.000Z""),
            ""to"" : ISODate(""2016-12-12T00:00:00.000Z""),
            ""applieddate"" : ISODate(""2016-11-21T02:02:17.565Z""),
            ""status"" : ""Processing"",
            ""approveddate"" : Date(-62135596800000),
            ""certificatename"" : """",
            ""certificate"" : [ 
                {
                    ""filename"" : ""Rajesh"",
                    ""filetype"" : "".zip"",
                    ""filesize"" : 1234
                }, 
                {
                    ""filename"" : ""Rajesh"",
                    ""filetype"" : "".zip"",
                    ""filesize"" : 1234
                }
            ]
        }, 
        {
            ""total"" : 4.0,
            ""id"" : 6,
            ""days"" : 1.0,
            ""mdays"" : 0.0,
            ""type"" : ""nopayleave"",
            ""daytype"" : ""FullDay"",
            ""from"" : ISODate(""2016-12-12T00:00:00.000Z""),
            ""to"" : ISODate(""2016-12-12T00:00:00.000Z""),
            ""applieddate"" : ISODate(""2016-11-21T02:11:58.283Z""),
            ""status"" : ""Processing"",
            ""approveddate"" : Date(-62135596800000),
            ""certificatename"" : """",
            ""certificate"" : [ 
                {
                    ""filename"" : ""Rajesh"",
                    ""filetype"" : "".zip"",
                    ""filesize"" : 1234
                }, 
                {
                    ""filename"" : ""Rajesh"",
                    ""filetype"" : "".zip"",
                    ""filesize"" : 1234
                }
            ]
        }, 
        {
            ""total"" : 3.0,
            ""id"" : 7,
            ""days"" : 1.0,
            ""mdays"" : 0.0,
            ""type"" : ""nopayleave"",
            ""daytype"" : ""FullDay"",
            ""from"" : ISODate(""2016-12-12T00:00:00.000Z""),
            ""to"" : ISODate(""2016-12-12T00:00:00.000Z""),
            ""applieddate"" : ISODate(""2016-11-21T02:27:06.120Z""),
            ""status"" : ""Processing"",
            ""approveddate"" : Date(-62135596800000),
            ""certificatename"" : """",
            ""certificate"" : [ 
                {
                    ""filename"" : ""Rajesh"",
                    ""filetype"" : "".zip"",
                    ""filesize"" : 1234
                }, 
                {
                    ""filename"" : ""Rajesh"",
                    ""filetype"" : "".zip"",
                    ""filesize"" : 1234
                }
            ]
        }, 
        {
            ""total"" : 2.0,
            ""id"" : 8,
            ""days"" : 1.0,
            ""mdays"" : 0.0,
            ""type"" : ""nopayleave"",
            ""daytype"" : ""FullDay"",
            ""from"" : ISODate(""2016-12-12T00:00:00.000Z""),
            ""to"" : ISODate(""2016-12-12T00:00:00.000Z""),
            ""applieddate"" : ISODate(""2016-11-21T02:29:33.713Z""),
            ""status"" : ""Processing"",
            ""approveddate"" : Date(-62135596800000),
            ""certificatename"" : """",
            ""certificate"" : [ 
                {
                    ""filename"" : ""Rajesh"",
                    ""filetype"" : "".zip"",
                    ""filesize"" : 1234
                }, 
                {
                    ""filename"" : ""Rajesh"",
                    ""filetype"" : "".zip"",
                    ""filesize"" : 1234
                }
            ]
        }
    ],
    ""childcareleave"" : [ 
        {
            ""total"" : 10.0,
            ""id"" : 0,
            ""days"" : 0.0,
            ""type"" : """",
            ""from"" : Date(-62135596800000),
            ""to"" : Date(-62135596800000),
            ""applieddate"" : Date(-62135596800000),
            ""status"" : """",
            ""approveddate"" : Date(-62135596800000),
            ""certificate"" : []
        }
    ],
    ""hospitalleave"" : [ 
        {
            ""total"" : 10.0,
            ""id"" : 0,
            ""days"" : 0.0,
            ""mdays"" : 0.0,
            ""type"" : """",
            ""daytype"" : """",
            ""from"" : Date(-62135596800000),
            ""to"" : Date(-62135596800000),
            ""applieddate"" : Date(-62135596800000),
            ""status"" : """",
            ""approveddate"" : Date(-62135596800000),
            ""certificatename"" : ""string"",
            ""certificate"" : []
        }
    ],
    ""maternityleave"" : [ 
        {
            ""total"" : 10.0,
            ""id"" : 0,
            ""days"" : 0.0,
            ""mdays"" : 0.0,
            ""type"" : """",
            ""daytype"" : """",
            ""from"" : Date(-62135596800000),
            ""to"" : Date(-62135596800000),
            ""applieddate"" : Date(-62135596800000),
            ""status"" : """",
            ""approveddate"" : Date(-62135596800000),
            ""certificate"" : []
        }
    ],
    ""paternityleave"" : [ 
        {
            ""total"" : 0.0,
            ""id"" : 0,
            ""days"" : 0.0,
            ""mdays"" : 0.0,
            ""type"" : """",
            ""daytype"" : """",
            ""from"" : Date(-62135596800000),
            ""to"" : Date(-62135596800000),
            ""applieddate"" : Date(-62135596800000),
            ""status"" : """",
            ""approveddate"" : Date(-62135596800000),
            ""certificate"" : []
        }
    ],
    ""compassionateleave"" : [ 
        {
            ""total"" : 0.0,
            ""id"" : 0,
            ""days"" : 0.0,
            ""type"" : """",
            ""from"" : Date(-62135596800000),
            ""to"" : Date(-62135596800000),
            ""applieddate"" : Date(-62135596800000),
            ""status"" : """",
            ""approveddate"" : Date(-62135596800000),
            ""certificate"" : []
        }
    ],
    ""marriageleave"" : [ 
        {
            ""total"" : 0.0,
            ""id"" : 0,
            ""days"" : 0.0,
            ""type"" : """",
            ""from"" : Date(-62135596800000),
            ""to"" : Date(-62135596800000),
            ""applieddate"" : Date(-62135596800000),
            ""status"" : """",
            ""approveddate"" : Date(-62135596800000),
            ""certificate"" : []
        }
    ],
    ""otherleave"" : []
}
",11312
445,41146449,"var SAMLRESPONSE=""""
",9052
446,41146449,"-----BEGIN CERTIFICATE-----
MIIDoDCCAoigAwIBAgIGAUtCThIbMA0GCSqGSIb3DQEBBQUAMIGQMQswCQYDVQQGEwJVUzETMBEG
A1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEU
MBIGA1UECwwLU1NPUHJvdmlkZXIxETAPBgNVBAMMCGNvbXBhbnl4MRwwGgYJKoZIhvcNAQkBFg1p
bmZvQG9rdGEuY29tMB4XDTE1MDEzMTIzMjIwN1oXDTQ1MDEzMTIzMjMwN1owgZAxCzAJBgNVBAYT
AlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMRYwFAYDVQQHDA1TYW4gRnJhbmNpc2NvMQ0wCwYDVQQK
DARPa3RhMRQwEgYDVQQLDAtTU09Qcm92aWRlcjERMA8GA1UEAwwIY29tcGFueXgxHDAaBgkqhkiG
9w0BCQEWDWluZm9Ab2t0YS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDw/YNy
0wRswQ3mvFL7EWSpYIVukBsoi0LYpXr7Jg/IuYFbVjv9qFRj/eGlrmvnk9hbSLxse2ta+jEyaQpu
I+E/Ll+FiKT/Ck5wRVQO7wfUsVLGEyM7kWr+ExahLL3KHKyr934RYvU160tqWv0uBWHdA9dz+jxy
gVUc03XKdKgwJKHXW6gNlQZAS0ZRal05T0DkUIzEc/LAEyLSfAvTs/DyDY141maIHnivKHUrhEg3
Y4QcE/eCYd77Qqhcf4hAsGpXV/pzfXZZJNjOHKlLIDQ6wuLPyPpkkbIDGF6fXejNEkcZcyj2qiic
yvkM/sTgcZlR0Agzxv7PsuezvbhnyGmfAgMBAAEwDQYJKoZIhvcNAQEFBQADggEBAI/lXoYz4wfF
cMdSO9pH5BSCCXL3tcFk2r7Ut68HrYKKd5xMhRzUX7Pn9ae72ZGgb/GX+tUvGessvaEsexlH7H2l
xq2tneMMwwxP6H2FtDJXhWp4LwLWBhnJuCdY1X9oCVXuXBXh21KiKpWGaCy+EJmJcAHFJLzl/zJ+
xZC713QpbvmIlsXQhSmig6UBw4xFH0+PyrQNskV79/0RzLa9P4wYSH9g6ART2apnVTOS/Zo2lS3c
qGxoBt2jJJIWszIvydk52/ZuuWWAOo7k72n3o7M97qnPdsEEh0KinuF6f6RQwzDy9r+bSEXG8CyI
2wwcKRXlunnmgvBs5oQDbhTGxDY=
-----END CERTIFICATE-----
",1315
447,41209838,"columns := make([]series.Series, df.ncols)
for i, column := range df.columns {
    s := column.Subset(indexes)
    columns[i] = s
}
",132
448,41209838,"columns := make([]series.Series, df.ncols)
var wg sync.WaitGroup
wg.Add(df.ncols)
for i := range df.columns {
    go func(i int) {
        columns[i] = df.columns[i].Subset(indexes)
        wg.Done()
    }(i)
}
wg.Wait()
",221
449,41209838,"benchmark                                          old ns/op      new ns/op      delta
BenchmarkDataFrame_Subset/1000000x20_100           55230          109349         +97.99%
BenchmarkDataFrame_Subset/1000000x20_100-2         51457          67714          +31.59%
BenchmarkDataFrame_Subset/1000000x20_100-4         49845          70141          +40.72%
BenchmarkDataFrame_Subset/1000000x20_1000          518506         518085         -0.08%
BenchmarkDataFrame_Subset/1000000x20_1000-2        476661         311379         -34.67%
BenchmarkDataFrame_Subset/1000000x20_1000-4        505023         316583         -37.31%
BenchmarkDataFrame_Subset/1000000x20_10000         6621116        6314112        -4.64%
BenchmarkDataFrame_Subset/1000000x20_10000-2       7316062        4509601        -38.36%
BenchmarkDataFrame_Subset/1000000x20_10000-4       6483812        8394113        +29.46%
BenchmarkDataFrame_Subset/1000000x20_100000        105341711      106427967      +1.03%
BenchmarkDataFrame_Subset/1000000x20_100000-2      94567729       56778647       -39.96%
BenchmarkDataFrame_Subset/1000000x20_100000-4      91896690       60971444       -33.65%
BenchmarkDataFrame_Subset/1000000x20_1000000       1538680081     1632044752     +6.07%
BenchmarkDataFrame_Subset/1000000x20_1000000-2     1292113119     1100075806     -14.86%
BenchmarkDataFrame_Subset/1000000x20_1000000-4     1282367864     949615298      -25.95%
BenchmarkDataFrame_Subset/100000x20_100            50286          106850         +112.48%
BenchmarkDataFrame_Subset/100000x20_100-2          54537          70492          +29.26%
BenchmarkDataFrame_Subset/100000x20_100-4          58024          76617          +32.04%
BenchmarkDataFrame_Subset/100000x20_1000           541600         625967         +15.58%
BenchmarkDataFrame_Subset/100000x20_1000-2         493894         362894         -26.52%
BenchmarkDataFrame_Subset/100000x20_1000-4         535373         349211         -34.77%
BenchmarkDataFrame_Subset/100000x20_10000          6298063        7678499        +21.92%
BenchmarkDataFrame_Subset/100000x20_10000-2        5827185        4832560        -17.07%
BenchmarkDataFrame_Subset/100000x20_10000-4        8195048        3660077        -55.34%
BenchmarkDataFrame_Subset/100000x20_100000         105108807      82976477       -21.06%
BenchmarkDataFrame_Subset/100000x20_100000-2       92112736       58317114       -36.69%
BenchmarkDataFrame_Subset/100000x20_100000-4       92044966       63469935       -31.04%
BenchmarkDataFrame_Subset/1000x20_10               9741           53365          +447.84%
BenchmarkDataFrame_Subset/1000x20_10-2             9366           36457          +289.25%
BenchmarkDataFrame_Subset/1000x20_10-4             9463           46682          +393.31%
BenchmarkDataFrame_Subset/1000x20_100              50841          103523         +103.62%
BenchmarkDataFrame_Subset/1000x20_100-2            49972          62344          +24.76%
BenchmarkDataFrame_Subset/1000x20_100-4            72014          81808          +13.60%
BenchmarkDataFrame_Subset/1000x20_1000             457799         571292         +24.79%
BenchmarkDataFrame_Subset/1000x20_1000-2           460551         405116         -12.04%
BenchmarkDataFrame_Subset/1000x20_1000-4           462928         416522         -10.02%
BenchmarkDataFrame_Subset/1000x200_10              90125          688443         +663.88%
BenchmarkDataFrame_Subset/1000x200_10-2            85259          392705         +360.60%
BenchmarkDataFrame_Subset/1000x200_10-4            87412          387509         +343.31%
BenchmarkDataFrame_Subset/1000x200_100             486600         1082901        +122.54%
BenchmarkDataFrame_Subset/1000x200_100-2           471154         732304         +55.43%
BenchmarkDataFrame_Subset/1000x200_100-4           542846         659571         +21.50%
BenchmarkDataFrame_Subset/1000x200_1000            5926086        6686480        +12.83%
BenchmarkDataFrame_Subset/1000x200_1000-2          5364091        3986970        -25.67%
BenchmarkDataFrame_Subset/1000x200_1000-4          5904977        4504084        -23.72%
BenchmarkDataFrame_Subset/1000x2000_10             1187297        7800052        +556.96%
BenchmarkDataFrame_Subset/1000x2000_10-2           1217022        3930742        +222.98%
BenchmarkDataFrame_Subset/1000x2000_10-4           1301666        3617871        +177.94%
BenchmarkDataFrame_Subset/1000x2000_100            6942015        10790196       +55.43%
BenchmarkDataFrame_Subset/1000x2000_100-2          6588351        7592847        +15.25%
BenchmarkDataFrame_Subset/1000x2000_100-4          7067226        14391327       +103.63%
BenchmarkDataFrame_Subset/1000x2000_1000           62392457       69560711       +11.49%
BenchmarkDataFrame_Subset/1000x2000_1000-2         57793006       37416703       -35.26%
BenchmarkDataFrame_Subset/1000x2000_1000-4         59572261       58398203       -1.97%

benchmark                                          old allocs     new allocs     delta
BenchmarkDataFrame_Subset/1000000x20_100           41             42             +2.44%
BenchmarkDataFrame_Subset/1000000x20_100-2         41             42             +2.44%
BenchmarkDataFrame_Subset/1000000x20_100-4         41             42             +2.44%
BenchmarkDataFrame_Subset/1000000x20_1000          41             42             +2.44%
BenchmarkDataFrame_Subset/1000000x20_1000-2        41             42             +2.44%
BenchmarkDataFrame_Subset/1000000x20_1000-4        41             42             +2.44%
BenchmarkDataFrame_Subset/1000000x20_10000         41             42             +2.44%
BenchmarkDataFrame_Subset/1000000x20_10000-2       41             42             +2.44%
BenchmarkDataFrame_Subset/1000000x20_10000-4       41             42             +2.44%
BenchmarkDataFrame_Subset/1000000x20_100000        41             42             +2.44%
BenchmarkDataFrame_Subset/1000000x20_100000-2      41             42             +2.44%
BenchmarkDataFrame_Subset/1000000x20_100000-4      41             42             +2.44%
BenchmarkDataFrame_Subset/1000000x20_1000000       41             42             +2.44%
BenchmarkDataFrame_Subset/1000000x20_1000000-2     41             43             +4.88%
BenchmarkDataFrame_Subset/1000000x20_1000000-4     41             46             +12.20%
BenchmarkDataFrame_Subset/100000x20_100            41             42             +2.44%
BenchmarkDataFrame_Subset/100000x20_100-2          41             42             +2.44%
BenchmarkDataFrame_Subset/100000x20_100-4          41             42             +2.44%
BenchmarkDataFrame_Subset/100000x20_1000           41             42             +2.44%
BenchmarkDataFrame_Subset/100000x20_1000-2         41             42             +2.44%
BenchmarkDataFrame_Subset/100000x20_1000-4         41             42             +2.44%
BenchmarkDataFrame_Subset/100000x20_10000          41             42             +2.44%
BenchmarkDataFrame_Subset/100000x20_10000-2        41             42             +2.44%
BenchmarkDataFrame_Subset/100000x20_10000-4        41             42             +2.44%
BenchmarkDataFrame_Subset/100000x20_100000         41             42             +2.44%
BenchmarkDataFrame_Subset/100000x20_100000-2       41             42             +2.44%
BenchmarkDataFrame_Subset/100000x20_100000-4       41             42             +2.44%
BenchmarkDataFrame_Subset/1000x20_10               41             42             +2.44%
BenchmarkDataFrame_Subset/1000x20_10-2             41             42             +2.44%
BenchmarkDataFrame_Subset/1000x20_10-4             41             42             +2.44%
BenchmarkDataFrame_Subset/1000x20_100              41             42             +2.44%
BenchmarkDataFrame_Subset/1000x20_100-2            41             42             +2.44%
BenchmarkDataFrame_Subset/1000x20_100-4            41             42             +2.44%
BenchmarkDataFrame_Subset/1000x20_1000             41             42             +2.44%
BenchmarkDataFrame_Subset/1000x20_1000-2           41             42             +2.44%
BenchmarkDataFrame_Subset/1000x20_1000-4           41             42             +2.44%
BenchmarkDataFrame_Subset/1000x200_10              401            402            +0.25%
BenchmarkDataFrame_Subset/1000x200_10-2            401            402            +0.25%
BenchmarkDataFrame_Subset/1000x200_10-4            401            402            +0.25%
BenchmarkDataFrame_Subset/1000x200_100             401            402            +0.25%
BenchmarkDataFrame_Subset/1000x200_100-2           401            402            +0.25%
BenchmarkDataFrame_Subset/1000x200_100-4           401            402            +0.25%
BenchmarkDataFrame_Subset/1000x200_1000            401            402            +0.25%
BenchmarkDataFrame_Subset/1000x200_1000-2          401            402            +0.25%
BenchmarkDataFrame_Subset/1000x200_1000-4          401            402            +0.25%
BenchmarkDataFrame_Subset/1000x2000_10             4001           4002           +0.02%
BenchmarkDataFrame_Subset/1000x2000_10-2           4001           4002           +0.02%
BenchmarkDataFrame_Subset/1000x2000_10-4           4001           4002           +0.02%
BenchmarkDataFrame_Subset/1000x2000_100            4001           4002           +0.02%
BenchmarkDataFrame_Subset/1000x2000_100-2          4001           4002           +0.02%
BenchmarkDataFrame_Subset/1000x2000_100-4          4001           4002           +0.02%
BenchmarkDataFrame_Subset/1000x2000_1000           4001           4002           +0.02%
BenchmarkDataFrame_Subset/1000x2000_1000-2         4001           4010           +0.22%
BenchmarkDataFrame_Subset/1000x2000_1000-4         4001           4003           +0.05%

benchmark                                          old bytes     new bytes     delta
BenchmarkDataFrame_Subset/1000000x20_100           32400         32416         +0.05%
BenchmarkDataFrame_Subset/1000000x20_100-2         32400         32416         +0.05%
BenchmarkDataFrame_Subset/1000000x20_100-4         32400         32416         +0.05%
BenchmarkDataFrame_Subset/1000000x20_1000          298880        298896        +0.01%
BenchmarkDataFrame_Subset/1000000x20_1000-2        298880        298896        +0.01%
BenchmarkDataFrame_Subset/1000000x20_1000-4        298880        298896        +0.01%
BenchmarkDataFrame_Subset/1000000x20_10000         2971520       2971536       +0.00%
BenchmarkDataFrame_Subset/1000000x20_10000-2       2971520       2971536       +0.00%
BenchmarkDataFrame_Subset/1000000x20_10000-4       2971520       2971536       +0.00%
BenchmarkDataFrame_Subset/1000000x20_100000        29083520      29083536      +0.00%
BenchmarkDataFrame_Subset/1000000x20_100000-2      29083520      29083547      +0.00%
BenchmarkDataFrame_Subset/1000000x20_100000-4      29083542      29083563      +0.00%
BenchmarkDataFrame_Subset/1000000x20_1000000       290121600     290121616     +0.00%
BenchmarkDataFrame_Subset/1000000x20_1000000-2     290121600     290121696     +0.00%
BenchmarkDataFrame_Subset/1000000x20_1000000-4     290121600     290121840     +0.00%
BenchmarkDataFrame_Subset/100000x20_100            32400         32416         +0.05%
BenchmarkDataFrame_Subset/100000x20_100-2          32400         32416         +0.05%
BenchmarkDataFrame_Subset/100000x20_100-4          32400         32416         +0.05%
BenchmarkDataFrame_Subset/100000x20_1000           298880        298896        +0.01%
BenchmarkDataFrame_Subset/100000x20_1000-2         298880        298896        +0.01%
BenchmarkDataFrame_Subset/100000x20_1000-4         298880        298896        +0.01%
BenchmarkDataFrame_Subset/100000x20_10000          2971520       2971536       +0.00%
BenchmarkDataFrame_Subset/100000x20_10000-2        2971520       2971536       +0.00%
BenchmarkDataFrame_Subset/100000x20_10000-4        2971520       2971536       +0.00%
BenchmarkDataFrame_Subset/100000x20_100000         29083520      29083536      +0.00%
BenchmarkDataFrame_Subset/100000x20_100000-2       29083520      29083536      +0.00%
BenchmarkDataFrame_Subset/100000x20_100000-4       29083542      29083553      +0.00%
BenchmarkDataFrame_Subset/1000x20_10               4880          4896          +0.33%
BenchmarkDataFrame_Subset/1000x20_10-2             4880          4896          +0.33%
BenchmarkDataFrame_Subset/1000x20_10-4             4880          4896          +0.33%
BenchmarkDataFrame_Subset/1000x20_100              32400         32416         +0.05%
BenchmarkDataFrame_Subset/1000x20_100-2            32400         32416         +0.05%
BenchmarkDataFrame_Subset/1000x20_100-4            32400         32416         +0.05%
BenchmarkDataFrame_Subset/1000x20_1000             298880        298896        +0.01%
BenchmarkDataFrame_Subset/1000x20_1000-2           298880        298896        +0.01%
BenchmarkDataFrame_Subset/1000x20_1000-4           298880        298896        +0.01%
BenchmarkDataFrame_Subset/1000x200_10              49568         49584         +0.03%
BenchmarkDataFrame_Subset/1000x200_10-2            49568         49584         +0.03%
BenchmarkDataFrame_Subset/1000x200_10-4            49568         49585         +0.03%
BenchmarkDataFrame_Subset/1000x200_100             324768        324784        +0.00%
BenchmarkDataFrame_Subset/1000x200_100-2           324768        324784        +0.00%
BenchmarkDataFrame_Subset/1000x200_100-4           324768        324784        +0.00%
BenchmarkDataFrame_Subset/1000x200_1000            2989568       2989584       +0.00%
BenchmarkDataFrame_Subset/1000x200_1000-2          2989568       2989584       +0.00%
BenchmarkDataFrame_Subset/1000x200_1000-4          2989569       2989588       +0.00%
BenchmarkDataFrame_Subset/1000x2000_10             491072        491088        +0.00%
BenchmarkDataFrame_Subset/1000x2000_10-2           491072        491133        +0.01%
BenchmarkDataFrame_Subset/1000x2000_10-4           491072        491088        +0.00%
BenchmarkDataFrame_Subset/1000x2000_100            3243072       3243088       +0.00%
BenchmarkDataFrame_Subset/1000x2000_100-2          3243074       3243102       +0.00%
BenchmarkDataFrame_Subset/1000x2000_100-4          3243076       3243100       +0.00%
BenchmarkDataFrame_Subset/1000x2000_1000           29891072      29891088      +0.00%
BenchmarkDataFrame_Subset/1000x2000_1000-2         29891086      29891797      +0.00%
BenchmarkDataFrame_Subset/1000x2000_1000-4         29891115      29891167      +0.00%
",14472
450,41209838,rumtime.match_semaphore_signal,30
451,41209838,runtime.GOMAXPROCS(0),21
452,41433528,$.getJSON(),11
453,41433528,$.getJSON,9
454,41433528,"type Office struct {
    Austin struct {
        Balance string
        RM struct {
            Matt struct {
                Balance string
            }
            John struct {
                Balance string
            }
            Blake struct {
                Balance string
            }
            Jamie struct {
                Balance string
            }
        }
    }
    ElPaso struct {
        Balance string
        RM struct {
            Brenda struct {
                Balance string
            }
            Ericka struct {
                Balance string
            }
            Nicole struct {
                Balance string
            }
            Stephanie struct {
                Balance string
            }
            Tricia struct {
                Balance string
            }
            Viri struct {
                Balance string
            }
        }
    }
    ABL struct {
        Balance string
        RM struct {
            BrianABL struct {
                Balance string
            }
            JamieABL struct {
                Balance string
            }
            JohnABL struct {
                Balance string
            }
            MattABL struct {
                Balance string
            }
            TimABL struct {
                Balance string
            }
        }
    }
}

func getData(res http.ResponseWriter, req *http.Request) {
    office := Office{}
    conn, err := sql.Open(""mssql"", ""my db credentials"")
    if err != nil {
        log.Fatal(""Open connection failed:"", err.Error())
    }
    defer conn.Close()

    rows, err := conn.Query(""my select query"")
    if err != nil {
        panic(err.Error())
    }
    for rows.Next() {
        var Austin, ElPaso, ABL, Matt, John, Blake, Jamie, Brenda, Ericka, Nicole, Stephanie, Tricia, Viri, BrianABL, JamieABL, JohnABL, MattABL, TimABL string
        rows.Scan(&Austin, &ElPaso, &ABL, &Matt, &John, &Blake, &Jamie, &Brenda, &Ericka, &Nicole, &Stephanie, &Tricia, &Viri, &BrianABL, &JamieABL, &JohnABL, &MattABL, &TimABL)
        office.Austin.Balance = Austin
            office.Austin.RM.Matt.Balance = Matt
            office.Austin.RM.John.Balance = John
            office.Austin.RM.Blake.Balance = Blake
            office.Austin.RM.Jamie.Balance = Jamie
        office.ElPaso.Balance = ElPaso
            office.ElPaso.RM.Brenda.Balance = Brenda
            office.ElPaso.RM.Ericka.Balance = Ericka
            office.ElPaso.RM.Nicole.Balance = Nicole
            office.ElPaso.RM.Stephanie.Balance = Stephanie
            office.ElPaso.RM.Tricia.Balance = Tricia
            office.ElPaso.RM.Viri.Balance = Viri
        office.ABL.Balance = ABL
            office.ABL.RM.BrianABL.Balance = BrianABL
            office.ABL.RM.JamieABL.Balance = JamieABL
            office.ABL.RM.JohnABL.Balance = JohnABL
            office.ABL.RM.MattABL.Balance = MattABL
            office.ABL.RM.TimABL.Balance = TimABL
    }
    js, err := json.Marshal(office)
    if err != nil {
        http.Error(res, err.Error(), http.StatusInternalServerError)
        return
    }
    res.Header().Set(""Content-Type"", ""text/json"")
    res.Header().Set(""Access-Control-Allow-Origin"", ""*"")
    res.Write(js)
}
",3232
455,41433528,"$.getJSON('/getdata',  function(data) {
    for (office in data) {
        if (data.hasOwnProperty(office)) {
            officeVal = 0;
            officeP = {
                id: 'id_' + officeI,
                name: office,
                color: Highcharts.getOptions().colors[officeI]
            };
            officeBalI = 0;
            for (officeBalance in data[office]) {
                if (data[office].hasOwnProperty(officeBalance)) {
                    officeBalanceP = {
                        id: officeP.id + '_' + officeBalI,
                        name: officeBalance,
                        parent: officeP.id
                    };
                    points.push(officeBalanceP);
                    causeI = 0;
                    for (cause in data[office][country]) {
                        if (data[office][country].hasOwnProperty(cause)) {
                            causeP = {
                                id: countryP.id + '_' + causeI,
                                name: causeName[cause],
                                parent: countryP.id,
                                value: Math.round(+data[office][country][cause])
                            };
                            officeVal += causeP.value;
                            points.push(causeP);
                            causeI = causeI + 1;
                        }
                    }
                    countryI = countryI + 1;
                }
            }
            for (RM in data[office]) {
                if (data[office].hasOwnProperty(RM)) {
                    RMP = {
                        id: officeP.id + '_' + RMI,
                        name: RM,
                        parent: officeP.id
                    };
                    points.push(RMP);
              }
            }
            officeP.value = Math.round(officeVal / countryI);
            points.push(officeP);
            officeI = officeI + 1;
        }
    }
    Highcharts.chart('container', {
        series: [{
            type: 'treemap',
            layoutAlgorithm: 'squarified',
            allowDrillToNode: true,
            animationLimit: 1000,
            dataLabels: {
                enabled: false
            },
            levelIsConstant: false,
            levels: [{
                level: 1,
                dataLabels: {
                    enabled: true
                },
                borderWidth: 3
            }],
            data: points
        }],
        subtitle: {
            text: 'Subtitle test'
        },
        title: {
            text: 'Title test'
        }
    });
});
",2621
456,41433528,"{
    ""Austin"" : {
        ""Balance"" : ""12345.12"",
        ""RM"" : {
            ""Matt"" : {""Balance"" : ""12345.12""},
            ""John"" : {""Balance"" : ""12345.12""},
            ""Blake"" : {""Balance"" : ""12345.12""},
            ""Jamie"" : {""Balance"" : ""12345.12""}
        }
    },
    ""ElPaso"" : {
        ""Balance"" : ""12345.12"",
        ""RM"" : {
            ""Brenda"" : {""Balance"" : ""12345.12""},
            ""Ericka"" : {""Balance"" : ""12345.12""},
            ""Nicole"" : {""Balance"" : ""12345.12""},
            ""Stephanie"" : {""Balance"" : ""12345.12""},
            ""Tricia"" : {""Balance"" : ""12345.12""},
            ""Viri"" : {""Balance"" : ""12345.12""}
        }
    },
    ""ABL"" : {
        ""Balance"" : ""12345.12"",
        ""RM"" : {
            ""BrianABL"" : {""Balance"" : ""12345.12""},
            ""JamieABL"" : {""Balance"" : ""12345.12""},
            ""JohnABL"" : {""Balance"" : ""12345.12""},
            ""MattABL"" : {""Balance"" : ""12345.12""},
            ""TimABL"" : {""Balance"" : ""12345.12""}
        }
    }
}
",982
457,41789384,"game.Projection = mgl32.Perspective(mgl32.DegToRad(45), game.Screen.X / game.Screen.Y, 0.1, 10)
game.Cam = mgl32.LookAtV(mgl32.Vec3{0, 0.1, 10}, mgl32.Vec3{game.Camera.X, game.Camera.Y, 0}, mgl32.Vec3{0, 1, 0})
game.Model = mgl32.Ident4()
",239
458,41789384,"type Map struct {
    game   *Game
    XmlMap *XMLMap

    vao   uint32
    vbo   uint32
    vData []float32

    program        uint32

    texture uint32

    Bounds lib.Rect
}

func NewMap(g *Game) *Map {
    m := &Map{}

    m.game = g

    xmlMap, err := LoadMapFile(""assets/map1.tmx"")
    if err != nil {
        return nil
    }

    m.XmlMap = &xmlMap

    m.Bounds = lib.Rect{
        lib.Vector2{0, 0},
        lib.Vector2{float32(m.Width() - m.XmlMap.TileWidth), float32(m.Height() - m.XmlMap.TileHeight)},
    }

    // program
    program, err := m.newProgram(vsrc, fsrc)
    if err != nil {
        panic(err)
    }

    gl.UseProgram(program)

    // uniforms
    projectionUniform := gl.GetUniformLocation(program, gl.Str(""projection\x00""))
    gl.UniformMatrix4fv(projectionUniform, 1, false, &g.Projection[0])

    cameraUniform := gl.GetUniformLocation(program, gl.Str(""camera\x00""))
    gl.UniformMatrix4fv(cameraUniform, 1, false, &g.Cam[0])

    modelUniform := gl.GetUniformLocation(program, gl.Str(""model\x00""))
    gl.UniformMatrix4fv(modelUniform, 1, false, &g.Model[0])

    textureUniform := gl.GetUniformLocation(program, gl.Str(""tex\x00""))
    gl.Uniform1i(textureUniform, 0)

    gl.BindFragDataLocation(program, 0, gl.Str(""outputColor\x00""))

    // Load the texture
    texture, err := newTexture(""assets/terrain.png"")
    if err != nil {
        log.Fatalln(err)
    }

    m.texture = texture

    // vao
    gl.GenVertexArrays(1, &m.vao)
    gl.BindVertexArray(m.vao)

    // vbo
    gl.GenBuffers(1, &m.vbo)
    gl.BindBuffer(gl.ARRAY_BUFFER, m.vbo)

    // bind program to map
    m.program = program

    return m
}

func (m *Map) Width() int {
    return m.XmlMap.TileWidth * m.XmlMap.Width
}

func (m *Map) Height() int {
    return m.XmlMap.TileHeight * m.XmlMap.Height
}

func vboExtend(vbo []float32, ext []float32) []float32 {
    newVbo := vbo
    for _, value := range ext {
        newVbo = append(newVbo, value)
    }
    return newVbo
}

func (m *Map) GenerateVbo() {
    // reset vbo
    m.vData = make([]float32, 0)

    // loop through each layer
    for _, layer := range m.XmlMap.Layers {

        // convert tiles from long string on csv to array
        tiles := strings.Replace(layer.Data.Contents, ""\n"", """", -1)
        tilesArr := strings.Split(tiles, "","")

        // loop through each tile in layer
        for i, tile := range tilesArr {

            // convert tile to int
            tileNum, err := strconv.Atoi(tile)
            if err != nil {
                fmt.Printf(""[ERROR] Map: Error getting tile id: "", err)
                return
            }

            // skip blank tiles
            if tileNum == 0 {
                continue
            }

            // determine tileset based on tile number
            tileset, err := m.XmlMap.TileSheetByTileId(tileNum)
            if err != nil {
                fmt.Printf(""[ERROR] Map: %s\n"", err)
                return
            }

            // determine position of tile on tilesheet
            tileX := ((tileNum - 1) % tileset.Columns)
            tileY := (tileNum - tileX) / tileset.Columns
            position := lib.Vector2{
                X: float32(tileX),
                Y: float32(tileY),
            }

            // set position of tile
            posX := i % m.XmlMap.Width * m.XmlMap.TileWidth
            posY := (i - (i % m.XmlMap.Width)) / m.XmlMap.Width * m.XmlMap.TileHeight

            // check if tile is visible
            viewport := m.game.Viewport()
            tileRect := lib.Rect{
                lib.Vector2{
                    X: float32(posX),
                    Y: float32(posY),
                },
                lib.Vector2{
                    X: float32(posX + m.XmlMap.TileWidth),
                    Y: float32(posY + m.XmlMap.TileHeight),
                },
            }

            // if tile is not visible, skip it
            if viewport.Overlaps(tileRect) == false {
                continue
            }

            // determine number of tiles for width / height
            tileNumWidth := float32(tileset.Image.Width) / float32(m.XmlMap.TileWidth)
            tileNumHeight := float32(tileset.Image.Height) / float32(m.XmlMap.TileHeight)

            // determine ratio for individual tiles width / height
            tileWidthRatio := 1/tileNumWidth
            tileHeightRatio := 1/tileNumHeight

            // build vbo
            dst := lib.Rect{
                lib.Vector2{0, 0},
                lib.Vector2{float32(m.XmlMap.TileWidth), float32(m.XmlMap.TileHeight)},
            }
            src := lib.Rect{
                lib.Vector2{position.X * tileWidthRatio, position.Y * tileHeightRatio},
                lib.Vector2{position.X * tileWidthRatio + tileWidthRatio, position.Y * tileHeightRatio + tileHeightRatio},
            }

            // build vbo
            coords := []float32{
                // tri 1
                dst.Min.X + float32(posX), dst.Min.Y + float32(posY),
                dst.Max.X + float32(posX), dst.Max.Y + float32(posY),
                dst.Min.X + float32(posX), dst.Max.Y + float32(posY),
                // tex 1
                src.Min.X, src.Min.Y,
                src.Max.X, src.Min.Y,
                src.Max.X, src.Max.Y,
                src.Min.X, src.Max.Y,
                // tri 2
                dst.Min.X + float32(posX), dst.Min.Y + float32(posY),
                dst.Max.X + float32(posX), dst.Min.Y + float32(posY),
                dst.Max.X + float32(posX), dst.Max.Y + float32(posY),
                // tex 2
                src.Min.X, src.Min.Y,
                src.Max.X, src.Min.Y,
                src.Max.X, src.Max.Y,
                src.Min.X, src.Max.Y,
            }

            // add to vbo
            m.vData = vboExtend(m.vData, coords)
        }
    }
}

func (m *Map) newProgram(vsrc string, fsrc string) (uint32, error) {
    // compile vert shader
    vertexShader, err := m.compileShader(vsrc, gl.VERTEX_SHADER)
    if err != nil {
        return 0, err
    }

    // compile frag shader
    fragmentShader, err := m.compileShader(fsrc, gl.FRAGMENT_SHADER)
    if err != nil {
        return 0, err
    }

    // create program
    program := gl.CreateProgram()

    // attach shaders
    gl.AttachShader(program, vertexShader)
    gl.AttachShader(program, fragmentShader)
    defer gl.DetachShader(program, vertexShader)
    defer gl.DetachShader(program, fragmentShader)

    // link program
    gl.LinkProgram(program)

    // check program status
    var status int32
    gl.GetProgramiv(program, gl.LINK_STATUS, &status)
    if status == gl.FALSE {
        var logLength int32
        gl.GetProgramiv(program, gl.INFO_LOG_LENGTH, &logLength)

        log := strings.Repeat(""\x00"", int(logLength+1))
        gl.GetProgramInfoLog(program, logLength, nil, gl.Str(log))

        return 0, fmt.Errorf(""failed to link program: %v"", log)
    }

    // delete shaders
    gl.DeleteShader(vertexShader)
    gl.DeleteShader(fragmentShader)

    // return program
    return program, nil
}

func (m *Map) compileShader(source string, shaderType uint32) (uint32, error) {
    shader := gl.CreateShader(shaderType)

    glsrc, free := gl.Strs(source)
    gl.ShaderSource(shader, 1, glsrc, nil)
    defer free()

    gl.CompileShader(shader)

    var status int32
    gl.GetShaderiv(shader, gl.COMPILE_STATUS, &status)
    if status == gl.FALSE {
        var logLength int32
        gl.GetShaderiv(shader, gl.INFO_LOG_LENGTH, &logLength)

        log := strings.Repeat(""\x00"", int(logLength+1))
        gl.GetShaderInfoLog(shader, logLength, nil, gl.Str(log))

        return 0, fmt.Errorf(""failed to compile %v: %v"", source, log)
    }

    return shader, nil
}

func (m *Map) Render() {
    m.GenerateVbo()
    gl.BufferData(gl.ARRAY_BUFFER, len(m.vData)*4, gl.Ptr(m.vData), gl.STATIC_DRAW)

    gl.UseProgram(m.program)

    projectionUniform := gl.GetUniformLocation(m.program, gl.Str(""projection\x00""))
    gl.UniformMatrix4fv(projectionUniform, 1, false, &m.game.Projection[0])

    cameraUniform := gl.GetUniformLocation(m.program, gl.Str(""camera\x00""))
    gl.UniformMatrix4fv(cameraUniform, 1, false, &m.game.Cam[0])

    modelUniform := gl.GetUniformLocation(m.program, gl.Str(""model\x00""))
    gl.UniformMatrix4fv(modelUniform, 1, false, &m.game.Model[0])

    gl.BindVertexArray(m.vao)

    gl.ActiveTexture(gl.TEXTURE0)
    gl.BindTexture(gl.TEXTURE_2D, m.texture)

    gl.DrawArrays(gl.TRIANGLES, 0, int32(len(m.vData)))
}

func newTexture(file string) (uint32, error) {
    imgFile, err := os.Open(file)
    if err != nil {
        return 0, fmt.Errorf(""texture %q not found on disk: %v"", file, err)
    }
    img, _, err := image.Decode(imgFile)
    if err != nil {
        return 0, err
    }

    rgba := image.NewRGBA(img.Bounds())
    if rgba.Stride != rgba.Rect.Size().X*4 {
        return 0, fmt.Errorf(""unsupported stride"")
    }
    draw.Draw(rgba, rgba.Bounds(), img, image.Point{0, 0}, draw.Src)

    var texture uint32
    gl.GenTextures(1, &texture)
    gl.ActiveTexture(gl.TEXTURE0)
    gl.BindTexture(gl.TEXTURE_2D, texture)
    gl.TexParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)
    gl.TexParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)
    gl.TexParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)
    gl.TexParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)
    gl.TexImage2D(
        gl.TEXTURE_2D,
        0,
        gl.RGBA,
        int32(rgba.Rect.Size().X),
        int32(rgba.Rect.Size().Y),
        0,
        gl.RGBA,
        gl.UNSIGNED_BYTE,
        gl.Ptr(rgba.Pix))

    return texture, nil
}
",9659
459,41789384,"const vsrc = `
#version 410 core

uniform mat4 projection;
uniform mat4 camera;
uniform mat4 model;

in vec2 in_Position;
in vec2 in_TexCoords;
out vec2 ex_TexCoords;

void main(void)
{
    ex_TexCoords = in_TexCoords;
    gl_Position = projection * camera * model * vec4(in_Position, 0, 1);
}
` + ""\x00""
",305
460,41789384,"const fsrc = `
#version 410 core

uniform sampler2D tex;

in vec2 ex_TexCoords;
out vec4 outputColor;

void main()
{
    outputColor = texture(tex, ex_TexCoords);
}
` + ""\x00""
",176
461,41968616,"package main                                                                                                                                                                                                

import (                                                                                                                                                                                                    
    ""fmt""                                                                                                                                                                                                   
    ""reflect""                                                                                                                                                                                               
    ""syscall""                                                                                                                                                                                               
    ""unsafe""                                                                                                                                                                                                
)                                                                                                                                                                                                           

// We should do this because by default strings in Go are read-only.                                                                                                                                                                                                                                                                                                                                                                                                                  
func mprotect(ptr uintptr, w bool) {                                                                                                                                                                        
    // Need to avoid ""EINVAL addr is not a valid pointer,
    // or not a multiple of PAGESIZE.""                                                                                                                   
    start := ptr & ^(uintptr(syscall.Getpagesize() - 1))                                                                                                                                                    

    prot := syscall.PROT_READ                                                                                                                                                                               
    if w {                                                                                                                                                                                                  
        prot |= syscall.PROT_WRITE                                                                                                                                                                          
    }                                                                                                                                                                                                       

    _, _, err := syscall.Syscall(                                                                                                                                                                           
        syscall.SYS_MPROTECT,                                                                                                                                                                               
        start, uintptr(syscall.Getpagesize()),                                                                                                                                                              
        uintptr(prot),                                                                                                                                                                                      
    )                                                                                                                                                                                                       
    if err != 0 {                                                                                                                                                                                           
        panic(err.Error())                                                                                                                                                                                  
    }                                                                                                                                                                                                       
}                                                                                                                                                                                                           

// This function is very, very very very unsafe.                                                                                                                                                            
// Nowhere and never use it!                                                                                                                                                                                
func replaceAtIndex(s string, b byte, i int) {                                                                                                                                                              
    h := *(*reflect.StringHeader)(unsafe.Pointer(&s))                                                                                                                                                       

    mprotect(h.Data, true)                                                                                                                                                                                  
    defer mprotect(h.Data, false)                                                                                                                                                                           

    *(*byte)(unsafe.Pointer(h.Data + uintptr(i))) = b                                                                                                                                                       
}                                                                                                                                                                                                           

func main() {                                                                                                                                                                                               
    h := ""Hello, playground""                                                                                                                                                                                
    replaceAtIndex(h, 'x', 0)                                                                                                                                                                               
    fmt.Println(h)                                                                                                                                                                                          
}
",7663
462,41968616,syscall,7
463,42113153,allpages.com,12
464,42113153,http://www.allpages.com/travel-tourism/political-ideological-organizations/,75
465,42113153,political-ideological-organizations/,36
466,42113153,travel-tourism/,15
467,42113153,parent,6
468,42113153,"package main

import (
        ""fmt""
        ""github.com/PuerkitoBio/goquery""
        ""log""
        ""strconv""
        ""strings""
        ""regexp""
)

const domain = ""http://www.allpages.com/""
const categoryPage = ""category.html""

type Category struct {
        url string
        level uint
        name string
        entries int
        parent *Category
}

type DownloadResult struct {
        doc *goquery.Document
        category *Category
}

const WORKERS = 2
const SEPARATOR = ""§§§""

func main() {

        allCategories := make([]Category, 0)

        downloadChannel := make(chan *Category)
        resultsChannel := make(chan *DownloadResult, 100)

        for w := 1; w <= WORKERS; w++ {
                go worker(downloadChannel, resultsChannel)
        }

        numRequests := 1
        downloadChannel <- &Category{ domain + categoryPage, 0, ""root"", 0, nil }

        for result := range resultsChannel {
                var extractor func(doc *goquery.Document) []string

                if result.category.level == 0 {
                        extractor = topLevelExtractor
                } else if result.category.level == 1 {
                        extractor = secondLevelExtractor
                } else {
                        extractor = thirdLevelExtractor
                }

                categories := extractCategories(result.doc, result.category, extractor)
                allCategories = append(allCategories, *categories...)

                //fmt.Printf(""Appending categories: %v"", *categories)

                fmt.Printf(""total categories = %d, total requests = %d\n"", len(allCategories), numRequests)

                for _, category := range *categories {
                        numRequests += 1
                        downloadChannel <- &category
                }

                // close the channels when there are no more jobs
                if len(allCategories) > numRequests {
                        close(downloadChannel)
                        close(resultsChannel)
                }
        }

        fmt.Println(""Done"")
}

func worker(downloadChannel <-chan *Category, results chan<- *DownloadResult) {
        for target := range downloadChannel {
                fmt.Printf(""Downloading %v (addr %p) ..."", target, &target)

                doc, err := goquery.NewDocument(target.url)
                if err != nil {
                        log.Fatal(err)
                        panic(err)
                }

                fmt.Print(""done \n"")

                results <- &DownloadResult{doc, target}
        }
}

func extractCategories(doc *goquery.Document, parent *Category, extractor func(doc *goquery.Document) []string) *[]Category {

        numberRegex, _ := regexp.Compile(""[0-9,]+"")

        log.Printf(""Extracting subcategories for page %s\n"", parent)

        subCategories := extractor(doc)

        categories := make([]Category, 0)

        for _, subCategory := range subCategories {
                log.Printf(""Got subcategory=%s from parent=%s"", subCategory, parent)
                extracted := strings.Split(subCategory, SEPARATOR)

                numberWithComma := numberRegex.FindString(extracted[2])
                number := strings.Replace(numberWithComma, "","", """", -1)

                numRecords, err := strconv.Atoi(number)
                if err != nil {
                        log.Fatal(err)
                        panic(err)
                }

                var category Category

                level := parent.level + 1

                if parent.level == 0 {
                        category = Category{ domain + extracted[1], level, extracted[0], numRecords, parent }
                } else {
                        log.Printf(""category URL=%s, parent=%s, parent=%v"", extracted[1], parent.url, parent)
                        category = Category{ parent.url + extracted[1], level, extracted[0], numRecords, parent }
                }

                log.Printf(""Appending category=%v (pointer=%p)"", category, &category)

                categories = append(categories, category)
        }

        return &categories
}

func topLevelExtractor(doc *goquery.Document) []string {
        return doc.Find("".cat-listings-td .c-1s-2m-1-td1"").Map(func(i int, s *goquery.Selection) string {
                title := s.Find(""a"").Text()
                url := s.Find(""a"").Map(func(x int, a *goquery.Selection) string {
                        v, _ := a.Attr(""href"")
                        return v
                })
                records := s.Clone().Children().Remove().End().Text()

                //log.Printf(""Item %d: %s, %s - %s\n"", i, title, records, url)

                res := []string{title, url[0], records}
                return strings.Join(res, SEPARATOR)
        })
}

func secondLevelExtractor(doc *goquery.Document) []string {
        return doc.Find("".c-2m-3c-1-table .c-2m-3c-1-td1"").Map(func(i int, s *goquery.Selection) string {
                title := s.Find(""a"").Text()
                url := s.Find(""a"").Map(func(x int, a *goquery.Selection) string {
                        v, _ := a.Attr(""href"")
                        return v
                })
                records := s.Clone().Children().Remove().End().Text()

                //log.Printf(""Item %d: %s, %s - %s\n"", i, title, records, url)

                res := []string{title, url[0], records}
                return strings.Join(res, SEPARATOR)
        })
}

func thirdLevelExtractor(doc *goquery.Document) []string {
        return doc.Find("".c-2m-3c-1-table .c-2m-3c-1-td1"").Map(func(i int, s *goquery.Selection) string {
                title := s.Find(""a"").Text()
                url := s.Find(""a"").Map(func(x int, a *goquery.Selection) string {
                        v, _ := a.Attr(""href"")
                        return v
                })
                records := s.Clone().Children().Remove().End().Text()

                //log.Printf(""Item %d: %s, %s - %s\n"", i, title, records, url)

                res := []string{title, url[0], records}
                return strings.Join(res, SEPARATOR)
        })
}
",6113
469,42680728,"package main

import (
    ""fmt""
    ""os""
    ""encoding/csv""
)




func main() {

    if len(os.Args) < 2 {
        fmt.Printf(""Error: Source file name is required\n"")
        fmt.Println(""Usage:"", os.Args[0], "" \n"")
        return
    }

    file, err := os.Open(os.Args[1])
    if err != nil {
        fmt.Println(""Error:"", err)
        return
    }
    // deferred call to Close() at the end of current method
    defer file.Close()
    //get a new cvsReader for reading file
    reader := csv.NewReader(file)
    //Configure reader options Ref http://golang.org/src/pkg/encoding/csv/reader.go?s=#L81
    reader.Comma = '|'
    reader.Comment = '#'        //Comment character
    reader.FieldsPerRecord = -1 //Number of records per record. Set to Negative value for variable
    reader.TrimLeadingSpace = true

    record, err := reader.Read()
    fmt.Println(record)
    result, _ := reader.ReadAll()
    fmt.Println(result)
    for i := range result {
        // Element count.
        fmt.Printf(""Elements: %v"", len(result[i]))
        fmt.Println()
        // Elements.
        fmt.Println(result[i])
    }

}
",1117
470,42680728,"|http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)14.jpg|http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)1.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)2.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)3.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)4.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)5.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)6.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)7.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)8.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)9.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)10.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)11.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)12.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)13.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)14.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)15.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)16.jpg| it's done|allhomedata;hardware;wf;couple;ITwjob;dsshot;small-tera;forceager;wf;tamed-cat;bg-wf-chicken;cowanimal;tracy-rod;tamed;ds-on-table|wf;dsshots;Hardware;force||976|51703|122|40
|http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)14.jpg|http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)1.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)2.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)3.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)4.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)5.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)6.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)7.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)8.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)9.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)10.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)11.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)12.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)13.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)14.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)15.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)16.jpg| it's done|allhomedata;hardware;wf;couple;ITwjob;dsshot;small-tera;forceager;wf;tamed-cat;bg-wf-chicken;cowanimal;tracy-rod;tamed;ds-on-table|wf;dsshots;Hardware;force||976|51703|122|40
|http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)14.jpg|http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)1.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)2.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)3.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)4.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)5.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)6.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)7.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)8.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)9.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)10.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)11.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)12.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)13.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)14.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)15.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)16.jpg| it's done|allhomedata;hardware;wf;couple;ITwjob;dsshot;small-tera;forceager;wf;tamed-cat;bg-wf-chicken;cowanimal;tracy-rod;tamed;ds-on-table|wf;dsshots;Hardware;force||976|51703|122|40
|http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)14.jpg|http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)1.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)2.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)3.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)4.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)5.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)6.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)7.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)8.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)9.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)10.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)11.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)12.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)13.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)14.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)15.jpg;http://i0.cdn2b.image.testdata.zhncdn.com/videos/201604/28/75158391/original/(m=eaf88daaaa)16.jpg| it's done|allhomedata;hardware;wf;couple;ITwjob;dsshot;small-tera;forceager;wf;tamed-cat;bg-wf-chicken;cowanimal;tracy-rod;tamed;ds-on-table|wf;dsshots;Hardware;force||976|51703|122|40
",7376
471,42755310,"func GetAllHourly(dbsession *mgo.Session, year, month, day, site, size, network, region string, code int) (items []MassAggregation, err error) {
    defer dbsession.Close()
    var match bson.M
    if network == ""openx3"" {
        network = ""openx""
    }

    group := bson.M{""$group"": bson.M{""_id"": bson.M{""aws_region"": ""$aws_region"", ""http_request_status"": ""$http_request_status"", ""hour"": ""$hour"", ""network"": ""$network"", ""site"": ""$site"", ""size"": ""$size"", ""zone"": ""$zone"", ""extra"": ""$extra""}, ""total"": bson.M{""$sum"": ""$count""}}}
    if site == """" && size == """" && network == """" && region == """" && code == -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day}}
    } else if site != """" && size == """" && network == """" && region == """" && code == -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""site"": site}}
    } else if site != """" && size != """" && network == """" && region == """" && code == -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""site"": site, ""size"": size}}
    } else if site != """" && size != """" && network != """" && region == """" && code == -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""site"": site, ""size"": size, ""network"": &bson.RegEx{Pattern: network, Options: ""i""}}}
    } else if site != """" && size != """" && network != """" && region != """" && code == -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""site"": site, ""size"": size, ""network"": &bson.RegEx{Pattern: network, Options: ""i""}, ""aws_region"": region}}
    } else if site != """" && size != """" && network != """" && region != """" && code != -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""site"": site, ""size"": size, ""network"": &bson.RegEx{Pattern: network, Options: ""i""}, ""aws_region"": region, ""http_request_status"": code}}
    } else if site == """" && size != """" && network == """" && region == """" && code == -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""site"": site, ""size"": size}}
    } else if site == """" && size != """" && network != """" && region == """" && code == -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""size"": size, ""network"": &bson.RegEx{Pattern: network, Options: ""i""}}}
    } else if site == """" && size != """" && network != """" && region != """" && code == -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""site"": site, ""size"": size, ""network"": &bson.RegEx{Pattern: network, Options: ""i""}, ""aws_region"": region}}
    } else if site == """" && size == """" && network != """" && region == """" && code == -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""network"": &bson.RegEx{Pattern: network, Options: ""i""}}}
    } else if site == """" && size == """" && network != """" && region != """" && code == -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""network"": &bson.RegEx{Pattern: network, Options: ""i""}, ""aws_region"": region}}
    } else if site == """" && size == """" && network != """" && region != """" && code != -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""network"": &bson.RegEx{Pattern: network, Options: ""i""}, ""aws_region"": region, ""http_request_status"": code}}
    } else if site == """" && size == """" && network == """" && region != """" && code == -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""aws_region"": region}}
    } else if site == """" && size == """" && network == """" && region != """" && code != -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""aws_region"": region, ""http_request_status"": code}}
    } else if site == """" && size == """" && network == """" && region == """" && code != -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""http_request_status"": code}}
    } else if site != """" && size == """" && network == """" && region == """" && code != -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""site"": site, ""http_request_status"": code}}
    } else if site != """" && size == """" && network == """" && region != """" && code == -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""site"": site, ""aws_region"": region}}
    } else if site != """" && size == """" && network != """" && region == """" && code == -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""site"": site, ""network"": &bson.RegEx{Pattern: network, Options: ""i""}}}
    } else if site == """" && size != """" && network == """" && region == """" && code != -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""size"": size, ""http_request_status"": code}}
    } else if site == """" && size != """" && network == """" && region != """" && code == -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""size"": size, ""aws_region"": region}}
    } else if site == """" && size != """" && network != """" && region == """" && code == -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""size"": size, ""network"": &bson.RegEx{Pattern: network, Options: ""i""}}}
    } else if site == """" && size == """" && network != """" && region == """" && code != -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""network"": &bson.RegEx{Pattern: network, Options: ""i""}, ""http_request_status"": code}}
    } else if site == """" && size == """" && network != """" && region != """" && code == -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""network"": &bson.RegEx{Pattern: network, Options: ""i""}, ""aws_region"": region}}
    } else if site != """" && size != """" && network != """" && region == """" && code != -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""network"": &bson.RegEx{Pattern: network, Options: ""i""}, ""size"": size, ""http_request_status"": code}}
    } else if site != """" && size != """" && network == """" && region == """" && code != -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""site"": site, ""size"": size, ""http_request_status"": code}}
    } else if site == """" && size != """" && network != """" && region == """" && code != -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""network"": &bson.RegEx{Pattern: network, Options: ""i""}, ""size"": size, ""http_request_status"": code}}
    } else if site != """" && size == """" && network != """" && region != """" && code == -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""network"": &bson.RegEx{Pattern: network, Options: ""i""}, ""aws_region"": region, ""site"": site}}
    } else if site != """" && size == """" && network != """" && region != """" && code != -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""network"": &bson.RegEx{Pattern: network, Options: ""i""}, ""aws_region"": region, ""site"": site, ""http_request_status"": code}}
    } else if site != """" && size == """" && network == """" && region != """" && code != -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""aws_region"": region, ""site"": site, ""http_request_status"": code}}
    } else if site == """" && size != """" && network != """" && region != """" && code != -1 {
        match = bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day, ""network"": &bson.RegEx{Pattern: network, Options: ""i""}, ""aws_region"": region, ""size"": size, ""http_request_status"": code}}
    }

    operations := []bson.M{match, group}
    err = dbsession.DB(""logs"").C(""prod"").Pipe(operations).All(&items)
    return
}
",7813
472,42755310,"func GetAllHourly(dbsession *mgo.Session, year, month, day, site, size, network, region string, code int) (items []MassAggregation, err error) {
    defer dbsession.Close()
    matches := []bson.M{bson.M{""$match"": bson.M{""year"": year, ""month"": month, ""day"": day}}}
    if network == ""openx3"" {
        network = ""openx""
    }

    if site != """" {
        matches = append(matches, bson.M{""$match"": bson.M{""site"": site}})
    }
    if size != """" {
        matches = append(matches, bson.M{""$match"": bson.M{""size"": size}})
    }
    if region != """" {
        matches = append(matches, bson.M{""$match"": bson.M{""aws_region"": region}})
    }
    if code != -1 {
        matches = append(matches, bson.M{""$match"": bson.M{""http_request_status"": code}})
    }
    if network != """" {
        matches = append(matches, bson.M{""$match"": bson.M{""network"": &bson.RegEx{Pattern: network, Options: ""i""}}})
    }
    group := bson.M{""$group"": bson.M{""_id"": bson.M{""aws_region"": ""$aws_region"", ""http_request_status"": ""$http_request_status"", ""hour"": ""$hour"", ""network"": ""$network"", ""site"": ""$site"", ""size"": ""$size"", ""zone"": ""$zone"", ""extra"": ""$extra""}, ""total"": bson.M{""$sum"": ""$count""}}}
    var operations []bson.M
    for _, match := range matches {
        operations = append(operations, match)
    }
    operations = append(operations, group)
    err = dbsession.DB(""logs"").C(""prod"").Pipe(operations).All(&items)
    return
}
",1414
473,42761866,"listener 8883
cafile /etc/mosquitto/ca_certificates/ca.crt
certfile /etc/mosquitto/certs/server.crt
keyfile /etc/mosquitto/certs/server.key

require_certificate true
",166
474,42761866,"mosquitto_pub -t ""/test"" -m ""test"" --cafile ca/ca.crt --cert certs/client.crt --key certs/client.key -p 8883 -h server.com

mosquitto_sub -t ""/test"" --cafile ca/ca.crt --cert certs/client.crt --key certs/client.key -p 8883 -h server.com
",237
475,42761866,"openssl s_client -connect server.com:8883 -CAfile ca/ca.crt -cert certs/client.crt -key certs/client.key
",105
476,42761866,configureMqttConnection(),25
477,42761866,"tls.LoadX509KeyPair(c.config.CertFile, c.config.KeyFile)",56
478,42761866,connect(backOff int),20
479,42761866,GO start(),10
480,42761866,"package main

import (
    ""crypto/tls""
    ""crypto/x509""
    ""fmt""
    ""io/ioutil""
    ""strings""
    ""time""

    MQTT ""git.eclipse.org/gitroot/paho/org.eclipse.paho.mqtt.golang.git""
    ""linksmart.eu/lc/core/catalog""
    ""linksmart.eu/lc/core/catalog/service""
)

// MQTTConnector provides MQTT protocol connectivity
type MQTTConnector struct {
    config        *MqttProtocol
    clientID      string
    client        *MQTT.Client
    pubCh         chan AgentResponse
    subCh         chan<- DataRequest
    pubTopics     map[string]string
    subTopicsRvsd map[string]string // store SUB topics ""reversed"" to optimize lookup in messageHandler
}

const defaultQoS = 1

func (c *MQTTConnector) start() {
    logger.Println(""MQTTConnector.start()"")

    if c.config.Discover && c.config.URL == """" {
        err := c.discoverBrokerEndpoint()
        if err != nil {
            logger.Println(""MQTTConnector.start() failed to start publisher:"", err.Error())
            return
        }
    }

    // configure the mqtt client
    c.configureMqttConnection()

    // start the connection routine
    logger.Printf(""MQTTConnector.start() Will connect to the broker %v\n"", c.config.URL)
    go c.connect(0)

    // start the publisher routine
    go c.publisher()
}

// reads outgoing messages from the pubCh und publishes them to the broker
func (c *MQTTConnector) publisher() {
    for resp := range c.pubCh {
        if !c.client.IsConnected() {
            logger.Println(""MQTTConnector.publisher() got data while not connected to the broker. **discarded**"")
            continue
        }
        if resp.IsError {
            logger.Println(""MQTTConnector.publisher() data ERROR from agent manager:"", string(resp.Payload))
            continue
        }
        topic := c.pubTopics[resp.ResourceId]
        c.client.Publish(topic, byte(defaultQoS), false, resp.Payload)
        // We dont' wait for confirmation from broker (avoid blocking here!)
        //<-r
        logger.Println(""MQTTConnector.publisher() published to"", topic)
    }
}


func (c *MQTTConnector) stop() {
    logger.Println(""MQTTConnector.stop()"")
    if c.client != nil && c.client.IsConnected() {
        c.client.Disconnect(500)
    }
}

func (c *MQTTConnector) connect(backOff int) {
    if c.client == nil {
        logger.Printf(""MQTTConnector.connect() client is not configured"")
        return
    }
    for {
        logger.Printf(""MQTTConnector.connect() connecting to the broker %v, backOff: %v sec\n"", c.config.URL, backOff)
        time.Sleep(time.Duration(backOff) * time.Second)
        if c.client.IsConnected() {
            break
        }
        token := c.client.Connect()
        token.Wait()
        if token.Error() == nil {
            break
        }
        logger.Printf(""MQTTConnector.connect() failed to connect: %v\n"", token.Error().Error())
        if backOff == 0 {
            backOff = 10
        } else if backOff <= 600 {
            backOff *= 2
        }
    }

    logger.Printf(""MQTTConnector.connect() connected to the broker %v"", c.config.URL)
    return
}

func (c *MQTTConnector) onConnected(client *MQTT.Client) {
    // subscribe if there is at least one resource with SUB in MQTT protocol is configured
    if len(c.subTopicsRvsd) > 0 {
        logger.Println(""MQTTPulbisher.onConnected() will (re-)subscribe to all configured SUB topics"")

        topicFilters := make(map[string]byte)
        for topic, _ := range c.subTopicsRvsd {
            logger.Printf(""MQTTPulbisher.onConnected() will subscribe to topic %s"", topic)
            topicFilters[topic] = defaultQoS
        }
        client.SubscribeMultiple(topicFilters, c.messageHandler)
    } else {
        logger.Println(""MQTTPulbisher.onConnected() no resources with SUB configured"")
    }
}

func (c *MQTTConnector) onConnectionLost(client *MQTT.Client, reason error) {
    logger.Println(""MQTTPulbisher.onConnectionLost() lost connection to the broker: "", reason.Error())

    // Initialize a new client and reconnect
    c.configureMqttConnection()
    go c.connect(0)
}

func (c *MQTTConnector) configureMqttConnection() {
    connOpts := MQTT.NewClientOptions().
        AddBroker(c.config.URL).
        SetClientID(c.clientID).
        SetCleanSession(true).
        SetConnectionLostHandler(c.onConnectionLost).
        SetOnConnectHandler(c.onConnected).
        SetAutoReconnect(false) // we take care of re-connect ourselves

    // Username/password authentication
    if c.config.Username != """" && c.config.Password != """" {
        connOpts.SetUsername(c.config.Username)
        connOpts.SetPassword(c.config.Password)
    }

    // SSL/TLS
    if strings.HasPrefix(c.config.URL, ""ssl"") {
        tlsConfig := &tls.Config{}
        // Custom CA to auth broker with a self-signed certificate
        if c.config.CaFile != """" {
            caFile, err := ioutil.ReadFile(c.config.CaFile)
            if err != nil {
                logger.Printf(""MQTTConnector.configureMqttConnection() ERROR: failed to read CA file %s:%s\n"", c.config.CaFile, err.Error())
            } else {
                tlsConfig.RootCAs = x509.NewCertPool()
                ok := tlsConfig.RootCAs.AppendCertsFromPEM(caFile)
                if !ok {
                    logger.Printf(""MQTTConnector.configureMqttConnection() ERROR: failed to parse CA certificate %s\n"", c.config.CaFile)
                }
            }
        }
        // Certificate-based client authentication
        if c.config.CertFile != """" && c.config.KeyFile != """" {
            cert, err := tls.LoadX509KeyPair(c.config.CertFile, c.config.KeyFile)
            if err != nil {
                logger.Printf(""MQTTConnector.configureMqttConnection() ERROR: failed to load client TLS credentials: %s\n"",
                    err.Error())
            } else {
                tlsConfig.Certificates = []tls.Certificate{cert}
            }
        }

        connOpts.SetTLSConfig(tlsConfig)
    }

    c.client = MQTT.NewClient(connOpts)
}
",5983
481,42784515,"package main

import (
    ""encoding/json""
    ""log""
    ""net""
    ""net/http""
    ""net/http/fcgi""
    ""os""
)

func main() {
    //setup the config
    configFile := ""config.json""
    fd, err := os.Open(configFile)
    if err != nil {
        log.Fatalf(""Can't open config file: %v"", configFile)
    }
    CFG := config{}
    err = json.NewDecoder(fd).Decode(&CFG)
    if err != nil {
        log.Fatalf(""parse config error: %v"", err)
    }

    //init DB connection
    db.InitConnectionInfo(CFG.Database.Host, CFG.Database.Port, CFG.Database.Database, CFG.Database.Username, CFG.Database.Password)

    //register HTTP handler
    sessionHandler := &handlers.SessionHandler{}
    http.Handle(""/sessions"", sessionHandler)
    http.Handle(""/sessions/"", sessionHandler)

    userHandler := &handlers.UserHandler{
        Facebook:      &oa.OAuth{AppId: CFG.Facebook.Key, Secret: CFG.Facebook.Secret},
        Sina:          &oa.OAuth{AppId: CFG.Sina.Key, Secret: CFG.Sina.Secret},
        Google:        &oa.OAuth{AppId: CFG.Google.Key, Secret: CFG.Google.Secret},
        Tencent:       &oa.OAuth{AppId: CFG.Tencent.Key, Secret: CFG.Tencent.Secret},
        Mixpanel:      &hu.Share{Token: CFG.Mixpanel.Token},
        FacebookShare: &hu.Share{Token: CFG.Facebook.Token},
        SinaShare:     &hu.Share{Token: CFG.Sina.Token},
        GoogleShare:   &hu.Share{Token: CFG.Google.Token},
        TencentShare:  &hu.Share{Token: CFG.Tencent.Token},
    }
    http.Handle(""/users"", userHandler)
    http.Handle(""/users/"", userHandler)

    //and so on ...

    //run server
    log.Println(""start listen: "", CFG.FcgiAddr)
    l, _ := net.Listen(""tcp"", CFG.FcgiAddr)
    log.Fatalf(""server error is %v"", fcgi.Serve(l, nil))
    //@@select {}
    log.Println(""end listen"")
}
",1770
482,42784515,/users/1234567/places,21
483,42784515,/users/1234567,14
484,42784515,{blank data},12
485,42784515,{normal user(1234567) data},27
486,42784515,{normal user(1234567) data},27
487,42784515,{normal user(1234567) data},27
488,42784515,"
{
    ""meta"": {
        ""code"": 200,
        ""text"": ""OK""
    },
    ""data"": {
        ""count"": 21,
        ""place-tag-maps"": [{
            ""id"": ""95842310160384"",
            ""place-id"": ""95551731663150"",
            ""tag-id"": ""95551579750669"",
            ""ct"": ""2014-07-01T09:07:28Z""
        }, {
            ""id"": ""95842310160385"",
            ""place-id"": ""95551731663150"",
            ""tag-id"": ""95551579750694"",
            ""ct"": ""2015-01-15T17:41:23Z""
        }, {
            ""id"": ""96262389694470"",
            ""place-id"": ""95551731663150"",
            ""tag-id"": ""95910120456455"",
            ""ct"": ""2016-07-18T13:11:39Z""
        }, ...],
        ""places"": [{
            ""id"": ""95551731663150"",
            ""name"": ""Kam Fung Restaurant"",
            ""address"": ""G/F, 41 Spring Garden Ln"",
            ""coordinate"": {
                ""latitude"": 22.275576,
                ""longitude"": 114.172582
            },
            ""telephone"": ""+852 2572 0526"",
            ""city-id"": ""95530516807703"",
            ""city"": ""Hong Kong"",
            ""country"": ""Hong Kong"",
            ""type"": ""4sq"",
            ""ref-id"": ""4b1613f8f964a520cdb623e3"",
            ""ct"": ""2016-02-23T07:42:43.565489Z"",
            ""mt"": ""2017-02-22T09:35:48.302929Z"",
            ""rating"": 7.5,
            ""stats"": {
                ""foursquare"": {
                    ""count"": 111,
                    ""value"": 7.5
                },
                ""spottly"": {
                    ""save-count"": 12
                }
            },
            ""permanent-close"": false,
            ""price"": """"
        }, ...],
        ""posts"": [{
            ""collection-id"": ""95551746474003"",
            ""coordinate"": {
                ""latitude"": 22.275576,
                ""longitude"": 114.172582
            },
            ""ct"": ""2017-02-22T09:35:47Z"",
            ""facebook-tag-users"": [],
            ""id"": ""97501586849795"",
            ""medias"": [],
            ""message"": """",
            ""mt"": ""2017-02-22T09:35:47Z"",
            ""owner-id"": ""96527264645120"",
            ""place-id"": ""95551731663150"",
            ""share-to"": [],
            ""star"": 5,
            ""status"": ""Done"",
            ""tags"": []
        }, ...],
        ""users"": [{
            ""id"": ""95551581323446"",
            ""uid"": ""hk_epicurus"",
            ""uid-ignore-case"": ""hk_epicurus"",
            ""name"": ""Hk Epicurus"",
            ""head"": ""https://d278wa0j9nq2mp.cloudfront.net/uploader/54aa335ddf4e63450002919a.jpeg"",
            ""site"": ""www.hkepicurus.com"",
            ""location"": ""Hong Kong"",
            ""description"": ""Hong Kong Food \u0026 Travel Bear.\nGrew up in Aust, Malaysia, Tokyo \u0026 HK. \nInstagram: EpicurusHongKong\nFacebook, Spottly \u0026 Twitter: HK Epicurus \n微博: 香港美食-伊比\nFacebook Fans Page:  http://on.fb.me/1qDyiIk"",
            ""ct"": ""2013-10-13T19:12:41Z"",
            ""mt"": ""2015-11-08T15:22:45Z""
        }, ...]
    }
}
",2906
489,42784515,"
{
    ""meta"": {
        ""code"": 200,
        ""text"": ""OK""
    },
    ""data"": {
        ""friends"": [{
            ""id"": ""97331335725056"",
            ""from-id"": ""97273770803200"",
            ""to-id"": ""96527264645120"",
            ""ct"": ""2017-01-23T07:58:41Z""
        }],
        ""user"": {
            ""ct"": ""2013-04-30T23:30:05Z"",
            ""description"": ""Founder and Chief Everything Officer of Spottly. Loves to eat. Have a really bad memory. Wants to remember the best places and make travel research better"",
            ""followers"": {
                ""count"": 41291
            },
            ""followings"": {
                ""count"": 322
            },
            ""head"": ""https://d278wa0j9nq2mp.cloudfront.net/uploader/525ffac8df4e6347870145ef.jpeg"",
            ""id"": ""96527264645120"",
            ""location"": ""Vancouver | Hong Kong | Beijing "",
            ""mt"": ""2015-10-27T09:47:12Z"",
            ""name"": ""Edwyn Chan"",
            ""site"": ""http://spottly.com/edwyn"",
            ""uid"": ""edwyn"",
            ""uid-ignore-case"": ""edwyn""
        }
    }
}
",1066
490,42784515,"
{
    ""meta"": {
        ""code"": 200,
        ""text"": ""OK""
    }
}
",67
491,42784515,"
{
    ""meta"": {
        ""code"": 200,
        ""text"": ""OK""
    },
    ""data"": {
        ""friends"": [{
            ""id"": ""97331335725056"",
            ""from-id"": ""97273770803200"",
            ""to-id"": ""96527264645120"",
            ""ct"": ""2017-01-23T07:58:41Z""
        }],
        ""user"": {
            ""ct"": ""2013-04-30T23:30:05Z"",
            ""description"": ""Founder and Chief Everything Officer of Spottly. Loves to eat. Have a really bad memory. Wants to remember the best places and make travel research better"",
            ""followers"": {
                ""count"": 41291
            },
            ""followings"": {
                ""count"": 322
            },
            ""head"": ""https://d278wa0j9nq2mp.cloudfront.net/uploader/525ffac8df4e6347870145ef.jpeg"",
            ""id"": ""96527264645120"",
            ""location"": ""Vancouver | Hong Kong | Beijing "",
            ""mt"": ""2015-10-27T09:47:12Z"",
            ""name"": ""Edwyn Chan"",
            ""site"": ""http://spottly.com/edwyn"",
            ""uid"": ""edwyn"",
            ""uid-ignore-case"": ""edwyn""
        }
    }
}
",1066
492,43003683,"package main

import (
  ""fmt""
  ""bitbucket.org/tradedefender/cryptocurrency/exchange-connector/cexio""
  ""github.com/shopspring/decimal""
  ""encoding/json""
  ""time""
)

type OrderBook struct {
  Asks []Ask
  Bids []Bid
}

type Ask struct {
  Rate    decimal.Decimal
  Amount  decimal.Decimal
}

type Bid struct {
  Rate    decimal.Decimal
  Amount  decimal.Decimal
}

func main() {
  cexioConn := new(cexio.Connection)

  err := cexioConn.Connect()
  if err != nil {
    fmt.Errorf(""error: %s"", err.Error())
  }

  err = cexioConn.Authenticate(""TLwYkktLf7Im6nqSKt6UO1IrU"", ""9ImOJcR7Qj3LMIyPCzky0D7WE"")
  if err != nil {
    fmt.Errorf(""error: %s"", err.Error())
  }

  readChannel := make(chan cexio.IntraAppMessage, 25)

  go cexioConn.ReadLoop(readChannel)

  processor := Processor{
    WatchPairs: [][2]string{
      [2]string{
        ""BTC"", ""USD"",
      },
    },
    conn: cexioConn,
  }

  go processor.Process(readChannel)

  // LOL
  for {
    continue
  }

}

type Processor struct {
  WatchPairs [][2]string
  conn *cexio.Connection
}

func (p *Processor) Process(ch <-chan cexio.IntraAppMessage) {

  p.conn.SubscribeToOrderBook(p.WatchPairs[0])

  pingTimer := time.Now().Unix()
  for {

    fmt.Printf(""(%v)\n"", time.Now().Unix())

    if (time.Now().Unix() - pingTimer) >= 10 {
      fmt.Println(""sending ping"")
      p.conn.SendPing()
      pingTimer = time.Now().Unix()
    }

    readMsg := <- ch
    output, _ := json.Marshal(readMsg.SocketMessage)
    fmt.Println(string(output))

    if readMsg.SocketMessage.Event == ""ping"" {
      fmt.Println(""sending pong"")
      p.conn.SendPong()
      pingTimer = time.Now().Unix()
    }

  }
}
",1653
493,43003683,"package cexio

import (
  ""github.com/gorilla/websocket""
  //""github.com/shopspring/decimal""
  ""github.com/satori/go.uuid""
  ""encoding/hex""
  ""encoding/json""
  ""crypto/hmac""
  ""crypto/sha256""
  ""bytes""
  ""strconv""
  ""time""
  ""fmt""
)

const Url = ""wss://ws.cex.io/ws/""

type Connection struct {
  conn *websocket.Conn
}

type IntraAppMessage struct {
  SocketMessage   GenericMessage
  ProgramMessage  ProgramMessage
}

type GenericMessage struct {
  Event   string      `json:""e""`
  Data    interface{} `json:""data""`
  Auth    AuthData    `json:""auth,omitempty""`
  Ok      string      `json:""ok,omitempty""`
  Oid     string      `json:""oid,omitempty""`
  Time    int64       `json:""time,omitempty""`
}

type ProgramMessage struct {
  Error   string
}

type AuthData struct {
  Key       string  `json:""key""`
  Signature string  `json:""signature""`
  Timestamp int64   `json:""timestamp""`
}

type OrderBookSubscribeData struct {
  Pair      [2]string   `json:""pair""`
  Subscribe bool        `json:""subscribe""`
  Depth     int         `json:""depth""`
}

func (c *Connection) SendPong() error {

  pongMsg := GenericMessage{
    Event: ""pong"",
  }

  err := c.conn.WriteJSON(pongMsg)
  if err != nil {
    return nil
  }

  deadline := time.Now().Add(15*time.Second)

  err = c.conn.WriteControl(websocket.PongMessage, nil, deadline)
  if err != nil {
    return err
  }

  return nil

}

func (c *Connection) SendPing() error {

  pingMsg := GenericMessage{
    Event: ""get-balance"",
    Oid: uuid.NewV4().String(),
  }

  err := c.conn.WriteJSON(pingMsg)
  if err != nil {
    return err
  }

  deadline := time.Now().Add(15*time.Second)

  err = c.conn.WriteControl(websocket.PingMessage, nil, deadline)
  if err != nil {
    return err
  }

  return nil

}

func (c *Connection) Connect() error {
  dialer := *websocket.DefaultDialer
  wsConn, _, err := dialer.Dial(Url, nil)
  if err != nil {
    return err
  }

  c.conn = wsConn
  //c.conn.SetPingHandler(c.HandlePing)

  for {

    _, msgBytes, err := c.conn.ReadMessage()
    if err != nil {
      c.Disconnect()
      return err
    }

    fmt.Println(string(msgBytes))

    var m GenericMessage
    err = json.Unmarshal(msgBytes, &m)
    if err != nil {
      c.Disconnect()
      return err
    }

    if m.Event != ""connected"" {
      c.Disconnect()
      return err
    } else {
      break
    }

  }

  return nil
}

func (c *Connection) Disconnect() error {
  return c.conn.Close()
}

func (c *Connection) ReadLoop(ch chan<- IntraAppMessage) {
  for {

    fmt.Println(""starting new read"")

    _, msgBytes, err := c.conn.ReadMessage()
    if err != nil {
      ch <- IntraAppMessage{
        ProgramMessage: ProgramMessage{
          Error: err.Error(),
        },
      }
      continue
    }

    var m GenericMessage
    err = json.Unmarshal(msgBytes, &m)
    if err != nil {
      ch <- IntraAppMessage{
        ProgramMessage: ProgramMessage{
          Error: err.Error(),
        },
      }
      continue
    }

    ch <- IntraAppMessage{
      SocketMessage: m,
    }

  }
}

func CreateSignature(timestamp int64, key, secret string) string {
  secretBytes := []byte(secret)
  h := hmac.New(sha256.New, secretBytes)

  var buffer bytes.Buffer
  buffer.WriteString(strconv.FormatInt(timestamp, 10))
  buffer.WriteString(key)

  h.Write(buffer.Bytes())

  return hex.EncodeToString(h.Sum(nil))
}

func (c *Connection) Authenticate(key, secret string) error {

  timestamp := time.Now().Unix()
  signature := CreateSignature(timestamp, key, secret)

  var authMsg GenericMessage
  authMsg.Event = ""auth""
  authMsg.Auth = AuthData{
    Key: key,
    Signature: signature,
    Timestamp: timestamp,
  }

  err := c.conn.WriteJSON(authMsg)
  if err != nil {
    return err
  }

  for {
    _, msgBytes, err := c.conn.ReadMessage()
    if err != nil {
      c.Disconnect()
      return err
    }

    fmt.Println(string(msgBytes))

    var m GenericMessage
    err = json.Unmarshal(msgBytes, &m)
    if err != nil {
      c.Disconnect()
      return err
    }

    if m.Event != ""auth"" && m.Ok != ""ok"" {
      c.Disconnect()
      return err
    } else {
      break
    }
  }

  return nil

}

func (c *Connection) SubscribeToOrderBook(pair [2]string) error {

  sendMsg := GenericMessage{
    Event: ""order-book-subscribe"",
    Data: OrderBookSubscribeData{
      Pair: pair,
      Subscribe: true,
      Depth: 0,
    },
    Oid: uuid.NewV4().String(),
  }

  err := c.conn.WriteJSON(sendMsg)
  if err != nil {
    return err
  }

  return nil

}

func (c *Connection) GetBalance() error {

  sendMsg := GenericMessage{
    Event: ""get-balance"",
    Oid: uuid.NewV4().String(),
  }

  err := c.conn.WriteJSON(sendMsg)
  if err != nil {
    return err
  }

  return nil

}
",4736
494,43018667,.go,3
495,43018667,golint,6
496,43018667,"Installing 10 tools
  gocode
  gopkgs
  go-outline
  go-symbols
  guru
  gorename
  godef
  goreturns
  golint
  gotests

Installing gocode SUCCEEDED
Installing gopkgs SUCCEEDED
Installing go-outline SUCCEEDED
Installing go-symbols FAILED
Installing guru FAILED
Installing gorename FAILED
Installing godef SUCCEEDED
Installing goreturns FAILED
Installing golint FAILED
Installing gotests FAILED

6 tools failed to install.

go-symbols:
Error: Command failed: C:\Go\bin\go.exe get -u -v github.com/newhook/go-symbols
github.com/newhook/go-symbols (download)
Fetching https://golang.org/x/tools/go/buildutil?go-get=1
Parsing meta tags from https://golang.org/x/tools/go/buildutil?go-get=1 (status code 200)
get ""golang.org/x/tools/go/buildutil"": found meta tag main.metaImport{Prefix:""golang.org/x/tools"", VCS:""git"", RepoRoot:""https://go.googlesource.com/tools""} at https://golang.org/x/tools/go/buildutil?go-get=1
get ""golang.org/x/tools/go/buildutil"": verifying non-authoritative meta tag
Fetching https://golang.org/x/tools?go-get=1
Parsing meta tags from https://golang.org/x/tools?go-get=1 (status code 200)
golang.org/x/tools (download)
# cd C:\Users\user\go\src\golang.org\x\tools; git pull --ff-only
fatal: Not a git repository (or any of the parent directories): .git
package golang.org/x/tools/go/buildutil: exit status 128
github.com/newhook/go-symbols (download)
Fetching https://golang.org/x/tools/go/buildutil?go-get=1
Parsing meta tags from https://golang.org/x/tools/go/buildutil?go-get=1 (status code 200)
get ""golang.org/x/tools/go/buildutil"": found meta tag main.metaImport{Prefix:""golang.org/x/tools"", VCS:""git"", RepoRoot:""https://go.googlesource.com/tools""} at https://golang.org/x/tools/go/buildutil?go-get=1
get ""golang.org/x/tools/go/buildutil"": verifying non-authoritative meta tag
Fetching https://golang.org/x/tools?go-get=1
Parsing meta tags from https://golang.org/x/tools?go-get=1 (status code 200)
golang.org/x/tools (download)
# cd C:\Users\user\go\src\golang.org\x\tools; git pull --ff-only
fatal: Not a git repository (or any of the parent directories): .git
package golang.org/x/tools/go/buildutil: exit status 128

guru:
Error: Command failed: C:\Go\bin\go.exe get -u -v golang.org/x/tools/cmd/guru
Fetching https://golang.org/x/tools/cmd/guru?go-get=1
Parsing meta tags from https://golang.org/x/tools/cmd/guru?go-get=1 (status code 200)
get ""golang.org/x/tools/cmd/guru"": found meta tag main.metaImport{Prefix:""golang.org/x/tools"", VCS:""git"", RepoRoot:""https://go.googlesource.com/tools""} at https://golang.org/x/tools/cmd/guru?go-get=1
get ""golang.org/x/tools/cmd/guru"": verifying non-authoritative meta tag
Fetching https://golang.org/x/tools?go-get=1
Parsing meta tags from https://golang.org/x/tools?go-get=1 (status code 200)
golang.org/x/tools (download)
# cd C:\Users\user\go\src\golang.org\x\tools; git pull --ff-only
fatal: Not a git repository (or any of the parent directories): .git
package golang.org/x/tools/cmd/guru: exit status 128
Fetching https://golang.org/x/tools/cmd/guru?go-get=1
Parsing meta tags from https://golang.org/x/tools/cmd/guru?go-get=1 (status code 200)
get ""golang.org/x/tools/cmd/guru"": found meta tag main.metaImport{Prefix:""golang.org/x/tools"", VCS:""git"", RepoRoot:""https://go.googlesource.com/tools""} at https://golang.org/x/tools/cmd/guru?go-get=1
get ""golang.org/x/tools/cmd/guru"": verifying non-authoritative meta tag
Fetching https://golang.org/x/tools?go-get=1
Parsing meta tags from https://golang.org/x/tools?go-get=1 (status code 200)
golang.org/x/tools (download)
# cd C:\Users\user\go\src\golang.org\x\tools; git pull --ff-only
fatal: Not a git repository (or any of the parent directories): .git
package golang.org/x/tools/cmd/guru: exit status 128

gorename:
Error: Command failed: C:\Go\bin\go.exe get -u -v golang.org/x/tools/cmd/gorename
Fetching https://golang.org/x/tools/cmd/gorename?go-get=1
Parsing meta tags from https://golang.org/x/tools/cmd/gorename?go-get=1 (status code 200)
get ""golang.org/x/tools/cmd/gorename"": found meta tag main.metaImport{Prefix:""golang.org/x/tools"", VCS:""git"", RepoRoot:""https://go.googlesource.com/tools""} at https://golang.org/x/tools/cmd/gorename?go-get=1
get ""golang.org/x/tools/cmd/gorename"": verifying non-authoritative meta tag
Fetching https://golang.org/x/tools?go-get=1
Parsing meta tags from https://golang.org/x/tools?go-get=1 (status code 200)
golang.org/x/tools (download)
# cd C:\Users\user\go\src\golang.org\x\tools; git pull --ff-only
fatal: Not a git repository (or any of the parent directories): .git
package golang.org/x/tools/cmd/gorename: exit status 128
Fetching https://golang.org/x/tools/cmd/gorename?go-get=1
Parsing meta tags from https://golang.org/x/tools/cmd/gorename?go-get=1 (status code 200)
get ""golang.org/x/tools/cmd/gorename"": found meta tag main.metaImport{Prefix:""golang.org/x/tools"", VCS:""git"", RepoRoot:""https://go.googlesource.com/tools""} at https://golang.org/x/tools/cmd/gorename?go-get=1
get ""golang.org/x/tools/cmd/gorename"": verifying non-authoritative meta tag
Fetching https://golang.org/x/tools?go-get=1
Parsing meta tags from https://golang.org/x/tools?go-get=1 (status code 200)
golang.org/x/tools (download)
# cd C:\Users\user\go\src\golang.org\x\tools; git pull --ff-only
fatal: Not a git repository (or any of the parent directories): .git
package golang.org/x/tools/cmd/gorename: exit status 128

goreturns:
Error: Command failed: C:\Go\bin\go.exe get -u -v sourcegraph.com/sqs/goreturns
Fetching https://sourcegraph.com/sqs/goreturns?go-get=1
Parsing meta tags from https://sourcegraph.com/sqs/goreturns?go-get=1 (status code 200)
get ""sourcegraph.com/sqs/goreturns"": found meta tag main.metaImport{Prefix:""sourcegraph.com/sqs/goreturns"", VCS:""git"", RepoRoot:""https://github.com/sqs/goreturns""} at https://sourcegraph.com/sqs/goreturns?go-get=1
sourcegraph.com/sqs/goreturns (download)
github.com/sqs/goreturns (download)
Fetching https://golang.org/x/tools/imports?go-get=1
Parsing meta tags from https://golang.org/x/tools/imports?go-get=1 (status code 200)
get ""golang.org/x/tools/imports"": found meta tag main.metaImport{Prefix:""golang.org/x/tools"", VCS:""git"", RepoRoot:""https://go.googlesource.com/tools""} at https://golang.org/x/tools/imports?go-get=1
get ""golang.org/x/tools/imports"": verifying non-authoritative meta tag
Fetching https://golang.org/x/tools?go-get=1
Parsing meta tags from https://golang.org/x/tools?go-get=1 (status code 200)
golang.org/x/tools (download)
# cd C:\Users\user\go\src\golang.org\x\tools; git pull --ff-only
fatal: Not a git repository (or any of the parent directories): .git
package golang.org/x/tools/imports: exit status 128
Fetching https://sourcegraph.com/sqs/goreturns?go-get=1
Parsing meta tags from https://sourcegraph.com/sqs/goreturns?go-get=1 (status code 200)
get ""sourcegraph.com/sqs/goreturns"": found meta tag main.metaImport{Prefix:""sourcegraph.com/sqs/goreturns"", VCS:""git"", RepoRoot:""https://github.com/sqs/goreturns""} at https://sourcegraph.com/sqs/goreturns?go-get=1
sourcegraph.com/sqs/goreturns (download)
github.com/sqs/goreturns (download)
Fetching https://golang.org/x/tools/imports?go-get=1
Parsing meta tags from https://golang.org/x/tools/imports?go-get=1 (status code 200)
get ""golang.org/x/tools/imports"": found meta tag main.metaImport{Prefix:""golang.org/x/tools"", VCS:""git"", RepoRoot:""https://go.googlesource.com/tools""} at https://golang.org/x/tools/imports?go-get=1
get ""golang.org/x/tools/imports"": verifying non-authoritative meta tag
Fetching https://golang.org/x/tools?go-get=1
Parsing meta tags from https://golang.org/x/tools?go-get=1 (status code 200)
golang.org/x/tools (download)
# cd C:\Users\user\go\src\golang.org\x\tools; git pull --ff-only
fatal: Not a git repository (or any of the parent directories): .git
package golang.org/x/tools/imports: exit status 128

golint:
Error: Command failed: C:\Go\bin\go.exe get -u -v github.com/golang/lint/golint
github.com/golang/lint (download)
Fetching https://golang.org/x/tools/go/gcexportdata?go-get=1
Parsing meta tags from https://golang.org/x/tools/go/gcexportdata?go-get=1 (status code 200)
get ""golang.org/x/tools/go/gcexportdata"": found meta tag main.metaImport{Prefix:""golang.org/x/tools"", VCS:""git"", RepoRoot:""https://go.googlesource.com/tools""} at https://golang.org/x/tools/go/gcexportdata?go-get=1
get ""golang.org/x/tools/go/gcexportdata"": verifying non-authoritative meta tag
Fetching https://golang.org/x/tools?go-get=1
Parsing meta tags from https://golang.org/x/tools?go-get=1 (status code 200)
golang.org/x/tools (download)
# cd C:\Users\user\go\src\golang.org\x\tools; git pull --ff-only
fatal: Not a git repository (or any of the parent directories): .git
package golang.org/x/tools/go/gcexportdata: exit status 128
github.com/golang/lint (download)
Fetching https://golang.org/x/tools/go/gcexportdata?go-get=1
Parsing meta tags from https://golang.org/x/tools/go/gcexportdata?go-get=1 (status code 200)
get ""golang.org/x/tools/go/gcexportdata"": found meta tag main.metaImport{Prefix:""golang.org/x/tools"", VCS:""git"", RepoRoot:""https://go.googlesource.com/tools""} at https://golang.org/x/tools/go/gcexportdata?go-get=1
get ""golang.org/x/tools/go/gcexportdata"": verifying non-authoritative meta tag
Fetching https://golang.org/x/tools?go-get=1
Parsing meta tags from https://golang.org/x/tools?go-get=1 (status code 200)
golang.org/x/tools (download)
# cd C:\Users\user\go\src\golang.org\x\tools; git pull --ff-only
fatal: Not a git repository (or any of the parent directories): .git
package golang.org/x/tools/go/gcexportdata: exit status 128

gotests:
Error: Command failed: C:\Go\bin\go.exe get -u -v github.com/cweill/gotests/...
github.com/cweill/gotests (download)
Fetching https://golang.org/x/tools/imports?go-get=1
Parsing meta tags from https://golang.org/x/tools/imports?go-get=1 (status code 200)
get ""golang.org/x/tools/imports"": found meta tag main.metaImport{Prefix:""golang.org/x/tools"", VCS:""git"", RepoRoot:""https://go.googlesource.com/tools""} at https://golang.org/x/tools/imports?go-get=1
get ""golang.org/x/tools/imports"": verifying non-authoritative meta tag
Fetching https://golang.org/x/tools?go-get=1
Parsing meta tags from https://golang.org/x/tools?go-get=1 (status code 200)
golang.org/x/tools (download)
# cd C:\Users\user\go\src\golang.org\x\tools; git pull --ff-only
fatal: Not a git repository (or any of the parent directories): .git
package golang.org/x/tools/imports: exit status 128
github.com/cweill/gotests (download)
Fetching https://golang.org/x/tools/imports?go-get=1
Parsing meta tags from https://golang.org/x/tools/imports?go-get=1 (status code 200)
get ""golang.org/x/tools/imports"": found meta tag main.metaImport{Prefix:""golang.org/x/tools"", VCS:""git"", RepoRoot:""https://go.googlesource.com/tools""} at https://golang.org/x/tools/imports?go-get=1
get ""golang.org/x/tools/imports"": verifying non-authoritative meta tag
Fetching https://golang.org/x/tools?go-get=1
Parsing meta tags from https://golang.org/x/tools?go-get=1 (status code 200)
golang.org/x/tools (download)
# cd C:\Users\user\go\src\golang.org\x\tools; git pull --ff-only
fatal: Not a git repository (or any of the parent directories): .git
package golang.org/x/tools/imports: exit status 128
",11227
497,43018667,Not a git repository,20
498,43018667,%USERPROFILE%\go,16
499,43018667,GOPATH,6
500,43184477,"$ go get -d github.com/cockroachdb/cockroach
$ cd $GOPATH/src/github.com/cockroachdb/cockroach
$ git checkout beta-20170330
$ make install
",139
501,43184477,/src/github.com/cockroachdb/cockroach,37
502,43184477,git checkout v0.1-alpha,23
503,43184477,"warning: unable to rmdir vendor: Directory not empty
Previous HEAD position was f0f5783... Merge pull request #14448 from BramGruneir/vendorsnappy
HEAD is now at 26088f8... Merge pull request #3475 from mrtracy/mtracy/code_review_feedback
",239
504,43184477,make install,12
505,43184477,"github.com/agtorre/gocolorize                      99fea4bc9517 [checkout f42b554bf7f0]
github.com/biogo/store                             913427a1d5e8 [checkout 3b4c041f52c2]
github.com/cockroachdb/c-lz4                       834d3303c9e8 [checkout c40aaae2fc50]
github.com/cockroachdb/c-protobuf                  323984796a7b [checkout 6a18bfcdd516]
github.com/cockroachdb/c-rocksdb                   0dd42399d1f0 [checkout bf15ead80bdc]
github.com/cockroachdb/c-snappy                    c0cd3c9ce92f [checkout 5c6d0932e0ad]
github.com/cockroachdb/yacc                        7c99dfd2164a [get checkout 443154b1852a]
github.com/coreos/etcd                             38a914973544 [checkout 0eb46eb1457b]
github.com/cpuguy83/go-md2man                      a65d4d2de4d5 [get checkout 71acacd42f85]
github.com/docker/docker                           6311e9fc9d34 [get checkout 5e0283effa73]
github.com/elazarl/go-bindata-assetfs              30f82fa23fd8 [checkout d5cac425555c]
github.com/go-sql-driver/mysql                     9dee4ca50b83 [get checkout d512f204a577]
github.com/gogo/protobuf                           c0656edd0d9e [checkout 8658879224bd]
github.com/golang/lint                             cb00e5669539 [get checkout 32a87160691b]
github.com/google/btree                            316fb6d3f031 [checkout cc6329d4279e]
github.com/gordonklaus/ineffassign                 f0c5cfc1817d [get checkout 507e48671a07]
github.com/inconshreveable/mousetrap               76626ae9c91c [get OK]
github.com/jteeuwen/go-bindata                     a0ff2567cfb7 [get OK]
github.com/julienschmidt/httprouter                6f3f3919c878 [checkout f30ab90cccbd]
github.com/kisielk/errcheck                        23699b7e2cbf [get checkout 12fd1ab9811e]
github.com/kisielk/gotool                          0de1eaf82fa3 [get checkout 58a7a198f2ec]
github.com/kr/pretty                               cfb55aafdaf3 [get checkout e6ac2fc51e89]
github.com/kr/text                                 7cafcd837844 [get checkout bb797dc4fb83]
github.com/lib/pq                                  2704adc878c2 [checkout 11fc39a580a0]
github.com/mattn/go-runewidth                      14207d285c6c [checkout d96d1bd051f2]
github.com/mibk/dupl                               3447d9b0cb5a [get checkout 47b66d6a523f]
github.com/montanaflynn/stats                      f8cd06f93c6c [checkout 4dd27fe9ac79]
github.com/olekukonko/tablewriter                  febf2d34b54a [checkout 333c0610de34]
github.com/opennota/check                          11e2eec79ec4 [get checkout 591428223a6a]
github.com/peterh/liner                            88609521dc4b [checkout 4d47685ab2fd]
github.com/rcrowley/go-metrics                     1f30fe9094a5 [checkout 7839c01b09d2]
github.com/robfig/glock                            39b969c32281 [checkout cb3c3ec56de9]
github.com/russross/blackfriday                    5f33e7b78783 [get checkout d18b67ae0afd]
github.com/samalba/dockerclient                    a30362618471 [get checkout 4656b1bc6cbc]
github.com/shurcooL/sanitized_anchor_name          1dba4b3954bc [get checkout 10ef21a441db]
github.com/spf13/cobra                             7aeaa2cce6ae [checkout ee6224d01f6a]
github.com/spf13/pflag                             d16db1e50e33 [checkout 08b1a584251b]
github.com/tebeka/go2xunit                         13c29c7515e6 [get checkout 0519fcc9b45b]
github.com/termie/go-shutil                        bcacb06fecae [get OK]
golang.org/x/crypto                                88915ccf7aeb [checkout 7b85b097bf75]
golang.org/x/net                                   ffcf1bedda3b [checkout 21af302bb527]
golang.org/x/text                                  f4b4367115ec [checkout 00e205363f74]
golang.org/x/tools                                 620ecdb8d794 [checkout 1cdaff4a02c5]
gopkg.in/yaml.v1                                   9f9df34309c0 [OK]
cmd github.com/cockroachdb/c-protobuf/cmd/protoc                [built]
cmd github.com/cockroachdb/cockroach/protoc-gen-gogoroach       [error exit status 2]
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/protoc-gen-gogo/descriptor
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/gogoproto
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/protoc-gen-gogo/plugin
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/vanity
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/protoc-gen-gogo/generator
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/plugin/testgen
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/plugin/defaultcheck
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/plugin/embedcheck
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/plugin/enumstringer
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/plugin/marshalto
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/plugin/oneofcheck
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/plugin/populate
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/plugin/unmarshal
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/plugin/compare
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/plugin/description
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/plugin/equal
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/plugin/face
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/plugin/gostring
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/plugin/size
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/plugin/stringer
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/plugin/union
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/protoc-gen-gogo/grpc
github.com/cockroachdb/cockroach/vendor/github.com/gogo/protobuf/vanity/command
github.com/cockroachdb/cockroach/protoc-gen-gogoroach
# github.com/cockroachdb/cockroach/protoc-gen-gogoroach
protoc-gen-gogoroach/main.go:12: undefined: vanity.NotInPackageGoogleProtobuf
go install -tags ''  -ldflags '-X ""github.com/cockroachdb/cockroach/util.buildTag=alpha-6447-g26088f8"" -X ""github.com/cockroachdb/cockroach/util.buildTime=2017/04/03 11:46:56"" -X ""github.com/cockroachdb/cockroach/util.buildDeps=github.com/cockroachdb/c-lz4:c40aaae2fc50293eb8750b34632bc3efe813e23f github.com/cockroachdb/cockroach:26088f81e5ecfb2fd63f8f15f524102c9a0c1c05 github.com/cockroachdb/cockroach/vendor:17711805119083543d94edac10e423260a597426 github.com/julienschmidt/httprouter:f30ab90cccbd5171771d26b6557d3c2f49e047a6 github.com/peterh/liner:4d47685ab2fd2dbb46c66b831344d558bc4be5b9 gopkg.in/yaml.v1:9f9df34309c04878acc86042b16630b0f696e1de""'
# github.com/cockroachdb/cockroach/cli
cli/sql_util.go:148: table.Append(row) used as value
Makefile:71: recipe for target 'install' failed
make: *** [install] Error 2
",6922
506,43184477,.go-version,11
507,43184477,.bootstrap,10
508,43184477,fatal: Not a git repository (or any of the parent directories): .git,68
509,43184477,go get,6
510,43184477,make install,12
511,43345705,main function,13
512,43345705,init,4
513,43345705,main func,9
514,43345705,init,4
515,43345705,main func,9
516,43345705,init,4
517,43345705,init,4
518,43345705,init,4
519,43345705,main func,9
520,43345705,var = [...] or cost = [...],27
521,43345705,mime,4
522,43345705,mime,4
523,43345705,init,4
524,43345705,"package mime

import (
    ""mime""
    ""path/filepath""
)

var types = map[string]string{
    "".3dm"":       ""x-world/x-3dmf"",
    "".3dmf"":      ""x-world/x-3dmf"",
    "".7z"":        ""application/x-7z-compressed"",
    "".a"":         ""application/octet-stream"",
    "".aab"":       ""application/x-authorware-bin"",
    "".aam"":       ""application/x-authorware-map"",
    "".aas"":       ""application/x-authorware-seg"",
    "".abc"":       ""text/vndabc"",
    "".ace"":       ""application/x-ace-compressed"",
    "".acgi"":      ""text/html"",
    "".afl"":       ""video/animaflex"",
    "".ai"":        ""application/postscript"",
    "".aif"":       ""audio/aiff"",
    "".aifc"":      ""audio/aiff"",
    "".aiff"":      ""audio/aiff"",
    "".aim"":       ""application/x-aim"",
    "".aip"":       ""text/x-audiosoft-intra"",
    "".alz"":       ""application/x-alz-compressed"",
    "".ani"":       ""application/x-navi-animation"",
    "".aos"":       ""application/x-nokia-9000-communicator-add-on-software"",
    "".aps"":       ""application/mime"",
    "".apk"":       ""application/vnd.android.package-archive"",
    "".arc"":       ""application/x-arc-compressed"",
    "".arj"":       ""application/arj"",
    "".art"":       ""image/x-jg"",
    "".asf"":       ""video/x-ms-asf"",
    "".asm"":       ""text/x-asm"",
    "".asp"":       ""text/asp"",
    "".asx"":       ""application/x-mplayer2"",
    "".au"":        ""audio/basic"",
    "".avi"":       ""video/x-msvideo"",
    "".avs"":       ""video/avs-video"",
    "".bcpio"":     ""application/x-bcpio"",
    "".bin"":       ""application/mac-binary"",
    "".bmp"":       ""image/bmp"",
    "".boo"":       ""application/book"",
    "".book"":      ""application/book"",
    "".boz"":       ""application/x-bzip2"",
    "".bsh"":       ""application/x-bsh"",
    "".bz2"":       ""application/x-bzip2"",
    "".bz"":        ""application/x-bzip"",
    "".c++"":       ""text/plain"",
    "".c"":         ""text/x-c"",
    "".cab"":       ""application/vnd.ms-cab-compressed"",
    "".cat"":       ""application/vndms-pkiseccat"",
    "".cc"":        ""text/x-c"",
    "".ccad"":      ""application/clariscad"",
    "".cco"":       ""application/x-cocoa"",
    "".cdf"":       ""application/cdf"",
    "".cer"":       ""application/pkix-cert"",
    "".cha"":       ""application/x-chat"",
    "".chat"":      ""application/x-chat"",
    "".chrt"":      ""application/vnd.kde.kchart"",
    "".class"":     ""application/java"",
    "".com"":       ""text/plain"",
    "".conf"":      ""text/plain"",
    "".cpio"":      ""application/x-cpio"",
    "".cpp"":       ""text/x-c"",
    "".cpt"":       ""application/mac-compactpro"",
    "".crl"":       ""application/pkcs-crl"",
    "".crt"":       ""application/pkix-cert"",
    "".crx"":       ""application/x-chrome-extension"",
    "".csh"":       ""text/x-scriptcsh"",
    "".css"":       ""text/css"",
    "".csv"":       ""text/csv"",
    "".cxx"":       ""text/plain"",
    "".dar"":       ""application/x-dar"",
    "".dcr"":       ""application/x-director"",
    "".deb"":       ""application/x-debian-package"",
    "".deepv"":     ""application/x-deepv"",
    "".def"":       ""text/plain"",
    "".der"":       ""application/x-x509-ca-cert"",
    "".dif"":       ""video/x-dv"",
    "".dir"":       ""application/x-director"",
    "".divx"":      ""video/divx"",
    "".dl"":        ""video/dl"",
    "".dmg"":       ""application/x-apple-diskimage"",
    "".doc"":       ""application/msword"",
    "".dot"":       ""application/msword"",
    "".dp"":        ""application/commonground"",
    "".drw"":       ""application/drafting"",
    "".dump"":      ""application/octet-stream"",
    "".dv"":        ""video/x-dv"",
    "".dvi"":       ""application/x-dvi"",
    "".dwf"":       ""drawing/x-dwf=(old)"",
    "".dwg"":       ""application/acad"",
    "".dxf"":       ""application/dxf"",
    "".dxr"":       ""application/x-director"",
    "".el"":        ""text/x-scriptelisp"",
    "".elc"":       ""application/x-bytecodeelisp=(compiled=elisp)"",
    "".eml"":       ""message/rfc822"",
    "".env"":       ""application/x-envoy"",
    "".eps"":       ""application/postscript"",
    "".es"":        ""application/x-esrehber"",
    "".etx"":       ""text/x-setext"",
    "".evy"":       ""application/envoy"",
    "".exe"":       ""application/octet-stream"",
    "".f77"":       ""text/x-fortran"",
    "".f90"":       ""text/x-fortran"",
    "".f"":         ""text/x-fortran"",
    "".fdf"":       ""application/vndfdf"",
    "".fif"":       ""application/fractals"",
    "".fli"":       ""video/fli"",
    "".flo"":       ""image/florian"",
    "".flv"":       ""video/x-flv"",
    "".flx"":       ""text/vndfmiflexstor"",
    "".fmf"":       ""video/x-atomic3d-feature"",
    "".for"":       ""text/x-fortran"",
    "".fpx"":       ""image/vndfpx"",
    "".frl"":       ""application/freeloader"",
    "".funk"":      ""audio/make"",
    "".g3"":        ""image/g3fax"",
    "".g"":         ""text/plain"",
    "".gif"":       ""image/gif"",
    "".gl"":        ""video/gl"",
    "".gsd"":       ""audio/x-gsm"",
    "".gsm"":       ""audio/x-gsm"",
    "".gsp"":       ""application/x-gsp"",
    "".gss"":       ""application/x-gss"",
    "".gtar"":      ""application/x-gtar"",
    "".gz"":        ""application/x-compressed"",
    "".gzip"":      ""application/x-gzip"",
    "".h"":         ""text/x-h"",
    "".hdf"":       ""application/x-hdf"",
    "".help"":      ""application/x-helpfile"",
    "".hgl"":       ""application/vndhp-hpgl"",
    "".hh"":        ""text/x-h"",
    "".hlb"":       ""text/x-script"",
    "".hlp"":       ""application/hlp"",
    "".hpg"":       ""application/vndhp-hpgl"",
    "".hpgl"":      ""application/vndhp-hpgl"",
    "".hqx"":       ""application/binhex"",
    "".hta"":       ""application/hta"",
    "".htc"":       ""text/x-component"",
    "".htm"":       ""text/html"",
    "".html"":      ""text/html"",
    "".htmls"":     ""text/html"",
    "".htt"":       ""text/webviewhtml"",
    "".htx"":       ""text/html"",
    "".ice"":       ""x-conference/x-cooltalk"",
    "".ico"":       ""image/x-icon"",
    "".ics"":       ""text/calendar"",
    "".icz"":       ""text/calendar"",
    "".idc"":       ""text/plain"",
    "".ief"":       ""image/ief"",
    "".iefs"":      ""image/ief"",
    "".iges"":      ""application/iges"",
    "".igs"":       ""application/iges"",
    "".ima"":       ""application/x-ima"",
    "".imap"":      ""application/x-httpd-imap"",
    "".inf"":       ""application/inf"",
    "".ins"":       ""application/x-internett-signup"",
    "".ip"":        ""application/x-ip2"",
    "".isu"":       ""video/x-isvideo"",
    "".it"":        ""audio/it"",
    "".iv"":        ""application/x-inventor"",
    "".ivr"":       ""i-world/i-vrml"",
    "".ivy"":       ""application/x-livescreen"",
    "".jam"":       ""audio/x-jam"",
    "".jav"":       ""text/x-java-source"",
    "".java"":      ""text/x-java-source"",
    "".jcm"":       ""application/x-java-commerce"",
    "".jfif-tbnl"": ""image/jpeg"",
    "".jfif"":      ""image/jpeg"",
    "".jnlp"":      ""application/x-java-jnlp-file"",
    "".jpe"":       ""image/jpeg"",
    "".jpeg"":      ""image/jpeg"",
    "".jpg"":       ""image/jpeg"",
    "".jps"":       ""image/x-jps"",
    "".js"":        ""application/javascript"",
    "".json"":      ""application/json"",
    "".jut"":       ""image/jutvision"",
    "".kar"":       ""audio/midi"",
    "".karbon"":    ""application/vnd.kde.karbon"",
    "".kfo"":       ""application/vnd.kde.kformula"",
    "".flw"":       ""application/vnd.kde.kivio"",
    "".kml"":       ""application/vnd.google-earth.kml+xml"",
    "".kmz"":       ""application/vnd.google-earth.kmz"",
    "".kon"":       ""application/vnd.kde.kontour"",
    "".kpr"":       ""application/vnd.kde.kpresenter"",
    "".kpt"":       ""application/vnd.kde.kpresenter"",
    "".ksp"":       ""application/vnd.kde.kspread"",
    "".kwd"":       ""application/vnd.kde.kword"",
    "".kwt"":       ""application/vnd.kde.kword"",
    "".ksh"":       ""text/x-scriptksh"",
    "".la"":        ""audio/nspaudio"",
    "".lam"":       ""audio/x-liveaudio"",
    "".latex"":     ""application/x-latex"",
    "".lha"":       ""application/lha"",
    "".lhx"":       ""application/octet-stream"",
    "".list"":      ""text/plain"",
    "".lma"":       ""audio/nspaudio"",
    "".log"":       ""text/plain"",
    "".lsp"":       ""text/x-scriptlisp"",
    "".lst"":       ""text/plain"",
    "".lsx"":       ""text/x-la-asf"",
    "".ltx"":       ""application/x-latex"",
    "".lzh"":       ""application/octet-stream"",
    "".lzx"":       ""application/lzx"",
    "".m1v"":       ""video/mpeg"",
    "".m2a"":       ""audio/mpeg"",
    "".m2v"":       ""video/mpeg"",
    "".m3u"":       ""audio/x-mpegurl"",
    "".m"":         ""text/x-m"",
    "".man"":       ""application/x-troff-man"",
    "".manifest"":  ""text/cache-manifest"",
    "".map"":       ""application/x-navimap"",
    "".mar"":       ""text/plain"",
    "".mbd"":       ""application/mbedlet"",
    "".mc$"":       ""application/x-magic-cap-package-10"",
    "".mcd"":       ""application/mcad"",
    "".mcf"":       ""text/mcf"",
    "".mcp"":       ""application/netmc"",
    "".me"":        ""application/x-troff-me"",
    "".mht"":       ""message/rfc822"",
    "".mhtml"":     ""message/rfc822"",
    "".mid"":       ""application/x-midi"",
    "".midi"":      ""application/x-midi"",
    "".mif"":       ""application/x-frame"",
    "".mime"":      ""message/rfc822"",
    "".mjf"":       ""audio/x-vndaudioexplosionmjuicemediafile"",
    "".mjpg"":      ""video/x-motion-jpeg"",
    "".mm"":        ""application/base64"",
    "".mme"":       ""application/base64"",
    "".mod"":       ""audio/mod"",
    "".moov"":      ""video/quicktime"",
    "".mov"":       ""video/quicktime"",
    "".movie"":     ""video/x-sgi-movie"",
    "".mp2"":       ""audio/mpeg"",
    "".mp3"":       ""audio/mpeg3"",
    "".mp4"":       ""video/mp4"",
    "".mpa"":       ""audio/mpeg"",
    "".mpc"":       ""application/x-project"",
    "".mpe"":       ""video/mpeg"",
    "".mpeg"":      ""video/mpeg"",
    "".mpg"":       ""video/mpeg"",
    "".mpga"":      ""audio/mpeg"",
    "".mpp"":       ""application/vndms-project"",
    "".mpt"":       ""application/x-project"",
    "".mpv"":       ""application/x-project"",
    "".mpx"":       ""application/x-project"",
    "".mrc"":       ""application/marc"",
    "".ms"":        ""application/x-troff-ms"",
    "".mv"":        ""video/x-sgi-movie"",
    "".my"":        ""audio/make"",
    "".mzz"":       ""application/x-vndaudioexplosionmzz"",
    "".nap"":       ""image/naplps"",
    "".naplps"":    ""image/naplps"",
    "".nc"":        ""application/x-netcdf"",
    "".ncm"":       ""application/vndnokiaconfiguration-message"",
    "".nif"":       ""image/x-niff"",
    "".niff"":      ""image/x-niff"",
    "".nix"":       ""application/x-mix-transfer"",
    "".nsc"":       ""application/x-conference"",
    "".nvd"":       ""application/x-navidoc"",
    "".o"":         ""application/octet-stream"",
    "".oda"":       ""application/oda"",
    "".odb"":       ""application/vnd.oasis.opendocument.database"",
    "".odc"":       ""application/vnd.oasis.opendocument.chart"",
    "".odf"":       ""application/vnd.oasis.opendocument.formula"",
    "".odg"":       ""application/vnd.oasis.opendocument.graphics"",
    "".odi"":       ""application/vnd.oasis.opendocument.image"",
    "".odm"":       ""application/vnd.oasis.opendocument.text-master"",
    "".odp"":       ""application/vnd.oasis.opendocument.presentation"",
    "".ods"":       ""application/vnd.oasis.opendocument.spreadsheet"",
    "".odt"":       ""application/vnd.oasis.opendocument.text"",
    "".oga"":       ""audio/ogg"",
    "".ogg"":       ""audio/ogg"",
    "".ogv"":       ""video/ogg"",
    "".omc"":       ""application/x-omc"",
    "".omcd"":      ""application/x-omcdatamaker"",
    "".omcr"":      ""application/x-omcregerator"",
    "".otc"":       ""application/vnd.oasis.opendocument.chart-template"",
    "".otf"":       ""application/vnd.oasis.opendocument.formula-template"",
    "".otg"":       ""application/vnd.oasis.opendocument.graphics-template"",
    "".oth"":       ""application/vnd.oasis.opendocument.text-web"",
    "".oti"":       ""application/vnd.oasis.opendocument.image-template"",
    "".otm"":       ""application/vnd.oasis.opendocument.text-master"",
    "".otp"":       ""application/vnd.oasis.opendocument.presentation-template"",
    "".ots"":       ""application/vnd.oasis.opendocument.spreadsheet-template"",
    "".ott"":       ""application/vnd.oasis.opendocument.text-template"",
    "".p10"":       ""application/pkcs10"",
    "".p12"":       ""application/pkcs-12"",
    "".p7a"":       ""application/x-pkcs7-signature"",
    "".p7c"":       ""application/pkcs7-mime"",
    "".p7m"":       ""application/pkcs7-mime"",
    "".p7r"":       ""application/x-pkcs7-certreqresp"",
    "".p7s"":       ""application/pkcs7-signature"",
    "".p"":         ""text/x-pascal"",
    "".part"":      ""application/pro_eng"",
    "".pas"":       ""text/pascal"",
    "".pbm"":       ""image/x-portable-bitmap"",
    "".pcl"":       ""application/vndhp-pcl"",
    "".pct"":       ""image/x-pict"",
    "".pcx"":       ""image/x-pcx"",
    "".pdb"":       ""chemical/x-pdb"",
    "".pdf"":       ""application/pdf"",
    "".pfunk"":     ""audio/make"",
    "".pgm"":       ""image/x-portable-graymap"",
    "".pic"":       ""image/pict"",
    "".pict"":      ""image/pict"",
    "".pkg"":       ""application/x-newton-compatible-pkg"",
    "".pko"":       ""application/vndms-pkipko"",
    "".pl"":        ""text/x-scriptperl"",
    "".plx"":       ""application/x-pixclscript"",
    "".pm4"":       ""application/x-pagemaker"",
    "".pm5"":       ""application/x-pagemaker"",
    "".pm"":        ""text/x-scriptperl-module"",
    "".png"":       ""image/png"",
    "".pnm"":       ""application/x-portable-anymap"",
    "".pot"":       ""application/mspowerpoint"",
    "".pov"":       ""model/x-pov"",
    "".ppa"":       ""application/vndms-powerpoint"",
    "".ppm"":       ""image/x-portable-pixmap"",
    "".pps"":       ""application/mspowerpoint"",
    "".ppt"":       ""application/mspowerpoint"",
    "".ppz"":       ""application/mspowerpoint"",
    "".pre"":       ""application/x-freelance"",
    "".prt"":       ""application/pro_eng"",
    "".ps"":        ""application/postscript"",
    "".psd"":       ""application/octet-stream"",
    "".pvu"":       ""paleovu/x-pv"",
    "".pwz"":       ""application/vndms-powerpoint"",
    "".py"":        ""text/x-scriptphyton"",
    "".pyc"":       ""application/x-bytecodepython"",
    "".qcp"":       ""audio/vndqcelp"",
    "".qd3"":       ""x-world/x-3dmf"",
    "".qd3d"":      ""x-world/x-3dmf"",
    "".qif"":       ""image/x-quicktime"",
    "".qt"":        ""video/quicktime"",
    "".qtc"":       ""video/x-qtc"",
    "".qti"":       ""image/x-quicktime"",
    "".qtif"":      ""image/x-quicktime"",
    "".ra"":        ""audio/x-pn-realaudio"",
    "".ram"":       ""audio/x-pn-realaudio"",
    "".rar"":       ""application/x-rar-compressed"",
    "".ras"":       ""application/x-cmu-raster"",
    "".rast"":      ""image/cmu-raster"",
    "".rexx"":      ""text/x-scriptrexx"",
    "".rf"":        ""image/vndrn-realflash"",
    "".rgb"":       ""image/x-rgb"",
    "".rm"":        ""application/vndrn-realmedia"",
    "".rmi"":       ""audio/mid"",
    "".rmm"":       ""audio/x-pn-realaudio"",
    "".rmp"":       ""audio/x-pn-realaudio"",
    "".rng"":       ""application/ringing-tones"",
    "".rnx"":       ""application/vndrn-realplayer"",
    "".roff"":      ""application/x-troff"",
    "".rp"":        ""image/vndrn-realpix"",
    "".rpm"":       ""audio/x-pn-realaudio-plugin"",
    "".rt"":        ""text/vndrn-realtext"",
    "".rtf"":       ""text/richtext"",
    "".rtx"":       ""text/richtext"",
    "".rv"":        ""video/vndrn-realvideo"",
    "".s"":         ""text/x-asm"",
    "".s3m"":       ""audio/s3m"",
    "".s7z"":       ""application/x-7z-compressed"",
    "".saveme"":    ""application/octet-stream"",
    "".sbk"":       ""application/x-tbook"",
    "".scm"":       ""text/x-scriptscheme"",
    "".sdml"":      ""text/plain"",
    "".sdp"":       ""application/sdp"",
    "".sdr"":       ""application/sounder"",
    "".sea"":       ""application/sea"",
    "".set"":       ""application/set"",
    "".sgm"":       ""text/x-sgml"",
    "".sgml"":      ""text/x-sgml"",
    "".sh"":        ""text/x-scriptsh"",
    "".shar"":      ""application/x-bsh"",
    "".shtml"":     ""text/x-server-parsed-html"",
    "".sid"":       ""audio/x-psid"",
    "".skd"":       ""application/x-koan"",
    "".skm"":       ""application/x-koan"",
    "".skp"":       ""application/x-koan"",
    "".skt"":       ""application/x-koan"",
    "".sit"":       ""application/x-stuffit"",
    "".sitx"":      ""application/x-stuffitx"",
    "".sl"":        ""application/x-seelogo"",
    "".smi"":       ""application/smil"",
    "".smil"":      ""application/smil"",
    "".snd"":       ""audio/basic"",
    "".sol"":       ""application/solids"",
    "".spc"":       ""text/x-speech"",
    "".spl"":       ""application/futuresplash"",
    "".spr"":       ""application/x-sprite"",
    "".sprite"":    ""application/x-sprite"",
    "".spx"":       ""audio/ogg"",
    "".src"":       ""application/x-wais-source"",
    "".ssi"":       ""text/x-server-parsed-html"",
    "".ssm"":       ""application/streamingmedia"",
    "".sst"":       ""application/vndms-pkicertstore"",
    "".step"":      ""application/step"",
    "".stl"":       ""application/sla"",
    "".stp"":       ""application/step"",
    "".sv4cpio"":   ""application/x-sv4cpio"",
    "".sv4crc"":    ""application/x-sv4crc"",
    "".svf"":       ""image/vnddwg"",
    "".svg"":       ""image/svg+xml"",
    "".svr"":       ""application/x-world"",
    "".swf"":       ""application/x-shockwave-flash"",
    "".t"":         ""application/x-troff"",
    "".talk"":      ""text/x-speech"",
    "".tar"":       ""application/x-tar"",
    "".tbk"":       ""application/toolbook"",
    "".tcl"":       ""text/x-scripttcl"",
    "".tcsh"":      ""text/x-scripttcsh"",
    "".tex"":       ""application/x-tex"",
    "".texi"":      ""application/x-texinfo"",
    "".texinfo"":   ""application/x-texinfo"",
    "".text"":      ""text/plain"",
    "".tgz"":       ""application/gnutar"",
    "".tif"":       ""image/tiff"",
    "".tiff"":      ""image/tiff"",
    "".tr"":        ""application/x-troff"",
    "".tsi"":       ""audio/tsp-audio"",
    "".tsp"":       ""application/dsptype"",
    "".tsv"":       ""text/tab-separated-values"",
    "".turbot"":    ""image/florian"",
    "".txt"":       ""text/plain"",
    "".uil"":       ""text/x-uil"",
    "".uni"":       ""text/uri-list"",
    "".unis"":      ""text/uri-list"",
    "".unv"":       ""application/i-deas"",
    "".uri"":       ""text/uri-list"",
    "".uris"":      ""text/uri-list"",
    "".ustar"":     ""application/x-ustar"",
    "".uu"":        ""text/x-uuencode"",
    "".uue"":       ""text/x-uuencode"",
    "".vcd"":       ""application/x-cdlink"",
    "".vcf"":       ""text/x-vcard"",
    "".vcard"":     ""text/x-vcard"",
    "".vcs"":       ""text/x-vcalendar"",
    "".vda"":       ""application/vda"",
    "".vdo"":       ""video/vdo"",
    "".vew"":       ""application/groupwise"",
    "".viv"":       ""video/vivo"",
    "".vivo"":      ""video/vivo"",
    "".vmd"":       ""application/vocaltec-media-desc"",
    "".vmf"":       ""application/vocaltec-media-file"",
    "".voc"":       ""audio/voc"",
    "".vos"":       ""video/vosaic"",
    "".vox"":       ""audio/voxware"",
    "".vqe"":       ""audio/x-twinvq-plugin"",
    "".vqf"":       ""audio/x-twinvq"",
    "".vql"":       ""audio/x-twinvq-plugin"",
    "".vrml"":      ""application/x-vrml"",
    "".vrt"":       ""x-world/x-vrt"",
    "".vsd"":       ""application/x-visio"",
    "".vst"":       ""application/x-visio"",
    "".vsw"":       ""application/x-visio"",
    "".w60"":       ""application/wordperfect60"",
    "".w61"":       ""application/wordperfect61"",
    "".w6w"":       ""application/msword"",
    "".wav"":       ""audio/wav"",
    "".wb1"":       ""application/x-qpro"",
    "".wbmp"":      ""image/vnd.wap.wbmp"",
    "".web"":       ""application/vndxara"",
    "".wiz"":       ""application/msword"",
    "".wk1"":       ""application/x-123"",
    "".wmf"":       ""windows/metafile"",
    "".wml"":       ""text/vnd.wap.wml"",
    "".wmlc"":      ""application/vnd.wap.wmlc"",
    "".wmls"":      ""text/vnd.wap.wmlscript"",
    "".wmlsc"":     ""application/vnd.wap.wmlscriptc"",
    "".word"":      ""application/msword"",
    "".wp5"":       ""application/wordperfect"",
    "".wp6"":       ""application/wordperfect"",
    "".wp"":        ""application/wordperfect"",
    "".wpd"":       ""application/wordperfect"",
    "".wq1"":       ""application/x-lotus"",
    "".wri"":       ""application/mswrite"",
    "".wrl"":       ""application/x-world"",
    "".wrz"":       ""model/vrml"",
    "".wsc"":       ""text/scriplet"",
    "".wsrc"":      ""application/x-wais-source"",
    "".wtk"":       ""application/x-wintalk"",
    "".x-png"":     ""image/png"",
    "".xbm"":       ""image/x-xbitmap"",
    "".xdr"":       ""video/x-amt-demorun"",
    "".xgz"":       ""xgl/drawing"",
    "".xif"":       ""image/vndxiff"",
    "".xl"":        ""application/excel"",
    "".xla"":       ""application/excel"",
    "".xlb"":       ""application/excel"",
    "".xlc"":       ""application/excel"",
    "".xld"":       ""application/excel"",
    "".xlk"":       ""application/excel"",
    "".xll"":       ""application/excel"",
    "".xlm"":       ""application/excel"",
    "".xls"":       ""application/excel"",
    "".xlt"":       ""application/excel"",
    "".xlv"":       ""application/excel"",
    "".xlw"":       ""application/excel"",
    "".xm"":        ""audio/xm"",
    "".xml"":       ""text/xml"",
    "".xmz"":       ""xgl/movie"",
    "".xpix"":      ""application/x-vndls-xpix"",
    "".xpm"":       ""image/x-xpixmap"",
    "".xsr"":       ""video/x-amt-showrun"",
    "".xwd"":       ""image/x-xwd"",
    "".xyz"":       ""chemical/x-pdb"",
    "".z"":         ""application/x-compress"",
    "".zip"":       ""application/zip"",
    "".zoo"":       ""application/octet-stream"",
    "".zsh"":       ""text/x-scriptzsh"",
    "".docx"":      ""application/vnd.openxmlformats-officedocument.wordprocessingml.document"",
    "".docm"":      ""application/vnd.ms-word.document.macroEnabled.12"",
    "".dotx"":      ""application/vnd.openxmlformats-officedocument.wordprocessingml.template"",
    "".dotm"":      ""application/vnd.ms-word.template.macroEnabled.12"",
    "".xlsx"":      ""application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"",
    "".xlsm"":      ""application/vnd.ms-excel.sheet.macroEnabled.12"",
    "".xltx"":      ""application/vnd.openxmlformats-officedocument.spreadsheetml.template"",
    "".xltm"":      ""application/vnd.ms-excel.template.macroEnabled.12"",
    "".xlsb"":      ""application/vnd.ms-excel.sheet.binary.macroEnabled.12"",
    "".xlam"":      ""application/vnd.ms-excel.addin.macroEnabled.12"",
    "".pptx"":      ""application/vnd.openxmlformats-officedocument.presentationml.presentation"",
    "".pptm"":      ""application/vnd.ms-powerpoint.presentation.macroEnabled.12"",
    "".ppsx"":      ""application/vnd.openxmlformats-officedocument.presentationml.slideshow"",
    "".ppsm"":      ""application/vnd.ms-powerpoint.slideshow.macroEnabled.12"",
    "".potx"":      ""application/vnd.openxmlformats-officedocument.presentationml.template"",
    "".potm"":      ""application/vnd.ms-powerpoint.template.macroEnabled.12"",
    "".ppam"":      ""application/vnd.ms-powerpoint.addin.macroEnabled.12"",
    "".sldx"":      ""application/vnd.openxmlformats-officedocument.presentationml.slide"",
    "".sldm"":      ""application/vnd.ms-powerpoint.slide.macroEnabled.12"",
    "".thmx"":      ""application/vnd.ms-officetheme"",
    "".onetoc"":    ""application/onenote"",
    "".onetoc2"":   ""application/onenote"",
    "".onetmp"":    ""application/onenote"",
    "".onepkg"":    ""application/onenote"",
    "".xpi"":       ""application/x-xpinstall"",
}

func init() {
    for ext, typ := range types {
        // skip errors
        mime.AddExtensionType(ext, typ)
    }
}

// typeByExtension returns the MIME type associated with the file extension ext.
// The extension ext should begin with a leading dot, as in "".html"".
// When ext has no associated type, typeByExtension returns """".
//
// Extensions are looked up first case-sensitively, then case-insensitively.
//
// The built-in table is small but on unix it is augmented by the local
// system's mime.types file(s) if available under one or more of these
// names:
//
//   /etc/mime.types
//   /etc/apache2/mime.types
//   /etc/apache/mime.types
//
// On Windows, MIME types are extracted from the registry.
//
// Text types have the charset parameter set to ""utf-8"" by default.
func TypeByExtension(fullfilename string) string {
    ext := filepath.Ext(fullfilename)
    typ := mime.TypeByExtension(ext)

    // mime.TypeByExtension returns as text/plain; | charset=utf-8 the static .js (not always)
    if ext == "".js"" && (typ == ""text/plain"" || typ == ""text/plain; charset=utf-8"") {

        if ext == "".js"" {
            typ = ""application/javascript""
        }
    }
    return typ
}
",23652
525,43438219,"package llvm.org/llvm/bindings/go/llvm: unrecognized import path ""llvm.org/llvm/bindings/go/llvm"" (parse https://llvm.org/llvm/bindings/go/llvm?go-get=1: no go-import meta tags ())
",181
526,43438219,"package llvm.org/llvm/bindings: unrecognized import path ""llvm.org/llvm/bindings"" (parse https://llvm.org/llvm/bindings?go-get=1: no go-import meta tags ())
",157
527,43438219,go get,6
528,43438219,https://llvm.org/,17
529,43438219,"Not Found
The requested URL / was not found on this server.
Apache/2.2.22 (Ubuntu) Server at llvm.org Port 443
",111
530,43438219,http://llvm.org,15
531,43438219,github.com/go-llvm/llgo,23
532,43438219,"guest@system:~/go/src/github.com/go-llvm/llgo$ ./llgo-go.sh build
can't load package: package github.com/go-llvm/llgo: no buildable Go source files in /home/guest/go/src/github.com/go-llvm/llgo
guest@system:~/go/src/github.com/go-llvm/llgo$ ./llgo-go.sh install
can't load package: package github.com/go-llvm/llgo: no buildable Go source files in /home/guest/go/src/github.com/go-llvm/llgo
guest@system:~/go/src/github.com/go-llvm/llgo$ ./llgo-go.sh install
can't load package: package github.com/go-llvm/llgo: no buildable Go source files in /home/guest/go/src/github.com/go-llvm/llgo
guest@system:~/go/src/github.com/go-llvm/llgo$ make
./update_clang.sh
can't load package: package llvm.org/llvm/bindings/go/llvm: cannot find package ""llvm.org/llvm/bindings/go/llvm"" in any of:
    /usr/lib/go-1.8/src/llvm.org/llvm/bindings/go/llvm (from $GOROOT)
    /home/guest/go/src/llvm.org/llvm/bindings/go/llvm (from $GOPATH)
Makefile:25: recipe for target 'workdir/.update-clang-stamp' failed
make: *** [workdir/.update-clang-stamp] Error 1
guest@system:~/go/src/github.com/go-llvm/llgo$ export PATH=/path/to/gcc-inst/bin:$PATH
guest@system:~/go/src/github.com/go-llvm/llgo$ export LD_LIBRARY_PATH=/path/to/gcc-inst/lib64:$LD_LIBRARY_PATH
guest@system:~/go/src/github.com/go-llvm/llgo$ export CC=`which gcc`
guest@system:~/go/src/github.com/go-llvm/llgo$ export CXX=`which g++`
guest@system:~/go/src/github.com/go-llvm/llgo$ export LIBGO_CFLAGS=--gcc-toolchain=/path/to/gcc-inst
guest@system:~/go/src/github.com/go-llvm/llgo$ go get -d github.com/go-llvm/llgo/cmd/gllgo
package llvm.org/llvm/bindings/go/llvm: unrecognized import path ""llvm.org/llvm/bindings/go/llvm"" (parse https://llvm.org/llvm/bindings/go/llvm?go-get=1: no go-import meta tags ())
package golang.org/x/tools/go/exact: cannot find package ""golang.org/x/tools/go/exact"" in any of:
    /usr/lib/go-1.8/src/golang.org/x/tools/go/exact (from $GOROOT)
    /home/guest/go/src/golang.org/x/tools/go/exact (from $GOPATH)
package golang.org/x/tools/go/gccgoimporter: cannot find package ""golang.org/x/tools/go/gccgoimporter"" in any of:
    /usr/lib/go-1.8/src/golang.org/x/tools/go/gccgoimporter (from $GOROOT)
    /home/guest/go/src/golang.org/x/tools/go/gccgoimporter (from $GOPATH)
package golang.org/x/tools/go/importer: cannot find package ""golang.org/x/tools/go/importer"" in any of:
    /usr/lib/go-1.8/src/golang.org/x/tools/go/importer (from $GOROOT)
    /home/guest/go/src/golang.org/x/tools/go/importer (from $GOPATH)
guest@system:~/go/src/github.com/go-llvm/llgo$ $GOPATH/src/llvm.org/llvm/bindings/go/build.sh -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD=host
bash: /home/guest/go/src/llvm.org/llvm/bindings/go/build.sh: No such file or directory
guest@system:~/go/src/github.com/go-llvm/llgo$ 
",2767
533,43438219,"$ go version
go version go1.8 linux/amd64
$ cmake -version
cmake version 3.8.20170216-gb9229

CMake suite maintained and supported by Kitware (kitware.com/cmake).
",163
534,43438219,"+ llvm_components=all-targets analysis asmparser asmprinter bitreader bitwriter codegen core debuginfo executionengine instrumentation interpreter ipo irreader linker mc mcjit objcarcopts option profiledata scalaropts support target 
+ dirname ./update_llvm.sh
+ gollvmdir=.
+ grep run_update_llvm_sh_to_get_revision_ ./llvm_dep.go
+ sed -E -e s/.*run_update_llvm_sh_to_get_revision_([0-9]+.*)/\1/g
+ llvmrev=218171
+ workdir=./workdir
+ llvmdir=./workdir/llvm
+ llvm_builddir=./workdir/llvm_build
+ mkdir -p ./workdir
+ svn co -r 218171 https://llvm.org/svn/llvm-project/llvm/trunk ./workdir/llvm
Checked out revision 218171.
+ mkdir -p ./workdir/llvm_build
+ cmake_flags=../llvm 
+ llvm_config=./workdir/llvm_build/bin/llvm-config
+ which ninja
+ test -n /usr/bin/ninja
+ cd ./workdir/llvm_build
+ cmake -G Ninja ../llvm
-- Target triple: x86_64-unknown-linux-gnu
-- Native target architecture is X86
-- Threads enabled.
-- Doxygen disabled.
-- Sphinx disabled.
CMake Warning (dev) at cmake/modules/HandleLLVMOptions.cmake:131 (if):
  Policy CMP0054 is not set: Only interpret if() arguments as variables or
  keywords when unquoted.  Run ""cmake --help-policy CMP0054"" for policy
  details.  Use the cmake_policy command to set the policy and suppress this
  warning.

  Quoted variables like ""C_SUPPORTS_FPIC"" will no longer be dereferenced when
  the policy is set to NEW.  Since the policy is not set the OLD behavior
  will be used.
Call Stack (most recent call first):
  cmake/modules/HandleLLVMOptions.cmake:148 (add_flag_or_print_warning)
  CMakeLists.txt:315 (include)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Building with -fPIC
-- Constructing LLVMBuild project information
-- Targeting AArch64
-- Targeting ARM
-- Targeting CppBackend
-- Targeting Hexagon
-- Targeting Mips
-- Targeting MSP430
-- Targeting NVPTX
-- Targeting PowerPC
-- Targeting R600
-- Targeting Sparc
-- Targeting SystemZ
-- Targeting X86
-- Targeting XCore
-- Configuring done
-- Generating done
-- Build files have been written to: /home/guest/go/src/github.com/go-llvm/llvm/workdir/llvm_build
+ ninja -C ./workdir/llvm_build llvm-config
ninja: Entering directory `./workdir/llvm_build'
[2/2] Linking CXX executable bin/llvm-config
+ ./workdir/llvm_build/bin/llvm-config --libs all-targets analysis asmparser asmprinter bitreader bitwriter codegen core debuginfo executionengine instrumentation interpreter ipo irreader linker mc mcjit objcarcopts option profiledata scalaropts support target
+ sed -e s/-l//g
+ llvm_buildtargets=LLVMOption LLVMObjCARCOpts LLVMMCJIT LLVMRuntimeDyld LLVMLinker LLVMIRReader LLVMipo LLVMVectorize LLVMInterpreter LLVMInstrumentation LLVMExecutionEngine LLVMDebugInfo LLVMBitWriter LLVMAsmParser LLVMXCoreDisassembler LLVMXCoreCodeGen LLVMXCoreDesc LLVMXCoreInfo LLVMXCoreAsmPrinter LLVMX86Disassembler LLVMX86AsmParser LLVMX86CodeGen LLVMX86Desc LLVMX86Info LLVMX86AsmPrinter LLVMX86Utils LLVMSystemZDisassembler LLVMSystemZCodeGen LLVMSystemZAsmParser LLVMSystemZDesc LLVMSystemZInfo LLVMSystemZAsmPrinter LLVMSparcDisassembler LLVMSparcCodeGen LLVMSparcAsmParser LLVMSparcDesc LLVMSparcInfo LLVMSparcAsmPrinter LLVMR600CodeGen LLVMR600Desc LLVMR600Info LLVMR600AsmPrinter LLVMPowerPCDisassembler LLVMPowerPCCodeGen LLVMPowerPCAsmParser LLVMPowerPCDesc LLVMPowerPCInfo LLVMPowerPCAsmPrinter LLVMNVPTXCodeGen LLVMNVPTXDesc LLVMNVPTXInfo LLVMNVPTXAsmPrinter LLVMMSP430CodeGen LLVMMSP430Desc LLVMMSP430Info LLVMMSP430AsmPrinter LLVMMipsDisassembler LLVMMipsCodeGen LLVMMipsAsmParser LLVMMipsDesc LLVMMipsInfo LLVMMipsAsmPrinter LLVMHexagonCodeGen LLVMHexagonAsmPrinter LLVMHexagonDesc LLVMHexagonInfo LLVMCppBackendCodeGen LLVMCppBackendInfo LLVMARMDisassembler LLVMARMCodeGen LLVMARMAsmParser LLVMARMDesc LLVMARMInfo LLVMARMAsmPrinter LLVMAArch64Disassembler LLVMMCDisassembler LLVMAArch64CodeGen LLVMSelectionDAG LLVMAsmPrinter LLVMCodeGen LLVMScalarOpts LLVMProfileData LLVMObject LLVMBitReader LLVMInstCombine LLVMTransformUtils LLVMipa LLVMAnalysis LLVMTarget LLVMCore LLVMAArch64AsmParser LLVMMCParser LLVMAArch64Desc LLVMAArch64Info LLVMAArch64AsmPrinter LLVMMC LLVMAArch64Utils LLVMSupport
+ ninja -C ./workdir/llvm_build LLVMOption LLVMObjCARCOpts LLVMMCJIT LLVMRuntimeDyld LLVMLinker LLVMIRReader LLVMipo LLVMVectorize LLVMInterpreter LLVMInstrumentation LLVMExecutionEngine LLVMDebugInfo LLVMBitWriter LLVMAsmParser LLVMXCoreDisassembler LLVMXCoreCodeGen LLVMXCoreDesc LLVMXCoreInfo LLVMXCoreAsmPrinter LLVMX86Disassembler LLVMX86AsmParser LLVMX86CodeGen LLVMX86Desc LLVMX86Info LLVMX86AsmPrinter LLVMX86Utils LLVMSystemZDisassembler LLVMSystemZCodeGen LLVMSystemZAsmParser LLVMSystemZDesc LLVMSystemZInfo LLVMSystemZAsmPrinter LLVMSparcDisassembler LLVMSparcCodeGen LLVMSparcAsmParser LLVMSparcDesc LLVMSparcInfo LLVMSparcAsmPrinter LLVMR600CodeGen LLVMR600Desc LLVMR600Info LLVMR600AsmPrinter LLVMPowerPCDisassembler LLVMPowerPCCodeGen LLVMPowerPCAsmParser LLVMPowerPCDesc LLVMPowerPCInfo LLVMPowerPCAsmPrinter LLVMNVPTXCodeGen LLVMNVPTXDesc LLVMNVPTXInfo LLVMNVPTXAsmPrinter LLVMMSP430CodeGen LLVMMSP430Desc LLVMMSP430Info LLVMMSP430AsmPrinter LLVMMipsDisassembler LLVMMipsCodeGen LLVMMipsAsmParser LLVMMipsDesc LLVMMipsInfo LLVMMipsAsmPrinter LLVMHexagonCodeGen LLVMHexagonAsmPrinter LLVMHexagonDesc LLVMHexagonInfo LLVMCppBackendCodeGen LLVMCppBackendInfo LLVMARMDisassembler LLVMARMCodeGen LLVMARMAsmParser LLVMARMDesc LLVMARMInfo LLVMARMAsmPrinter LLVMAArch64Disassembler LLVMMCDisassembler LLVMAArch64CodeGen LLVMSelectionDAG LLVMAsmPrinter LLVMCodeGen LLVMScalarOpts LLVMProfileData LLVMObject LLVMBitReader LLVMInstCombine LLVMTransformUtils LLVMipa LLVMAnalysis LLVMTarget LLVMCore LLVMAArch64AsmParser LLVMMCParser LLVMAArch64Desc LLVMAArch64Info LLVMAArch64AsmPrinter LLVMMC LLVMAArch64Utils LLVMSupport FileCheck
ninja: Entering directory `./workdir/llvm_build'
ninja: no work to do.
+ ./workdir/llvm_build/bin/llvm-config --version
+ llvm_version=3.6.0svn
+ ./workdir/llvm_build/bin/llvm-config --cppflags
+ llvm_cflags=-I/home/guest/go/src/github.com/go-llvm/llvm/workdir/llvm/include -I/home/guest/go/src/github.com/go-llvm/llvm/workdir/llvm_build/include    -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS
+ uname
+ [ Linux == Darwin ]
./update_llvm.sh: 59: [: Linux: unexpected operator
+ ./workdir/llvm_build/bin/llvm-config --ldflags
+ ./workdir/llvm_build/bin/llvm-config --libdir
+ ./workdir/llvm_build/bin/llvm-config --libs all-targets analysis asmparser asmprinter bitreader bitwriter codegen core debuginfo executionengine instrumentation interpreter ipo irreader linker mc mcjit objcarcopts option profiledata scalaropts support target
+ ./workdir/llvm_build/bin/llvm-config --system-libs
+ llvm_ldflags=-L/home/guest/go/src/github.com/go-llvm/llvm/workdir/llvm_build//lib  -Wl,-rpath,/home/guest/go/src/github.com/go-llvm/llvm/workdir/llvm_build//lib -lLLVMOption -lLLVMObjCARCOpts -lLLVMMCJIT -lLLVMRuntimeDyld -lLLVMLinker -lLLVMIRReader -lLLVMipo -lLLVMVectorize -lLLVMInterpreter -lLLVMInstrumentation -lLLVMExecutionEngine -lLLVMDebugInfo -lLLVMBitWriter -lLLVMAsmParser -lLLVMXCoreDisassembler -lLLVMXCoreCodeGen -lLLVMXCoreDesc -lLLVMXCoreInfo -lLLVMXCoreAsmPrinter -lLLVMX86Disassembler -lLLVMX86AsmParser -lLLVMX86CodeGen -lLLVMX86Desc -lLLVMX86Info -lLLVMX86AsmPrinter -lLLVMX86Utils -lLLVMSystemZDisassembler -lLLVMSystemZCodeGen -lLLVMSystemZAsmParser -lLLVMSystemZDesc -lLLVMSystemZInfo -lLLVMSystemZAsmPrinter -lLLVMSparcDisassembler -lLLVMSparcCodeGen -lLLVMSparcAsmParser -lLLVMSparcDesc -lLLVMSparcInfo -lLLVMSparcAsmPrinter -lLLVMR600CodeGen -lLLVMR600Desc -lLLVMR600Info -lLLVMR600AsmPrinter -lLLVMPowerPCDisassembler -lLLVMPowerPCCodeGen -lLLVMPowerPCAsmParser -lLLVMPowerPCDesc -lLLVMPowerPCInfo -lLLVMPowerPCAsmPrinter -lLLVMNVPTXCodeGen -lLLVMNVPTXDesc -lLLVMNVPTXInfo -lLLVMNVPTXAsmPrinter -lLLVMMSP430CodeGen -lLLVMMSP430Desc -lLLVMMSP430Info -lLLVMMSP430AsmPrinter -lLLVMMipsDisassembler -lLLVMMipsCodeGen -lLLVMMipsAsmParser -lLLVMMipsDesc -lLLVMMipsInfo -lLLVMMipsAsmPrinter -lLLVMHexagonCodeGen -lLLVMHexagonAsmPrinter -lLLVMHexagonDesc -lLLVMHexagonInfo -lLLVMCppBackendCodeGen -lLLVMCppBackendInfo -lLLVMARMDisassembler -lLLVMARMCodeGen -lLLVMARMAsmParser -lLLVMARMDesc -lLLVMARMInfo -lLLVMARMAsmPrinter -lLLVMAArch64Disassembler -lLLVMMCDisassembler -lLLVMAArch64CodeGen -lLLVMSelectionDAG -lLLVMAsmPrinter -lLLVMCodeGen -lLLVMScalarOpts -lLLVMProfileData -lLLVMObject -lLLVMBitReader -lLLVMInstCombine -lLLVMTransformUtils -lLLVMipa -lLLVMAnalysis -lLLVMTarget -lLLVMCore -lLLVMAArch64AsmParser -lLLVMMCParser -lLLVMAArch64Desc -lLLVMAArch64Info -lLLVMAArch64AsmPrinter -lLLVMMC -lLLVMAArch64Utils -lLLVMSupport -lrt -ldl -ltinfo -latomic -lpthread -lz
+ sed -e s#@LLVM_REVISION@#218171#g; s#@LLVM_CFLAGS@#-I/home/guest/go/src/github.com/go-llvm/llvm/workdir/llvm/include -I/home/guest/go/src/github.com/go-llvm/llvm/workdir/llvm_build/include    -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS#g;         s#@LLVM_LDFLAGS@#-L/home/guest/go/src/github.com/go-llvm/llvm/workdir/llvm_build//lib  -Wl,-rpath,/home/guest/go/src/github.com/go-llvm/llvm/workdir/llvm_build//lib -lLLVMOption -lLLVMObjCARCOpts -lLLVMMCJIT -lLLVMRuntimeDyld -lLLVMLinker -lLLVMIRReader -lLLVMipo -lLLVMVectorize -lLLVMInterpreter -lLLVMInstrumentation -lLLVMExecutionEngine -lLLVMDebugInfo -lLLVMBitWriter -lLLVMAsmParser -lLLVMXCoreDisassembler -lLLVMXCoreCodeGen -lLLVMXCoreDesc -lLLVMXCoreInfo -lLLVMXCoreAsmPrinter -lLLVMX86Disassembler -lLLVMX86AsmParser -lLLVMX86CodeGen -lLLVMX86Desc -lLLVMX86Info -lLLVMX86AsmPrinter -lLLVMX86Utils -lLLVMSystemZDisassembler -lLLVMSystemZCodeGen -lLLVMSystemZAsmParser -lLLVMSystemZDesc -lLLVMSystemZInfo -lLLVMSystemZAsmPrinter -lLLVMSparcDisassembler -lLLVMSparcCodeGen -lLLVMSparcAsmParser -lLLVMSparcDesc -lLLVMSparcInfo -lLLVMSparcAsmPrinter -lLLVMR600CodeGen -lLLVMR600Desc -lLLVMR600Info -lLLVMR600AsmPrinter -lLLVMPowerPCDisassembler -lLLVMPowerPCCodeGen -lLLVMPowerPCAsmParser -lLLVMPowerPCDesc -lLLVMPowerPCInfo -lLLVMPowerPCAsmPrinter -lLLVMNVPTXCodeGen -lLLVMNVPTXDesc -lLLVMNVPTXInfo -lLLVMNVPTXAsmPrinter -lLLVMMSP430CodeGen -lLLVMMSP430Desc -lLLVMMSP430Info -lLLVMMSP430AsmPrinter -lLLVMMipsDisassembler -lLLVMMipsCodeGen -lLLVMMipsAsmParser -lLLVMMipsDesc -lLLVMMipsInfo -lLLVMMipsAsmPrinter -lLLVMHexagonCodeGen -lLLVMHexagonAsmPrinter -lLLVMHexagonDesc -lLLVMHexagonInfo -lLLVMCppBackendCodeGen -lLLVMCppBackendInfo -lLLVMARMDisassembler -lLLVMARMCodeGen -lLLVMARMAsmParser -lLLVMARMDesc -lLLVMARMInfo -lLLVMARMAsmPrinter -lLLVMAArch64Disassembler -lLLVMMCDisassembler -lLLVMAArch64CodeGen -lLLVMSelectionDAG -lLLVMAsmPrinter -lLLVMCodeGen -lLLVMScalarOpts -lLLVMProfileData -lLLVMObject -lLLVMBitReader -lLLVMInstCombine -lLLVMTransformUtils -lLLVMipa -lLLVMAnalysis -lLLVMTarget -lLLVMCore -lLLVMAArch64AsmParser -lLLVMMCParser -lLLVMAArch64Desc -lLLVMAArch64Info -lLLVMAArch64AsmPrinter -lLLVMMC -lLLVMAArch64Utils -lLLVMSupport -lrt -ldl -ltinfo -latomic -lpthread -lz#g ./llvm_config.go.in
+ printf package llvm\n\nconst Version = ""%s""\n 3.6.0svn
",11078
535,43438219,"; ModuleID = 'fac_module'

define i32 @fac(i32) {
entry:
  %cmptmp = icmp eq i32 %0, 0
  br i1 %cmptmp, label %end, label %iffalse

iffalse:                                          ; preds = %entry
  %subtmp = add i32 %0, -1
  %calltmp = call i32 @fac(i32 %subtmp)
  %multmp = mul i32 %calltmp, %0
  br label %end

end:                                              ; preds = %entry, %iffalse
  %result = phi i32 [ %multmp, %iffalse ], [ 1, %entry ]
  ret i32 %result
}
-----------------------------------------
Running fac(10) with JIT...
Result: 3628800
DONE
",561
536,43438219,"guest@system:~$ go get llvm.org/llvm.v36/bindings/go/llvm
package llvm.org/llvm.v36/bindings/go/llvm: unrecognized import path ""llvm.org/llvm.v36/bindings/go/llvm"" (parse https://llvm.org/llvm.v36/bindings/go/llvm?go-get=1: no go-import meta tags ())
guest@system:~$ go get -d llvm.org/llvm.v36/bindings/go/llvm
package llvm.org/llvm.v36/bindings/go/llvm: unrecognized import path ""llvm.org/llvm.v36/bindings/go/llvm"" (parse https://llvm.org/llvm.v36/bindings/go/llvm?go-get=1: no go-import meta tags ())
",505
537,43438219,"$ which llvm-config
/usr/bin/llvm-config

guest@system:~/go/src/github.com/go-llvm/llvm/workdir/llvm_build/bin$ ls
FileCheck  llvm-config  llvm-lit  llvm-tblgen
",161
538,43438219,"Cloning into '/tmp/update_third_party.auPNC9/gofrontend'...
remote: Sending approximately 92.68 MiB ...
remote: Counting objects: 3087, done
remote: Finding sources: 100% (69/69)
remote: Total 33940 (delta 26755), reused 33933 (delta 26755)
Receiving objects: 100% (33940/33940), 92.79 MiB | 60.00 KiB/s, done.
Resolving deltas: 100% (26755/26755), done.
Checking connectivity... done.
Note: checking out '81eb6a3f425b2158c67ee32c0cc973a72ce9d6be'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b 

HEAD is now at 81eb6a3... runtime: don't overallocate in select code
patching file libgo/runtime/chan.goc
patching file libgo/runtime/chan.h
patching file libgo/runtime/heapdump.c
patching file libgo/runtime/malloc.goc
patching file libgo/runtime/malloc.h
Hunk #1 succeeded at 392 (offset 2 lines).
Hunk #2 succeeded at 403 (offset 2 lines).
Hunk #3 succeeded at 460 (offset 2 lines).
Hunk #4 succeeded at 478 (offset 2 lines).
Hunk #5 succeeded at 507 (offset 2 lines).
patching file libgo/runtime/mcache.c
patching file libgo/runtime/mcentral.c
patching file libgo/runtime/mgc0.c
Hunk #3 succeeded at 1380 (offset 2 lines).
Hunk #4 succeeded at 1390 (offset 2 lines).
Hunk #5 succeeded at 1804 (offset 2 lines).
Hunk #6 succeeded at 2151 (offset 4 lines).
Hunk #7 succeeded at 2428 (offset 5 lines).
Hunk #8 succeeded at 2443 (offset 5 lines).
Hunk #9 succeeded at 2451 (offset 5 lines).
patching file libgo/runtime/mheap.c
patching file libgo/runtime/netpoll.goc
patching file libgo/runtime/proc.c
Hunk #1 succeeded at 326 (offset 24 lines).
Hunk #2 succeeded at 809 (offset 100 lines).
Hunk #3 succeeded at 820 (offset 100 lines).
Hunk #4 succeeded at 847 (offset 100 lines).
Hunk #5 succeeded at 855 (offset 100 lines).
Hunk #6 succeeded at 864 (offset 100 lines).
Hunk #7 succeeded at 881 (offset 100 lines).
Hunk #8 succeeded at 894 (offset 100 lines).
Hunk #9 succeeded at 933 (offset 100 lines).
Hunk #10 succeeded at 953 (offset 100 lines).
Hunk #11 succeeded at 987 (offset 100 lines).
Hunk #12 succeeded at 1011 (offset 100 lines).
Hunk #13 succeeded at 1452 (offset 106 lines).
Hunk #14 succeeded at 1481 (offset 106 lines).
Hunk #15 succeeded at 1525 (offset 106 lines).
Hunk #16 succeeded at 1618 (offset 106 lines).
Hunk #17 succeeded at 1673 (offset 106 lines).
Hunk #18 succeeded at 1709 (offset 106 lines).
Hunk #19 succeeded at 1730 (offset 106 lines).
Hunk #20 succeeded at 1749 (offset 106 lines).
Hunk #21 succeeded at 1794 (offset 106 lines).
Hunk #22 succeeded at 1832 (offset 106 lines).
Hunk #23 succeeded at 1928 (offset 106 lines).
Hunk #24 succeeded at 2031 (offset 106 lines).
Hunk #25 succeeded at 2159 (offset 106 lines).
Hunk #26 succeeded at 2184 (offset 106 lines).
Hunk #27 succeeded at 2192 (offset 106 lines).
Hunk #28 succeeded at 2484 (offset 119 lines).
Hunk #29 succeeded at 2595 (offset 119 lines).
Hunk #30 succeeded at 2627 (offset 119 lines).
Hunk #31 succeeded at 2657 (offset 119 lines).
Hunk #32 succeeded at 2682 (offset 119 lines).
Hunk #33 succeeded at 2826 (offset 119 lines).
Hunk #34 succeeded at 2906 (offset 126 lines).
Hunk #35 succeeded at 3044 (offset 126 lines).
Hunk #36 succeeded at 3080 (offset 126 lines).
Hunk #37 succeeded at 3112 (offset 126 lines).
Hunk #38 succeeded at 3268 (offset 126 lines).
Hunk #39 succeeded at 3422 (offset 126 lines).
patching file libgo/runtime/runtime.h
patching file libgo/runtime/sema.goc
patching file libgo/runtime/sigqueue.goc
patching file libgo/runtime/time.goc
patching file libgo/Makefile.am
Hunk #1 succeeded at 4139 (offset 401 lines).
Hunk #2 succeeded at 4246 (offset 409 lines).
patching file libgo/Makefile.in
Hunk #1 succeeded at 2433 (offset 221 lines).
Hunk #2 succeeded at 2540 (offset 229 lines).
patching file libgo/go/runtime/mfinal_test.go
Hunk #1 succeeded at 65 (offset 3 lines).
cp: cannot stat '../../cmake/config.guess': No such file or directory
",4208
539,43515002,"go version go1.7.4 linux/amd64
",31
540,43515002,"package main

import (
    ""context""
    ""encoding/json""
    ""fmt""
    ""html/template""
    ""io/ioutil""
    ""log""
    ""net/http""
    ""net/url""

    ""golang.org/x/oauth2""
    ""gopkg.in/oauth2.v3/errors""
    ""gopkg.in/oauth2.v3/manage""
    ""gopkg.in/oauth2.v3/models""
    ""gopkg.in/oauth2.v3/server""
    ""gopkg.in/oauth2.v3/store""
    ""gopkg.in/session.v1""
)

var (
    config = oauth2.Config{
        ClientID:     ""222222"",
        ClientSecret: ""22222222"",
        Scopes:       []string{""all""},
        RedirectURL:  ""https://pitangui.amazon.com/spa/skill/account-linking-status.html?vendorId=xxxxxxxxxxxx"",
        Endpoint: oauth2.Endpoint{
            AuthURL:  ""/authorize"",
            TokenURL: ""/token"",
        },
    }
    globalSessions *session.Manager
)

func init() {
    globalSessions, _ = session.NewManager(""memory"", `{""cookieName"":""gosessionid"",""gclifetime"":3600}`)
    go globalSessions.GC()
}

func mainHandler(w http.ResponseWriter, r *http.Request) {

    w.Write([]byte(""hello world""))
    fmt.Println(""loginHandler"")
}

/*
Function Name : main()

Function Description :    This function is capable of running this application and listen for requests comming in

*/
func main() {
    http.HandleFunc(""/home"", mainHandler)

    // Listen to port 8080 and handle requests

    //------------------------------client.go--------------------------------------------//
    http.HandleFunc(""/client"", func(w http.ResponseWriter, r *http.Request) {
        log.Println(""client"")
        u := config.AuthCodeURL(""xyz"")
        http.Redirect(w, r, u, http.StatusFound)
    })
    http.HandleFunc(""/oauth2"", func(w http.ResponseWriter, r *http.Request) {
        log.Println(""oauth2"")
        log.Println(""request url is"", r.RequestURI)
        log.Println(""request method"", r.Method)
        requestbody, _ := ioutil.ReadAll(r.Body)
        log.Println(""request body is"", string(requestbody))
        log.Println(""request body is"", requestbody)
        r.ParseForm()
        state := r.Form.Get(""state"")
        if state != ""xyz"" {
            http.Error(w, ""State invalid"", http.StatusBadRequest)
            return
        }
        code := r.Form.Get(""code"")
        log.Println(""code is"", code)
        if code == """" {
            http.Error(w, ""Code not found"", http.StatusBadRequest)
            return
        }
        token, err := config.Exchange(context.Background(), code)
        if err != nil {
            http.Error(w, err.Error(), http.StatusInternalServerError)
            return
        }
        log.Println(""w is:"", *token)
        e := json.NewEncoder(w)
        e.SetIndent("""", ""  "")
        e.Encode(*token)
    })
    //------------------------------client.go--------------------------------------------//
    //------------------------------server.go--------------------------------------------//
    manager := manage.NewDefaultManager()
    // token store
    manager.MustTokenStorage(store.NewMemoryTokenStore())

    clientStore := store.NewClientStore()
    clientStore.Set(""222222"", &models.Client{
        ID:     ""222222"",
        Secret: ""22222222"",
        Domain: """",
    })
    manager.MapClientStorage(clientStore)

    srv := server.NewServer(server.NewConfig(), manager)
    srv.SetUserAuthorizationHandler(userAuthorizeHandler)

    srv.SetInternalErrorHandler(func(err error) (re *errors.Response) {
        log.Println(""Internal Error:"", err.Error())
        return
    })

    srv.SetResponseErrorHandler(func(re *errors.Response) {
        log.Println(""Response Error:"", re.Error.Error())
    })

    http.HandleFunc(""/login"", loginHandler)
    http.HandleFunc(""/auth"", authHandler)

    http.HandleFunc(""/authorize"", func(w http.ResponseWriter, r *http.Request) {
        log.Println(""/authorize"")
        requestbody, _ := ioutil.ReadAll(r.Body)
        log.Println(""request body is"", requestbody)
        log.Println(""request url is"", r.RequestURI)
        err := srv.HandleAuthorizeRequest(w, r)
        if err != nil {
            http.Error(w, err.Error(), http.StatusBadRequest)
        }
    })

    http.HandleFunc(""/token"", func(w http.ResponseWriter, r *http.Request) {
        log.Println(""/token"")

        err := srv.HandleTokenRequest(w, r)
        if err != nil {
            http.Error(w, err.Error(), http.StatusInternalServerError)
        }
    })
    //------------------------------server.go--------------------------------------------//
    http.ListenAndServe("":8080"", nil)

}

func userAuthorizeHandler(w http.ResponseWriter, r *http.Request) (userID string, err error) {
    log.Println(""userAuthorizeHandler"")
    us, err := globalSessions.SessionStart(w, r)
    uid := us.Get(""UserID"")
    if uid == nil {
        if r.Form == nil {
            r.ParseForm()
        }
        us.Set(""Form"", r.Form)
        w.Header().Set(""Location"", ""/login"")
        w.WriteHeader(http.StatusFound)
        return
    }
    userID = uid.(string)
    us.Delete(""UserID"")
    return
}
func loginHandler(w http.ResponseWriter, r *http.Request) {

    // do whatever you need to do
    if r.Method == ""POST"" {
        fmt.Println(""login post method"")
        us, err := globalSessions.SessionStart(w, r)
        if err != nil {
            fmt.Println(""err:"", err)
            http.Error(w, err.Error(), http.StatusInternalServerError)
            return
        }
        us.Set(""LoggedInUserID"", ""000000"")
        w.Header().Set(""Location"", ""/auth"")
        w.WriteHeader(http.StatusFound)
        return
    }
    myvar := map[string]interface{}{""MyVar"": ""hiiiiiiiiiiii""}
    outputHTML(w, ""static/login.html"", myvar)
}

func authHandler(w http.ResponseWriter, r *http.Request) {
    log.Println(""authHandler"")
    log.Println(""request url is"", r.RequestURI)
    log.Println(""request method"", r.Method)
    requestbody, _ := ioutil.ReadAll(r.Body)
    log.Println(""request body is"", string(requestbody))
    log.Println(""request body is"", requestbody)
    us, err := globalSessions.SessionStart(w, r)
    if err != nil {
        http.Error(w, err.Error(), http.StatusInternalServerError)
        return
    }
    log.Println(""LoggedInUserID:"", us.Get(""LoggedInUserID""))
    if us.Get(""LoggedInUserID"") == nil {
        w.Header().Set(""Location"", ""/login"")
        w.WriteHeader(http.StatusFound)
        return
    }
    if r.Method == ""POST"" {
        form := us.Get(""Form"").(url.Values)
        log.Println(""form values entered are"", form)
        u := new(url.URL)
        u.Path = ""/authorize""
        u.RawQuery = form.Encode()
        w.Header().Set(""Location"", u.String())
        w.WriteHeader(http.StatusFound)
        us.Delete(""Form"")
        us.Set(""UserID"", us.Get(""LoggedInUserID""))
        return
    }
    myvar := map[string]interface{}{""MyVar"": ""redirect url:"" + ""https://pitangui.amazon.com/spa/skill/account-linking-status.html?vendorId=M256OAZNG882Y2""}
    outputHTML(w, ""static/auth.html"", myvar)
}

func outputHTML(w http.ResponseWriter, filename string, data interface{}) {
    t, err := template.ParseFiles(filename)
    if err != nil {
        http.Error(w, err.Error(), 500)
        return
    }
    if err := t.Execute(w, data); err != nil {
        http.Error(w, err.Error(), 500)
        return
    }
}
",7207
541,43682714,interval.go,11
542,43682714,interval_test.go,16
543,43682714,"package minfys

import (
    ""fmt""
    ""testing""
)

// Example
var (
    xA = Intervals{{10, 15}, {30, 35}, {20, 25}}
    xB = Interval{5, 32}
    xD = Intervals{{5, 9}, {16, 19}, {26, 29}}
    xR = Intervals{}
)

func BenchmarkExample(b *testing.B) {
    b.ReportAllocs()
    a := make(Intervals, len(xA))
    b.ResetTimer()
    for i := 0; i < b.N; i++ {
        copy(a, xA)
        xR = a.Difference(xB)
    }
    b.StopTimer()
    if fmt.Sprint(xD) != fmt.Sprint(xR) {
        b.Fatal(xD, xR)
    }
}
",505
544,43682714,"package minfys

func (a Intervals) Difference(b Interval) Intervals {
    // If A and B are sets, then the relative complement of A in B
    // is the set of elements in B but not in A.
    // The relative complement of A in B is denoted B ∖  A:
    //     B \ A = {x ∈ A | x ∉ B}
    //     B \ A = B ∩ A'
    //
    // For example. d = a\b,
    //     a: [{10, 15}, {30, 35}, {20, 25}]
    //     b: {5,32}
    //     d: [{5,9}, {16,19}, {26,29}]
    // The elements of set a are non-overlapping, non-adjacent,
    // and unsorted intervals.

    if len(a) <= 0 {
        return Intervals{b}
    }

    d := make(Intervals, 0, 3)
    for ; len(a) > 0; a = a[1:] {
        for i := 1; i < len(a); i++ {
            if a[i].Start < a[0].Start {
                a[i], a[0] = a[0], a[i]
            }
        }

        if b.Start < a[0].Start {
            if b.End < a[0].Start {
                d = append(d, b)
                break
            }
            d = append(d, Interval{b.Start, a[0].Start - 1})
            b.Start = a[0].Start
        }
        if b.End <= a[0].End {
            break
        }
        if b.Start <= a[0].End {
            b.Start = a[0].End + 1
        }
        if len(a) == 1 {
            if b.Start <= a[0].End {
                b.Start = a[0].End + 1
            }
            d = append(d, b)
            break
        }
    }
    return d
}
",1383
545,43682714,"BenchmarkExample-4     20000000     62.4 ns/op    48 B/op      1 allocs/op
",75
546,43682714,"// Interval struct is used to describe something with a start and end. End must
// be greater than start.
type Interval struct {
    Start int64
    End   int64
}

// Overlaps returns true if this interval overlaps with the supplied one.
func (i *Interval) Overlaps(j Interval) bool {
    // https://nedbatchelder.com/blog/201310/range_overlap_in_two_compares.html
    return i.End >= j.Start && j.End >= i.Start
}

// Intervals type is a slice of Interval.
type Intervals []Interval

// Difference returns any portions of iv that do not overlap with any of our
// intervals. Assumes that all of our intervals have been Merge()d in.
func (ivs Intervals) Difference(iv Interval) (diffs Intervals) {
    diffs = append(diffs, iv)
    for _, prior := range ivs {
        for i := 0; i < len(diffs); {
            if left, right, overlapped := prior.Difference(diffs[i]); overlapped {
                if len(diffs) == 1 {
                    diffs = nil
                } else {
                    diffs = append(diffs[:i], diffs[i+1:]...)
                }

                if left != nil {
                    diffs = append(diffs, *left)
                }
                if right != nil {
                    diffs = append(diffs, *right)
                }
            } else {
                i++
            }
        }
        if len(diffs) == 0 {
            break
        }
    }

    return
}
",1400
547,43682714,"BenchmarkExample-4      5000000    365 ns/op     128 B/op      4 allocs/op
",75
548,43682714,"old.txt (sbs) versus new.txt (peterSO):

benchmark              old ns/op     new ns/op     delta
BenchmarkExample-4     365           62.4          -82.90%

benchmark              old allocs     new allocs   delta
BenchmarkExample-4     4              1            -75.00%

benchmark              old bytes     new bytes     delta
BenchmarkExample-4     128           48            -62.50%
",391
549,43682714,interval_test.go,16
550,43682714,ShouldBeNil,11
551,43682714,ShouldBeEmpty,13
552,43682714,ShouldResemble,14
553,43682714,ShouldResemble,14
554,43682714,"$ go test
..........................................................................................................................x......................................................x................x
Failures:

  * interval_test.go 
  Line 247:
  Expected: nil
  Actual:   '[]'

  * interval_test.go 
  Line 375:
  Expected: 'minfys.Intervals{minfys.Interval{Start:5, End:6}, minfys.Interval{Start:31, End:32}, minfys.Interval{Start:11, End:14}, minfys.Interval{Start:19, End:19}}'
  Actual:   'minfys.Intervals{minfys.Interval{Start:5, End:6}, minfys.Interval{Start:11, End:14}, minfys.Interval{Start:19, End:19}, minfys.Interval{Start:31, End:32}}'
  (Should resemble)!

  * interval_test.go 
  Line 413:
  Expected: 'minfys.Intervals{minfys.Interval{Start:7, End:10}, minfys.Interval{Start:1, End:3}, minfys.Interval{Start:15, End:17}}'
  Actual:   'minfys.Intervals{minfys.Interval{Start:1, End:3}, minfys.Interval{Start:7, End:10}, minfys.Interval{Start:15, End:17}}'
  (Should resemble)!


195 total assertions

...
198 total assertions

--- FAIL: TestIntervals (0.04s)
FAIL
",1087
555,43682714,"$ diff -a -u ../interval_test.go interval_test.go
--- ../interval_test.go 2017-04-29 20:23:29.365344008 -0400
+++ interval_test.go    2017-04-29 20:54:14.349344903 -0400
@@ -244,19 +244,19 @@
            So(len(ivs), ShouldEqual, 1)

            newIvs = ivs.Difference(twoSix)
-           So(newIvs, ShouldBeNil)
+           So(newIvs, ShouldBeEmpty)
            ivs = ivs.Merge(twoSix)
            So(len(ivs), ShouldEqual, 1)

            newIvs = ivs.Difference(oneThree)
-           So(newIvs, ShouldBeNil)
+           So(newIvs, ShouldBeEmpty)
            ivs = ivs.Merge(oneThree)
            So(len(ivs), ShouldEqual, 1)

            oneSeven := Interval{1, 7}

            newIvs = ivs.Difference(oneSix)
-           So(newIvs, ShouldBeNil)
+           So(newIvs, ShouldBeEmpty)
            ivs = ivs.Merge(oneSix)
            So(len(ivs), ShouldEqual, 1)

@@ -372,7 +372,7 @@

            fiveThirtyTwo := Interval{5, 32}
            newIvs = ivs.Difference(fiveThirtyTwo)
-           So(newIvs, ShouldResemble, Intervals{Interval{5, 6}, Interval{31, 32}, Interval{11, 14}, Interval{19, 19}})
+           So(newIvs, ShouldResemble, Intervals{Interval{5, 6}, Interval{11, 14}, Interval{19, 19}, Interval{31, 32}})
            ivs = ivs.Merge(fiveThirtyTwo)
            So(len(ivs), ShouldEqual, 3)

@@ -409,7 +409,7 @@

            ivs = ivs.Truncate(17)

-           expected := Intervals{sevenTen, oneThree, Interval{15, 17}}
+           expected := Intervals{oneThree, sevenTen, Interval{15, 17}}
            So(ivs, ShouldResemble, expected)
        })
    })
",1573
556,43682714,"$ go test
.............................................................................................................................................................................................................
205 total assertions

...
208 total assertions

PASS
$ 
",272
557,43682714,interval_test.go,16
558,43682714,"$ diff -a -u ../interval_test.go walltime_test.go
--- ../interval_test.go 2017-04-29 20:23:29.365344008 -0400
+++ walltime_test.go    2017-04-30 13:39:29.000000000 -0400
@@ -24,6 +24,7 @@
    ""math/rand""
    ""testing""
    ""time""
+   ""fmt""
 )

 func TestIntervals(t *testing.T) {
@@ -459,16 +460,20 @@

        var ivs Intervals
        errors := 0
+       var diffTime time.Duration
        t := time.Now()
        for i, input := range inputs {
            iv := NewInterval(int64(input), int64(readSize))
+           before := time.Now()
            newIvs := ivs.Difference(iv)
+           diffTime += time.Since(before)
            if (len(newIvs) == 1) != exepectedNew[i] {
                errors++
            }
            ivs = ivs.Merge(iv)
        }
-       // fmt.Printf(""\ntook %s\n"", time.Since(t))
+       fmt.Printf(""took %s\n"", time.Since(t))
+       fmt.Printf(""\n  Difference took %s\n"", diffTime)
        So(errors, ShouldEqual, 0)
        So(len(ivs), ShouldEqual, 1)
        So(time.Since(t).Seconds(), ShouldBeLessThan, 1) // 42ms on my machine
$ 
",1070
559,43682714,interval_test.go,16
560,43682714,"size    frequency
0       1
1       94929
2       50072
3       4998
",69
561,43682714,"size    frequency
0       50000
1       100000
",47
562,43682714,"package minfys

func (a Intervals) Difference(b Interval) Intervals {
    // If A and B are sets, then the relative complement of A in B
    // is the set of elements in B but not in A.
    // The relative complement of A in B is denoted B ∖  A:
    //     B \ A = {x ∈ A | x ∉ B}
    //     B \ A = B ∩ A'
    //
    // For example. d = a\b,
    //     a: [{10, 15}, {30, 35}, {20, 25}]
    //     b: {5,32}
    //     d: [{5,9}, {16,19}, {26,29}]
    // The elements of set a are non-overlapping, non-adjacent,
    // and unsorted intervals.

    if len(a) <= 0 {
        return Intervals{b}
    }

    var d Intervals
    for ; len(a) > 0; a = a[1:] {
        for i := 1; i < len(a); i++ {
            if a[i].Start < a[0].Start {
                a[i], a[0] = a[0], a[i]
            }
        }

        if b.Start < a[0].Start {
            if b.End < a[0].Start {
                d = append(d, b)
                break
            }
            d = append(d, Interval{b.Start, a[0].Start - 1})
            b.Start = a[0].Start
        }
        if b.End <= a[0].End {
            break
        }
        if b.Start <= a[0].End {
            b.Start = a[0].End + 1
        }
        if len(a) == 1 {
            if b.Start <= a[0].End {
                b.Start = a[0].End + 1
            }
            d = append(d, b)
            break
        }
    }
    return d
}
",1372
563,43682714,interval_test.go,16
564,43682714,"$ go test -v

  Merging many intervals is fast took 26.208614ms

  Difference took 10.706858ms
",95
565,43682714,"$ go test -v

  Merging many intervals is fast took 30.799216ms

  Difference took 14.414488ms
",95
566,43682714,"old.txt (sbs) versus new.txt (peterSO):

benchmark              old ns/op     new ns/op     delta
BenchmarkExample-4     365           221           -39.45%

benchmark              old allocs     new allocs   delta
BenchmarkExample-4     4              3            -25.00%

benchmark              old bytes     new bytes     delta
BenchmarkExample-4     128           112           -12.50%
",391
567,44091098,"/****** MIT License **********
Copyright (c) 2017 Zonkiie
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
***************************/

package main

/// http://stackoverflow.com/questions/23030884/is-there-a-way-to-create-an-instance-of-a-struct-from-a-string
/// http://stackoverflow.com/questions/7850140/how-do-you-create-a-new-instance-of-a-struct-from-its-type-at-runtime-in-go
/// http://stackoverflow.com/questions/29435783/gorm-golang-orm-associations

import (
    ""github.com/jinzhu/gorm""
    _ ""github.com/jinzhu/gorm/dialects/sqlite""
    ""fmt""
    ""reflect""
    ""regexp""
    ""encoding/json""
    ""encoding/xml""
    //""strconv""
    ""os""
    ""flag""
    ""strings""
)

type rs struct {
    //Parent    *rs `gorm:""ForeignKey:ID;AssociationForeignKey:ParentID""`
    Childs  []*rs   `gorm:""ForeignKey:ID;AssociationForeignKey:ParentID"" walkrec:""true""`
    ID  int64
    ParentID    int64   `gorm:""column:ParentID""`
    Value   string
    Sub []rs_sub    `gorm:""ForeignKey:ID;AssociationForeignKey:Rs_ID"" walkrec:""true""`
}

type rs_sub struct {
    ID  int64
    Rs_ID   int64   `gorm:""column:rs_id""`
    Value   string
}

var db *gorm.DB

func populateDb(db *gorm.DB) {

    rs1 := rs{ID: 1, ParentID: 0, Value: ""root""}
    db.Save(&rs1)
    rs2 := rs{ID: 2, ParentID: 1, Value: ""Child1""}
    db.Save(&rs2)
    rs3 := rs{ID: 3, ParentID: 2, Value: ""Child2""}
    db.Save(&rs3)
    rs4 := rs{ID: 4, ParentID: 3, Value: ""Child3""}
    db.Save(&rs4)
    rs5 := rs{ID: 5, ParentID: 3, Value: ""Child4""}
    db.Save(&rs5)
    rs_s := rs_sub{ID:1, Rs_ID:4, Value: ""SubChild1""}
    db.Save(&rs_s)
}

func PStdErr(format string, args ...interface{}) {
    fmt.Fprintf(os.Stderr, format, args...)
}

func JsonMarshal(data interface{}) string {
    b, err := json.Marshal(data)
    if err != nil {
        return ""Error""
    }
    return string(b[:])
}

func XmlMarshal(data interface{}) string {
    b, err := xml.Marshal(data)
    if err != nil {
        return ""Error""
    }
    return string(b[:])
}

func InitDB() *gorm.DB {
db, err := gorm.Open(""sqlite3"", "":memory:"")
if err != nil {
    panic(""failed to connect database"")
}
db.Exec(""DROP TABLE IF EXISTS rs;"")

    db.SingularTable(true)

// Migrate the schema
db.AutoMigrate(&rs{})
db.AutoMigrate(&rs_sub{})

populateDb(db)
//db.LogMode(true)
return db

}

// This function fetches all related objects from a given object in the data parameter.
// The struct must be fully tagged, we don't recognize automatically related IDs and so on.
// The function works only with not combined keys.
// Every field which should be fetched must be tagged with:
// walkrec:""true"" gorm:""ForeignKey:ID;AssociationForeignKey:ForeignKey""
// See: http://stackoverflow.com/questions/24537525/reflect-value-fieldbyname-causing-panic
// See: http://stackoverflow.com/questions/34493062/how-to-reflect-struct-recursive-in-golang
func fetchRec(db *gorm.DB, data interface{}) {
    // With data *rs: Type: *main.rs
    // With data interface{}: *main.rs
    var ref reflect.Value
    if reflect.TypeOf(data).Kind() == reflect.Struct {
        ref = reflect.ValueOf(data)
    } else if reflect.TypeOf(data).Kind() == reflect.Ptr {
        ref = reflect.Indirect(reflect.ValueOf(data))
    }
    if ref.Type().Kind() == reflect.Slice {
        for i := 0; i < ref.Len(); i++ {
            if ref.Index(i).Type().Kind() == reflect.Ptr {
                fetchRec(db, ref.Index(i).Elem().Addr().Interface())
            } else if ref.Index(i).Type().Kind() == reflect.Struct {
                // What should we do here?
            }
        }

    } else if ref.Type().Kind() == reflect.Struct {
        for i := 0; i < ref.NumField(); i++ {
            var IDFieldRaw string
            var IDFields []string
            var RefFieldRaw string
            var RefFields []string
            var re *regexp.Regexp
            var matches []string

            if ref.Field(i).CanAddr() && strings.EqualFold(ref.Type().Field(i).Tag.Get(""walkrec""), ""true"") {
                gormflags := ref.Type().Field(i).Tag.Get(""gorm"")
                if gormflags == """" {
                    panic(""No gorm flags found!"")
                } else {
                    re = regexp.MustCompile(`\bForeignKey:([a-zA-Z0-9_,]+)\b`)
                    matches = re.FindStringSubmatch(gormflags)
                    if len(matches) == 2 {
                        IDFieldRaw = matches[1]
                        IDFields = strings.Split(IDFieldRaw, "","")
                    }
                    re = regexp.MustCompile(`\bAssociationForeignKey:([a-zA-Z0-9_,]+)\b`)
                    matches = re.FindStringSubmatch(gormflags)
                    if len(matches) == 2 {
                        RefFieldRaw = matches[1]
                        RefFields = strings.Split(RefFieldRaw, "","")
                    }
                }
                if len(IDFields) == 0 { continue }
                if len(RefFields) != 0 {
                    WhereMap := make(map[string]interface{})
                    for fk := 0; fk < len(RefFields); fk++ {
                        WhereMap[RefFields[fk]] = fmt.Sprint(ref.FieldByName(IDFields[fk]))
                    }
                    db.Where(WhereMap).Find(ref.Field(i).Addr().Interface())
                    if ref.Field(i).Addr().Interface() != nil {
                        fetchRec(db, ref.Field(i).Addr().Interface())
                    }
                } else {
                    panic(""AssociationForeignKey empty!"")
                }
            }
        }
    }
}

func getParams() (id int) {
    flag.IntVar(&id, ""id"", 1, ""the id to fetch"")
    flag.Parse()
    return
}

func fetch(db *gorm.DB, id interface{}) (d rs, found bool) {

    //db.First(&d, id)
    found = false
    found = !db.Find(&d, id).RecordNotFound()
    if found {
        fetchRec(db, &d)
    }
    return
}

// Execute this program. For example:
// go run main.go --id=2
func main() {
    db = InitDB()
    defer db.Close()
    id := getParams()
    PStdErr(""Loading data with ID %d\n"", id)
    rs, found := fetch(db, id)
    if found {
        fmt.Print(XmlMarshal(rs) + ""\n"")
    }
}
",7092
568,44580389,"package main

import (
    ""encoding/xml""
    ""fmt""
    ""io/ioutil""
    ""os""
)

type Query struct {
    rpc Rpc_reply `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 rpc-reply,omitempty"" json:""rpc-reply,omitempty""`
}

type Addr_tag_list struct {
    Addr_tag Addr_tag `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 addr,omitempty"" json:""addr,omitempty""`
    Pref_tag Pref_tag `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 pref,omitempty"" json:""pref,omitempty""`
    Tag Tag `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 tag,omitempty"" json:""tag,omitempty""`
    Type_tag Type_tag `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 type,omitempty"" json:""type,omitempty""`
    VpcPeer_tag VpcPeer_tag `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 vpcPeer,omitempty"" json:""vpcPeer,omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 Addr-list,omitempty"" json:""Addr-list,omitempty""`
}

type Dom_list struct {
    If_items If_items `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 if-items,omitempty"" json:""if-items,omitempty""`
    Name_tag Name_tag `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 name,omitempty"" json:""name,omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 Dom-list,omitempty"" json:""Dom-list,omitempty""`
}

type If_list struct {
    Addr_items_tag Addr_items_tag `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 addr-items,omitempty"" json:""addr-items,omitempty""`
    Id_tag Id_tag `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 id,omitempty"" json:""id,omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 If-list,omitempty"" json:""If-list,omitempty""`
}

type Systemtag struct {
    Ipv4_items Ipv4_items `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 ipv4-items,omitempty"" json:""ipv4-items,omitempty""`
    Test_name Test_name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 test-name,omitempty"" json:""test-name,omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 System,omitempty"" json:""System,omitempty""`
}

type Addr_tag struct {
    Text string `xml:"",chardata"" json:"",omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 addr,omitempty"" json:""addr,omitempty""`
}

type Addr_items_tag struct {
    Addr_tag_list Addr_tag_list `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 Addr-list,omitempty"" json:""Addr-list,omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 addr-items,omitempty"" json:""addr-items,omitempty""`
}

type Data_tag struct {
    Systemtag Systemtag `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 System,omitempty"" json:""System,omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 data,omitempty"" json:""data,omitempty""`
}

type Dom_items struct {
    Dom_list []Dom_list `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 Dom-list,omitempty"" json:""Dom-list,omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 dom-items,omitempty"" json:""dom-items,omitempty""`
}

type Id_tag struct {
    Text string `xml:"",chardata"" json:"",omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 id,omitempty"" json:""id,omitempty""`
}

type If_items struct {
    If_list []If_list `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 If-list,omitempty"" json:""If-list,omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 if-items,omitempty"" json:""if-items,omitempty""`
}

type Inst_items struct {
    Dom_items Dom_items `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 dom-items,omitempty"" json:""dom-items,omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 inst-items,omitempty"" json:""inst-items,omitempty""`
}

type Ipv4_items struct {
    Inst_items Inst_items `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 inst-items,omitempty"" json:""inst-items,omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 ipv4-items,omitempty"" json:""ipv4-items,omitempty""`
}

type Name_tag struct {
    Text string `xml:"",chardata"" json:"",omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 name,omitempty"" json:""name,omitempty""`
}

type Pref_tag struct {
    Text bool `xml:"",chardata"" json:"",omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 pref,omitempty"" json:""pref,omitempty""`
}

type Rpc_reply struct {
    Attr_message_id string `xml:"" message-id,attr""  json:"",omitempty""`
    Attr_xmlns string `xml:"" xmlns,attr""  json:"",omitempty""`
    Data_tag Data_tag `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 data,omitempty"" json:""data,omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 rpc-reply,omitempty"" json:""rpc-reply,omitempty""`
}

type Tag struct {
    Text bool `xml:"",chardata"" json:"",omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 tag,omitempty"" json:""tag,omitempty""`
}

type Type_tag struct {
    Text string `xml:"",chardata"" json:"",omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 type,omitempty"" json:""type,omitempty""`
}

type VpcPeer_tag struct {
    Text string `xml:"",chardata"" json:"",omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 vpcPeer,omitempty"" json:""vpcPeer,omitempty""`
}

type Test_name struct {
    Text string `xml:"",chardata"" json:"",omitempty""`
    XMLName  xml.Name `xml:""urn:ietf:params:xml:ns:netconf:base:1.0 test-name,omitempty"" json:""test-name,omitempty""`
}


func main() {
    xmlFile, err := os.Open(""interface.xml"")
    if err != nil {
        fmt.Println(""Error opening file:"", err)
        return
    }
    defer xmlFile.Close()

    b, _ := ioutil.ReadAll(xmlFile)

    var q Query
    err2 := xml.Unmarshal(b, &q)
    if err2 != nil {
        fmt.Printf(""error: %v"", err2)
        return
    }
    fmt.Println(q)
    //fmt.Printf(""%#v"",q)
     fmt.Printf(""%s"",q.rpc.Attr_message_id);

}
",5886
569,44580389,"

  
    
     ##WORK##
      
        
          
            
              default
              
                
                  eth5/8
                  
                    
                      1.1.1.1
                      1
                      0
                      primary
                      0.0.0.0
                    
                  
                
                
              
               
              management
              
                
                  eth5/8
                  
                    
                      11.11.11.11
                      1
                      0
                      primary
                      0.0.0.0
                    
                  
                
                
              
              
        
      
    
  
",865
570,44625610,"goroutine profile: total 32685

1 @ 0x42fd33 0x42a7ee 0x429cb0 0x629fba 0x62a086 0x62d084 0x640964 0x5e6306 0x73b75b 0x73b0b2 0x744660 0x5f13ea 0x5fbc12 0x5f8dd0 0x5ffd9f 0x48dcea 0x5f729f 0x460ae1
#   0x429cb0    net.runtime_pollWait+0x60                       /usr/local/go/src/runtime/netpoll.go:160
#   0x629fba    net.(*pollDesc).Wait+0x3a                       /usr/local/go/src/net/fd_poll_runtime.go:73
#   0x62a086    net.(*pollDesc).WaitWrite+0x36                      /usr/local/go/src/net/fd_poll_runtime.go:82
#   0x62d084    net.(*netFD).Write+0x414                        /usr/local/go/src/net/fd_unix.go:336
#   0x640964    net.(*conn).Write+0xe4                          /usr/local/go/src/net/net.go:184
#   0x5e6306    github.com/moonfrog/heimdall/network.(*Messenger).WriteMessage+0x86 /home/rts/gopath/src/github.com/moonfrog/heimdall/network/messenger.go:40
#   0x73b75b    github.com/moonfrog/heimdall/service.(*Service).sendPacket+0x55b    /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:91
#   0x73b0b2    github.com/moonfrog/heimdall/service.(*Service).Send+0x442      /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:79
#   0x744660    github.com/moonfrog/heimdall/service/manager.(*Sticky).Send+0x5e0   /home/rts/gopath/src/github.com/moonfrog/heimdall/service/manager/sticky.go:91
#   0x5f13ea    github.com/moonfrog/heimdall/serviceController.(*Controller).Send+0x22a /home/rts/gopath/src/github.com/moonfrog/heimdall/serviceController/controller.go:169
#   0x5fbc12    github.com/moonfrog/heimdall/client.(*Client).sendToService+0x482   /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:452
#   0x5f8dd0    github.com/moonfrog/heimdall/client.(*Client).process+0xfd0     /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:256
#   0x5ffd9f    github.com/moonfrog/heimdall/client.(*Client).stateMachine.func1+0x3f   /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:136
#   0x48dcea    github.com/moonfrog/heimdall/common.Safe+0x3a               /home/rts/gopath/src/github.com/moonfrog/heimdall/common/utils.go:49
#   0x5f729f    github.com/moonfrog/heimdall/client.(*Client).stateMachine+0x1df    /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:137

1 @ 0x460ae1

1148 @ 0x42fd33 0x42fdf4 0x43f877 0x43f506 0x6299cc 0x62b7d9 0x62ccdc 0x640964 0x5e6306 0x73b75b 0x73cb72 0x74475e 0x5f1ea3 0x491dac 0x491c99 0x5fa486 0x5f7467 0x460ae1
#   0x43f506    net.runtime_Semacquire+0x26                         /usr/local/go/src/runtime/sema.go:52
#   0x6299cc    net.(*fdMutex).RWLock+0x16c                         /usr/local/go/src/net/fd_mutex.go:143
#   0x62b7d9    net.(*netFD).writeLock+0x39                         /usr/local/go/src/net/fd_unix.go:194
#   0x62ccdc    net.(*netFD).Write+0x6c                             /usr/local/go/src/net/fd_unix.go:319
#   0x640964    net.(*conn).Write+0xe4                              /usr/local/go/src/net/net.go:184
#   0x5e6306    github.com/moonfrog/heimdall/network.(*Messenger).WriteMessage+0x86     /home/rts/gopath/src/github.com/moonfrog/heimdall/network/messenger.go:40
#   0x73b75b    github.com/moonfrog/heimdall/service.(*Service).sendPacket+0x55b        /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:91
#   0x73cb72    github.com/moonfrog/heimdall/service.(*Service).OnDisconnect+0xb2       /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:179
#   0x74475e    github.com/moonfrog/heimdall/service/manager.(*Sticky).Disconnect+0x5e      /home/rts/gopath/src/github.com/moonfrog/heimdall/service/manager/sticky.go:97
#   0x5f1ea3    github.com/moonfrog/heimdall/serviceController.(*Controller).OnDisconnect+0x393 /home/rts/gopath/src/github.com/moonfrog/heimdall/serviceController/controller.go:210
#   0x491dac    github.com/moonfrog/heimdall/router.(*Router).onDisconnect+0x8c         /home/rts/gopath/src/github.com/moonfrog/heimdall/router/router.go:151
#   0x491c99    github.com/moonfrog/heimdall/router.(*Router).UnregisterClient+0x309        /home/rts/gopath/src/github.com/moonfrog/heimdall/router/router.go:146
#   0x5fa486    github.com/moonfrog/heimdall/client.(*Client).disconnect+0x206          /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:329
#   0x5f7467    github.com/moonfrog/heimdall/client.(*Client).stateMachine+0x3a7        /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:150

11385 @ 0x42fd33 0x43e9f7 0x43df52 0x5fc6df 0x49181f 0x5faae9 0x5f94bf 0x5f8cdb 0x5ffd9f 0x48dcea 0x5f729f 0x460ae1
#   0x5fc6df    github.com/moonfrog/heimdall/client.(*Client).ForceDisconnect+0xdf  /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:502
#   0x49181f    github.com/moonfrog/heimdall/router.(*Router).RegisterClient+0x7af  /home/rts/gopath/src/github.com/moonfrog/heimdall/router/router.go:114
#   0x5faae9    github.com/moonfrog/heimdall/client.(*Client).join+0x5e9        /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:379
#   0x5f94bf    github.com/moonfrog/heimdall/client.(*Client).handleRouterMsg+0x61f /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:265
#   0x5f8cdb    github.com/moonfrog/heimdall/client.(*Client).process+0xedb     /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:254
#   0x5ffd9f    github.com/moonfrog/heimdall/client.(*Client).stateMachine.func1+0x3f   /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:136
#   0x48dcea    github.com/moonfrog/heimdall/common.Safe+0x3a               /home/rts/gopath/src/github.com/moonfrog/heimdall/common/utils.go:49
#   0x5f729f    github.com/moonfrog/heimdall/client.(*Client).stateMachine+0x1df    /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:137

1 @ 0x42fd33 0x42fdf4 0x43f877 0x43f4c6 0x4c6d64 0x6f9081 0x704b71 0x460ae1
#   0x43f4c6    sync.runtime_Semacquire+0x26                /usr/local/go/src/runtime/sema.go:47
#   0x4c6d64    sync.(*WaitGroup).Wait+0xb4             /usr/local/go/src/sync/waitgroup.go:127
#   0x6f9081    github.com/samuel/go-zookeeper/zk.(*Conn).loop+0x8c1    /home/rts/gopath/src/github.com/samuel/go-zookeeper/zk/conn.go:436
#   0x704b71    github.com/samuel/go-zookeeper/zk.Connect.func1+0x21    /home/rts/gopath/src/github.com/samuel/go-zookeeper/zk/conn.go:218

11343 @ 0x42fd33 0x43e9f7 0x43df52 0x5f70ab 0x460ae1
#   0x5f70ab    github.com/moonfrog/heimdall/client.(*Client).readPump+0x70b    /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:111

4332 @ 0x42fd33 0x43e9f7 0x43df52 0x5f6d54 0x460ae1
#   0x5f6d54    github.com/moonfrog/heimdall/client.(*Client).readPump+0x3b4    /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:104

1438 @ 0x42fd33 0x42fdf4 0x43f877 0x43f506 0x6299cc 0x62b7d9 0x62ccdc 0x640964 0x5e6306 0x73b75b 0x73ca92 0x7447ee 0x5f1fd4 0x491897 0x5faae9 0x5f94bf 0x5f8cdb 0x5ffd9f 0x48dcea 0x5f729f 0x460ae1
#   0x43f506    net.runtime_Semacquire+0x26                         /usr/local/go/src/runtime/sema.go:52
#   0x6299cc    net.(*fdMutex).RWLock+0x16c                         /usr/local/go/src/net/fd_mutex.go:143
#   0x62b7d9    net.(*netFD).writeLock+0x39                         /usr/local/go/src/net/fd_unix.go:194
#   0x62ccdc    net.(*netFD).Write+0x6c                             /usr/local/go/src/net/fd_unix.go:319
#   0x640964    net.(*conn).Write+0xe4                              /usr/local/go/src/net/net.go:184
#   0x5e6306    github.com/moonfrog/heimdall/network.(*Messenger).WriteMessage+0x86     /home/rts/gopath/src/github.com/moonfrog/heimdall/network/messenger.go:40
#   0x73b75b    github.com/moonfrog/heimdall/service.(*Service).sendPacket+0x55b        /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:91
#   0x73ca92    github.com/moonfrog/heimdall/service.(*Service).OnReconnect+0xb2        /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:171
#   0x7447ee    github.com/moonfrog/heimdall/service/manager.(*Sticky).Reconnect+0x5e       /home/rts/gopath/src/github.com/moonfrog/heimdall/service/manager/sticky.go:105
#   0x5f1fd4    github.com/moonfrog/heimdall/serviceController.(*Controller).OnReconnect+0xd4   /home/rts/gopath/src/github.com/moonfrog/heimdall/serviceController/controller.go:218
#   0x491897    github.com/moonfrog/heimdall/router.(*Router).RegisterClient+0x827      /home/rts/gopath/src/github.com/moonfrog/heimdall/router/router.go:116
#   0x5faae9    github.com/moonfrog/heimdall/client.(*Client).join+0x5e9            /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:379
#   0x5f94bf    github.com/moonfrog/heimdall/client.(*Client).handleRouterMsg+0x61f     /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:265
#   0x5f8cdb    github.com/moonfrog/heimdall/client.(*Client).process+0xedb         /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:254
#   0x5ffd9f    github.com/moonfrog/heimdall/client.(*Client).stateMachine.func1+0x3f       /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:136
#   0x48dcea    github.com/moonfrog/heimdall/common.Safe+0x3a                   /home/rts/gopath/src/github.com/moonfrog/heimdall/common/utils.go:49
#   0x5f729f    github.com/moonfrog/heimdall/client.(*Client).stateMachine+0x1df        /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:137

18 @ 0x42fd33 0x43e9f7 0x43df52 0x73fbab 0x460ae1
#   0x73fbab    github.com/moonfrog/heimdall/service.(*Service).startHB.func1+0x23b /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:241

1 @ 0x42fd33 0x42fdf4 0x4061ef 0x405d0b 0x587454 0x460ae1
#   0x587454    github.com/moonfrog/badger/lib/stats/serverside/golang.(*Client).startScheduler+0x94    /home/rts/gopath/src/github.com/moonfrog/badger/lib/stats/serverside/golang/client.go:182

1 @ 0x42fd33 0x42a7ee 0x429cb0 0x629fba 0x62a026 0x62dcbc 0x64bbfd 0x54d121 0x54c2b9 0x54c106 0x54c808 0x5807ac 0x460ae1
#   0x429cb0    net.runtime_pollWait+0x60                   /usr/local/go/src/runtime/netpoll.go:160
#   0x629fba    net.(*pollDesc).Wait+0x3a                   /usr/local/go/src/net/fd_poll_runtime.go:73
#   0x62a026    net.(*pollDesc).WaitRead+0x36                   /usr/local/go/src/net/fd_poll_runtime.go:78
#   0x62dcbc    net.(*netFD).accept+0x27c                   /usr/local/go/src/net/fd_unix.go:426
#   0x64bbfd    net.(*TCPListener).AcceptTCP+0x4d               /usr/local/go/src/net/tcpsock_posix.go:254
#   0x54d121    net/http.tcpKeepAliveListener.Accept+0x41           /usr/local/go/src/net/http/server.go:2427
#   0x54c2b9    net/http.(*Server).Serve+0x129                  /usr/local/go/src/net/http/server.go:2117
#   0x54c106    net/http.(*Server).ListenAndServe+0x136             /usr/local/go/src/net/http/server.go:2098
#   0x54c808    net/http.ListenAndServe+0x98                    /usr/local/go/src/net/http/server.go:2195
#   0x5807ac    github.com/moonfrog/heimdall/debugger.(*Debugger).Start+0x55c   /home/rts/gopath/src/github.com/moonfrog/heimdall/debugger/debugger.go:89

2361 @ 0x42fd33 0x42fdf4 0x43f877 0x43f4c6 0x4c65b8 0x5f2066 0x5f9d26 0x5f8cdb 0x5ffd9f 0x48dcea 0x5f729f 0x460ae1
#   0x43f4c6    sync.runtime_Semacquire+0x26                            /usr/local/go/src/runtime/sema.go:47
#   0x4c65b8    sync.(*RWMutex).RLock+0x58                          /usr/local/go/src/sync/rwmutex.go:37
#   0x5f2066    github.com/moonfrog/heimdall/serviceController.(*Controller).OnConnect+0x46 /home/rts/gopath/src/github.com/moonfrog/heimdall/serviceController/controller.go:224
#   0x5f9d26    github.com/moonfrog/heimdall/client.(*Client).handleRouterMsg+0xe86     /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:284
#   0x5f8cdb    github.com/moonfrog/heimdall/client.(*Client).process+0xedb         /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:254
#   0x5ffd9f    github.com/moonfrog/heimdall/client.(*Client).stateMachine.func1+0x3f       /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:136
#   0x48dcea    github.com/moonfrog/heimdall/common.Safe+0x3a                   /home/rts/gopath/src/github.com/moonfrog/heimdall/common/utils.go:49
#   0x5f729f    github.com/moonfrog/heimdall/client.(*Client).stateMachine+0x1df        /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:137

387 @ 0x42fd33 0x42fdf4 0x43f877 0x43f506 0x6299cc 0x62b7d9 0x62ccdc 0x640964 0x5e6306 0x73b75b 0x73b0b2 0x744660 0x5f13ea 0x5fbc12 0x5f8dd0 0x5ffd9f 0x48dcea 0x5f729f 0x460ae1
#   0x43f506    net.runtime_Semacquire+0x26                     /usr/local/go/src/runtime/sema.go:52
#   0x6299cc    net.(*fdMutex).RWLock+0x16c                     /usr/local/go/src/net/fd_mutex.go:143
#   0x62b7d9    net.(*netFD).writeLock+0x39                     /usr/local/go/src/net/fd_unix.go:194
#   0x62ccdc    net.(*netFD).Write+0x6c                         /usr/local/go/src/net/fd_unix.go:319
#   0x640964    net.(*conn).Write+0xe4                          /usr/local/go/src/net/net.go:184
#   0x5e6306    github.com/moonfrog/heimdall/network.(*Messenger).WriteMessage+0x86 /home/rts/gopath/src/github.com/moonfrog/heimdall/network/messenger.go:40
#   0x73b75b    github.com/moonfrog/heimdall/service.(*Service).sendPacket+0x55b    /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:91
#   0x73b0b2    github.com/moonfrog/heimdall/service.(*Service).Send+0x442      /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:79
#   0x744660    github.com/moonfrog/heimdall/service/manager.(*Sticky).Send+0x5e0   /home/rts/gopath/src/github.com/moonfrog/heimdall/service/manager/sticky.go:91
#   0x5f13ea    github.com/moonfrog/heimdall/serviceController.(*Controller).Send+0x22a /home/rts/gopath/src/github.com/moonfrog/heimdall/serviceController/controller.go:169
#   0x5fbc12    github.com/moonfrog/heimdall/client.(*Client).sendToService+0x482   /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:452
#   0x5f8dd0    github.com/moonfrog/heimdall/client.(*Client).process+0xfd0     /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:256
#   0x5ffd9f    github.com/moonfrog/heimdall/client.(*Client).stateMachine.func1+0x3f   /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:136
#   0x48dcea    github.com/moonfrog/heimdall/common.Safe+0x3a               /home/rts/gopath/src/github.com/moonfrog/heimdall/common/utils.go:49
#   0x5f729f    github.com/moonfrog/heimdall/client.(*Client).stateMachine+0x1df    /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:137

1 @ 0x42fd33 0x42fdf4 0x43f877 0x43f4c6 0x4c67b1 0x5f3391 0x460ae1
#   0x43f4c6    sync.runtime_Semacquire+0x26                            /usr/local/go/src/runtime/sema.go:47
#   0x4c67b1    sync.(*RWMutex).Lock+0xa1                           /usr/local/go/src/sync/rwmutex.go:88
#   0x5f3391    github.com/moonfrog/heimdall/serviceController.(*Controller).monitor+0xc1   /home/rts/gopath/src/github.com/moonfrog/heimdall/serviceController/controller.go:286

1 @ 0x42fd33 0x42fdf4 0x43f877 0x43f506 0x6299cc 0x62b7d9 0x62ccdc 0x640964 0x5e6306 0x73b75b 0x73fb4c 0x460ae1
#   0x43f506    net.runtime_Semacquire+0x26                     /usr/local/go/src/runtime/sema.go:52
#   0x6299cc    net.(*fdMutex).RWLock+0x16c                     /usr/local/go/src/net/fd_mutex.go:143
#   0x62b7d9    net.(*netFD).writeLock+0x39                     /usr/local/go/src/net/fd_unix.go:194
#   0x62ccdc    net.(*netFD).Write+0x6c                         /usr/local/go/src/net/fd_unix.go:319
#   0x640964    net.(*conn).Write+0xe4                          /usr/local/go/src/net/net.go:184
#   0x5e6306    github.com/moonfrog/heimdall/network.(*Messenger).WriteMessage+0x86 /home/rts/gopath/src/github.com/moonfrog/heimdall/network/messenger.go:40
#   0x73b75b    github.com/moonfrog/heimdall/service.(*Service).sendPacket+0x55b    /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:91
#   0x73fb4c    github.com/moonfrog/heimdall/service.(*Service).startHB.func1+0x1dc /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:252

1 @ 0x42fd33 0x43e9f7 0x43df52 0x4558a8 0x460ae1
#   0x42fd33    runtime.gopark+0x163        /usr/local/go/src/runtime/proc.go:263
#   0x43e9f7    runtime.selectgoImpl+0xa67  /usr/local/go/src/runtime/select.go:392
#   0x43df52    runtime.selectgo+0x12       /usr/local/go/src/runtime/select.go:215
#   0x4558a8    runtime.ensureSigM.func1+0x358  /usr/local/go/src/runtime/signal1_unix.go:279

2 @ 0x42fd33 0x42a7ee 0x429cb0 0x629fba 0x62a026 0x62dcbc 0x64bbfd 0x5e6f16 0x460ae1
#   0x429cb0    net.runtime_pollWait+0x60                       /usr/local/go/src/runtime/netpoll.go:160
#   0x629fba    net.(*pollDesc).Wait+0x3a                       /usr/local/go/src/net/fd_poll_runtime.go:73
#   0x62a026    net.(*pollDesc).WaitRead+0x36                       /usr/local/go/src/net/fd_poll_runtime.go:78
#   0x62dcbc    net.(*netFD).accept+0x27c                       /usr/local/go/src/net/fd_unix.go:426
#   0x64bbfd    net.(*TCPListener).AcceptTCP+0x4d                   /usr/local/go/src/net/tcpsock_posix.go:254
#   0x5e6f16    github.com/moonfrog/heimdall/network.(*TCPServer).Start.func1+0x46  /home/rts/gopath/src/github.com/moonfrog/heimdall/network/tcpServer.go:22

12 @ 0x42fd33 0x42fdf4 0x43f877 0x43f506 0x6299cc 0x62b7d9 0x62ccdc 0x640964 0x5e6306 0x73b75b 0x73b0b2 0x744660 0x5f13ea 0x73c308 0x73f5cf 0x48dcea 0x73f89c 0x460ae1
#   0x43f506    net.runtime_Semacquire+0x26                     /usr/local/go/src/runtime/sema.go:52
#   0x6299cc    net.(*fdMutex).RWLock+0x16c                     /usr/local/go/src/net/fd_mutex.go:143
#   0x62b7d9    net.(*netFD).writeLock+0x39                     /usr/local/go/src/net/fd_unix.go:194
#   0x62ccdc    net.(*netFD).Write+0x6c                         /usr/local/go/src/net/fd_unix.go:319
#   0x640964    net.(*conn).Write+0xe4                          /usr/local/go/src/net/net.go:184
#   0x5e6306    github.com/moonfrog/heimdall/network.(*Messenger).WriteMessage+0x86 /home/rts/gopath/src/github.com/moonfrog/heimdall/network/messenger.go:40
#   0x73b75b    github.com/moonfrog/heimdall/service.(*Service).sendPacket+0x55b    /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:91
#   0x73b0b2    github.com/moonfrog/heimdall/service.(*Service).Send+0x442      /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:79
#   0x744660    github.com/moonfrog/heimdall/service/manager.(*Sticky).Send+0x5e0   /home/rts/gopath/src/github.com/moonfrog/heimdall/service/manager/sticky.go:91
#   0x5f13ea    github.com/moonfrog/heimdall/serviceController.(*Controller).Send+0x22a /home/rts/gopath/src/github.com/moonfrog/heimdall/serviceController/controller.go:169
#   0x73c308    github.com/moonfrog/heimdall/service.(*Service).process+0x8a8       /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:142
#   0x73f5cf    github.com/moonfrog/heimdall/service.(*Service).readPump.func1.1+0x3f   /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:111
#   0x48dcea    github.com/moonfrog/heimdall/common.Safe+0x3a               /home/rts/gopath/src/github.com/moonfrog/heimdall/common/utils.go:49
#   0x73f89c    github.com/moonfrog/heimdall/service.(*Service).readPump.func1+0x2bc    /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:112

102 @ 0x42fd33 0x42fdf4 0x43f877 0x43f506 0x6299cc 0x62b7d9 0x62ccdc 0x640964 0x5e6306 0x73b75b 0x73cb72 0x74475e 0x7457a6 0x5f23d9 0x5f9d26 0x5f8cdb 0x5ffd9f 0x48dcea 0x5f729f 0x460ae1
#   0x43f506    net.runtime_Semacquire+0x26                         /usr/local/go/src/runtime/sema.go:52
#   0x6299cc    net.(*fdMutex).RWLock+0x16c                         /usr/local/go/src/net/fd_mutex.go:143
#   0x62b7d9    net.(*netFD).writeLock+0x39                         /usr/local/go/src/net/fd_unix.go:194
#   0x62ccdc    net.(*netFD).Write+0x6c                             /usr/local/go/src/net/fd_unix.go:319
#   0x640964    net.(*conn).Write+0xe4                              /usr/local/go/src/net/net.go:184
#   0x5e6306    github.com/moonfrog/heimdall/network.(*Messenger).WriteMessage+0x86     /home/rts/gopath/src/github.com/moonfrog/heimdall/network/messenger.go:40
#   0x73b75b    github.com/moonfrog/heimdall/service.(*Service).sendPacket+0x55b        /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:91
#   0x73cb72    github.com/moonfrog/heimdall/service.(*Service).OnDisconnect+0xb2       /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:179
#   0x74475e    github.com/moonfrog/heimdall/service/manager.(*Sticky).Disconnect+0x5e      /home/rts/gopath/src/github.com/moonfrog/heimdall/service/manager/sticky.go:97
#   0x7457a6    github.com/moonfrog/heimdall/service/manager.(*Sticky).Connect+0x856        /home/rts/gopath/src/github.com/moonfrog/heimdall/service/manager/sticky.go:147
#   0x5f23d9    github.com/moonfrog/heimdall/serviceController.(*Controller).OnConnect+0x3b9    /home/rts/gopath/src/github.com/moonfrog/heimdall/serviceController/controller.go:235
#   0x5f9d26    github.com/moonfrog/heimdall/client.(*Client).handleRouterMsg+0xe86     /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:284
#   0x5f8cdb    github.com/moonfrog/heimdall/client.(*Client).process+0xedb         /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:254
#   0x5ffd9f    github.com/moonfrog/heimdall/client.(*Client).stateMachine.func1+0x3f       /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:136
#   0x48dcea    github.com/moonfrog/heimdall/common.Safe+0x3a                   /home/rts/gopath/src/github.com/moonfrog/heimdall/common/utils.go:49
#   0x5f729f    github.com/moonfrog/heimdall/client.(*Client).stateMachine+0x1df        /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:137

13 @ 0x42fd33 0x42fdf4 0x43f877 0x43f506 0x6299cc 0x62b7d9 0x62ccdc 0x640964 0x5e6306 0x73b75b 0x73cb72 0x74475e 0x5f1ea3 0x491dac 0x491c99 0x5fa486 0x5fa25a 0x5f8cdb 0x5ffd9f 0x48dcea 0x5f729f 0x460ae1
#   0x43f506    net.runtime_Semacquire+0x26                         /usr/local/go/src/runtime/sema.go:52
#   0x6299cc    net.(*fdMutex).RWLock+0x16c                         /usr/local/go/src/net/fd_mutex.go:143
#   0x62b7d9    net.(*netFD).writeLock+0x39                         /usr/local/go/src/net/fd_unix.go:194
#   0x62ccdc    net.(*netFD).Write+0x6c                             /usr/local/go/src/net/fd_unix.go:319
#   0x640964    net.(*conn).Write+0xe4                              /usr/local/go/src/net/net.go:184
#   0x5e6306    github.com/moonfrog/heimdall/network.(*Messenger).WriteMessage+0x86     /home/rts/gopath/src/github.com/moonfrog/heimdall/network/messenger.go:40
#   0x73b75b    github.com/moonfrog/heimdall/service.(*Service).sendPacket+0x55b        /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:91
#   0x73cb72    github.com/moonfrog/heimdall/service.(*Service).OnDisconnect+0xb2       /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:179
#   0x74475e    github.com/moonfrog/heimdall/service/manager.(*Sticky).Disconnect+0x5e      /home/rts/gopath/src/github.com/moonfrog/heimdall/service/manager/sticky.go:97
#   0x5f1ea3    github.com/moonfrog/heimdall/serviceController.(*Controller).OnDisconnect+0x393 /home/rts/gopath/src/github.com/moonfrog/heimdall/serviceController/controller.go:210
#   0x491dac    github.com/moonfrog/heimdall/router.(*Router).onDisconnect+0x8c         /home/rts/gopath/src/github.com/moonfrog/heimdall/router/router.go:151
#   0x491c99    github.com/moonfrog/heimdall/router.(*Router).UnregisterClient+0x309        /home/rts/gopath/src/github.com/moonfrog/heimdall/router/router.go:146
#   0x5fa486    github.com/moonfrog/heimdall/client.(*Client).disconnect+0x206          /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:329
#   0x5fa25a    github.com/moonfrog/heimdall/client.(*Client).handleRouterMsg+0x13ba        /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:274
#   0x5f8cdb    github.com/moonfrog/heimdall/client.(*Client).process+0xedb         /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:254
#   0x5ffd9f    github.com/moonfrog/heimdall/client.(*Client).stateMachine.func1+0x3f       /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:136
#   0x48dcea    github.com/moonfrog/heimdall/common.Safe+0x3a                   /home/rts/gopath/src/github.com/moonfrog/heimdall/common/utils.go:49
#   0x5f729f    github.com/moonfrog/heimdall/client.(*Client).stateMachine+0x1df        /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:137

7 @ 0x42fd33 0x42a7ee 0x429cb0 0x629fba 0x62a026 0x62be7a 0x640644 0x611d09 0x612b7a 0x612eb9 0x5e60f4 0x73f614 0x460ae1
#   0x429cb0    net.runtime_pollWait+0x60                       /usr/local/go/src/runtime/netpoll.go:160
#   0x629fba    net.(*pollDesc).Wait+0x3a                       /usr/local/go/src/net/fd_poll_runtime.go:73
#   0x62a026    net.(*pollDesc).WaitRead+0x36                       /usr/local/go/src/net/fd_poll_runtime.go:78
#   0x62be7a    net.(*netFD).Read+0x23a                         /usr/local/go/src/net/fd_unix.go:250
#   0x640644    net.(*conn).Read+0xe4                           /usr/local/go/src/net/net.go:172
#   0x611d09    bufio.(*Reader).fill+0x1e9                      /usr/local/go/src/bufio/bufio.go:97
#   0x612b7a    bufio.(*Reader).ReadSlice+0x21a                     /usr/local/go/src/bufio/bufio.go:328
#   0x612eb9    bufio.(*Reader).ReadBytes+0xa9                      /usr/local/go/src/bufio/bufio.go:406
#   0x5e60f4    github.com/moonfrog/heimdall/network.(*Messenger).ReadMessage+0x54  /home/rts/gopath/src/github.com/moonfrog/heimdall/network/messenger.go:29
#   0x73f614    github.com/moonfrog/heimdall/service.(*Service).readPump.func1+0x34 /home/rts/gopath/src/github.com/moonfrog/heimdall/service/service.go:102

1 @ 0x42fd33 0x42fdf4 0x43f877 0x43f4c6 0x4c5704 0x4c6740 0x5f2d6a 0x5f5fcc 0x5f5dc4 0x5890f3 0x460ae1
#   0x43f4c6    sync.runtime_Semacquire+0x26                                /usr/local/go/src/runtime/sema.go:47
#   0x4c5704    sync.(*Mutex).Lock+0x1c4                                /usr/local/go/src/sync/mutex.go:83
#   0x4c6740    sync.(*RWMutex).Lock+0x30                               /usr/local/go/src/sync/rwmutex.go:83
#   0x5f2d6a    github.com/moonfrog/heimdall/serviceController.(*Controller).refreshServices+0x4a   /home/rts/gopath/src/github.com/moonfrog/heimdall/serviceController/controller.go:257
#   0x5f5fcc    github.com/moonfrog/heimdall/serviceController.(*Controller).init.func1+0x1ec       /home/rts/gopath/src/github.com/moonfrog/heimdall/serviceController/controller.go:333
#   0x5f5dc4    github.com/moonfrog/heimdall/serviceController.loadConfig.func2+0x84            /home/rts/gopath/src/github.com/moonfrog/heimdall/serviceController/configServices.go:84
#   0x5890f3    github.com/moonfrog/badger/zootils.(*ZooKeeper).watchFunc+0x53              /home/rts/gopath/src/github.com/moonfrog/badger/zootils/zootils.go:62

1 @ 0x42fd33 0x43e9f7 0x43df52 0x5fc579 0x491911 0x5faae9 0x5f94bf 0x5f8cdb 0x5ffd9f 0x48dcea 0x5f729f 0x460ae1
#   0x5fc579    github.com/moonfrog/heimdall/client.(*Client).RejectConnection+0x369    /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:495
#   0x491911    github.com/moonfrog/heimdall/router.(*Router).RegisterClient+0x8a1  /home/rts/gopath/src/github.com/moonfrog/heimdall/router/router.go:109
#   0x5faae9    github.com/moonfrog/heimdall/client.(*Client).join+0x5e9        /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:379
#   0x5f94bf    github.com/moonfrog/heimdall/client.(*Client).handleRouterMsg+0x61f /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:265
#   0x5f8cdb    github.com/moonfrog/heimdall/client.(*Client).process+0xedb     /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:254
#   0x5ffd9f    github.com/moonfrog/heimdall/client.(*Client).stateMachine.func1+0x3f   /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:136
#   0x48dcea    github.com/moonfrog/heimdall/common.Safe+0x3a               /home/rts/gopath/src/github.com/moonfrog/heimdall/common/utils.go:49
#   0x5f729f    github.com/moonfrog/heimdall/client.(*Client).stateMachine+0x1df    /home/rts/gopath/src/github.com/moonfrog/heimdall/client/client.go:137
",28570
571,44958839,"github.com\mxplusb\bigcache\caches_bench> go test -v -bench ""."" -benchtime ""10s"" . -timeout 30m
 -benchmem
BenchmarkMapSet-8                       20000000               917 ns/op             296 B/op          3 allocs/op
BenchmarkFreeCacheSet-8                 30000000               861 ns/op             360 B/op          3 allocs/op
BenchmarkBigCacheSet-8                  30000000               615 ns/op             311 B/op          2 allocs/op
BenchmarkMapGet-8                       50000000               410 ns/op              24 B/op          2 allocs/op
BenchmarkFreeCacheGet-8                 30000000               770 ns/op             152 B/op          4 allocs/op
BenchmarkBigCacheGet-8                  30000000               548 ns/op             152 B/op          4 allocs/op
BenchmarkBigCacheSetParallel-8          runtime: VirtualAlloc of 7340032 bytes failed with errno=1455
fatal error: runtime: cannot map pages in arena address space

runtime stack:
runtime.throw(0x55ca82, 0x30)
        C:/Go/src/runtime/panic.go:596 +0x9c
runtime.sysMap(0xc4fc330000, 0x700000, 0x428e01, 0x6152f8)
        C:/Go/src/runtime/mem_windows.go:116 +0x129
runtime.(*mheap).sysAlloc(0x5fb5c0, 0x700000, 0x419fd70)
        C:/Go/src/runtime/malloc.go:440 +0x37b
runtime.(*mheap).grow(0x5fb5c0, 0x380, 0x0)
        C:/Go/src/runtime/mheap.go:774 +0x69
runtime.(*mheap).allocSpanLocked(0x5fb5c0, 0x380, 0x874ca20)
        C:/Go/src/runtime/mheap.go:678 +0x456
runtime.(*mheap).alloc_m(0x5fb5c0, 0x380, 0x100000000, 0x0)
        C:/Go/src/runtime/mheap.go:562 +0xf0
runtime.(*mheap).alloc.func1()
        C:/Go/src/runtime/mheap.go:627 +0x52
runtime.systemstack(0x419fe68)
        C:/Go/src/runtime/asm_amd64.s:343 +0xb5
runtime.(*mheap).alloc(0x5fb5c0, 0x380, 0x10100000000, 0x0)
        C:/Go/src/runtime/mheap.go:628 +0xa7
runtime.largeAlloc(0x700000, 0x44fd01, 0xc4f61be000)
        C:/Go/src/runtime/malloc.go:807 +0x9a
runtime.mallocgc.func1()
        C:/Go/src/runtime/malloc.go:702 +0x45
runtime.systemstack(0xc0420278a0)
        C:/Go/src/runtime/asm_amd64.s:327 +0x7e
runtime.mstart()
        C:/Go/src/runtime/proc.go:1132

goroutine 31 [running]:
runtime.systemstack_switch()
        C:/Go/src/runtime/asm_amd64.s:281 fp=0xc042555980 sp=0xc042555978
runtime.mallocgc(0x700000, 0x53c400, 0x1, 0xc042031800)
        C:/Go/src/runtime/malloc.go:703 +0x96f fp=0xc042555a20 sp=0xc042555980
runtime.newarray(0x53c400, 0x10000, 0x522b20)
        C:/Go/src/runtime/malloc.go:833 +0x6b fp=0xc042555a60 sp=0xc042555a20
runtime.makemap(0x52d8a0, 0x5f5e1, 0x0, 0x0, 0x112)
        C:/Go/src/runtime/hashmap.go:281 +0x30d fp=0xc042555ab8 sp=0xc042555a60
github.com/allegro/bigcache.initNewShard(0x100, 0x8bb2c97000, 0x5f5e100, 0x100, 0x1, 0x5e1820, 0x612938, 0x0, 0x0, 0xc0423fa000, ...)
        E:/Programming/Go/src/github.com/allegro/bigcache/shard.go:45 +0xc5 fp=0xc042555c80 sp=0xc042555ab8
github.com/allegro/bigcache.newBigCache(0x100, 0x8bb2c97000, 0x5f5e100, 0x100, 0x1, 0x5e1820, 0x612938, 0x0, 0x0, 0x5e1560, ...)
        E:/Programming/Go/src/github.com/allegro/bigcache/bigcache.go:58 +0x36e fp=0xc042555dc8 sp=0xc042555c80
github.com/allegro/bigcache.NewBigCache(0x100, 0x8bb2c97000, 0x5f5e100, 0x100, 0x1, 0x0, 0x0, 0x0, 0x0, 0xbc02a, ...)
        E:/Programming/Go/src/github.com/allegro/bigcache/bigcache.go:27 +0x7f fp=0xc042555e48 sp=0xc042555dc8
github.com/mxplusb/bigcache/caches_bench.initBigCache(0x5f5e100, 0x4b6af8)
        E:/Programming/Go/src/github.com/mxplusb/bigcache/caches_bench/caches_bench_test.go:159 +0x99 fp=0xc042555f00 sp=0xc042555e48
github.com/mxplusb/bigcache/caches_bench.BenchmarkBigCacheSetParallel(0xc042088420)
        E:/Programming/Go/src/github.com/mxplusb/bigcache/caches_bench/caches_bench_test.go:79 +0x3d fp=0xc042555f38 sp=0xc042555f00
testing.(*B).runN(0xc042088420, 0x5f5e100)
        C:/Go/src/testing/benchmark.go:140 +0xb9 fp=0xc042555f78 sp=0xc042555f38
testing.(*B).launch(0xc042088420)
        C:/Go/src/testing/benchmark.go:281 +0x129 fp=0xc042555fd8 sp=0xc042555f78
runtime.goexit()
        C:/Go/src/runtime/asm_amd64.s:2197 +0x1 fp=0xc042555fe0 sp=0xc042555fd8
created by testing.(*B).doBench
        C:/Go/src/testing/benchmark.go:250 +0x77

goroutine 1 [chan receive]:
testing.(*B).doBench(0xc042088420, 0x0, 0x0, 0x0, 0x0, 0x0)
        C:/Go/src/testing/benchmark.go:251 +0xa1
testing.(*benchContext).processBench(0xc0420030e0, 0xc042088420)
        C:/Go/src/testing/benchmark.go:433 +0x1fe
testing.(*B).run(0xc042088420, 0x0, 0x0, 0x0, 0x0, 0x0)
        C:/Go/src/testing/benchmark.go:241 +0x74
testing.(*B).Run(0xc0420882c0, 0x5593df, 0x1c, 0x55dc98, 0x4b6a00)
        C:/Go/src/testing/benchmark.go:494 +0x254
testing.runBenchmarks.func1(0xc0420882c0)
        C:/Go/src/testing/benchmark.go:403 +0x6e
testing.(*B).runN(0xc0420882c0, 0x1)
        C:/Go/src/testing/benchmark.go:140 +0xb9
testing.runBenchmarks(0xc0420030c0, 0x5f6240, 0xa, 0xa, 0xc042040100)
        C:/Go/src/testing/benchmark.go:409 +0x494
testing.(*M).Run(0xc042097f20, 0xc042039f20)
        C:/Go/src/testing/testing.go:828 +0x30c
main.main()
        github.com/mxplusb/bigcache/caches_bench/_test/_testmain.go:60 +0xfe
exit status 2
FAIL    github.com/mxplusb/bigcache/caches_bench        223.732s
",5244
572,44958839,"func initNewShard(config Config, callback onRemoveCallback) *cacheShard {
    return &cacheShard{
        hashmap:     make(map[uint64]uint32, config.initialShardSize()),
        entries:     *queue.NewBytesQueue(config.initialShardSize()*config.MaxEntrySize, config.maximumShardSize(), config.Verbose),
        entryBuffer: make([]byte, config.MaxEntrySize+headersSizeInBytes),
        onRemove:    callback,
    }
}
",418
573,44958839,config.initialShardSize(),25
574,44958839,"func (c Config) initialShardSize() int {
    return max(c.MaxEntriesInWindow/c.Shards, minimumEntriesInShard)
}
",112
575,44958839,"func initNewShard(config Config, callback onRemoveCallback) *cacheShard {
    return &cacheShard{
        hashmap:     make(map[uint64]uint32, config.initialShardSize()),
        entries:     *queue.NewBytesQueue(config.initialShardSize()*config.MaxEntrySize, config.maximumShardSize(), config.Verbose),
        entryBuffer: make([]byte, config.MaxEntrySize+headersSizeInBytes),
        onRemove:    callback,
    }
}
",418
576,45086992,"package main

import (
       ""bytes""
       ""crypto/tls""
       ""encoding/xml""
       ""fmt""
       ""io/ioutil""
       ""log""
       ""net""
       ""net/http""
       ""time""
)

// against ""unused imports""
var _ time.Time
var _ xml.Name

type Char int32

const ()

type Duration *Duration

const ()

type Guid string

const ()

type ItemAvailabilitySearchParamters struct {
       XMLName xml.Name `xml:""http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application ItemAvailabilitySearchParamters""`

       *XppObjectBase

       ParamFromDate         string `xml:""paramFromDate,omitempty""`
       ParamNumberOfFrames   int32  `xml:""paramNumberOfFrames,omitempty""`
       ParamItemDefinitionId string `xml:""paramItemDefinitionId,omitempty""`
       ParamToDate           string `xml:""paramToDate,omitempty""`
}

type ItemAvailabilityServiceNewGetDataRequest struct {
       XMLName xml.Name `xml:""http://schemas.microsoft.com/netfx/2009/05/routing ItemAvailabilityServiceNewGetDataRequest""`

       ItemAvailabilitySearchParamters *ItemAvailabilitySearchParamters `xml:""mMSItemAvailabilitySearchParamters,omitempty""`
}

type ItemAvailabilityContract struct {
       XMLName xml.Name `xml:""http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application ItemAvailabilityContract""`

       *XppObjectBase

       Pct               float64 `xml:""pct,omitempty""`
       QuantityAvailable int32   `xml:""quantityAvailable,omitempty""`
       TargetQuantity    int32   `xml:""targetQuantity,omitempty""`
}

type ArrayOfItemAvailabilityContract struct {
       XMLName xml.Name `xml:""http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application ArrayOfItemAvailabilityContract""`

       ItemAvailabilityContract []*ItemAvailabilityContract `xml:""ItemAvailabilityContract,omitempty""`
}

type XppObjectBase struct {
       XMLName xml.Name `xml:""http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.Ax.Xpp XppObjectBase""`
}



type ItemAvailabilityServiceNewGetDataResponse struct {
       XMLName xml.Name `xml:""http://schemas.microsoft.com/netfx/2009/05/routing ItemAvailabilityServiceNewGetDataResponse""`

       Response *ArrayOfItemAvailabilityContract `xml:""response,omitempty""`
}

type CallContext struct {
       XMLName xml.Name `xml:""http://schemas.microsoft.com/dynamics/2010/01/datacontracts CallContext""`

       Company      string                         `xml:""Company,omitempty""`
       Language     string                         `xml:""Language,omitempty""`
       LogonAsUser  string                         `xml:""LogonAsUser,omitempty""`
       MessageId    string                         `xml:""MessageId,omitempty""`
       PartitionKey string                         `xml:""PartitionKey,omitempty""`
       PropertyBag  *ArrayOfKeyValueOfstringstring `xml:""PropertyBag,omitempty""`
}

type ArrayOfKeyValueOfstringstring struct {
       XMLName xml.Name `xml:""http://schemas.microsoft.com/2003/10/Serialization/Arrays ArrayOfKeyValueOfstringstring""`

       KeyValueOfstringstring struct {
                      Key   string `xml:""Key,omitempty""`
                      Value string `xml:""Value,omitempty""`
               } `xml:""KeyValueOfstringstring,omitempty""`
}

type AifFault struct {
       XMLName xml.Name `xml:""http://schemas.microsoft.com/dynamics/2008/01/documents/Fault AifFault""`

       CustomDetailXml       string                   `xml:""CustomDetailXml,omitempty""`
       FaultMessageListArray *ArrayOfFaultMessageList `xml:""FaultMessageListArray,omitempty""`
       InfologMessageList    *ArrayOfInfologMessage   `xml:""InfologMessageList,omitempty""`
       StackTrace            string                   `xml:""StackTrace,omitempty""`
       XppExceptionType      int32                    `xml:""XppExceptionType,omitempty""`
}

type ArrayOfFaultMessageList struct {
       XMLName xml.Name `xml:""http://schemas.microsoft.com/dynamics/2008/01/documents/Fault ArrayOfFaultMessageList""`

       FaultMessageList []*FaultMessageList `xml:""FaultMessageList,omitempty""`
}

type FaultMessageList struct {
       XMLName xml.Name `xml:""http://schemas.microsoft.com/dynamics/2008/01/documents/Fault FaultMessageList""`

       Document                  string               `xml:""Document,omitempty""`
       DocumentOperation         string               `xml:""DocumentOperation,omitempty""`
       FaultMessageArray         *ArrayOfFaultMessage `xml:""FaultMessageArray,omitempty""`
       Field                     string               `xml:""Field,omitempty""`
       Service                   string               `xml:""Service,omitempty""`
       ServiceOperation          string               `xml:""ServiceOperation,omitempty""`
       ServiceOperationParameter string               `xml:""ServiceOperationParameter,omitempty""`
       XPath                     string               `xml:""XPath,omitempty""`
       XmlLine                   string               `xml:""XmlLine,omitempty""`
       XmlPosition               string               `xml:""XmlPosition,omitempty""`
}

type ArrayOfFaultMessage struct {
       XMLName xml.Name `xml:""http://schemas.microsoft.com/dynamics/2008/01/documents/Fault ArrayOfFaultMessage""`

       FaultMessage []*FaultMessage `xml:""FaultMessage,omitempty""`
}

type FaultMessage struct {
       XMLName xml.Name `xml:""http://schemas.microsoft.com/dynamics/2008/01/documents/Fault FaultMessage""`

       Code    string `xml:""Code,omitempty""`
       Message string `xml:""Message,omitempty""`
}

type InfologMessageType string

const (
       InfologMessageTypeInfo InfologMessageType = ""Info""

       InfologMessageTypeWarning InfologMessageType = ""Warning""

       InfologMessageTypeError InfologMessageType = ""Error""
)

type ArrayOfInfologMessage struct {
       XMLName xml.Name `xml:""http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.Framework.Services ArrayOfInfologMessage""`

       InfologMessage []*InfologMessage `xml:""InfologMessage,omitempty""`
}

type InfologMessage struct {
       XMLName xml.Name `xml:""http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.Framework.Services InfologMessage""`

       InfologMessageType *InfologMessageType `xml:""InfologMessageType,omitempty""`
       Message            string              `xml:""Message,omitempty""`
}

type IRequestReplyRouter struct {
       client *SOAPClient
}

func NewIRequestReplyRouter(url string, tls bool, auth *BasicAuth) *IRequestReplyRouter {
       if url == """" {
              url = """"
       }
       client := NewSOAPClient(url, tls, auth)

       return &IRequestReplyRouter{
              client: client,
       }
}

type ItemAvailabilityServiceNew struct {
       client *SOAPClient
}

func NewItemAvailabilityServiceNew(url string, tls bool, auth *BasicAuth) *ItemAvailabilityServiceNew {
       if url == """" {
              url = """"
       }
       client := NewSOAPClient(url, tls, auth)

       return &ItemAvailabilityServiceNew{
              client: client,
       }
}

// Error can be either of the following types:
//
//   - AifFaultFault

func (service *ItemAvailabilityServiceNew) GetData(request *ItemAvailabilityServiceNewGetDataRequest) (*ItemAvailabilityServiceNewGetDataResponse, error) {
       response := new(ItemAvailabilityServiceNewGetDataResponse)
       err := service.client.Call(""http://schemas.microsoft.com/netfx/2009/05/routing/ItemAvailabilityServiceNew/getData"", request, response)
       if err != nil {
              return nil, err
       }

       return response, nil
}

var timeout = time.Duration(30 * time.Second)

func dialTimeout(network, addr string) (net.Conn, error) {
       return net.DialTimeout(network, addr, timeout)
}

type SOAPEnvelope struct {
       XMLName xml.Name `xml:""http://schemas.xmlsoap.org/soap/envelope/ Envelope""`

       Body SOAPBody
}

type SOAPHeader struct {
       XMLName xml.Name `xml:""http://schemas.xmlsoap.org/soap/envelope/ Header""`

       Header interface{}
}

type SOAPBody struct {
       XMLName xml.Name `xml:""http://schemas.xmlsoap.org/soap/envelope/ Body""`

       Fault   *SOAPFault  `xml:"",omitempty""`
       Content interface{} `xml:"",omitempty""`
}

type SOAPFault struct {
       XMLName xml.Name `xml:""http://schemas.xmlsoap.org/soap/envelope/ Fault""`

       Code   string `xml:""faultcode,omitempty""`
       String string `xml:""faultstring,omitempty""`
       Actor  string `xml:""faultactor,omitempty""`
       Detail string `xml:""detail,omitempty""`
}

type BasicAuth struct {
       Login    string
       Password string
}

type SOAPClient struct {
       url  string
       tls  bool
       auth *BasicAuth
}

func (b *SOAPBody) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
       if b.Content == nil {
              return xml.UnmarshalError(""Content must be a pointer to a struct"")
       }

       var (
              token    xml.Token
              err      error
              consumed bool
       )

       Loop:
       for {
              if token, err = d.Token(); err != nil {
                     return err
              }

              if token == nil {
                     break
              }

              switch se := token.(type) {
              case xml.StartElement:
                     if consumed {
                            return xml.UnmarshalError(""Found multiple elements inside SOAP body; not wrapped-document/literal WS-I compliant"")
                     } else if se.Name.Space == ""http://schemas.xmlsoap.org/soap/envelope/"" && se.Name.Local == ""Fault"" {
                            b.Fault = &SOAPFault{}
                            b.Content = nil

                            err = d.DecodeElement(b.Fault, &se)
                            if err != nil {
                                   return err
                            }

                            consumed = true
                     } else {
                            if err = d.DecodeElement(b.Content, &se); err != nil {
                                   return err
                            }

                            consumed = true
                     }
              case xml.EndElement:
                     break Loop
              }
       }

       return nil
}

func (f *SOAPFault) Error() string {
       return f.String
}

func NewSOAPClient(url string, tls bool, auth *BasicAuth) *SOAPClient {
       return &SOAPClient{
              url:  url,
              tls:  tls,
              auth: auth,
       }
}

func (s *SOAPClient) Call(soapAction string, request, response interface{}) error {
       envelope := SOAPEnvelope{
              //Header:        SoapHeader{},
       }

       envelope.Body.Content = request
       buffer := new(bytes.Buffer)

       encoder := xml.NewEncoder(buffer)
       //encoder.Indent(""  "", ""    "")

       if err := encoder.Encode(envelope); err != nil {
              return err
       }

       if err := encoder.Flush(); err != nil {
              return err
       }

       log.Println(buffer.String())

       req, err := http.NewRequest(""POST"", s.url, buffer)
       if err != nil {
              return err
       }
       if s.auth != nil {
              req.SetBasicAuth(s.auth.Login, s.auth.Password)
       }

       req.Header.Add(""Content-Type"", ""text/xml; charset=\""utf-8\"""")
       if soapAction != """" {
              req.Header.Add(""SOAPAction"", soapAction)
       }

       req.Header.Set(""User-Agent"", ""gowsdl/0.1"")
       req.Close = true

       tr := &http.Transport{
              TLSClientConfig: &tls.Config{
                     InsecureSkipVerify: s.tls,
              },
              Dial: dialTimeout,
       }

       client := &http.Client{Transport: tr}
       res, err := client.Do(req)
       if err != nil {
              return err
       }
       defer res.Body.Close()

       rawbody, err := ioutil.ReadAll(res.Body)
       if err != nil {
              return err
       }
       if len(rawbody) == 0 {
              log.Println(""empty response"")
              return nil
       }

       log.Println(string(rawbody))
       respEnvelope := new(SOAPEnvelope)
       respEnvelope.Body = SOAPBody{Content: response}
       err = xml.Unmarshal(rawbody, respEnvelope)
       if err != nil {
              return err
       }

       fault := respEnvelope.Body.Fault
       if fault != nil {
              return fault
       }

       return nil
}



func main() {
       basicAuth := BasicAuth{Login: ""user"", Password: ""pass""}
       mMSItemAvalabilityService := NewItemAvailabilityServiceNew(""http://localhost/xppservice.svc"", false, &basicAuth)
       fmt.Println(mMSItemAvalabilityService)
        mMSItemAvailabilitySearch := ItemAvailabilitySearchParamters{

              ParamItemDefinitionId: ""Itm000001849"",
              ParamNumberOfFrames:   125,
              ParamFromDate:         ""17/7/2017"",
              ParamToDate:           ""18/7/2017"",
       }
      // fmt.Println(mMSItemAvailabilitySearch)
       mMSItemAvalabilityServiceGetRequest := ItemAvailabilityServiceNewGetDataRequest{ItemAvailabilitySearchParamters: &mMSItemAvailabilitySearch}
       fmt.Println(mMSItemAvalabilityServiceGetRequest)
       response, error := mMSItemAvalabilityService.GetData(&mMSItemAvalabilityServiceGetRequest)
       fmt.Println(error)
       if error != nil {
              fmt.Println(response)
              return
       }
}
",13288
577,45240642,"package main

import (
    ""bytes""
    ""database/sql""
    ""flag""
    // ""github.com/garyburd/redigo/redis""
    _ ""github.com/go-sql-driver/mysql""
    //""gopkg.in/redis.v4""
    ""github.com/chasex/redis-go-cluster""
    ""log""
    ""runtime""
    // ""strings""
    ""sync""
    ""time""

)

var client *redis.Cluster

type Task interface {
    Execute()
}

type Pool struct {
    mu sync.Mutex

    size  int
    tasks chan Task
    kill  chan struct{}
    wg    sync.WaitGroup
}

func NewPool(size int) *Pool {
    pool := &Pool{
        tasks: make(chan Task, 128),
        kill:  make(chan struct{}),
    }
    pool.Resize(size)
    return pool
}

func (p *Pool) worker() {
    defer p.wg.Done()
    for {
        select {
        case task, ok := <-p.tasks:
            if !ok {
                return
            }
            task.Execute()
        case <-p.kill:
            return
        }
    }
}

func (p *Pool) Resize(n int) {
    p.mu.Lock()
    defer p.mu.Unlock()
    for p.size < n {
        p.size++
        p.wg.Add(1)
        go p.worker()
    }
    for p.size > n {
        p.size--
        p.kill <- struct{}{}
    }
}

func (p *Pool) Close() {
    close(p.tasks)
}

func (p *Pool) Wait() {
    p.wg.Wait()
}

func (p *Pool) Exec(task Task) {
    p.tasks <- task
}

type RedisTask struct {
    Index   int
    Command string
    Key     string
    Value   string
    MapData map[string]string
}

func (e RedisTask) Execute() {
    log.Println(""executing:"", e.Key, "","", e.Index)

    if e.Command == ""SET"" {
        _,err := redis.String(client.Do(""SET"", e.Key, e.Value))
        checkErr(err, ""set error:"")
    } else if e.Command == ""SADD"" {
        _,err := redis.Strings(client.Do(""SADD"", e.Key, e.Value))
        checkErr(err, ""sadd error:"") 
    } else if e.Command == ""HMSET"" {
        _,err := redis.StringMap(client.Do(""HMSET"", e.Key, e.MapData))
        checkErr(err, ""hmset error:"")
    }
    // TODO: clean data
}

func main() {
    runtime.GOMAXPROCS(runtime.NumCPU())
    startTime := time.Now().UnixNano() / int64(time.Millisecond)
    host := flag.String(""s"", ""localhost:3306"", ""mysql server host and port ,eg localhost:3306"")
    username := flag.String(""u"", ""test"", ""username to login mysql"")
    password := flag.String(""p"", ""test"", ""password for mysql"")
    database := flag.String(""d"", ""test"", ""database you want to execute query"")
    query := flag.String(""q"", ""select 1;"", ""your query sql"")
    ds := flag.String(""ds"", ""key"", ""redis structure"")
    PK := flag.String(""pk"", ""Rkey"", ""the redis Key in the fields of mysql query result"")

    //redisHost := flag.String(""rs"", ""localhost:6379"", ""redis host and port ,eg localhost:6379"")
    //redisPassword := flag.String(""rp"", ""test"", ""redis password"")

    poolSize := flag.Int(""size"", 10000, ""redis pool size"")

    flag.Parse()
    var buf bytes.Buffer = bytes.Buffer{}
    buf.WriteString(*username)
    buf.WriteString("":"")
    buf.WriteString(*password)
    buf.WriteString(""@tcp("")
    buf.WriteString(*host)
    buf.WriteString("")/"")
    buf.WriteString(*database)

    db, err := sql.Open(""mysql"", buf.String())
    checkErr(err, ""connect to mysql error !"")
    defer db.Close()

    poolWorker := NewPool(*poolSize)

    // Execute the query
    rows, err := db.Query(*query)
    checkErr(err, ""execute sql error!"")

    // pool = newPool(*redisHost, *redisPassword, *poolSize)

    //client = redis.NewClient(&redis.Options{
    //  Addr:     *redisHost,
    //  Password: *redisPassword, // no password set
    //  DB:       0,              // use default DB
    //})

    client,_ = redis.NewCluster(&redis.Options{
            StartNodes: []string{""10.x.x.x:6000"", ""10.x.x.x:6001"", ""10.x.x.x:6002""},
            ConnTimeout: 50 * time.Millisecond,
            ReadTimeout: 50 * time.Millisecond,
            WriteTimeout: 50 * time.Millisecond,
            KeepAlive: 16,
            AliveTime: 60 * time.Second,
    })
    //checkErr(err, ""client error:"")

    //pong, err := client.Ping().Result()
    //checkErr(err, ""redis client error:"")
    //log.Println(pong)

    columns, err := rows.Columns()
    checkErr(err, ""get columns error!"")

    length := len(columns)
    values := make([]sql.RawBytes, length)

    scanArgs := make([]interface{}, len(values))
    for i := range values {
        scanArgs[i] = &values[i]
    }

    count := 0
    for rows.Next() {
        count += 1
        err = rows.Scan(scanArgs...)
        checkErr(err, ""scan error"")

        var value string
        var key string

        var task RedisTask

        if *ds == ""key"" {
            key = getStringData(values[0])
            value = getStringData(values[1])
            if value != """" {
                task = RedisTask{
                    Index:   count,
                    Command: ""SET"",
                    Key:     key,
                    Value:   value,
                }
            }
        } else if *ds == ""set"" {
            key = getStringData(values[0])
            value = getStringData(values[1])
            if value != """" {
                task = RedisTask{
                    Index:   count,
                    Command: ""SADD"",
                    Key:     key,
                    Value:   value,
                }
            }
        } else if *ds == ""hash"" {
            key = getStringData(values[0])
            // args := redis.Args{}.Add(key)

            m := make(map[string]string)

            for i, col := range values {
                if col != nil && columns[i] != *PK {
                    value = getStringData(col)
                    m[columns[i]] = value
                }
            }
            task = RedisTask{
                Index:   count,
                Command: ""HMSET"",
                Key:     key,
                MapData: m,
            }
        }
        poolWorker.Exec(task)
    }
    if err = rows.Err(); err != nil {
        panic(err.Error()) // proper error handling instead of panic in your app
    }

    poolWorker.Close()

    poolWorker.Wait()

    EndTime := time.Now().UnixNano() / int64(time.Millisecond)
    log.Println(""======================================== executing time:"", EndTime-startTime, "" ms, total:"", count)
}

func getStringData(data sql.RawBytes) string {
    if data == nil {
        return """"
    }
    value := string(data)
    return clearBad(value)
}

func clearBad(str string) string {
    // str = strings.Trim(str, ""`"")
    // str = strings.Trim(str, ""ï½€"")
    // str = strings.Trim(str, ""-"")
    // str = strings.Trim(str, ""."")
    // str = strings.Trim(str, "" "")
    // str = strings.Trim(str, "";"")
    // str = strings.Trim(str, "","")
    // str = strings.Trim(str, "":"")
    // str = strings.Trim(str, "";"")
    // str = strings.Trim(str, ""'"")
    // str = strings.Trim(str, ""!"")
    return str
}

func checkErr(err error, msg string) {
    if err != nil {
        log.Fatalln(msg, err)
    }
}
",6887
578,45240642,"./rak -u user -p user -s 10.X.X.X:8080 -d test -q ""SELECT CONCAT( 'student:', c.sid ) Rkey, c.sname SNAME, c.saddress SADDRESS, c.sage SAGE FROM STUDENT c WHERE c.sid  > 0;"" -ds hash -size 1200
2017/07/21 10:29:09 rak.go:93: executing: student:2 , 2
2017/07/21 10:29:09 rak.go:93: executing: student:1 , 1
2017/07/21 10:29:09 rak.go:93: executing: student:3 , 3
2017/07/21 10:29:09 rak.go:268: hmset error: Do: unknown type map[string]string
$
",444
579,45264265," package main

import (
    ""fmt""
    ""html/template""
    ""log""
    ""net/http""
    ""strings""
)

func sayhelloName(w http.ResponseWriter, r *http.Request) {
    r.ParseForm() //Parse url parameters passed, then parse the response packet for the POST body (request body)
    // attention: If you do not call ParseForm method, the following data can not be obtained form
    fmt.Println(r.Form) // print information on server side.
    fmt.Println(""path"", r.URL.Path)
    fmt.Println(""scheme"", r.URL.Scheme)
    fmt.Println(r.Form[""url_long""])
    for k, v := range r.Form {
        fmt.Println(""key:"", k)
        fmt.Println(""val:"", strings.Join(v, """"))
    }
    fmt.Fprintf(w, ""Hello astaxie!"") // write data to response
}

func login(w http.ResponseWriter, r *http.Request) {
    fmt.Println(""method:"", r.Method) //get request method
    if r.Method == ""GET"" {
        t, _ := template.ParseFiles(""login.gtpl"")
        t.Execute(w, nil)
    } else {
        r.ParseForm()
        // logic part of log in
        fmt.Println(""username:"", r.Form[""username""])
        fmt.Println(""password:"", r.Form[""password""])
    }
}

func main() {
    http.HandleFunc(""/"", sayhelloName) // setting router rule
    http.HandleFunc(""/login"", login)
    err := http.ListenAndServe("":9090"", nil) // setting listening port
    if err != nil {
        log.Fatal(""ListenAndServe: "", err)
    }
}
",1375
580,45264265,"
    
    
    
    
        
            Username:
            Password:
            
        
    

",102
581,45264265,"2017/07/23 18:41:29 http: panic serving 127.0.0.1:61254: runtime error: invalid
memory address or nil pointer dereference
goroutine 18 [running]:
net/http.(*conn).serve.func1(0xc04203adc0)
        C:/Go/src/net/http/server.go:1721 +0xd7
panic(0x717940, 0x901950)
        C:/Go/src/runtime/panic.go:489 +0x2dd
html/template.(*Template).escape(0x0, 0x0, 0x0)
        C:/Go/src/html/template/template.go:94 +0x3f
html/template.(*Template).Execute(0x0, 0x8da500, 0xc0420fa0e0, 0x0, 0x0, 0xc0420
08390, 0x90e480)
        C:/Go/src/html/template/template.go:117 +0x36
main.login(0x8de180, 0xc0420fa0e0, 0xc042030400)
        D:/sample/src/github.com/sunilrajramchandani/astaxie/web.go:29 +0x47e
net/http.HandlerFunc.ServeHTTP(0x786e68, 0x8de180, 0xc0420fa0e0, 0xc042030400)
        C:/Go/src/net/http/server.go:1942 +0x4b
net/http.(*ServeMux).ServeHTTP(0x90e480, 0x8de180, 0xc0420fa0e0, 0xc042030400)
        C:/Go/src/net/http/server.go:2238 +0x137
net/http.serverHandler.ServeHTTP(0xc04207ab00, 0x8de180, 0xc0420fa0e0, 0xc042030
400)
        C:/Go/src/net/http/server.go:2568 +0x99
net/http.(*conn).serve(0xc04203adc0, 0x8de740, 0xc04203e3c0)
        C:/Go/src/net/http/server.go:1825 +0x619
created by net/http.(*Server).Serve
        C:/Go/src/net/http/server.go:2668 +0x2d5
method: GET
2017/07/23 18:41:29 http: panic serving 127.0.0.1:61255: runtime error: invalid
memory address or nil pointer dereference
goroutine 4 [running]:
net/http.(*conn).serve.func1(0xc0420f0000)
        C:/Go/src/net/http/server.go:1721 +0xd7
panic(0x717940, 0x901950)
        C:/Go/src/runtime/panic.go:489 +0x2dd
html/template.(*Template).escape(0x0, 0x0, 0x0)
        C:/Go/src/html/template/template.go:94 +0x3f
html/template.(*Template).Execute(0x0, 0x8da500, 0xc04213e000, 0x0, 0x0, 0xc0421
36090, 0x90e480)
        C:/Go/src/html/template/template.go:117 +0x36
main.login(0x8de180, 0xc04213e000, 0xc042030500)
        D:/sample/src/github.com/sunilrajramchandani/astaxie/web.go:29 +0x47e
net/http.HandlerFunc.ServeHTTP(0x786e68, 0x8de180, 0xc04213e000, 0xc042030500)
        C:/Go/src/net/http/server.go:1942 +0x4b
net/http.(*ServeMux).ServeHTTP(0x90e480, 0x8de180, 0xc04213e000, 0xc042030500)
        C:/Go/src/net/http/server.go:2238 +0x137
net/http.serverHandler.ServeHTTP(0xc04207ab00, 0x8de180, 0xc04213e000, 0xc042030
500)
        C:/Go/src/net/http/server.go:2568 +0x99
net/http.(*conn).serve(0xc0420f0000, 0x8de740, 0xc04203e500)
        C:/Go/src/net/http/server.go:1825 +0x619
created by net/http.(*Server).Serve
        C:/Go/src/net/http/server.go:2668 +0x2d5
method: GET
2017/07/23 18:41:29 http: panic serving 127.0.0.1:61257: runtime error: invalid
memory address or nil pointer dereference
goroutine 6 [running]:
net/http.(*conn).serve.func1(0xc0420f00a0)
        C:/Go/src/net/http/server.go:1721 +0xd7
panic(0x717940, 0x901950)
        C:/Go/src/runtime/panic.go:489 +0x2dd
html/template.(*Template).escape(0x0, 0x0, 0x0)
        C:/Go/src/html/template/template.go:94 +0x3f
html/template.(*Template).Execute(0x0, 0x8da500, 0xc0420fa2a0, 0x0, 0x0, 0xc0420
084b0, 0x90e480)
        C:/Go/src/html/template/template.go:117 +0x36
main.login(0x8de180, 0xc0420fa2a0, 0xc042162000)
        D:/sample/src/github.com/sunilrajramchandani/astaxie/web.go:29 +0x47e
net/http.HandlerFunc.ServeHTTP(0x786e68, 0x8de180, 0xc0420fa2a0, 0xc042162000)
        C:/Go/src/net/http/server.go:1942 +0x4b
net/http.(*ServeMux).ServeHTTP(0x90e480, 0x8de180, 0xc0420fa2a0, 0xc042162000)
        C:/Go/src/net/http/server.go:2238 +0x137
net/http.serverHandler.ServeHTTP(0xc04207ab00, 0x8de180, 0xc0420fa2a0, 0xc042162
000)
        C:/Go/src/net/http/server.go:2568 +0x99
net/http.(*conn).serve(0xc0420f00a0, 0x8de740, 0xc04210c140)
        C:/Go/src/net/http/server.go:1825 +0x619
created by net/http.(*Server).Serve
        C:/Go/src/net/http/server.go:2668 +0x2d5
method: GET
2017/07/23 18:41:29 http: panic serving 127.0.0.1:61259: runtime error: invalid
memory address or nil pointer dereference
goroutine 8 [running]:
net/http.(*conn).serve.func1(0xc0420f0140)
        C:/Go/src/net/http/server.go:1721 +0xd7
panic(0x717940, 0x901950)
        C:/Go/src/runtime/panic.go:489 +0x2dd
html/template.(*Template).escape(0x0, 0x0, 0x0)
        C:/Go/src/html/template/template.go:94 +0x3f
html/template.(*Template).Execute(0x0, 0x8da500, 0xc0420ec1c0, 0x0, 0x0, 0xc0420
62f30, 0x90e480)
        C:/Go/src/html/template/template.go:117 +0x36
main.login(0x8de180, 0xc0420ec1c0, 0xc042000400)
        D:/sample/src/github.com/sunilrajramchandani/astaxie/web.go:29 +0x47e
net/http.HandlerFunc.ServeHTTP(0x786e68, 0x8de180, 0xc0420ec1c0, 0xc042000400)
        C:/Go/src/net/http/server.go:1942 +0x4b
net/http.(*ServeMux).ServeHTTP(0x90e480, 0x8de180, 0xc0420ec1c0, 0xc042000400)
        C:/Go/src/net/http/server.go:2238 +0x137
net/http.serverHandler.ServeHTTP(0xc04207ab00, 0x8de180, 0xc0420ec1c0, 0xc042000
400)
        C:/Go/src/net/http/server.go:2568 +0x99
net/http.(*conn).serve(0xc0420f0140, 0x8de740, 0xc04200a5c0)
        C:/Go/src/net/http/server.go:1825 +0x619
created by net/http.(*Server).Serve
        C:/Go/src/net/http/server.go:2668 +0x2d5
method: GET
2017/07/23 18:41:34 http: panic serving 127.0.0.1:61264: runtime error: invalid
memory address or nil pointer dereference
goroutine 34 [running]:
net/http.(*conn).serve.func1(0xc042198000)
        C:/Go/src/net/http/server.go:1721 +0xd7
panic(0x717940, 0x901950)
        C:/Go/src/runtime/panic.go:489 +0x2dd
html/template.(*Template).escape(0x0, 0x0, 0x0)
        C:/Go/src/html/template/template.go:94 +0x3f
html/template.(*Template).Execute(0x0, 0x8da500, 0xc04213e1c0, 0x0, 0x0, 0xc0421
361b0, 0x90e480)
        C:/Go/src/html/template/template.go:117 +0x36
main.login(0x8de180, 0xc04213e1c0, 0xc042030600)
        D:/sample/src/github.com/sunilrajramchandani/astaxie/web.go:29 +0x47e
net/http.HandlerFunc.ServeHTTP(0x786e68, 0x8de180, 0xc04213e1c0, 0xc042030600)
        C:/Go/src/net/http/server.go:1942 +0x4b
net/http.(*ServeMux).ServeHTTP(0x90e480, 0x8de180, 0xc04213e1c0, 0xc042030600)
        C:/Go/src/net/http/server.go:2238 +0x137
net/http.serverHandler.ServeHTTP(0xc04207ab00, 0x8de180, 0xc04213e1c0, 0xc042030
600)
        C:/Go/src/net/http/server.go:2568 +0x99
net/http.(*conn).serve(0xc042198000, 0x8de740, 0xc04203e780)
        C:/Go/src/net/http/server.go:1825 +0x619
created by net/http.(*Server).Serve
        C:/Go/src/net/http/server.go:2668 +0x2d5
method: GET
2017/07/23 18:42:04 http: panic serving 127.0.0.1:61279: runtime error: invalid
memory address or nil pointer dereference
goroutine 36 [running]:
net/http.(*conn).serve.func1(0xc0421980a0)
        C:/Go/src/net/http/server.go:1721 +0xd7
panic(0x717940, 0x901950)
        C:/Go/src/runtime/panic.go:489 +0x2dd
html/template.(*Template).escape(0x0, 0x0, 0x0)
        C:/Go/src/html/template/template.go:94 +0x3f
html/template.(*Template).Execute(0x0, 0x8da500, 0xc0420fa460, 0x0, 0x0, 0xc0420
085d0, 0x90e480)
        C:/Go/src/html/template/template.go:117 +0x36
main.login(0x8de180, 0xc0420fa460, 0xc042162100)
        D:/sample/src/github.com/sunilrajramchandani/astaxie/web.go:29 +0x47e
net/http.HandlerFunc.ServeHTTP(0x786e68, 0x8de180, 0xc0420fa460, 0xc042162100)
        C:/Go/src/net/http/server.go:1942 +0x4b
net/http.(*ServeMux).ServeHTTP(0x90e480, 0x8de180, 0xc0420fa460, 0xc042162100)
        C:/Go/src/net/http/server.go:2238 +0x137
net/http.serverHandler.ServeHTTP(0xc04207ab00, 0x8de180, 0xc0420fa460, 0xc042162
100)
        C:/Go/src/net/http/server.go:2568 +0x99
net/http.(*conn).serve(0xc0421980a0, 0x8de740, 0xc04210c3c0)
        C:/Go/src/net/http/server.go:1825 +0x619
created by net/http.(*Server).Serve
        C:/Go/src/net/http/server.go:2668 +0x2d5
method: GET
2017/07/23 18:43:04 http: panic serving 127.0.0.1:61329: runtime error: invalid
memory address or nil pointer dereference
goroutine 10 [running]:
net/http.(*conn).serve.func1(0xc0420f01e0)
        C:/Go/src/net/http/server.go:1721 +0xd7
panic(0x717940, 0x901950)
        C:/Go/src/runtime/panic.go:489 +0x2dd
html/template.(*Template).escape(0x0, 0x0, 0x0)
        C:/Go/src/html/template/template.go:94 +0x3f
html/template.(*Template).Execute(0x0, 0x8da500, 0xc04213e380, 0x0, 0x0, 0xc0421
362d0, 0x90e480)
        C:/Go/src/html/template/template.go:117 +0x36
main.login(0x8de180, 0xc04213e380, 0xc042030700)
        D:/sample/src/github.com/sunilrajramchandani/astaxie/web.go:29 +0x47e
net/http.HandlerFunc.ServeHTTP(0x786e68, 0x8de180, 0xc04213e380, 0xc042030700)
        C:/Go/src/net/http/server.go:1942 +0x4b
net/http.(*ServeMux).ServeHTTP(0x90e480, 0x8de180, 0xc04213e380, 0xc042030700)
        C:/Go/src/net/http/server.go:2238 +0x137
net/http.serverHandler.ServeHTTP(0xc04207ab00, 0x8de180, 0xc04213e380, 0xc042030
700)
        C:/Go/src/net/http/server.go:2568 +0x99
net/http.(*conn).serve(0xc0420f01e0, 0x8de740, 0xc04203e880)
        C:/Go/src/net/http/server.go:1825 +0x619
created by net/http.(*Server).Serve
        C:/Go/src/net/http/server.go:2668 +0x2d5
",8980
582,45269528,INSERT INTO,11
583,45269528,map,3
584,45269528,chan,4
585,45269528,"func producer(ops chan BatchOp, ...) {
    // Iterate over all tables that we want to fetch documents from
    for _, table := range schema.Schema[0].Tables {

        // Run some aggregation to fetch the documents and create an iterator
        pipe := mongoDb.C(table.Collection).Pipe(table.Pipeline)
        iter := pipe.Batch(200).AllowDiskUse().Iter()

        const RESULTS_BUFFER_SIZE = 200


        result := bson.M{}
        results := make([]bson.M, 0, RESULTS_BUFFER_SIZE)

        // The flush function sends a batch of data into the channel
        flush := func() {
            fmt.Printf(""Flushing %d items\n"", len(results))
            ops <- BatchOp{
                Insert,
                table.Collection,
                results,
            }
            results = make([]bson.M, 0, RESULTS_BUFFER_SIZE)
        }

        // Iterate over the results from MongoDB and append each document 
        // to the results slice
        for iter.Next(&result) {
            results = append(results, bson.M{
                ""_id"": result[""_id""],
                ""name"": result[""Name""],
                ""i"": result[""i""],
            })

            // ... flush the results slice as soon as its big enough
            if len(results) == RESULTS_BUFFER_SIZE {
                flush()
            }
        }

        // Flush the last contents of the results slice
        if len(results) > 0 {
            flush()
        }

        if err := iter.Close(); err != nil {
            panic(err)
        }
    }
}


type BatchOp struct {
    data       []bson.M // bson.M is defined as: type M map[string]interface{} 
}
ops := make(chan BatchOp)
",1658
586,45269528,data,4
587,45269528,"func writer(schema *db.SchemaSchema, ops chan BatchOp, psql *sql.DB) {
    // ...

    for {
        op := <-ops

        fmt.Printf(""Writing %d rows\n"", len(op.data))
        _, err := psql.Exec(db.GenerateInsert(table, op.data))
        // ...
        fmt.Printf(""Wrote %d rows\n"", len(op.data))
    }
}

// Generate the INSERT INTO statement for a slice of documents from MongoDB
func GenerateInsert(table Table, data []bson.M) (sql string) {
    sql = fmt.Sprintf(`INSERT INTO ""%s"" (`, table.Table)
    for i, column := range table.Columns {
        sql += `""` + column.SqlName + `""`
        if i < len(table.Columns)-1 {
            sql += "", ""
        }
    }

    sql += "") VALUES ""
    for i, row := range data {
        sql += ""(""
        for j, column := range table.Columns {

            // !!!!!! THIS !!!!!!! is the row that blocks and would just not get called sometimes
            switch v := row[column.Name].(type) {
            case nil:
                sql += ""NULL""
            case int:
                sql += fmt.Sprintf(`%v`, v)
            default:
                sql += fmt.Sprintf(`'%v'`, v)
            }

            if j < len(table.Columns)-1 {
                sql += "", ""
            }
        }
        sql += "")""

        if i < len(data)-1 {
            sql += "", ""
        }
    }

    return sql
}
",1337
588,45269528,row[column.Name],16
589,45269528,map,3
590,45269528,go run insert.go,16
591,45269528,foos,4
592,45269528,go run main.go,14
593,45269528,"Creating table foos
Creating table bars
Seeding table foos from collection foos
Flushing 200 items
Writing 200 rows
Flushing 200 items
Wrote 200 rows
Writing 200 rows
Flushing 200 items
Wrote 200 rows
Writing 200 rows
Flushing 200 items
Wrote 200 rows
Writing 200 rows
Flushing 200 items
Wrote 200 rows
Writing 200 rows
Flushing 111 items
Wrote 200 rows
Writing 111 rows
Seeding table bars from collection bars
Seeding done",423
594,45269528,Writing 111 rows,16
595,45269528,Wrote 111 rows,14
596,45269528,Wrote 111 rows,14
597,45269528,GenerateInsert,14
598,45269528,"return ""SELECT 1""",17
599,45269528,data,4
600,45269528,"^\SIGQUIT: quit
PC=0x10566a3 m=0 sigcode=0

goroutine 0 [idle]:
runtime.mach_semaphore_timedwait(0xf03, 0x186a0, 0x7fff5fbff3ec, 0x0, 0x186a05fbff428, 0x1455b60, 0x7fff5fbff420, 0x1050d63, 0x186a0, 0xffffffff, ...)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/sys_darwin_amd64.s:425 +0x13
runtime.semasleep1(0x186a0, 0xffffffff)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/os_darwin.go:402 +0xe1
runtime.semasleep.func1()
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/os_darwin.go:432 +0x33
runtime.systemstack(0x7fff5fbff448)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/asm_amd64.s:343 +0xab
runtime.semasleep(0x186a0, 0xffffffff)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/os_darwin.go:433 +0x4d
runtime.notetsleep_internal(0x1455808, 0x186a0, 0x1455b60, 0x14d44e02e4b89c75, 0x1455b00)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/lock_sema.go:198 +0x79
runtime.notetsleep(0x1455808, 0x186a0, 0x0)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/lock_sema.go:246 +0x75
runtime.stopTheWorldWithSema()
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/proc.go:1029 +0x274
runtime.systemstack(0x1455b00)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/asm_amd64.s:327 +0x79
runtime.mstart()
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/proc.go:1132

goroutine 26 [running]:
runtime.systemstack_switch()
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/asm_amd64.s:281 fp=0xc42004d608 sp=0xc42004d600
runtime.gcStart(0x0, 0x12ec200)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/mgc.go:1010 +0x208 fp=0xc42004d640 sp=0xc42004d608
runtime.mallocgc(0x2000, 0x0, 0xc420114300, 0xc420248000)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/malloc.go:785 +0x491 fp=0xc42004d6e0 sp=0xc42004d640
runtime.rawstring(0x1f60, 0x0, 0x0, 0x0, 0x0, 0x0)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/string.go:237 +0x85 fp=0xc42004d710 sp=0xc42004d6e0
runtime.rawstringtmp(0x0, 0x1f60, 0x13, 0x1f5e, 0xc420248000, 0x1f5e, 0x1f5e)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/string.go:107 +0x78 fp=0xc42004d750 sp=0xc42004d710
runtime.concatstrings(0x0, 0xc42004d830, 0x2, 0x2, 0xc420248000, 0x1f5e)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/string.go:46 +0xf9 fp=0xc42004d7e8 sp=0xc42004d750
runtime.concatstring2(0x0, 0xc420248000, 0x1f5e, 0x130caaa, 0x2, 0xc420248000, 0x1f5e)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/string.go:55 +0x47 fp=0xc42004d828 sp=0xc42004d7e8
_/Users/erikmuttersbach/Projects/mongo2psql-go/db.GenerateInsert(0xc420103870, 0x4, 0xc420103790, 0x4, 0xc4201098c0, 0x1, 0x4, 0xc420124100, 0x3, 0x4, ...)
    /Users/erikmuttersbach/Projects/mongo2psql-go/db/sql.go:31 +0x46f fp=0xc42004da10 sp=0xc42004d828
main.writer(0xc420108200, 0xc4200728a0, 0xc4200c0280)
    /Users/erikmuttersbach/Projects/mongo2psql-go/main.go:111 +0x3b4 fp=0xc42004dfc8 sp=0xc42004da10
runtime.goexit()
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/asm_amd64.s:2197 +0x1 fp=0xc42004dfd0 sp=0xc42004dfc8
created by main.main
    /Users/erikmuttersbach/Projects/mongo2psql-go/main.go:181 +0x135

goroutine 1 [running]:
    goroutine running on other thread; stack unavailable

goroutine 17 [syscall, 10 minutes, locked to thread]:
runtime.goexit()
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/asm_amd64.s:2197 +0x1

goroutine 20 [chan receive, 10 minutes]:
database/sql.(*DB).connectionOpener(0xc4200c0280)
    /usr/local/Cellar/go/1.8.3/libexec/src/database/sql/sql.go:837 +0x4a
created by database/sql.Open
    /usr/local/Cellar/go/1.8.3/libexec/src/database/sql/sql.go:582 +0x212

goroutine 22 [sleep, 10 minutes]:
time.Sleep(0x1dcd6500)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/time.go:59 +0xf9
gopkg.in/mgo%2ev2.(*mongoCluster).syncServersLoop(0xc42006c500)
    /Users/erikmuttersbach/go/src/gopkg.in/mgo.v2/cluster.go:368 +0x471
created by gopkg.in/mgo%2ev2.newCluster
    /Users/erikmuttersbach/go/src/gopkg.in/mgo.v2/cluster.go:78 +0x188

goroutine 50 [sleep, 10 minutes]:
time.Sleep(0x37e11d600)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/time.go:59 +0xf9
gopkg.in/mgo%2ev2.(*mongoServer).pinger(0xc42010e000, 0x1)
    /Users/erikmuttersbach/go/src/gopkg.in/mgo.v2/server.go:301 +0x293
created by gopkg.in/mgo%2ev2.newServer
    /Users/erikmuttersbach/go/src/gopkg.in/mgo.v2/server.go:89 +0x166

goroutine 25 [select, 10 minutes]:
main.tailer(0xc4200728a0, 0xc4200fe0a0)
    /Users/erikmuttersbach/Projects/mongo2psql-go/main.go:67 +0x4d0
created by main.main
    /Users/erikmuttersbach/Projects/mongo2psql-go/main.go:180 +0xff

goroutine 38 [IO wait]:
net.runtime_pollWait(0x1664df0, 0x72, 0xa)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/netpoll.go:164 +0x59
net.(*pollDesc).wait(0xc42006f5d8, 0x72, 0x1438e40, 0x14363d0)
    /usr/local/Cellar/go/1.8.3/libexec/src/net/fd_poll_runtime.go:75 +0x38
net.(*pollDesc).waitRead(0xc42006f5d8, 0xc42007d6b0, 0x24)
    /usr/local/Cellar/go/1.8.3/libexec/src/net/fd_poll_runtime.go:80 +0x34
net.(*netFD).Read(0xc42006f570, 0xc42007d6b0, 0x24, 0x24, 0x0, 0x1438e40, 0x14363d0)
    /usr/local/Cellar/go/1.8.3/libexec/src/net/fd_unix.go:250 +0x1b7
net.(*conn).Read(0xc4200e0010, 0xc42007d6b0, 0x24, 0x24, 0x0, 0x0, 0x0)
    /usr/local/Cellar/go/1.8.3/libexec/src/net/net.go:181 +0x70
gopkg.in/mgo%2ev2.fill(0x143cce0, 0xc4200e0010, 0xc42007d6b0, 0x24, 0x24, 0x0, 0x53)
    /Users/erikmuttersbach/go/src/gopkg.in/mgo.v2/socket.go:535 +0x53
gopkg.in/mgo%2ev2.(*mongoSocket).readLoop(0xc420164000)
    /Users/erikmuttersbach/go/src/gopkg.in/mgo.v2/socket.go:551 +0x107
created by gopkg.in/mgo%2ev2.newSocket
    /Users/erikmuttersbach/go/src/gopkg.in/mgo.v2/socket.go:194 +0x259

goroutine 3 [runnable]:
net.runtime_pollWait(0x1664eb0, 0x72, 0x9)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/netpoll.go:164 +0x59
net.(*pollDesc).wait(0xc4201060d8, 0x72, 0x1438e40, 0x14363d0)
    /usr/local/Cellar/go/1.8.3/libexec/src/net/fd_poll_runtime.go:75 +0x38
net.(*pollDesc).waitRead(0xc4201060d8, 0xc4201000c0, 0x24)
    /usr/local/Cellar/go/1.8.3/libexec/src/net/fd_poll_runtime.go:80 +0x34
net.(*netFD).Read(0xc420106070, 0xc4201000c0, 0x24, 0x24, 0x0, 0x1438e40, 0x14363d0)
    /usr/local/Cellar/go/1.8.3/libexec/src/net/fd_unix.go:250 +0x1b7
net.(*conn).Read(0xc42000e010, 0xc4201000c0, 0x24, 0x24, 0x0, 0x0, 0x0)
    /usr/local/Cellar/go/1.8.3/libexec/src/net/net.go:181 +0x70
gopkg.in/mgo%2ev2.fill(0x143cce0, 0xc42000e010, 0xc4201000c0, 0x24, 0x24, 0x0, 0x0)
    /Users/erikmuttersbach/go/src/gopkg.in/mgo.v2/socket.go:535 +0x53
gopkg.in/mgo%2ev2.(*mongoSocket).readLoop(0xc420118000)
    /Users/erikmuttersbach/go/src/gopkg.in/mgo.v2/socket.go:551 +0x107
created by gopkg.in/mgo%2ev2.newSocket
    /Users/erikmuttersbach/go/src/gopkg.in/mgo.v2/socket.go:194 +0x259

goroutine 52 [select, 10 minutes]:
github.com/rwynn/gtm.FetchDocuments(0xc4200fe0a0, 0xc420063860, 0x131fa40, 0xc420100120, 0xc4201122a0, 0x0, 0x0)
    /Users/erikmuttersbach/go/src/github.com/rwynn/gtm/gtm.go:498 +0x3a7
created by github.com/rwynn/gtm.Start
    /Users/erikmuttersbach/go/src/github.com/rwynn/gtm/gtm.go:673 +0x5fc

goroutine 53 [semacquire, 10 minutes]:
sync.runtime_notifyListWait(0xc420150108, 0xc400000001)
    /usr/local/Cellar/go/1.8.3/libexec/src/runtime/sema.go:298 +0x10b
sync.(*Cond).Wait(0xc4201500f8)
    /usr/local/Cellar/go/1.8.3/libexec/src/sync/cond.go:57 +0x89
gopkg.in/mgo%2ev2.(*Iter).Next(0xc4201500f0, 0x12c45e0, 0xc42007d590, 0x0)
    /Users/erikmuttersbach/go/src/gopkg.in/mgo.v2/session.go:3704 +0x9f
github.com/rwynn/gtm.TailOps(0xc4200fe0a0, 0xc420063860, 0xc42010a008, 0x1, 0x1, 0xc420110090, 0x0, 0x0)
    /Users/erikmuttersbach/go/src/github.com/rwynn/gtm/gtm.go:365 +0x1ea
created by github.com/rwynn/gtm.Start
    /Users/erikmuttersbach/go/src/github.com/rwynn/gtm/gtm.go:685 +0x8ea

rax    0xe
rbx    0x0
rcx    0x7fff5fbff3c0
rdx    0x186a0
rdi    0xf03
rsi    0x0
rbp    0x7fff5fbff3f8
rsp    0x7fff5fbff3c0
r8     0x43a260
r9     0x11
r10    0x653ef1e26c7c
r11    0x202
r12    0x1ad50d58ee7b
r13    0x1cbe784ba3b8
r14    0x14d44e02db750c00
r15    0x1
rip    0x10566a3
rflags 0x202
cs     0x7
fs     0x0
gs     0x0
exit status 2
",8107
601,45415962,mongodb,7
602,45415962,mgo.v2,6
603,45415962,"func mainHandle(rw http.ResponseWriter, rq *http.Request) {

    fileToBeChunked := ""/Users/IT/Desktop/4k.jpg""

    file, err := os.Open(fileToBeChunked)

    if err != nil {
        fmt.Println(err)
        os.Exit(1)
    }

    defer file.Close()

    fileInfo, _ := file.Stat()

    var fileSize int64 = fileInfo.Size()

    const fileChunk = 0.25 * (1 << 20) // 1 MB, change this to your requirement

    // calculate total number of parts the file will be chunked into

    totalPartsNum := uint64(math.Ceil(float64(fileSize) / float64(fileChunk)))

    fmt.Printf(""Splitting to %d pieces.\n"", totalPartsNum)

    var sent int
    prev_part := 0

    for i := uint64(0); i < totalPartsNum; i++ {

        partSize := int(math.Min(fileChunk, float64(fileSize-int64(i*fileChunk))))

        sent = sent + partSize
        partBuffer := make([]byte, partSize)
        //fileBuffer := make([]byte, fileSize)

        //fmt.Printf(""File size is %d \n"",fileBuffer)
        fmt.Printf(""Part size is %d \n"",partSize)

        file.Read(partBuffer)


        client := &http.Client{}
        req, _ := http.NewRequest(""PUT"", ""http://localhost:8011/upload/23"", bytes.NewReader(partBuffer))
        req.Header.Set(""Content-Range"", ""bytes ""+strconv.Itoa(prev_part) + ""-""+strconv.Itoa(sent-1)+""/""+strconv.FormatInt(fileSize,10))
        req.Header.Set(""Content-Length"", strconv.Itoa(partSize))
        res, _ := client.Do(req)
        prev_part = sent
        fmt.Println(res)

    }


}
",1480
604,45415962,"func UploadFileChunk(rw http.ResponseWriter,rq *http.Request) {

    fmt.Println(rq.Header[""Content-Range""])
    cnt_range:=rq.Header[""Content-Range""]
    file:=createFileByName(""asd"")
    if(checkFileChunkIndex(cnt_range[0])) {
        buf, err := ioutil.ReadAll(rq.Body)
        if err!=nil {log.Fatal(""request"",err)}

        file.Write(buf)
    } else {
        file.Close()
    }
}



func checkFileChunkIndex(cnt_r string ) bool {

    re := regexp.MustCompile(`([a-z]+) ([[:alnum:]]+)-([[:alnum:]]+)/([[:alnum:]]+)`)

    component:= re.FindStringSubmatch(cnt_r)

    filesize,_:= strconv.Atoi(component[4])
    last_chunk,_:= strconv.Atoi(component[3])
    return filesize - last_chunk - 1 > 0
}


func createFileByName(fname string ) *mgo.GridFile {
    if(!file_created) {
        _File,err:= db.GridFS(""fs"").Create(""112233"")
        File = *_File
        if err != nil {
            panic(err)
        }
        file_created = true
        return &File
    }
    return &File
}
",989
605,45415962,"fatal error: sync: unlock of unlocked mutex

goroutine 7 [running]:
runtime.throw(0x144de3d, 0x1e)
    /usr/local/go/src/runtime/panic.go:596 +0x95 fp=0xc42004b8c0 sp=0xc42004b8a0
sync.throw(0x144de3d, 0x1e)
    /usr/local/go/src/runtime/panic.go:585 +0x35 fp=0xc42004b8e0 sp=0xc42004b8c0
sync.(*Mutex).Unlock(0xc4200ca8c0)
    /usr/local/go/src/sync/mutex.go:113 +0xa4 fp=0xc42004b908 sp=0xc42004b8e0
sync.(*Cond).Wait(0x162c4e8)
    /usr/local/go/src/sync/cond.go:56 +0x6c fp=0xc42004b938 sp=0xc42004b908
gopkg.in/mgo%2ev2.(*GridFile).insertChunk(0x162c4e0, 0xc42018a000, 0x3fc00, 0x40000)
    /Users/IT/go/src/gopkg.in/mgo.v2/gridfs.go:623 +0x1b3 fp=0xc42004ba48 sp=0xc42004b938
gopkg.in/mgo%2ev2.(*GridFile).Write(0x162c4e0, 0xc420678000, 0x40000, 0x7fe00, 0x40000, 0x0, 0x0)
    /Users/IT/go/src/gopkg.in/mgo.v2/gridfs.go:595 +0x2d6 fp=0xc42004baf0 sp=0xc42004ba48
go_storage/files.UploadFileChunk(0x15faf80, 0xc4202e4380, 0xc42000b000)
    /Users/IT/go/src/go_storage/files/files.go:249 +0x23b fp=0xc42004bba8 sp=0xc42004baf0
net/http.HandlerFunc.ServeHTTP(0x1459710, 0x15faf80, 0xc4202e4380, 0xc42000b000)
    /usr/local/go/src/net/http/server.go:1942 +0x44 fp=0xc42004bbd0 sp=0xc42004bba8
github.com/gorilla/mux.(*Router).ServeHTTP(0xc42001a320, 0x15faf80, 0xc4202e4380, 0xc42000b000)
    /Users/IT/go/src/github.com/gorilla/mux/mux.go:114 +0x10c fp=0xc42004bcd0 sp=0xc42004bbd0
net/http.(*ServeMux).ServeHTTP(0x162bee0, 0x15faf80, 0xc4202e4380, 0xc42000ae00)
    /usr/local/go/src/net/http/server.go:2238 +0x130 fp=0xc42004bd10 sp=0xc42004bcd0
net/http.serverHandler.ServeHTTP(0xc420096dc0, 0x15faf80, 0xc4202e4380, 0xc42000ae00)
    /usr/local/go/src/net/http/server.go:2568 +0x92 fp=0xc42004bd58 sp=0xc42004bd10
net/http.(*conn).serve(0xc4200cd2c0, 0x15fb7c0, 0xc420016ac0)
    /usr/local/go/src/net/http/server.go:1825 +0x612 fp=0xc42004bfc8 sp=0xc42004bd58
runtime.goexit()
    /usr/local/go/src/runtime/asm_amd64.s:2197 +0x1 fp=0xc42004bfd0 sp=0xc42004bfc8
created by net/http.(*Server).Serve
    /usr/local/go/src/net/http/server.go:2668 +0x2ce

goroutine 1 [IO wait]:
net.runtime_pollWait(0x23a0e40, 0x72, 0x0)
    /usr/local/go/src/runtime/netpoll.go:164 +0x59
net.(*pollDesc).wait(0xc4200556b8, 0x72, 0x0, 0xc4200bcee0)
    /usr/local/go/src/net/fd_poll_runtime.go:75 +0x38
net.(*pollDesc).waitRead(0xc4200556b8, 0xffffffffffffffff, 0x0)
    /usr/local/go/src/net/fd_poll_runtime.go:80 +0x34
net.(*netFD).accept(0xc420055650, 0x0, 0x15f6ec0, 0xc4200bcee0)
    /usr/local/go/src/net/fd_unix.go:430 +0x1e5
net.(*TCPListener).accept(0xc42000e0a0, 0xc4200cd340, 0x13c96c0, 0xffffffffffffffff)
    /usr/local/go/src/net/tcpsock_posix.go:136 +0x2e
net.(*TCPListener).AcceptTCP(0xc42000e0a0, 0xc420049df0, 0xc420049df8, 0xc420049de8)
    /usr/local/go/src/net/tcpsock.go:215 +0x49
net/http.tcpKeepAliveListener.Accept(0xc42000e0a0, 0x1459ca8, 0xc4200cd2c0, 0x15fb880, 0xc420019c80)
    /usr/local/go/src/net/http/server.go:3044 +0x2f
net/http.(*Server).Serve(0xc420096dc0, 0x15fb280, 0xc42000e0a0, 0x0, 0x0)
    /usr/local/go/src/net/http/server.go:2643 +0x228
net/http.(*Server).ListenAndServe(0xc420096dc0, 0xc420096dc0, 0x15f60c0)
    /usr/local/go/src/net/http/server.go:2585 +0xb0
net/http.ListenAndServe(0x143fbf7, 0x5, 0x0, 0x0, 0xc420110360, 0xc420019230)
    /usr/local/go/src/net/http/server.go:2787 +0x7f
main.main()
    /Users/IT/go/src/go_storage/main.go:24 +0x358

goroutine 17 [syscall, locked to thread]:
runtime.goexit()
    /usr/local/go/src/runtime/asm_amd64.s:2197 +0x1

goroutine 5 [select]:
gopkg.in/mgo%2ev2.(*mongoCluster).syncServersLoop(0xc42000a800)
    /Users/IT/go/src/gopkg.in/mgo.v2/cluster.go:394 +0x3a3
created by gopkg.in/mgo%2ev2.newCluster
    /Users/IT/go/src/gopkg.in/mgo.v2/cluster.go:78 +0x188

goroutine 22 [semacquire]:
sync.runtime_SemacquireMutex(0xc4200f20e4)
    /usr/local/go/src/runtime/sema.go:62 +0x34
sync.(*Mutex).Lock(0xc4200f20e0)
    /usr/local/go/src/sync/mutex.go:87 +0x9d
gopkg.in/mgo%2ev2.(*mongoSocket).Acquire(0xc4200f20e0, 0x0)
    /Users/IT/go/src/gopkg.in/mgo.v2/socket.go:242 +0x31
gopkg.in/mgo%2ev2.(*Session).acquireSocket(0xc4200e04e0, 0x0, 0x0, 0x0, 0x0)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:4419 +0x475
gopkg.in/mgo%2ev2.(*Collection).writeOp(0xc420019f20, 0x139efa0, 0xc4200e8000, 0x100e501, 0x0, 0x0, 0x0)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:4603 +0xd6
gopkg.in/mgo%2ev2.(*Collection).Insert(0xc420019f20, 0xc420010070, 0x1, 0x1, 0x0, 0x0)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:2437 +0xac
gopkg.in/mgo%2ev2.(*GridFile).insertChunk.func1(0x162c4e0, 0xc42033c000, 0x3fc3e, 0x40000)
    /Users/IT/go/src/gopkg.in/mgo.v2/gridfs.go:642 +0xe8
created by gopkg.in/mgo%2ev2.(*GridFile).insertChunk
    /Users/IT/go/src/gopkg.in/mgo.v2/gridfs.go:650 +0x460

goroutine 19 [sleep]:
time.Sleep(0x37e11d600)
    /usr/local/go/src/runtime/time.go:59 +0xf9
gopkg.in/mgo%2ev2.(*mongoServer).pinger(0xc4200f2000, 0x1)
    /Users/IT/go/src/gopkg.in/mgo.v2/server.go:301 +0x293
created by gopkg.in/mgo%2ev2.newServer
    /Users/IT/go/src/gopkg.in/mgo.v2/server.go:89 +0x166

goroutine 21 [semacquire]:
sync.runtime_SemacquireMutex(0xc4200f20e4)
    /usr/local/go/src/runtime/sema.go:62 +0x34
sync.(*Mutex).Lock(0xc4200f20e0)
    /usr/local/go/src/sync/mutex.go:87 +0x9d
gopkg.in/mgo%2ev2.(*mongoSocket).readLoop(0xc4200f20e0)
    /Users/IT/go/src/gopkg.in/mgo.v2/socket.go:582 +0x40a
created by gopkg.in/mgo%2ev2.newSocket
    /Users/IT/go/src/gopkg.in/mgo.v2/socket.go:194 +0x259

goroutine 9 [semacquire]:
sync.runtime_SemacquireMutex(0xc4202d2044)
    /usr/local/go/src/runtime/sema.go:62 +0x34
sync.(*Mutex).Lock(0xc4202d2040)
    /usr/local/go/src/sync/mutex.go:87 +0x9d
gopkg.in/mgo%2ev2.(*mongoSocket).SimpleQuery(0xc4200f20e0, 0xc4202e4000, 0x6, 0x143fbe3, 0x5, 0xc4202d2031, 0xb)
    /Users/IT/go/src/gopkg.in/mgo.v2/socket.go:367 +0x28b
gopkg.in/mgo%2ev2.(*Database).run(0xc4200bc8e0, 0xc4200f20e0, 0x13d0f00, 0xc4202d4040, 0x13cbb00, 0xc4202e2000, 0xc4200f2000, 0xc4200f20e0)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:3261 +0x1b3
gopkg.in/mgo%2ev2.(*Collection).writeOpCommand(0xc420019f20, 0xc4200f20e0, 0xc4200e2000, 0x139efa0, 0xc4202d6000, 0x1010001, 0x23685a8, 0x0, 0x100c420028638)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:4786 +0x1db
gopkg.in/mgo%2ev2.(*Collection).writeOp(0xc420019f20, 0x139efa0, 0xc4202d6000, 0x100e501, 0x0, 0x0, 0x0)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:4645 +0x6dc
gopkg.in/mgo%2ev2.(*Collection).Insert(0xc420019f20, 0xc4202d2000, 0x1, 0x1, 0x0, 0x0)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:2437 +0xac
gopkg.in/mgo%2ev2.(*GridFile).insertChunk.func1(0x162c4e0, 0xc420290000, 0x3fc3e, 0x40000)
    /Users/IT/go/src/gopkg.in/mgo.v2/gridfs.go:642 +0xe8
created by gopkg.in/mgo%2ev2.(*GridFile).insertChunk
    /Users/IT/go/src/gopkg.in/mgo.v2/gridfs.go:650 +0x460

goroutine 12 [semacquire]:
sync.runtime_SemacquireMutex(0xc4200e6074)
    /usr/local/go/src/runtime/sema.go:62 +0x34
sync.(*Mutex).Lock(0xc4200e6070)
    /usr/local/go/src/sync/mutex.go:87 +0x9d
gopkg.in/mgo%2ev2.(*mongoSocket).SimpleQuery(0xc4200f20e0, 0xc4202e40e0, 0x6, 0x143fbe3, 0x5, 0xc4200e6060, 0xb)
    /Users/IT/go/src/gopkg.in/mgo.v2/socket.go:367 +0x28b
gopkg.in/mgo%2ev2.(*Database).run(0xc4200bc8e0, 0xc4200f20e0, 0x13d0f00, 0xc4200ee080, 0x13cbb00, 0xc4202e2060, 0x2, 0xc42005e400)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:3261 +0x1b3
gopkg.in/mgo%2ev2.(*Collection).writeOpCommand(0xc420019f20, 0xc4200f20e0, 0xc4200e2000, 0x139efa0, 0xc420018d20, 0x1010001, 0x2304558, 0x46, 0x8700c420023638)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:4786 +0x1db
gopkg.in/mgo%2ev2.(*Collection).writeOp(0xc420019f20, 0x139efa0, 0xc420018d20, 0x100e501, 0x0, 0x0, 0x0)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:4645 +0x6dc
gopkg.in/mgo%2ev2.(*Collection).Insert(0xc420019f20, 0xc420010060, 0x1, 0x1, 0x0, 0x0)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:2437 +0xac
gopkg.in/mgo%2ev2.(*GridFile).insertChunk.func1(0x162c4e0, 0xc42013a000, 0x3fc3e, 0x40000)
    /Users/IT/go/src/gopkg.in/mgo.v2/gridfs.go:642 +0xe8
created by gopkg.in/mgo%2ev2.(*GridFile).insertChunk
    /Users/IT/go/src/gopkg.in/mgo.v2/gridfs.go:650 +0x460

goroutine 38 [IO wait]:
net.runtime_pollWait(0x23a0f00, 0x77, 0x4)
    /usr/local/go/src/runtime/netpoll.go:164 +0x59
net.(*pollDesc).wait(0xc4200fa068, 0x77, 0x15f84c0, 0x15f4540)
    /usr/local/go/src/net/fd_poll_runtime.go:75 +0x38
net.(*pollDesc).waitWrite(0xc4200fa068, 0xc420392ef2, 0x2edd1)
    /usr/local/go/src/net/fd_poll_runtime.go:84 +0x34
net.(*netFD).Write(0xc4200fa000, 0xc420382000, 0x3fcc3, 0x40000, 0x10ef2, 0x15f84c0, 0x15f4540)
    /usr/local/go/src/net/fd_unix.go:340 +0x34d
net.(*conn).Write(0xc4200ea008, 0xc420382000, 0x3fcc3, 0x40000, 0x0, 0x0, 0x0)
    /usr/local/go/src/net/net.go:193 +0x70
gopkg.in/mgo%2ev2.(*mongoSocket).Query(0xc4200f20e0, 0xc420181878, 0x1, 0x1, 0x0, 0x2)
    /Users/IT/go/src/gopkg.in/mgo.v2/socket.go:525 +0x2ad1
gopkg.in/mgo%2ev2.(*mongoSocket).SimpleQuery(0xc4200f20e0, 0xc4200f21c0, 0x6, 0x143fbe3, 0x5, 0xc420010631, 0xb)
    /Users/IT/go/src/gopkg.in/mgo.v2/socket.go:363 +0x22a
gopkg.in/mgo%2ev2.(*Database).run(0xc4200bc8e0, 0xc4200f20e0, 0x13d0f00, 0xc4202d4140, 0x13cbb00, 0xc4200f6000, 0x1444391, 0xc42002a800)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:3261 +0x1b3
gopkg.in/mgo%2ev2.(*Collection).writeOpCommand(0xc420019f20, 0xc4200f20e0, 0xc4200e2000, 0x139efa0, 0xc4200e8000, 0x1010001, 0x2306a28, 0x0, 0x800c4204a3e38)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:4786 +0x1db
gopkg.in/mgo%2ev2.(*Collection).writeOp(0xc420019f20, 0x139efa0, 0xc4200e8000, 0xc4200e6001, 0x0, 0x0, 0x0)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:4645 +0x6dc
gopkg.in/mgo%2ev2.(*Collection).Insert(0xc420019f20, 0xc4200e6000, 0x1, 0x1, 0x0, 0x0)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:2437 +0xac
gopkg.in/mgo%2ev2.(*GridFile).insertChunk.func1(0x162c4e0, 0xc4204d8000, 0x3fc3e, 0x40000)
    /Users/IT/go/src/gopkg.in/mgo.v2/gridfs.go:642 +0xe8
created by gopkg.in/mgo%2ev2.(*GridFile).insertChunk
    /Users/IT/go/src/gopkg.in/mgo.v2/gridfs.go:650 +0x460

goroutine 24 [semacquire]:
sync.runtime_SemacquireMutex(0xc4200f20e4)
    /usr/local/go/src/runtime/sema.go:62 +0x34
sync.(*Mutex).Lock(0xc4200f20e0)
    /usr/local/go/src/sync/mutex.go:87 +0x9d
gopkg.in/mgo%2ev2.(*mongoSocket).Acquire(0xc4200f20e0, 0x0)
    /Users/IT/go/src/gopkg.in/mgo.v2/socket.go:242 +0x31
gopkg.in/mgo%2ev2.(*Session).acquireSocket(0xc4200e04e0, 0x0, 0x0, 0x0, 0x0)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:4419 +0x475
gopkg.in/mgo%2ev2.(*Collection).writeOp(0xc420019f20, 0x139efa0, 0xc4202d6000, 0x100e501, 0x0, 0x0, 0x0)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:4603 +0xd6
gopkg.in/mgo%2ev2.(*Collection).Insert(0xc420019f20, 0xc4202d2010, 0x1, 0x1, 0x0, 0x0)
    /Users/IT/go/src/gopkg.in/mgo.v2/session.go:2437 +0xac
gopkg.in/mgo%2ev2.(*GridFile).insertChunk.func1(0x162c4e0, 0xc4205f8000, 0x3fc3e, 0x40000)
    /Users/IT/go/src/gopkg.in/mgo.v2/gridfs.go:642 +0xe8
created by gopkg.in/mgo%2ev2.(*GridFile).insertChunk
    /Users/IT/go/src/gopkg.in/mgo.v2/gridfs.go:650 +0x460

goroutine 14 [IO wait]:
net.runtime_pollWait(0x23a0d80, 0x72, 0x7)
    /usr/local/go/src/runtime/netpoll.go:164 +0x59
net.(*pollDesc).wait(0xc420055728, 0x72, 0x15f84c0, 0x15f4540)
    /usr/local/go/src/net/fd_poll_runtime.go:75 +0x38
net.(*pollDesc).waitRead(0xc420055728, 0xc420016b11, 0x1)
    /usr/local/go/src/net/fd_poll_runtime.go:80 +0x34
net.(*netFD).Read(0xc4200556c0, 0xc420016b11, 0x1, 0x1, 0x0, 0x15f84c0, 0x15f4540)
    /usr/local/go/src/net/fd_unix.go:250 +0x1b7
net.(*conn).Read(0xc42000e0a8, 0xc420016b11, 0x1, 0x1, 0x0, 0x0, 0x0)
    /usr/local/go/src/net/net.go:181 +0x70
net/http.(*connReader).backgroundRead(0xc420016b00)
    /usr/local/go/src/net/http/server.go:656 +0x58
created by net/http.(*connReader).startBackgroundRead
    /usr/local/go/src/net/http/server.go:652 +0xdf

Process finished with exit code 2
",11958
606,45415962,"file.assertMode(gfsWriting)
    file.m.Lock()
    debugf(""GridFile %p: writing %d bytes"", file, len(data))
    defer file.m.Unlock()

    if file.err != nil {
        return 0, file.err
    }
",192
607,45500420,"package beater

import (
    ""fmt""
    ""io/ioutil""
    ""math""
    ""time""
    //""log""
    ""strconv""
    ""strings""

    ""github.com/elastic/beats/libbeat/beat""
    ""github.com/elastic/beats/libbeat/common""
    ""github.com/elastic/beats/libbeat/logp""
    ""github.com/elastic/beats/libbeat/publisher""

    ""github.com/bob96/hc34/config""
)

type Hc34 struct {
    done   chan struct{}

    config config.Config

    client publisher.Client

    siteKey string

    fileKey string

    callEndDateTime string 

    callStartDateTime string

    callerPartyNumber string

    calledPartyNumber string

    incomingTrunkKey string

    outgoingTrunkKey string

    blockNumber string

    blockDateTime string

    headerFunction int

    headerUser int

    callerCategory int

    callerOrigineIdentity string

    complementaryIdentity string 

    calledDigits string 

    traficType int 

    serviceType int 

    supportService int 

    chargeDuration int 

    chargeMeters int 

    outgoingTrunk string

    reserved string 

    operatorIdentity string

    operatorServiceType string

    block string

    filekey string

    lastIndexTime time.Time
}
// Creates beater
func New(b *beat.Beat, cfg *common.Config) (beat.Beater, error) {
    config := config.DefaultConfig
    if err := cfg.Unpack(&config); err != nil {
        return nil, fmt.Errorf(""Error reading config file: %v"", err)
    }

    bt := &Hc34{
        done: make(chan struct{}),
        config: config,
    }
    return bt, nil
}

func (bt *Hc34) Run(b *beat.Beat) error {
    logp.Info(""hc34 is running! Hit CTRL-C to stop it."")

    bt.client = b.Publisher.Connect()
    ticker := time.NewTicker(bt.config.Period) 
    //counter := 1
    for {
        now := time.Now()
        bt.hc34DataHolderfunc(bt.config.Path) 
        bt.lastIndexTime = now             
        logp.Info(""Event sent"")
        select {
        case <-bt.done:
            return nil
        case <-ticker.C:
        }

        /*event := common.MapStr{
            ""@timestamp"": common.Time(time.Now()),
            ""type"":       b.Name,
            ""counter"":    counter,
        }
        bt.client.PublishEvent(event)
        logp.Info(""Event sent"")
        counter++*/
    }
}

func (bt *Hc34) Stop() {
    bt.client.Close()
    close(bt.done)
}
//checking error
func check(e error) {
    if e != nil {
        panic(e)
    }
}

func (bt *Hc34) hc34DataHolderfunc(dirfile string) {    
//reading the binary file
    data, err := ioutil.ReadFile(dirfile)
    check(err)
    //t := f.ModTime() 
    bt.hc34decoderfunc(string(data))

    event := common.MapStr{
            ""@timestamp"": common.Time(time.Now()),
            /*""siteKey"": siteKey,
            ""fileKey"": fileKey,*/
            //""callEndDateTime"":    bt.callEndDateTime,
            //""callStartDateTime"": bt.callStartDateTime,
            ""callerPartyNumber"": bt.callerPartyNumber,
            ""calledPartyNumber"": bt.calledPartyNumber,
            //""incomingTrunkKey"": bt.incomingTrunkKey,
            //""outgoingTrunkKey"": bt.outgoingTrunkKey,
            ""blockNumber"": bt.blockNumber,
            ""blockDateTime"": bt.blockDateTime,
            ""headerFunction"": bt.headerFunction,
            ""headerUser"": bt.headerUser,
            ""callerCategory"": bt.callerCategory,
            ""callerOrigineIdentity"": bt.callerOrigineIdentity,
            ""complementaryIdentity"": bt.complementaryIdentity,
            ""calledDigits"": bt.calledDigits,
            ""traficType"": bt.traficType,
            ""serviceType"": bt.serviceType,
            ""supportService"": bt.supportService,
            ""chargeDuration"": bt.chargeDuration,
            ""chargeMeters"": bt.chargeMeters,
            //""outgoingTrunk"": bt.outgoingTrunk,
            ""reserved"": bt.reserved,
            ""peratorIdentity"": bt.operatorIdentity,
            ""operatorServiceType"": bt.operatorServiceType,
        }
            bt.client.PublishEvent(event)


}
type hc34decoder struct{
    block string
    siteKey string
    filekey string
}
func (bt *Hc34) hc34decoderfunc(block string){
    // Get header (32 bytes) and content (1932 bytes) from block

    header :=block[0:64]
    content :=block[64:len(block)]
    // Get block key and date time from header
    blockKey :=header[4:10]
    yearBlock :=header[10:12]
    //BDTdecode, err := hex.DecodeString(header[10:12])

    bt.blockDateTime =bt.getDate(bt.getDateBlockHeader(header[10:22]))
    /*if err != nil {
        log.Fatal(err)
    }*/
    // process content to extract CDRs
    start := 0
    totalCdr := len(content) / 84
    for z := 0; z < totalCdr; z++ {
        record := content[start:start + 84]
        start = start + 84
        // Extract data from single record
        //CEDdecode, err :=hex.DecodeString(record[10:12])
        a:= hex2decimal(record[54:56])
        headerFunction:= hex2decimal(record[0:2])
        headerUser:= hex2decimal(record[2:4])
        callerCategory:= hex2decimal(record[4:6])
        callEndDateTime :=bt.getDate(bt.getDateCall(record[6:16], yearBlock))
        callerOrigineIdentity:= strings.Replace(string(record[16:26]),""F"","""",-1)
        complementaryIdentity := strings.Replace(string(record[26:36]),""F"","""",-1)
        calledDigits:= strings.Replace(string(record[36:54]),""F"","""",-1)
        traficType:= hex2decimal(strings.Replace(string(a),""F"","""",-1))
        serviceType := hex2decimal(record[56:58])
        supportService :=hex2decimal(record[58:60])
        duration :=hex2decimal(record[60:64])
        meters:= hex2decimal(record[64:70])
        //outgoingTrunk :=strings.Replace(string(record[70:74]),""F"", """",-1)
        bt.reserved = record[74:78]
        bt.operatorIdentity = strings.Replace(string(record[78:82]),""F"", """",-1)
        bt.operatorServiceType =record[82:84]
        bt.blockNumber=blockKey
        bt.callerPartyNumber = bt.getFormattedMsisdnHc34Caller(complementaryIdentity, callerOrigineIdentity)
        bt.calledPartyNumber = bt.getFormattedMsisdnHc34Called(calledDigits)

        bt.callStartDateTime  = bt.getStartDate(callEndDateTime, int(duration) )
        /*if err !=nil{
            log.Fatal(err)
        }*/
        bt.headerFunction=int(headerFunction)
        bt.headerUser=int(headerUser)
        bt.callerCategory=int(callerCategory)
        bt.traficType=int(traficType)
        bt.serviceType=int(serviceType)
        bt.supportService=int(supportService)
        bt.chargeMeters=int(meters)
        bt.chargeDuration=int(duration)

func (bt *Hc34) getStartDate(endTime string, duration int) string{
    layout := ""2006-01-02T15:04:05.000Z""
    t, err := time.Parse(layout, endTime)
    if err!=nil{
        panic(err)
    }
    return (t.Add(time.Duration(-duration) * time.Second)).String()

}
/**
     * Get the date of the call.
     * @param input the quanted date
     * @param year the year
     * @return the date of the call
     */
func (bt *Hc34) getDateCall(input string,year string) string{
        quant:= hex2decimal(input[1:4])
        hour := input[4:len(input)]

        return ""20"" + year + bt.getQuantDate(quant) + """" + hour
    }

    /**
     * Get date of block header.
     * @param input the quanted date
     * @return the date block header
     */
func(bt *Hc34) getDateBlockHeader(input string) string{
        year := input[0:2]
        quant:= hex2decimal(input[3:6])
        hour := input[6:len(input)];
        /*if err!=nil{
            panic(err)
        }*/
        return ""20"" + year + bt.getQuantDate(quant) + """" + hour
    }

    /**
     * format date.
     * @param date the date
     * @return the formatted date
     */

func(bt *Hc34) getDate(date string) string{
        year := date[0:4]
        month := date[4:6]
        day := date[6:8]
        hour := date[8:10]
        minute := date[10:12]
        second := date[12:14]
        return year + ""-"" + month + ""-"" + day + "" "" + hour + "":"" + minute + "":"" + second;
    }
     /**
     * Format quanted date.
     * @param quant the quanted date
     * @return the formatted date
     */
func(bt *Hc34) getQuantDate(quant int) string{
        nanoDayOfYear:=string(quant*24*60*60*1000*1000*1000) + ""ns""
        durt,err:=time.ParseDuration(nanoDayOfYear)
        t := time.Date(2009, time.January, 01, 00, 0, 0, 0, time.UTC)
        t=t.Add(durt)
        if err!=nil{

            panic(err)
        }
        return string(t.Month())+""""+string(t.Day())

    }
func bin(i int, prefix bool) string {
      i64 := int64(i)

      if prefix {
              return ""0b"" + strconv.FormatInt(i64, 2) // base 2 for binary
      } else {
              return strconv.FormatInt(i64, 2) // base 2 for binary
      }
}

func bin2int(binStr string) int {

// base 2 for binary
result, _ := strconv.ParseInt(binStr, 2, 64)
return int(result)
}


func hex(i int, prefix bool) string {
  i64 := int64(i)

  if prefix {
          return ""0x"" + strconv.FormatInt(i64, 16) // base 16 for hexadecimal
  } else {
          return strconv.FormatInt(i64, 16) // base 16 for hexadecimal
  }
}

func hex2int(hexStr string) int {
  // base 16 for hexadecimal
  result, _ := strconv.ParseInt(hexStr, 16, 64)
  return int(result)
}
func hex2decimal(hexStr string) int{

    base16 := 16;

    var val float64
    for i:=0; i>len(hexStr);i++{
        vala:=hex2int(string(base16))
        valo:=hex2int(string(hexStr[len(hexStr)-i]))
        val+=float64(valo)*math.Pow(float64(vala),float64(i))
    }
    return int(val)

}
",9437
608,45500420,"panic: time: invalid duration ns

goroutine 1 [running]:
github.com/bob96/hc34/beater.(*Hc34).getQuantDate(0xc42012a8c0, 0x0, 0x0, 0x9)
    /home/hp/src/github.com/bob96/hc34/beater/hc34.go:354 +0x2cf
github.com/bob96/hc34/beater.(*Hc34).getDateBlockHeader(0xc42012a8c0, 0xc4202d000a, 0xc, 0x0, 0x0)
    /home/hp/src/github.com/bob96/hc34/beater/hc34.go:324 +0x73
github.com/bob96/hc34/beater.(*Hc34).hc34decoderfunc(0xc42012a8c0, 0xc4202d0000, 0x2d128)
    /home/hp/src/github.com/bob96/hc34/beater/hc34.go:190 +0x77
github.com/bob96/hc34/beater.(*Hc34).hc34DataHolderfunc(0xc42012a8c0, 0xc420103140, 0x5e)
    /home/hp/src/github.com/bob96/hc34/beater/hc34.go:141 +0xd3
github.com/bob96/hc34/beater.(*Hc34).Run(0xc42012a8c0, 0xc420142420, 0xc4201424c8, 0xb)
    /home/hp/src/github.com/bob96/hc34/beater/hc34.go:105 +0x109
github.com/bob96/hc34/vendor/github.com/elastic/beats/libbeat/beat.(*Beat).launch(0xc420142420, 0x9a84c8, 0x0, 0x0)
    /home/hp/src/github.com/bob96/hc34/vendor/github.com/elastic/beats/libbeat/beat/beat.go:211 +0x706
github.com/bob96/hc34/vendor/github.com/elastic/beats/libbeat/beat.Run(0x9855d5, 0x4, 0x0, 0x0, 0x9a84c8, 0xc4200001a0, 0xc4200001a0)
    /home/hp/src/github.com/bob96/hc34/vendor/github.com/elastic/beats/libbeat/beat/beat.go:136 +0x65
main.main()
    /home/hp/src/github.com/bob96/hc34/main.go:12 +0x54
",1348
609,45515182,"> mkdir -p ""$HOME/Go/src/github.com/fabric8io""
> export GOPATH=""$HOME/Go""
> cd ""$HOME/Go/src/github.com/fabric8io""
> git clone https://github.com/fabric8io/kubernetes-model
> cd kubernetes-model
> brew install go
> brew install godep
> make
CGO_ENABLED=0 GO15VENDOREXPERIMENT=1 go build -a ./cmd/generate/generate.go
cmd/generate/generate.go:27:2: cannot find package ""github.com/openshift/origin/pkg/authorization/api/v1"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/github.com/openshift/origin/pkg/authorization/api/v1 (from $GOROOT)
    /Users/joangoyeau/Code/go/src/github.com/openshift/origin/pkg/authorization/api/v1 (from $GOPATH)
cmd/generate/generate.go:28:2: cannot find package ""github.com/openshift/origin/pkg/build/api/v1"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/github.com/openshift/origin/pkg/build/api/v1 (from $GOROOT)
    /Users/joangoyeau/Code/go/src/github.com/openshift/origin/pkg/build/api/v1 (from $GOPATH)
cmd/generate/generate.go:29:2: cannot find package ""github.com/openshift/origin/pkg/deploy/api/v1"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/github.com/openshift/origin/pkg/deploy/api/v1 (from $GOROOT)
    /Users/joangoyeau/Code/go/src/github.com/openshift/origin/pkg/deploy/api/v1 (from $GOPATH)
cmd/generate/generate.go:30:2: cannot find package ""github.com/openshift/origin/pkg/image/api/v1"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/github.com/openshift/origin/pkg/image/api/v1 (from $GOROOT)
    /Users/joangoyeau/Code/go/src/github.com/openshift/origin/pkg/image/api/v1 (from $GOPATH)
cmd/generate/generate.go:31:2: cannot find package ""github.com/openshift/origin/pkg/oauth/api/v1"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/github.com/openshift/origin/pkg/oauth/api/v1 (from $GOROOT)
    /Users/joangoyeau/Code/go/src/github.com/openshift/origin/pkg/oauth/api/v1 (from $GOPATH)
cmd/generate/generate.go:32:2: cannot find package ""github.com/openshift/origin/pkg/project/api/v1"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/github.com/openshift/origin/pkg/project/api/v1 (from $GOROOT)
    /Users/joangoyeau/Code/go/src/github.com/openshift/origin/pkg/project/api/v1 (from $GOPATH)
cmd/generate/generate.go:33:2: cannot find package ""github.com/openshift/origin/pkg/route/api/v1"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/github.com/openshift/origin/pkg/route/api/v1 (from $GOROOT)
    /Users/joangoyeau/Code/go/src/github.com/openshift/origin/pkg/route/api/v1 (from $GOPATH)
cmd/generate/generate.go:34:2: cannot find package ""github.com/openshift/origin/pkg/template/api/v1"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/github.com/openshift/origin/pkg/template/api/v1 (from $GOROOT)
    /Users/joangoyeau/Code/go/src/github.com/openshift/origin/pkg/template/api/v1 (from $GOPATH)
cmd/generate/generate.go:35:2: cannot find package ""github.com/openshift/origin/pkg/user/api/v1"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/github.com/openshift/origin/pkg/user/api/v1 (from $GOROOT)
    /Users/joangoyeau/Code/go/src/github.com/openshift/origin/pkg/user/api/v1 (from $GOPATH)
cmd/generate/generate.go:36:2: cannot find package ""k8s.io/apiextensions-server/pkg/apis/apiextensions/v1beta1"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/k8s.io/apiextensions-server/pkg/apis/apiextensions/v1beta1 (from $GOROOT)
    /Users/joangoyeau/Code/go/src/k8s.io/apiextensions-server/pkg/apis/apiextensions/v1beta1 (from $GOPATH)
cmd/generate/generate.go:37:2: cannot find package ""k8s.io/kubernetes/pkg/api/resource"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/k8s.io/kubernetes/pkg/api/resource (from $GOROOT)
    /Users/joangoyeau/Code/go/src/k8s.io/kubernetes/pkg/api/resource (from $GOPATH)
cmd/generate/generate.go:38:2: cannot find package ""k8s.io/kubernetes/pkg/api/unversioned"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/k8s.io/kubernetes/pkg/api/unversioned (from $GOROOT)
    /Users/joangoyeau/Code/go/src/k8s.io/kubernetes/pkg/api/unversioned (from $GOPATH)
cmd/generate/generate.go:39:2: cannot find package ""k8s.io/kubernetes/pkg/api/v1"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/k8s.io/kubernetes/pkg/api/v1 (from $GOROOT)
    /Users/joangoyeau/Code/go/src/k8s.io/kubernetes/pkg/api/v1 (from $GOPATH)
cmd/generate/generate.go:40:2: cannot find package ""k8s.io/kubernetes/pkg/apis/apps/v1beta1"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/k8s.io/kubernetes/pkg/apis/apps/v1beta1 (from $GOROOT)
    /Users/joangoyeau/Code/go/src/k8s.io/kubernetes/pkg/apis/apps/v1beta1 (from $GOPATH)
cmd/generate/generate.go:41:2: cannot find package ""k8s.io/kubernetes/pkg/apis/autoscaling/v1"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/k8s.io/kubernetes/pkg/apis/autoscaling/v1 (from $GOROOT)
    /Users/joangoyeau/Code/go/src/k8s.io/kubernetes/pkg/apis/autoscaling/v1 (from $GOPATH)
cmd/generate/generate.go:43:2: cannot find package ""k8s.io/kubernetes/pkg/apis/batch/v1"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/k8s.io/kubernetes/pkg/apis/batch/v1 (from $GOROOT)
    /Users/joangoyeau/Code/go/src/k8s.io/kubernetes/pkg/apis/batch/v1 (from $GOPATH)
cmd/generate/generate.go:42:2: cannot find package ""k8s.io/kubernetes/pkg/apis/batch/v2alpha1"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/k8s.io/kubernetes/pkg/apis/batch/v2alpha1 (from $GOROOT)
    /Users/joangoyeau/Code/go/src/k8s.io/kubernetes/pkg/apis/batch/v2alpha1 (from $GOPATH)
cmd/generate/generate.go:44:2: cannot find package ""k8s.io/kubernetes/pkg/apis/extensions/v1beta1"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/k8s.io/kubernetes/pkg/apis/extensions/v1beta1 (from $GOROOT)
    /Users/joangoyeau/Code/go/src/k8s.io/kubernetes/pkg/apis/extensions/v1beta1 (from $GOPATH)
cmd/generate/generate.go:45:2: cannot find package ""k8s.io/kubernetes/pkg/client/unversioned/clientcmd/api/v1"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/k8s.io/kubernetes/pkg/client/unversioned/clientcmd/api/v1 (from $GOROOT)
    /Users/joangoyeau/Code/go/src/k8s.io/kubernetes/pkg/client/unversioned/clientcmd/api/v1 (from $GOPATH)
cmd/generate/generate.go:46:2: cannot find package ""k8s.io/kubernetes/pkg/watch/json"" in any of:
    /usr/local/Cellar/go/1.8.3/libexec/src/k8s.io/kubernetes/pkg/watch/json (from $GOROOT)
    /Users/joangoyeau/Code/go/src/k8s.io/kubernetes/pkg/watch/json (from $GOPATH)
make: *** [build] Error 1
",6391
610,45515182,"> make update-deps
make: *** No rule to make target `update-deps'.  Stop.
> make [tag=v0.5.2] update-deps
make: *** No rule to make target `update-deps'.  Stop.
> make tag=v0.5.2 update-deps
make: *** No rule to make target `update-deps'.  Stop.
",246
611,45567283,"//main func runs perfectly fine
func main() {
    //ODBC connection to vertica via DSN
    db, err := sql.Open(""odbc"", ""DSN=HPVerticaDSN"")
    if err != nil {
        panic(err)
    }
    defer db.Close()

    if err := db.Ping(); err != nil {
        fmt.Printf(""ping err: %v"", err)
    }

    //start gin
    r := gin.Default()
    r.GET(""/ping"", func(c *gin.Context) {
        handler(c, db)
    })
    r.Run() // listen and serve on 0.0.0.0:8080
}
",452
612,45567283,"//handler func is a http handler for '/ping' get request
func handler(c *gin.Context, db *sql.DB) {
    //start transaction
    tx, err := db.Begin()
    //it is here where the process gets stuck after a while
    if err != nil {
        log.Printf(""tx begin error: %v"", err)
        return
    }
    defer func() {
        if err != nil {
            log.Printf(""error sql: %v"", err)
            tx.Rollback()
            return
        }
        err = tx.Commit()
        if err != nil {
            log.Printf(""commit err: %v"", err)
        }
    }()
    fmt.Println(""start prepare statment"")
    stmt, err := tx.Prepare(""insert /*+direct*/ into events (id, game_id, created_at) values(?,?,?)"")
    if err != nil {
        log.Printf(""Insert prepare statement: %v"", err)
        c.JSON(500, gin.H{
            ""message"": err.Error(),
        })
        return
    }
    fmt.Println(""exec prepare statment start..."")
    res, err := stmt.Exec(uuid.NewV4().String(), uuid.NewV4().String(), time.Now().Format(time.RFC3339))
    if err != nil {
        fmt.Printf(""Insert record: %v"", err)
        return
    }
    defer stmt.Close()
    fmt.Println(""exec prepare statment end"")
    num, err := res.RowsAffected()
    if err != nil {
        fmt.Printf(""Rows affected err: %v"", err)
        return
    }
    if num != 1 {
        fmt.Printf(""Rows affected: %v, must be 1"", num)
        err = errors.New(""Rows affected must be 1"")
        return
    }
    c.JSON(200, gin.H{
        ""message"": ""pong"",
    })
}
",1509
613,45567283,"[ODBC][61608][1502281990.419123][SQLSetConnectAttr.c][842]
        Exit:[SQL_SUCCESS]
[ODBC][61608][1502282121.643292][SQLSetConnectAttr.c][396]
        Entry:
            Connection = 0x7f71840008c0
            Attribute = SQL_ATTR_AUTOCOMMIT
            Value = (nil)
            StrLen = -5
[ODBC][61608][1502282121.644409][SQLSetConnectAttr.c][842]
        Exit:[SQL_SUCCESS]
[ODBC][61608][1502282121.644794][SQLAllocHandle.c][540]
        Entry:
            Handle Type = 3
            Input Handle = 0x7f71840008c0
[ODBC][61608][1502282121.644996][SQLAllocHandle.c][1085]
        Exit:[SQL_SUCCESS]
            Output Handle = 0x5564cb6408e0
[ODBC][61608][1502282121.645018][SQLPrepareW.c][165]
        Entry:
            Statement = 0x5564cb6408e0
            SQL = [insert /*+direct*/ into events (.....][length = 147 (SQL_NTS)]
[ODBC][61608][1502282121.649229][SQLPrepareW.c][346]
        Exit:[SQL_SUCCESS]
[ODBC][61608][1502282121.649256][SQLNumParams.c][144]
        Entry:
            Statement = 0x5564cb6408e0
            Param Count = 0xc4201d0f0e
[ODBC][61608][1502282121.649266][SQLNumParams.c][231]
        Exit:[SQL_SUCCESS]
            Count = 0xc4201d0f0e -> 8
[ODBC][61608][1502282121.649274][SQLDescribeParam.c][185]
        Entry:
            Statement = 0x5564cb6408e0
            Parameter Number = 1
            SQL Type = 0xc4200ba600
            Param Def = 0xc4200ba608
            Scale = 0xc4200ba602
            Nullable = 0xc4201d0f40
[ODBC][61608][1502282121.649284][SQLDescribeParam.c][341]
        Exit:[SQL_SUCCESS]                
            SQL Type = 0x7ffd05d6ad80                
            Param Def = 0x7ffd05d6ae70                
            Scale = 0x7ffd05d6af60                
            Nullable = 0x7ffd05d6b050
[ODBC][61608][1502282121.649290][SQLDescribeParam.c][185]
        Entry:
            Statement = 0x5564cb6408e0
            Parameter Number = 2
            SQL Type = 0xc4200ba630
            Param Def = 0xc4200ba638
            Scale = 0xc4200ba632
            Nullable = 0xc4201d0f40
[ODBC][61608][1502282121.649296][SQLDescribeParam.c][341]
        Exit:[SQL_SUCCESS]                
            SQL Type = 0x7ffd05d6ad80                
            Param Def = 0x7ffd05d6ae70                
            Scale = 0x7ffd05d6af60                
            Nullable = 0x7ffd05d6b050
[ODBC][61608][1502282121.649302][SQLDescribeParam.c][185]
        Entry:
            Statement = 0x5564cb6408e0
            Parameter Number = 3
            SQL Type = 0xc4200ba660
            Param Def = 0xc4200ba668
            Scale = 0xc4200ba662
            Nullable = 0xc4201d0f40
[ODBC][61608][1502282121.649308][SQLDescribeParam.c][341]
        Exit:[SQL_SUCCESS]                
            SQL Type = 0x7ffd05d6ad80                
            Param Def = 0x7ffd05d6ae70                
            Scale = 0x7ffd05d6af60                
            Nullable = 0x7ffd05d6b050
[ODBC][61608][1502282121.649313][SQLDescribeParam.c][185]
        Entry:
            Statement = 0x5564cb6408e0
            Parameter Number = 4
            SQL Type = 0xc4200ba690
            Param Def = 0xc4200ba698
            Scale = 0xc4200ba692
            Nullable = 0xc4201d0f40
[ODBC][61608][1502282121.649319][SQLDescribeParam.c][341]
        Exit:[SQL_SUCCESS]                
            SQL Type = 0x7ffd05d6ad80                
            Param Def = 0x7ffd05d6ae70                
            Scale = 0x7ffd05d6af60                
            Nullable = 0x7ffd05d6b050
[ODBC][61608][1502282121.649324][SQLDescribeParam.c][185]
        Entry:
            Statement = 0x5564cb6408e0
            Parameter Number = 5
            SQL Type = 0xc4200ba6c0
            Param Def = 0xc4200ba6c8
            Scale = 0xc4200ba6c2
            Nullable = 0xc4201d0f40
[ODBC][61608][1502282121.649330][SQLDescribeParam.c][341]
        Exit:[SQL_SUCCESS]                
            SQL Type = 0x7ffd05d6ad80                
            Param Def = 0x7ffd05d6ae70                
            Scale = 0x7ffd05d6af60                
            Nullable = 0x7ffd05d6b050
[ODBC][61608][1502282121.649335][SQLDescribeParam.c][185]
        Entry:
            Statement = 0x5564cb6408e0
            Parameter Number = 6
            SQL Type = 0xc4200ba6f0
            Param Def = 0xc4200ba6f8
            Scale = 0xc4200ba6f2
            Nullable = 0xc4201d0f40
[ODBC][61608][1502282121.649341][SQLDescribeParam.c][341]
        Exit:[SQL_SUCCESS]                
            SQL Type = 0x7ffd05d6ad80                
            Param Def = 0x7ffd05d6ae70                
            Scale = 0x7ffd05d6af60                
            Nullable = 0x7ffd05d6b050
[ODBC][61608][1502282121.649347][SQLDescribeParam.c][185]
        Entry:
            Statement = 0x5564cb6408e0
            Parameter Number = 7
            SQL Type = 0xc4200ba720
            Param Def = 0xc4200ba728
            Scale = 0xc4200ba722
            Nullable = 0xc4201d0f40
[ODBC][61608][1502282121.649360][SQLDescribeParam.c][341]
        Exit:[SQL_SUCCESS]                
            SQL Type = 0x7ffd05d6ad80                
            Param Def = 0x7ffd05d6ae70                
            Scale = 0x7ffd05d6af60                
            Nullable = 0x7ffd05d6b050
[ODBC][61608][1502282121.649365][SQLDescribeParam.c][185]
        Entry:
            Statement = 0x5564cb6408e0
            Parameter Number = 8
            SQL Type = 0xc4200ba750
            Param Def = 0xc4200ba758
            Scale = 0xc4200ba752
            Nullable = 0xc4201d0f40
[ODBC][61608][1502282121.649371][SQLDescribeParam.c][341]
        Exit:[SQL_SUCCESS]                
            SQL Type = 0x7ffd05d6ad80                
            Param Def = 0x7ffd05d6ae70                
            Scale = 0x7ffd05d6af60                
            Nullable = 0x7ffd05d6b050
[ODBC][61608][1502282121.650523][SQLBindParameter.c][217]
        Entry:
            Statement = 0x5564cb6408e0
            Param Number = 1
            Param Type = 1
            C Type = -8 SQL_C_WCHAR
            SQL Type = -8 SQL_WCHAR
            Col Def = 36
            Scale = 0
            Rgb Value = 0xc42004df40
            Value Max = 72
            StrLen Or Ind = 0xc4200ba628
[ODBC][61608][1502282121.650546][SQLBindParameter.c][422]
        Exit:[SQL_SUCCESS]
[ODBC][61608][1502282121.650557][SQLBindParameter.c][217]
        Entry:
            Statement = 0x5564cb6408e0
            Param Number = 2
            Param Type = 1
            C Type = -8 SQL_C_WCHAR
            SQL Type = -9 SQL_WVARCHAR
            Col Def = 24
            Scale = 0
            Rgb Value = 0xc4201df180
            Value Max = 48
            StrLen Or Ind = 0xc4200ba658
[ODBC][61608][1502282121.650569][SQLBindParameter.c][422]
        Exit:[SQL_SUCCESS]
[ODBC][61608][1502282121.650585][SQLBindParameter.c][217]
        Entry:
            Statement = 0x5564cb6408e0
            Param Number = 3
            Param Type = 1
            C Type = -8 SQL_C_WCHAR
            SQL Type = -8 SQL_WCHAR
            Col Def = 36
            Scale = 0
            Rgb Value = 0xc42004df90
            Value Max = 72
            StrLen Or Ind = 0xc4200ba688
[ODBC][61608][1502282121.650593][SQLBindParameter.c][422]
        Exit:[SQL_SUCCESS]
[ODBC][61608][1502282121.650600][SQLBindParameter.c][217]
        Entry:
            Statement = 0x5564cb6408e0
            Param Number = 4
            Param Type = 1
            C Type = -8 SQL_C_WCHAR
            SQL Type = -9 SQL_WVARCHAR
            Col Def = 10
            Scale = 0
            Rgb Value = 0xc4201d3200
            Value Max = 20
            StrLen Or Ind = 0xc4200ba6b8
[ODBC][61608][1502282121.650607][SQLBindParameter.c][422]
        Exit:[SQL_SUCCESS]
[ODBC][61608][1502282121.650614][SQLBindParameter.c][217]
        Entry:
            Statement = 0x5564cb6408e0
            Param Number = 5
            Param Type = 1
            C Type = 4 SQL_C_LONG
            SQL Type = 4 SQL_INTEGER
            Col Def = 4
            Scale = 0
            Rgb Value = 0xc4201d1000
            Value Max = 0
            StrLen Or Ind = (nil)
[ODBC][61608][1502282121.650627][SQLBindParameter.c][422]
        Exit:[SQL_SUCCESS]
[ODBC][61608][1502282121.650636][SQLBindParameter.c][217]
        Entry:
            Statement = 0x5564cb6408e0
            Param Number = 6
            Param Type = 1
            C Type = -8 SQL_C_WCHAR
            SQL Type = -9 SQL_WVARCHAR
            Col Def = 11
            Scale = 0
            Rgb Value = 0xc4201d3240
            Value Max = 22
            StrLen Or Ind = 0xc4200ba718
[ODBC][61608][1502282121.650642][SQLBindParameter.c][422]
        Exit:[SQL_SUCCESS]
[ODBC][61608][1502282121.650650][SQLBindParameter.c][217]
        Entry:
            Statement = 0x5564cb6408e0
            Param Number = 7
            Param Type = 1
            C Type = -8 SQL_C_WCHAR
            SQL Type = 93 SQL_TYPE_TIMESTAMP
            Col Def = 20
            Scale = 0
            Rgb Value = 0xc4201f0180
            Value Max = 40
            StrLen Or Ind = 0xc4200ba748
[ODBC][61608][1502282121.650656][SQLBindParameter.c][422]
        Exit:[SQL_SUCCESS]
[ODBC][61608][1502282121.650663][SQLBindParameter.c][217]
        Entry:
            Statement = 0x5564cb6408e0
            Param Number = 8
            Param Type = 1
            C Type = -8 SQL_C_WCHAR
            SQL Type = 93 SQL_TYPE_TIMESTAMP
            Col Def = 20
            Scale = 0
            Rgb Value = 0xc4201f01b0
            Value Max = 40
            StrLen Or Ind = 0xc4200ba778
[ODBC][61608][1502282121.650670][SQLBindParameter.c][422]
        Exit:[SQL_SUCCESS]
[ODBC][61608][1502282121.650676][SQLExecute.c][187]
        Entry:
            Statement = 0x5564cb6408e0
[ODBC][61608][1502282121.678544][SQLExecute.c][357]
        Exit:[SQL_SUCCESS]
[ODBC][61608][1502282121.678624][SQLRowCount.c][173]
        Entry:
            Statement = 0x5564cb6408e0
            Row Count = 0xc4201d1008
[ODBC][61608][1502282121.678643][SQLRowCount.c][247]
        Exit:[SQL_SUCCESS]
            Row Count = 0xc4201d1008 -> 1
[ODBC][61608][1502282121.678845][SQLFreeHandle.c][381]
        Entry:
            Handle Type = 3
            Input Handle = 0x5564cb6408e0
[ODBC][61608][1502282121.695732][SQLFreeHandle.c][494]
        Exit:[SQL_SUCCESS]
[ODBC][61608][1502282121.695847][SQLEndTran.c][417]
        Entry:                
            Connection = 0x7f71840008c0                
            Completion Type = 0
[ODBC][61608][1502282121.702404][SQLEndTran.c][566]
        Exit:[SQL_SUCCESS]
[ODBC][61608][1502282121.702506][SQLSetConnectAttr.c][396]
        Entry:
            Connection = 0x7f71840008c0
            Attribute = SQL_ATTR_AUTOCOMMIT
            Value = 0x1
            StrLen = -5
[ODBC][61608][1502282121.702962][SQLSetConnectAttr.c][842]
        Exit:[SQL_SUCCESS]
",10919
614,45567283,"[ODBC][61608][1502282408.929695][SQLSetConnectAttr.c][396]
        Entry:
            Connection = 0x7f71840008c0
            Attribute = SQL_ATTR_AUTOCOMMIT
            Value = (nil)
            StrLen = -5
",208
615,45590483,"
170809/044343.745, [log,connection,client,error] message: write EPIPE, stack: Error: write EPIPE
    at exports._errnoException (util.js:1018:11)
    at WriteWrap.afterWrite (net.js:800:14)
",191
616,45590483,"
170809/040643.248, [log,connection,client,error] message: read ECONNRESET, stack: Error: read ECONNRESET
    at exports._errnoException (util.js:1018:11)
    at TCP.onread (net.js:568:26)
",189
617,45590483,"NODE_DEBUG=http, net",20
618,45590483,write ret = true,16
619,45590483,"NET 422: onconnection
NET 422: _read
NET 422: Socket._read readStart
HTTP 422: SERVER new http connection
HTTP 422: SERVER socketOnParserExecute 333
NET 422: onread 775
NET 422: got data
NET 422: _read
HTTP 422: call onSocket 0 0
HTTP 422: createConnection api.mixpanel.com:80: { servername: 'api.mixpanel.com',
  path: null,
  headers: {},
  port: 80,
  host: 'api.mixpanel.com',
  _agentKey: 'api.mixpanel.com:80:' }
NET 422: createConnection [ { servername: 'api.mixpanel.com',
    path: null,
    headers: {},
    port: 80,
    host: 'api.mixpanel.com',
    _agentKey: 'api.mixpanel.com:80:',
    encoding: null },
  [Function: oncreate] ]
NET 422: pipe false null
NET 422: connect: find host api.mixpanel.com
NET 422: connect: dns options { family: undefined, hints: 32 }
HTTP 422: sockets api.mixpanel.com:80: 1
HTTP 422: outgoing message end.
HTTP 422: call onSocket 1 0
HTTP 422: createConnection api.mixpanel.com:80: { servername: 'api.mixpanel.com',
  path: null,
  headers: {},
  port: 80,
  host: 'api.mixpanel.com',
  _agentKey: 'api.mixpanel.com:80:' }
NET 422: createConnection [ { servername: 'api.mixpanel.com',
    path: null,
    headers: {},
    port: 80,
    host: 'api.mixpanel.com',
    _agentKey: 'api.mixpanel.com:80:',
    encoding: null },
  [Function: oncreate] ]
NET 422: pipe false null
NET 422: connect: find host api.mixpanel.com
NET 422: connect: dns options { family: undefined, hints: 32 }
HTTP 422: sockets api.mixpanel.com:80: 2
HTTP 422: outgoing message end.
HTTP 422: call onSocket 2 0
HTTP 422: createConnection api.mixpanel.com:80: { servername: 'api.mixpanel.com',
  path: null,
  headers: {},
  port: 80,
  host: 'api.mixpanel.com',
  _agentKey: 'api.mixpanel.com:80:' }
NET 422: createConnection [ { servername: 'api.mixpanel.com',
    path: null,
    headers: {},
    port: 80,
    host: 'api.mixpanel.com',
    _agentKey: 'api.mixpanel.com:80:',
    encoding: null },
  [Function: oncreate] ]
NET 422: pipe false null
NET 422: connect: find host api.mixpanel.com
NET 422: connect: dns options { family: undefined, hints: 32 }
HTTP 422: sockets api.mixpanel.com:80: 3
HTTP 422: outgoing message end.
NET 422: _read
NET 422: _read wait for connection
NET 422: _read
NET 422: _read wait for connection
NET 422: _read
NET 422: _read wait for connection
NET 422: afterConnect
NET 422: _read
NET 422: Socket._read readStart
NET 422: afterConnect
NET 422: _read
NET 422: Socket._read readStart
NET 422: afterConnect
NET 422: _read
NET 422: Socket._read readStart
NET 422: onread 438
NET 422: got data
HTTP 422: AGENT incoming response!
HTTP 422: AGENT isHeadResponse false
NET 422: _read
HTTP 422: AGENT socket.destroySoon()
NET 422: onSocketFinish
NET 422: oSF: not ended, call shutdown()
NET 422: destroy undefined
NET 422: destroy
NET 422: close
NET 422: close handle
NET 422: afterShutdown destroyed=true ReadableState {
  objectMode: false,
  highWaterMark: 16384,
  buffer: BufferList { head: null, tail: null, length: 0 },
  length: 0,
  pipes: null,
  pipesCount: 0,
  flowing: true,
  ended: false,
  endEmitted: false,
  reading: true,
  sync: false,
  needReadable: true,
  emittedReadable: false,
  readableListening: false,
  resumeScheduled: false,
  defaultEncoding: 'utf8',
  ranOut: false,
  awaitDrain: 0,
  readingMore: false,
  decoder: null,
  encoding: null }
NET 422: emit close
HTTP 422: CLIENT socket onClose
HTTP 422: removeSocket api.mixpanel.com:80: writable: false
HTTP 422: HTTP socket close
NET 422: onread 438
NET 422: got data
HTTP 422: AGENT incoming response!
HTTP 422: AGENT isHeadResponse false
NET 422: _read
HTTP 422: AGENT socket.destroySoon()
NET 422: onSocketFinish
NET 422: oSF: not ended, call shutdown()
NET 422: destroy undefined
NET 422: destroy
NET 422: close
NET 422: close handle
NET 422: onread 486
NET 422: got data
HTTP 422: AGENT incoming response!
HTTP 422: AGENT isHeadResponse false
NET 422: _read
HTTP 422: AGENT socket.destroySoon()
NET 422: onSocketFinish
NET 422: oSF: not ended, call shutdown()
NET 422: destroy undefined
NET 422: destroy
NET 422: close
NET 422: close handle
NET 422: afterShutdown destroyed=true ReadableState {
  objectMode: false,
  highWaterMark: 16384,
  buffer: BufferList { head: null, tail: null, length: 0 },
  length: 0,
  pipes: null,
  pipesCount: 0,
  flowing: true,
  ended: false,
  endEmitted: false,
  reading: true,
  sync: false,
  needReadable: true,
  emittedReadable: false,
  readableListening: false,
  resumeScheduled: false,
  defaultEncoding: 'utf8',
  ranOut: false,
  awaitDrain: 0,
  readingMore: false,
  decoder: null,
  encoding: null }
NET 422: emit close
HTTP 422: CLIENT socket onClose
HTTP 422: removeSocket api.mixpanel.com:80: writable: false
HTTP 422: HTTP socket close
NET 422: afterShutdown destroyed=true ReadableState {
  objectMode: false,
  highWaterMark: 16384,
  buffer: BufferList { head: null, tail: null, length: 0 },
  length: 0,
  pipes: null,
  pipesCount: 0,
  flowing: true,
  ended: false,
  endEmitted: false,
  reading: true,
  sync: false,
  needReadable: true,
  emittedReadable: false,
  readableListening: false,
  resumeScheduled: false,
  defaultEncoding: 'utf8',
  ranOut: false,
  awaitDrain: 0,
  readingMore: false,
  decoder: null,
  encoding: null }
NET 422: emit close
HTTP 422: CLIENT socket onClose
HTTP 422: removeSocket api.mixpanel.com:80: writable: false
HTTP 422: HTTP socket close
HTTP 422: write ret = true
HTTP 422: outgoing message end.
NET 422: onread -4095
NET 422: EOF
NET 422: onSocketEnd ReadableState {
  objectMode: false,
  highWaterMark: 16384,
  buffer: BufferList { head: null, tail: null, length: 0 },
  length: 0,
  pipes: null,
  pipesCount: 0,
  flowing: true,
  ended: true,
  endEmitted: false,
  reading: false,
  sync: false,
  needReadable: false,
  emittedReadable: false,
  readableListening: false,
  resumeScheduled: false,
  defaultEncoding: 'utf8',
  ranOut: false,
  awaitDrain: 0,
  readingMore: false,
  decoder: null,
  encoding: null }
NET 422: onSocketFinish
NET 422: oSF: ended, destroy ReadableState {
  objectMode: false,
  highWaterMark: 16384,
  buffer: BufferList { head: null, tail: null, length: 0 },
  length: 0,
  pipes: null,
  pipesCount: 0,
  flowing: true,
  ended: true,
  endEmitted: true,
  reading: false,
  sync: false,
  needReadable: false,
  emittedReadable: false,
  readableListening: false,
  resumeScheduled: false,
  defaultEncoding: 'utf8',
  ranOut: false,
  awaitDrain: 0,
  readingMore: false,
  decoder: null,
  encoding: null }
NET 422: destroy undefined
NET 422: destroy
NET 422: close
NET 422: close handle
NET 422: has server
NET 422: SERVER _emitCloseIfDrained
NET 422: SERVER handle? true   connections? 15
NET 422: emit close
HTTP 422: server socket close
",6729
620,45590483,"NET 422: onread 405
NET 422: got data
NET 422: _read
NET 422: onconnection
NET 422: _read
NET 422: Socket._read readStart
HTTP 422: SERVER new http connection
HTTP 422: SERVER socketOnParserExecute 325
NET 422: onread 775
NET 422: got data
NET 422: _read
HTTP 422: call onSocket 0 0
HTTP 422: createConnection api.mixpanel.com:80: { servername: 'api.mixpanel.com',
  path: null,
  headers: {},
  port: 80,
  host: 'api.mixpanel.com',
  _agentKey: 'api.mixpanel.com:80:' }
NET 422: createConnection [ { servername: 'api.mixpanel.com',
    path: null,
    headers: {},
    port: 80,
    host: 'api.mixpanel.com',
    _agentKey: 'api.mixpanel.com:80:',
    encoding: null },
  [Function: oncreate] ]
NET 422: pipe false null
NET 422: connect: find host api.mixpanel.com
NET 422: connect: dns options { family: undefined, hints: 32 }
HTTP 422: sockets api.mixpanel.com:80: 1
HTTP 422: outgoing message end.
HTTP 422: call onSocket 1 0
HTTP 422: createConnection api.mixpanel.com:80: { servername: 'api.mixpanel.com',
  path: null,
  headers: {},
  port: 80,
  host: 'api.mixpanel.com',
  _agentKey: 'api.mixpanel.com:80:' }
NET 422: createConnection [ { servername: 'api.mixpanel.com',
    path: null,
    headers: {},
    port: 80,
    host: 'api.mixpanel.com',
    _agentKey: 'api.mixpanel.com:80:',
    encoding: null },
  [Function: oncreate] ]
NET 422: pipe false null
NET 422: connect: find host api.mixpanel.com
NET 422: connect: dns options { family: undefined, hints: 32 }
HTTP 422: sockets api.mixpanel.com:80: 2
HTTP 422: outgoing message end.
HTTP 422: call onSocket 2 0
HTTP 422: createConnection api.mixpanel.com:80: { servername: 'api.mixpanel.com',
  path: null,
  headers: {},
  port: 80,
  host: 'api.mixpanel.com',
  _agentKey: 'api.mixpanel.com:80:' }
NET 422: createConnection [ { servername: 'api.mixpanel.com',
    path: null,
    headers: {},
    port: 80,
    host: 'api.mixpanel.com',
    _agentKey: 'api.mixpanel.com:80:',
    encoding: null },
  [Function: oncreate] ]
NET 422: pipe false null
NET 422: connect: find host api.mixpanel.com
NET 422: connect: dns options { family: undefined, hints: 32 }
HTTP 422: sockets api.mixpanel.com:80: 3
HTTP 422: outgoing message end.
NET 422: _read
NET 422: _read wait for connection
NET 422: _read
NET 422: _read wait for connection
NET 422: _read
NET 422: _read wait for connection
NET 422: afterConnect
NET 422: _read
NET 422: Socket._read readStart
NET 422: afterConnect
NET 422: _read
NET 422: Socket._read readStart
NET 422: afterConnect
NET 422: _read
NET 422: Socket._read readStart
NET 422: onread 438
NET 422: got data
HTTP 422: AGENT incoming response!
HTTP 422: AGENT isHeadResponse false
NET 422: _read
HTTP 422: AGENT socket.destroySoon()
NET 422: onSocketFinish
NET 422: oSF: not ended, call shutdown()
NET 422: destroy undefined
NET 422: destroy
NET 422: close
NET 422: close handle
NET 422: afterShutdown destroyed=true ReadableState {
  objectMode: false,
  highWaterMark: 16384,
  buffer: BufferList { head: null, tail: null, length: 0 },
  length: 0,
  pipes: null,
  pipesCount: 0,
  flowing: true,
  ended: false,
  endEmitted: false,
  reading: true,
  sync: false,
  needReadable: true,
  emittedReadable: false,
  readableListening: false,
  resumeScheduled: false,
  defaultEncoding: 'utf8',
  ranOut: false,
  awaitDrain: 0,
  readingMore: false,
  decoder: null,
  encoding: null }
NET 422: emit close
HTTP 422: CLIENT socket onClose
HTTP 422: removeSocket api.mixpanel.com:80: writable: false
HTTP 422: HTTP socket close
NET 422: onread 438
NET 422: got data
HTTP 422: AGENT incoming response!
HTTP 422: AGENT isHeadResponse false
NET 422: _read
HTTP 422: AGENT socket.destroySoon()
NET 422: onSocketFinish
NET 422: oSF: not ended, call shutdown()
NET 422: destroy undefined
NET 422: destroy
NET 422: close
NET 422: close handle
NET 422: onread 486
NET 422: got data
HTTP 422: AGENT incoming response!
HTTP 422: AGENT isHeadResponse false
NET 422: _read
HTTP 422: AGENT socket.destroySoon()
NET 422: onSocketFinish
NET 422: oSF: not ended, call shutdown()
NET 422: destroy undefined
NET 422: destroy
NET 422: close
NET 422: close handle
NET 422: afterShutdown destroyed=true ReadableState {
  objectMode: false,
  highWaterMark: 16384,
  buffer: BufferList { head: null, tail: null, length: 0 },
  length: 0,
  pipes: null,
  pipesCount: 0,
  flowing: true,
  ended: false,
  endEmitted: false,
  reading: true,
  sync: false,
  needReadable: true,
  emittedReadable: false,
  readableListening: false,
  resumeScheduled: false,
  defaultEncoding: 'utf8',
  ranOut: false,
  awaitDrain: 0,
  readingMore: false,
  decoder: null,
  encoding: null }
NET 422: emit close
HTTP 422: CLIENT socket onClose
HTTP 422: removeSocket api.mixpanel.com:80: writable: false
HTTP 422: HTTP socket close
NET 422: afterShutdown destroyed=true ReadableState {
  objectMode: false,
  highWaterMark: 16384,
  buffer: BufferList { head: null, tail: null, length: 0 },
  length: 0,
  pipes: null,
  pipesCount: 0,
  flowing: true,
  ended: false,
  endEmitted: false,
  reading: true,
  sync: false,
  needReadable: true,
  emittedReadable: false,
  readableListening: false,
  resumeScheduled: false,
  defaultEncoding: 'utf8',
  ranOut: false,
  awaitDrain: 0,
  readingMore: false,
  decoder: null,
  encoding: null }
NET 422: emit close
HTTP 422: CLIENT socket onClose
HTTP 422: removeSocket api.mixpanel.com:80: writable: false
HTTP 422: HTTP socket close
HTTP 422: write ret = true
NET 422: afterWrite 0
NET 422: afterWrite call cb
HTTP 422: write ret = true
HTTP 422: outgoing message end.
NET 422: onread -4095
NET 422: EOF
NET 422: onSocketEnd ReadableState {
  objectMode: false,
  highWaterMark: 16384,
  buffer: BufferList { head: null, tail: null, length: 0 },
  length: 0,
  pipes: null,
  pipesCount: 0,
  flowing: true,
  ended: true,
  endEmitted: false,
  reading: false,
  sync: false,
  needReadable: false,
  emittedReadable: false,
  readableListening: false,
  resumeScheduled: false,
  defaultEncoding: 'utf8',
  ranOut: false,
  awaitDrain: 0,
  readingMore: false,
  decoder: null,
  encoding: null }
NET 422: afterWrite 0
NET 422: afterWrite call cb
NET 422: afterWrite -32
NET 422: write failure { Error: write EPIPE
    at exports._errnoException (util.js:1018:11)
    at WriteWrap.afterWrite (net.js:800:14) code: 'EPIPE', errno: 'EPIPE', syscall: 'write' }
NET 422: destroy
NET 422: close
NET 422: close handle
170809/101228.947, [log,connection,client,error] message: write EPIPE, stack: Error: write EPIPE
    at exports._errnoException (util.js:1018:11)
    at WriteWrap.afterWrite (net.js:800:14)
NET 422: has server
NET 422: SERVER _emitCloseIfDrained
NET 422: SERVER handle? true   connections? 15
NET 422: emit close
HTTP 422: server socket close
",6757
621,45590483,"// Sends a POST request to consumption endpoint with the SQS message as body
func sendMessageToURL(msg string) bool {
    var resp *http.Response
    var err error

    endpoint := url

    if endpoint == """" {
        m := make(map[string]string)
        err := json.Unmarshal([]byte(msg), &m)
        if err != nil {
            log.Printf(""Unable to parse JSON message to get the URL: %s"", msg)
            return false
        }
        endpoint = m[""url""]
        if endpoint == """" {
            log.Printf(""No 'url' field found in JSON message: %s"", msg)
            return false
        }
    }

    for {
        resp, err = httpClient.Post(endpoint, ""application/json"", bytes.NewBuffer([]byte(msg)))
        if err == nil {
            break
        }
        log.Printf(""Error hitting endpoint, retrying after 1 second... Error: %s"", err.Error())
        time.Sleep(time.Second)
    }
    defer resp.Body.Close()

    // return true only if response is 200 OK
    if resp.StatusCode != 200 {
        bodyBytes, _ := ioutil.ReadAll(resp.Body)
        log.Printf(""Error: Non OK response: %s Status Code: '%s' for sent message: '%s'"", string(bodyBytes), resp.Status, msg)
        return false
    }

    return true
}
",1224
622,45686269,"{
    ""3211"": {
        ""entity_id"": ""3211"",
        ""status"": ""complete"",
        ""coupon_code"": ""COUPON"",
        ""shipping_description"": ""Shipping - AU Courier"",
        ""customer_id"": ""2775"",
        ""base_discount_amount"": ""-50.0000"",
        ""base_grand_total"": ""149.0000"",
        ""base_shipping_amount"": ""0.0000"",
        ""base_shipping_tax_amount"": ""0.0000"",
        ""base_subtotal"": ""199.0000"",
        ""base_tax_amount"": ""0.0000"",
        ""base_total_paid"": ""149.0000"",
        ""base_total_refunded"": null,
        ""discount_amount"": ""-50.0000"",
        ""grand_total"": ""149.0000"",
        ""shipping_amount"": ""0.0000"",
        ""shipping_tax_amount"": ""0.0000"",
        ""store_to_order_rate"": ""1.0000"",
        ""subtotal"": ""199.0000"",
        ""tax_amount"": ""0.0000"",
        ""total_paid"": ""149.0000"",
        ""total_refunded"": null,
        ""base_shipping_discount_amount"": ""0.0000"",
        ""base_subtotal_incl_tax"": ""199.0000"",
        ""base_total_due"": ""0.0000"",
        ""shipping_discount_amount"": ""0.0000"",
        ""subtotal_incl_tax"": ""199.0000"",
        ""total_due"": ""0.0000"",
        ""increment_id"": ""200000423"",
        ""base_currency_code"": ""AUD"",
        ""discount_description"": ""COUPON"",
        ""remote_ip"": ""123.123.123.123"",
        ""store_currency_code"": ""AUD"",
        ""store_name"": ""Australia"",
        ""created_at"": ""2017-07-17 03:07:40"",
        ""shipping_incl_tax"": ""0.0000"",
        ""payment_method"": ""ewayrapid_ewayone"",
        ""gift_message_from"": null,
        ""gift_message_to"": null,
        ""gift_message_body"": null,
        ""tax_name"": null,
        ""tax_rate"": null,
        ""addresses"": [
            {
                ""region"": ""South Australia"",
                ""postcode"": ""5000"",
                ""lastname"": ""Doe"",
                ""street"": ""Level 6\n25 Example Street"",
                ""city"": ""Adelaide"",
                ""email"": ""example@email.com"",
                ""telephone"": ""+61 123 456 789"",
                ""country_id"": ""AU"",
                ""firstname"": ""John"",
                ""address_type"": ""billing"",
                ""prefix"": null,
                ""middlename"": null,
                ""suffix"": null,
                ""company"": null
            },
            {
                ""region"": ""South Australia"",
                ""postcode"": ""5000"",
                ""lastname"": ""Doe"",
                ""street"": ""Level 6\n25 Example Street"",
                ""city"": ""Adelaide"",
                ""email"": ""example@email.com"",
                ""telephone"": ""+61 123 456 789"",
                ""country_id"": ""AU"",
                ""firstname"": ""John"",
                ""address_type"": ""shipping"",
                ""prefix"": null,
                ""middlename"": null,
                ""suffix"": null,
                ""company"": null
            }
        ]
    }
}
",2806
623,45686269,struct,6
624,45686269,"type Orders map[string]Order
type Order struct {
    EntityID                   string                    `json:""entity_id""`
    Status                     string                    `json:""status""`
    CouponCode                 string                    `json:""coupon_code""`
    ShippingDescription        string                    `json:""shipping_description""`
    CustomerID                 string                    `json:""customer_id""`
    BaseDiscountAmount         string                    `json:""base_discount_amount""`
    BaseGrandTotal             string                    `json:""base_grand_total""`
    BaseShippingAmount         string                    `json:""base_shipping_amount""`
    BaseShippingTaxAmount      string                    `json:""base_shipping_tax_amount""`
    BaseSubtotal               string                    `json:""base_subtotal""`
    BaseTaxAmount              string                    `json:""base_tax_amount""`
    BaseTotalPaid              string                    `json:""base_total_paid""`
    BaseTotalRefunded          string                    `json:""base_total_refunded""`
    DiscountAmount             string                    `json:""discount_amount""`
    GrandTotal                 string                    `json:""grand_total""`
    ShippingAmount             string                    `json:""shipping_amount""`
    ShippingTaxAmount          string                    `json:""shipping_tax_amount""`
    StoreToOrderRate           string                    `json:""store_to_order_rate""`
    Subtotal                   string                    `json:""subtotal""`
    TaxAmount                  string                    `json:""tax_amount""`
    TotalPaid                  string                    `json:""total_paid""`
    TotalRefunded              string                    `json:""total_refunded""`
    BaseShippingDiscountAmount string                    `json:""base_shipping_discount_amount""`
    BaseSubtotalInclTax        string                    `json:""base_subtotal_incl_tax""`
    BaseTotalDue               string                    `json:""base_total_due""`
    ShippingDiscountAmount     string                    `json:""shipping_discount_amount""`
    SubtotalInclTax            string                    `json:""subtotal_incl_tax""`
    TotalDue                   string                    `json:""total_due""`
    IncrementID                string                    `json:""increment_id""`
    BaseCurrencyCode           string                    `json:""base_currency_code""`
    DiscountDescription        string                    `json:""discount_description""`
    RemoteIP                   string                    `json:""remote_ip""`
    StoreCurrencyCode          string                    `json:""store_currency_code""`
    StoreName                  string                    `json:""store_name""`
    CreatedAt                  string                    `json:""created_at""`
    ShippingInclTax            string                    `json:""shipping_incl_tax""`
    PaymentMethod              string                    `json:""payment_method""`
    TaxName                    string                    `json:""tax_name""`
    TaxRate                    string                    `json:""tax_rate""`
    Addresses                  map[string]OrderAddresses `json:""addresses""`
}

type OrderAddresses []struct {
    Region      string  `json:""region""`
    Postcode    string  `json:""postcode""`
    Lastname    string  `json:""lastname""`
    Street      string  `json:""street""`
    City        string  `json:""city""`
    Email       string  `json:""email""`
    Telephone   string  `json:""telephone""`
    CountryID   string  `json:""country_id""`
    Firstname   string  `json:""firstname""`
    AddressType string  `json:""address_type""`
    Prefix      *string `json:""prefix""`
    Middlename  *string `json:""middlename""`
    Suffix      *string `json:""suffix""`
    Company     *string `json:""company""`
}
",3936
625,45686269,getFromOrdersAPI(page),22
626,45686269,Orders,6
627,45686269,"for page := 1; page < 3; page++ {
    orders := getFromOrdersAPI(page)
    for _, order := range orders {
        //Process all the order items except addresses
        fmt.Println(""Processing entity:"", orders.EntityID)

        for _, orderaddress := range order.Addresses {
            //Trying to access address values - example below
            fmt.Println(orderaddress.Region)
        }
    }
}
",401
628,45774425,"data := []byte(`{
    ""fantasy_content"": {
        ""copyright"": ""Data provided by Yahoo! and STATS, LLC"",
        ""league"": [
            {
                ""allow_add_to_dl_extra_pos"": 0,
                ""current_week"": ""1"",
                ""draft_status"": ""predraft"",
                ""edit_key"": ""1"",
                ""end_date"": ""2017-12-25"",
                ""end_week"": ""16"",
                ""game_code"": ""nfl"",
                ""is_cash_league"": ""0"",
                ""is_pro_league"": ""0"",
                ""league_id"": ""XXXXX"",
                ""league_key"": ""XXXX"",
                ""league_type"": ""private"",
                ""league_update_timestamp"": null,
                ""name"": ""XXXXXX"",
                ""num_teams"": 14,
                ""renew"": ""XXXX"",
                ""renewed"": """",
                ""scoring_type"": ""head"",
                ""season"": ""2017"",
                ""short_invitation_url"": ""XXXXX"",
                ""start_date"": ""2017-09-07"",
                ""start_week"": ""1"",
                ""url"": ""XXXXXX"",
                ""weekly_deadline"": """"
            },
            {
                ""teams"": {
                    ""0"": {
                        ""team"": [
                            [
                                {
                                    ""team_key"": ""XXXX""
                                },
                                {
                                    ""team_id"": ""1""
                                },
                                {
                                    ""name"": ""XXXXX""
                                },
                                [],
                                {
                                    ""url"": ""XXXXX""
                                },
                                {
                                    ""team_logos"": [
                                        {
                                            ""team_logo"": {
                                                ""size"": ""large"",
                                                ""XXX""
                                            }
                                        }
                                    ]
                                },
                                [],
                                {
                                    ""waiver_priority"": """"
                                },
                                {
                                    ""faab_balance"": ""100""
                                },
                                {
                                    ""number_of_moves"": 0
                                },
                                {
                                    ""number_of_trades"": 0
                                },
                                {
                                    ""roster_adds"": {
                                        ""coverage_type"": ""week"",
                                        ""coverage_value"": ""1"",
                                        ""value"": ""0""
                                    }
                                },
                                [],
                                {
                                    ""league_scoring_type"": ""head""
                                },
                                [],
                                [],
                                {
                                    ""has_draft_grade"": 0
                                },
                                [],
                                [],
                                {
                                    ""managers"": [
                                        {
                                            ""manager"": {
                                                ""email"": ""XXXXX"",
                                                ""guid"": ""XX"",
                                                ""image_url"": ""https://s.yimg.com/wm/modern/images/default_user_profile_pic_64.png"",
                                                ""is_commissioner"": ""1"",
                                                ""manager_id"": ""1"",
                                                ""nickname"": ""Andrew""
                                            }
                                        }
                                    ]
                                }
                            ]
                        ]
                    },
                    ""1"": {
                        ""team"": [
                            [
                                {
                                    ""team_key"": ""XXXXX""
                                },
                                {
                                    ""team_id"": ""2""
                                },
                                {
                                    ""name"": ""XXXXX""
                                },
                                [],
                                {
                                    ""url"": ""XXXXX""
                                },
                                {
                                    ""team_logos"": [
                                        {
                                            ""team_logo"": {
                                                ""size"": ""large"",
                                                ""url"": ""XXXX""
                                            }
                                        }
                                    ]
                                },
                                [],
                                {
                                    ""waiver_priority"": """"
                                },
                                {
                                    ""faab_balance"": ""100""
                                },
                                {
                                    ""number_of_moves"": 0
                                },
                                {
                                    ""number_of_trades"": 0
                                },
                                {
                                    ""roster_adds"": {
                                        ""coverage_type"": ""week"",
                                        ""coverage_value"": ""1"",
                                        ""value"": ""0""
                                    }
                                },
                                [],
                                {
                                    ""league_scoring_type"": ""head""
                                },
                                [],
                                [],
                                {
                                    ""has_draft_grade"": 0
                                },
                                [],
                                [],
                                {
                                    ""managers"": [
                                        {
                                            ""manager"": {
                                                ""email"": ""XXXX@yahoo.com"",
                                                ""guid"": ""XXXX"",
                                                ""image_url"": ""https://s.yimg.com/wm/modern/images/default_user_profile_pic_64.png"",
                                                ""manager_id"": ""2"",
                                                ""nickname"": ""Andrew""
                                            }
                                        },
                                        {
                                            ""manager"": {
                                                ""email"": ""XXX@yahoo.com"",
                                                ""guid"": ""XX"",
                                                ""image_url"": ""https://s.yimg.com/wm/modern/images/default_user_profile_pic_64.png"",
                                                ""is_comanager"": ""1"",
                                                ""manager_id"": ""15"",
                                                ""nickname"": ""XX""
                                            }
                                        }
                                    ]
                                }
                            ]
                        ]
                    },
                    ""10"": {
                        ""team"": [
                            [
                                {
                                    ""team_key"": ""XXX""
                                },
                                {
                                    ""team_id"": ""11""
                                },
                                {
                                    ""name"": ""XXX""
                                },
                                [],
                                {
                                    ""url"": ""https://football.fantasysports.yahoo.com/f1/XXX""
                                },
                                {
                                    ""team_logos"": [
                                        {
                                            ""team_logo"": {
                                                ""size"": ""large"",
                                                ""url"": ""https://s.yimg.com/dh/ap/fantasy/nfl/img/icon_01_100.png""
                                            }
                                        }
                                    ]
                                },
                                [],
                                {
                                    ""waiver_priority"": """"
                                },
                                {
                                    ""faab_balance"": ""100""
                                },
                                {
                                    ""number_of_moves"": 0
                                },
                                {
                                    ""number_of_trades"": 0
                                },
                                {
                                    ""roster_adds"": {
                                        ""coverage_type"": ""week"",
                                        ""coverage_value"": ""1"",
                                        ""value"": ""0""
                                    }
                                },
                                [],
                                {
                                    ""league_scoring_type"": ""head""
                                },
                                [],
                                [],
                                {
                                    ""has_draft_grade"": 0
                                },
                                [],
                                [],
                                {
                                    ""managers"": [
                                        {
                                            ""manager"": {
                                                ""email"": ""XXX@gmail.com"",
                                                ""guid"": ""XX"",
                                                ""image_url"": ""https://s.yimg.com/wm/modern/images/default_user_profile_pic_64.png"",
                                                ""manager_id"": ""11"",
                                                ""nickname"": ""XX""
                                            }
                                        }
                                    ]
                                }
                            ]
                        ]
                    },
                    ""2"": {
                        ""team"": [
                            [
                                {
                                    ""team_key"": ""371.l.102542.t.3""
                                },
                                {
                                    ""team_id"": ""3""
                                },
                                {
                                    ""name"": ""XXX""
                                },
                                [],
                                {
                                    ""url"": ""https://football.fantasysports.yahoo.com/f1/XX/3""
                                },
                                {
                                    ""team_logos"": [
                                        {
                                            ""team_logo"": {
                                                ""size"": ""large"",
                                                ""url"": ""https://ct.yimg.com/cy/5603/30147468023_1c705edb29_192sq.jpg?ct=fantasy""
                                            }
                                        }
                                    ]
                                },
                                [],
                                {
                                    ""waiver_priority"": """"
                                },
                                {
                                    ""faab_balance"": ""100""
                                },
                                {
                                    ""number_of_moves"": 0
                                },
                                {
                                    ""number_of_trades"": 0
                                },
                                {
                                    ""roster_adds"": {
                                        ""coverage_type"": ""week"",
                                        ""coverage_value"": ""1"",
                                        ""value"": ""0""
                                    }
                                },
                                [],
                                {
                                    ""league_scoring_type"": ""head""
                                },
                                [],
                                [],
                                {
                                    ""has_draft_grade"": 0
                                },
                                [],
                                [],
                                {
                                    ""managers"": [
                                        {
                                            ""manager"": {
                                                ""email"": ""XXXgmail.com"",
                                                ""guid"": ""XXXX"",
                                                ""image_url"": ""https://s.yimg.com/wv/images/6c93ed606f742d4c075bc091633cc072_64.jpg"",
                                                ""manager_id"": ""3"",
                                                ""nickname"": ""XX""
                                            }
                                        }
                                    ]
                                }
                            ]
                        ]
                    },
                    ""3"": {
                        ""team"": [
                            [
                                {
                                    ""team_key"": ""371.l.102542.t.4""
                                },
                                {
                                    ""team_id"": ""4""
                                },
                                {
                                    ""name"": ""XX""
                                },
                                [],
                                {
                                    ""url"": ""https://football.fantasysports.yahoo.com/f1/XX/4""
                                },
                                {
                                    ""team_logos"": [
                                        {
                                            ""team_logo"": {
                                                ""size"": ""large"",
                                                ""url"": ""https://s.yimg.com/dh/ap/fantasy/nfl/img/icon_10_100.png""
                                            }
                                        }
                                    ]
                                },
                                [],
                                {
                                    ""waiver_priority"": """"
                                },
                                {
                                    ""faab_balance"": ""100""
                                },
                                {
                                    ""number_of_moves"": 0
                                },
                                {
                                    ""number_of_trades"": 0
                                },
                                {
                                    ""roster_adds"": {
                                        ""coverage_type"": ""week"",
                                        ""coverage_value"": ""1"",
                                        ""value"": ""0""
                                    }
                                },
                                [],
                                {
                                    ""league_scoring_type"": ""head""
                                },
                                [],
                                [],
                                {
                                    ""has_draft_grade"": 0
                                },
                                [],
                                [],
                                {
                                    ""managers"": [
                                        {
                                            ""manager"": {
                                                ""email"": ""XXX@yahoo.com"",
                                                ""guid"": ""XX"",
                                                ""image_url"": ""https://s.yimg.com/wm/modern/images/default_user_profile_pic_64.png"",
                                                ""manager_id"": ""4"",
                                                ""nickname"": ""XX""
                                            }
                                        }
                                    ]
                                }
                            ]
                        ]
                    },
                    ""8"": {
                        ""team"": [
                            [
                                {
                                    ""team_key"": ""XXX""
                                },
                                {
                                    ""team_id"": ""9""
                                },
                                {
                                    ""name"": ""XxX""
                                },
                                [],
                                {
                                    ""url"": ""https://football.fantasysports.yahoo.com/f1/XX/9""
                                },
                                {
                                    ""team_logos"": [
                                        {
                                            ""team_logo"": {
                                                ""size"": ""large"",
                                                ""url"": ""https://ct.yimg.com/cy/8393/28682944304_33bda49603_192sq.jpg?ct=fantasy""
                                            }
                                        }
                                    ]
                                },
                                [],
                                {
                                    ""waiver_priority"": """"
                                },
                                {
                                    ""faab_balance"": ""100""
                                },
                                {
                                    ""number_of_moves"": 0
                                },
                                {
                                    ""number_of_trades"": 0
                                },
                                {
                                    ""roster_adds"": {
                                        ""coverage_type"": ""week"",
                                        ""coverage_value"": ""1"",
                                        ""value"": ""0""
                                    }
                                },
                                [],
                                {
                                    ""league_scoring_type"": ""head""
                                },
                                [],
                                [],
                                {
                                    ""has_draft_grade"": 0
                                },
                                [],
                                [],
                                {
                                    ""managers"": [
                                        {
                                            ""manager"": {
                                                ""email"": ""XXX"",
                                                ""guid"": ""XXX"",
                                                ""image_url"": ""https://s.yimg.com/wm/modern/images/default_user_profile_pic_64.png"",
                                                ""manager_id"": ""9"",
                                                ""nickname"": ""XXX""
                                            }
                                        }
                                    ]
                                }
                            ]
                        ]
                    },
                    ""count"": 14
                }
            }
        ],
        ""refresh_rate"": ""60"",
        ""time"": ""110.55207252502ms"",
        ""xml:lang"": ""en-US"",
        ""yahoo:uri"": ""/fantasy/v2/league/XXXX/teams""
    }
}`)
",21901
629,45774425,"type TeamApi_ struct {
    TeamKey string `json:""team_key""`
    TeamId string `json:""team_id""`
    Name string `json:""name""`
}

type LeaguesApi struct {
    NumTeams int `json:""num_teams""`
    TeamsApi struct {
        Zero struct {
            TeamsApi_ [][]TeamApi_ `json:""team""`
        } `json:""0""`
        One struct {
            TeamsApi_ [][]TeamApi_ `json:""team""`
        } `json:""1""`
        Two struct {
            TeamsApi_ [][]TeamApi_ `json:""team""`
        } `json:""2""`
        Three struct {
            TeamsApi_ [][]TeamApi_ `json:""team""`
        } `json:""3""`
    } `json:""teams""`
} 

type LeagueApiResult struct {
FantasyContent struct {
            LeagueApi []LeaguesApi `json:""league""`

    } `json:""fantasy_content""`
}

var Result LeagueApiResult
err := json.Unmarshal(data, &Result)
if err != nil {
    fmt.Println(err)
}


fmt.Println(Result.FantasyContent.LeagueApi[1].TeamsApi.One.TeamsApi_[0][2].Name)
",930
630,45839846,"package testing

import (
    ""encoding/xml""
    ""fmt""
    ""reflect""

    ""github.com/fiorix/wsdl2go/soap""
)

// Namespace was auto-generated from WSDL.
var Namespace = ""http://schemas.microsoft.com/sharepoint/soap/""

// NewAuthenticationSoap creates an initializes a AuthenticationSoap.
func NewAuthenticationSoap(cli *soap.Client) AuthenticationSoap {
    return &authenticationSoap{cli}
}

// AuthenticationSoap was auto-generated from WSDL
// and defines interface for the remote service. Useful for testing.
type AuthenticationSoap interface {
    // Login was auto-generated from WSDL.
    Login(α *Login) (β *LoginResponse, err error)

    // Mode was auto-generated from WSDL.
    Mode(α *Mode) (β *ModeResponse, err error)
}

// AuthenticationMode was auto-generated from WSDL.
type AuthenticationMode string

// Validate validates AuthenticationMode.
func (v AuthenticationMode) Validate() bool {
    for _, vv := range []string{
        ""None"",
        ""Windows"",
        ""Passport"",
        ""Forms"",
    } {
        if reflect.DeepEqual(v, vv) {
            return true
        }
    }
    return false
}

// LoginErrorCode was auto-generated from WSDL.
type LoginErrorCode string

// Validate validates LoginErrorCode.
func (v LoginErrorCode) Validate() bool {
    for _, vv := range []string{
        ""NoError"",
        ""NotInFormsAuthenticationMode"",
        ""PasswordNotMatch"",
    } {
        if reflect.DeepEqual(v, vv) {
            return true
        }
    }
    return false
}

// Login was auto-generated from WSDL.
type Login struct {
    XMLName  xml.Name `xml:""http://schemas.microsoft.com/sharepoint/soap/ Login"" json:""-"" yaml:""-""`
    Username string   `xml:""username,omitempty"" json:""username,omitempty"" yaml:""username,omitempty""`
    Password string   `xml:""password,omitempty"" json:""password,omitempty"" yaml:""password,omitempty""`
}

// LoginResponse was auto-generated from WSDL.
type LoginResponse struct {
    LoginResult *LoginResult `xml:""LoginResult"" json:""LoginResult"" yaml:""LoginResult""`
}

// LoginResult was auto-generated from WSDL.
type LoginResult struct {
    CookieName     string         `xml:""CookieName,omitempty"" json:""CookieName,omitempty"" yaml:""CookieName,omitempty""`
    ErrorCode      LoginErrorCode `xml:""ErrorCode"" json:""ErrorCode"" yaml:""ErrorCode""`
    TimeoutSeconds int            `xml:""TimeoutSeconds"" json:""TimeoutSeconds"" yaml:""TimeoutSeconds""`
    Sprequestguid  string
}

// Mode was auto-generated from WSDL.
type Mode struct{}

// ModeResponse was auto-generated from WSDL.
type ModeResponse struct {
    ModeResult AuthenticationMode `xml:""ModeResult"" json:""ModeResult"" yaml:""ModeResult""`
}

// authenticationSoap implements the AuthenticationSoap interface.
type authenticationSoap struct {
    cli *soap.Client
}

// Login was auto-generated from WSDL.
func (p *authenticationSoap) Login(α *Login) (β *LoginResponse, err error) {
    fmt.Println(""inside authenticationSoap"", α.Username, α.Password)
    γ := struct {
        XMLName xml.Name `xml:""Envelope""`
        Body    struct {
            M LoginResponse `xml:""LoginResponse""`
        }
    }{}
    if err = p.cli.RoundTripSoap12(""http://schemas.microsoft.com/sharepoint/soap/Login"", α, &γ); err != nil {
        return nil, err
    }
    return &γ.Body.M, nil
}

// Mode was auto-generated from WSDL.
func (p *authenticationSoap) Mode(α *Mode) (β *ModeResponse, err error) {
    γ := struct {
        XMLName xml.Name `xml:""Envelope""`
        Body    struct {
            M ModeResponse `xml:""ModeResponse""`
        }
    }{}
    if err = p.cli.RoundTripSoap12(""http://schemas.microsoft.com/sharepoint/soap/Mode"", α, &γ); err != nil {
        return nil, err
    }
    return &γ.Body.M, nil
}
func main() {

}
",3736
631,45839846,"    package listfiles

import (
    ""encoding/xml""
    ""fmt""

    ""github.com/fiorix/wsdl2go/soap""
)

// Namespace was auto-generated from WSDL.
var Namespace = ""http://schemas.microsoft.com/sharepoint/soap/""

// NewListsSoap creates an initializes a ListsSoap.
func NewListsSoap(cli *soap.Client) ListsSoap {
    return &listsSoap{cli}
}
",339
632,45839846,"    // GetList was auto-generated from WSDL.
    GetList(α *GetList) (β *GetListResponse, err error)

    // GetListAndView was auto-generated from WSDL.
    GetListAndView(α *GetListAndView) (β *GetListAndViewResponse, err error)

    // GetListCollection was auto-generated from WSDL.
    GetListCollection(α *GetListCollection) (β *GetListCollectionResponse, err error)

    // GetListContentType was auto-generated from WSDL.
    GetListContentType(α *GetListContentType) (β *GetListContentTypeResponse, err error)
",519
633,45839846,"xml:""http://schemas.microsoft.com/sharepoint/soap/ GetList"" json:""-"" yaml:""-""",77
634,45839846,"xml:""listName,omitempty"" json:""listName,omitempty"" yaml:""listName,omitempty""",76
635,45839846,"// GetListAndView was auto-generated from WSDL.
type GetListAndView struct {
    XMLName  xml.Name `xml:""http://schemas.microsoft.com/sharepoint/soap/ GetListAndView"" json:""-"" yaml:""-""`
    ListName string   `xml:""listName,omitempty"" json:""listName,omitempty"" yaml:""listName,omitempty""`
    ViewName string   `xml:""viewName,omitempty"" json:""viewName,omitempty"" yaml:""viewName,omitempty""`
}

// GetListAndViewResponse was auto-generated from WSDL.
type GetListAndViewResponse struct {
    GetListAndViewResult string `xml:""GetListAndViewResult,omitempty"" json:""GetListAndViewResult,omitempty"" yaml:""GetListAndViewResult,omitempty""`
}

// GetListCollection was auto-generated from WSDL.
type GetListCollection struct{}

// GetListCollectionResponse was auto-generated from WSDL.
type GetListCollectionResponse struct {
    GetListCollectionResult string `xml:""GetListCollectionResult,omitempty"" json:""GetListCollectionResult,omitempty"" yaml:""GetListCollectionResult,omitempty""`
}

// GetListContentType was auto-generated from WSDL.
type GetListContentType struct {
    XMLName       xml.Name `xml:""http://schemas.microsoft.com/sharepoint/soap/ GetListContentType"" json:""-"" yaml:""-""`
    ListName      string   `xml:""listName,omitempty"" json:""listName,omitempty"" yaml:""listName,omitempty""`
    ContentTypeId string   `xml:""contentTypeId,omitempty"" json:""contentTypeId,omitempty"" yaml:""contentTypeId,omitempty""`
}

// GetListContentTypeResponse was auto-generated from WSDL.
type GetListContentTypeResponse struct {
    GetListContentTypeResult string `xml:""GetListContentTypeResult,omitempty"" json:""GetListContentTypeResult,omitempty"" yaml:""GetListContentTypeResult,omitempty""`
}
",1678
636,45839846,"xml:""Envelope""",14
637,45839846,"xml:""GetListResponse""",21
638,45839846,"// GetListAndView was auto-generated from WSDL.
func (p *listsSoap) GetListAndView(α *GetListAndView) (β *GetListAndViewResponse, err error) {
    γ := struct {
        XMLName xml.Name `xml:""Envelope""`
        Body    struct {
            M GetListAndViewResponse `xml:""GetListAndViewResponse""`
        }
    }{}
    if err = p.cli.RoundTripSoap12(""http://schemas.microsoft.com/sharepoint/soap/GetListAndView"", α, &γ); err != nil {
        return nil, err
    }
    return &γ.Body.M, nil
}

// GetListCollection was auto-generated from WSDL.
func (p *listsSoap) GetListCollection(α *GetListCollection) (β *GetListCollectionResponse, err error) {
    γ := struct {
        XMLName xml.Name `xml:""Envelope""`
        Body    struct {
            M GetListCollectionResponse `xml:""GetListCollectionResponse""`
        }
    }{}
    if err = p.cli.RoundTripSoap12(""http://schemas.microsoft.com/sharepoint/soap/GetListCollection"", α, &γ); err != nil {
        return nil, err
    }
    return &γ.Body.M, nil
}

// GetListContentType was auto-generated from WSDL.
func (p *listsSoap) GetListContentType(α *GetListContentType) (β *GetListContentTypeResponse, err error) {
    γ := struct {
        XMLName xml.Name `xml:""Envelope""`
        Body    struct {
            M GetListContentTypeResponse `xml:""GetListContentTypeResponse""`
        }
    }{}
    fmt.Println(""α  value is "", α, ""and γ is "", γ)

    if err = p.cli.RoundTripSoap12(""http://schemas.microsoft.com/sharepoint/soap/GetListContentType"", α, &γ); err != nil {
        return nil, err
    }
    return &γ.Body.M, nil
}

// GetListContentTypes was auto-generated from WSDL.
func (p *listsSoap) GetListContentTypes(α *GetListContentTypes) (β *GetListContentTypesResponse, err error) {
    γ := struct {
        XMLName xml.Name `xml:""Envelope""`
        Body    struct {
            M GetListContentTypesResponse `xml:""GetListContentTypesResponse""`
        }
    }{}
    if err = p.cli.RoundTripSoap12(""http://schemas.microsoft.com/sharepoint/soap/GetListContentTypes"", α, &γ); err != nil {
        fmt.Println(""GetListContentTypes error is "", err)

        return nil, err
    }
    return &γ.Body.M, nil
}
",2162
639,45839846,"package main

import (
    ""fmt""
    list ""examples/sharepoint_test/listfiles""
    site ""examples/sharepoint_test/sitedata""
    hello ""examples/testing""

    ""github.com/fiorix/wsdl2go/soap""
)

func main() {
    var logincr hello.Login
    var liststruct list.GetList
    var listitems list.GetListItems
    var listcontentype list.GetListContentTypes
    var sitedt site.GetAttachments
    logincr.Username = ""****""
    logincr.Password = ""****""
    liststruct.ListName = ""Documents""
    listitems.ListName = ""Documents""
    sitedt.StrListName = ""testvijay""
    sitedt.StrItemId = ""1""
    listcontentype.ListName = ""Documents""
    cli := soap.Client{
        URL:         ""http://example.com/_vti_bin/authentication.asmx"",
        Namespace:   hello.Namespace,
        ContentType: ""text/xml; charset=utf-8"",
    }
    conn := hello.NewAuthenticationSoap(&cli)
    fmt.Println(""conn is "", conn)
    reply, err := conn.Login(&logincr)
    if err != nil {
        fmt.Println(""error occured is"", err)
    }
    fmt.Println(""LOgin response is "", reply.LoginResult)
    clilist := soap.Client{
        URL:         ""http://example.com/_vti_bin/lists.asmx"",
        Namespace:   list.Namespace,
        ContentType: ""application/soap+xml; charset=utf-8"",
    }
    sitelist := soap.Client{
        URL:         ""http://example.com/_vti_bin/sitedata.asmx"",
        Namespace:   site.Namespace,
        ContentType: ""application/soap+xml; charset=utf-8"",
    }
    listsoap := list.NewListsSoap(&clilist)
    content, err := listsoap.GetListContentTypes(&listcontentype)
    if err != nil {
        fmt.Println(""error occured is"", err)
    }
    fmt.Println(""response for content item is  "", content.GetListContentTypesResult)
    sitecli := site.NewSiteDataSoap(&sitelist)
    data, _ := site.SiteDataSoap.GetAttachments(sitecli, &sitedt)
    fmt.Println(""response for data site is  "", data.VAttachments)

    //  listitem, err := list.ListsSoap.GetListItems()

    ascas, _ := list.ListsSoap.GetListItems(listsoap, &listitems)
    fmt.Println(""response for list item is  "", ascas.GetListItemsResult)

    testlist, _ := list.ListsSoap.GetList(listsoap, &liststruct)
    fmt.Println(""response for list is  "", testlist.GetListResult)

    //conn := hello.NewService(&cli)
    //reply, err := conn.Echo(cli, &hello.EchoRequest{Data: ""echo""})

}
",2338
