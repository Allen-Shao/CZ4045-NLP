,text,token,annotation
0,"func New(res http.ResponseWriter, req *http.Request, next http.HandlerFunc) {","['func', 'New', '(', 'res', 'http', '.', 'ResponseWriter', ',', 'req', '*', 'http', '.', 'Request', ',', 'next', 'http', '.', 'HandlerFunc', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
1,"    if err := process(security.ServeHttp(res, req), session.ServeHttp(res, req)); err != nil {","['if', 'err', ':=', 'process', '(', 'security', '.', 'ServeHttp', '(', 'res', ',', 'req', '),', 'session', '.', 'ServeHttp', '(', 'res', ',', 'req', '));', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
2,        res.WriteHeader(http.StatusInternalServerError),"['res', '.', 'WriteHeader', '(', 'http', '.', 'StatusInternalServerError', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
3,        return,['return'],['KEYWORD']
4,    },['}'],['OPERATOR']
5,"    log.Println(""End of process middlewares"")","['log', '.', 'Println', '(', '""End of process middlewares""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
6,"    next(res, req)","['next', '(', 'res', ',', 'req', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
7,},['}'],['OPERATOR']
8,// Process all middlewares,['// Process all middlewares'],"['COMMENT', 'NNP', 'DT', 'NNS']"
9,func process(chErrs ...<-chan error) error {,"['func', 'process', '(', 'chErrs', '...<-', 'chan', 'error', ')', 'error', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
10,"    for _, chErr := range chErrs {","['for', '_', ',', 'chErr', ':=', 'range', 'chErrs', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
11,"        // Will abort the loop, when error occurs","['// Will abort the loop, when error occurs']","['COMMENT', 'MD', 'VB', 'DT', 'NN', ',', 'WRB', 'NN', 'VBZ']"
12,        if err := <-chErr; err != nil {,"['if', 'err', ':=', '<-', 'chErr', ';', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
13,            return err,"['return', 'err']","['KEYWORD', 'IDENTIFIER']"
14,        },['}'],['OPERATOR']
15,    },['}'],['OPERATOR']
16,    return nil,"['return', 'nil']","['KEYWORD', 'IDENTIFIER']"
17,},['}'],['OPERATOR']
