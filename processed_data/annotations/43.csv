,text,token,annotation
0,// web1 project main.go,['// web1 project main.go'],"['COMMENT', 'NN', 'NN', 'NN']"
1,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
2,import (,"['import', '(']","['KEYWORD', 'OPERATOR']"
3,"    ""errors""","['""errors""']",['STRING_LITERAL']
4,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
5,"    ""github.com/jmcvetta/neoism""","['""github.com/jmcvetta/neoism""']",['STRING_LITERAL']
6,"    ""html/template""","['""html/template""']",['STRING_LITERAL']
7,"    ""io/ioutil""","['""io/ioutil""']",['STRING_LITERAL']
8,"    ""net/http""","['""net/http""']",['STRING_LITERAL']
9,"    ""regexp""","['""regexp""']",['STRING_LITERAL']
10,),[')'],['OPERATOR']
11,type Page struct {,"['type', 'Page', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
12,    Title string,"['Title', 'string']","['IDENTIFIER', 'IDENTIFIER']"
13,    Body  string,"['Body', 'string']","['IDENTIFIER', 'IDENTIFIER']"
14,},['}'],['OPERATOR']
15,func (p *Page) save() error {,"['func', '(', 'p', '*', 'Page', ')', 'save', '()', 'error', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
16,"    db, err := neoism.Connect(""http://localhost:7474/db/data"")","['db', ',', 'err', ':=', 'neoism', '.', 'Connect', '(', '""http://localhost:7474/db/data""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
17,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
18,        return err,"['return', 'err']","['KEYWORD', 'IDENTIFIER']"
19,    },['}'],['OPERATOR']
20,    res := []struct {,"['res', ':=', '[]', 'struct', '{']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
21,        N neoism.Node,"['N', 'neoism', '.', 'Node']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
22,    }{},['}{}'],['OPERATOR']
23,    cq := neoism.CypherQuery{,"['cq', ':=', 'neoism', '.', 'CypherQuery', '{']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
24,"        Statement:  ""MERGE (n:Page {title: {title}}) ON MATCH SET n.body = {body} RETURN n"",","['Statement', ':', '""MERGE (n:Page {title: {title}}) ON MATCH SET n.body = {body} RETURN n""', ',']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
25,"        Parameters: neoism.Props{""title"": p.Title, ""body"": p.Body},","['Parameters', ':', 'neoism', '.', 'Props', '{', '""title"": p.Title, ""body""', ':', 'p', '.', 'Body', '},']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
26,"        Result:     &res,","['Result', ':', '&', 'res', ',']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
27,    },['}'],['OPERATOR']
28,    db.Cypher(&cq),"['db', '.', 'Cypher', '(&', 'cq', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
29,    return nil,"['return', 'nil']","['KEYWORD', 'IDENTIFIER']"
30,},['}'],['OPERATOR']
31,"func loadPage(title string) (*Page, error) {","['func', 'loadPage', '(', 'title', 'string', ')', '(*', 'Page', ',', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
32,"    db, err := neoism.Connect(""http://localhost:7474/db/data"")","['db', ',', 'err', ':=', 'neoism', '.', 'Connect', '(', '""http://localhost:7474/db/data""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
33,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
34,"        return nil, err","['return', 'nil', ',', 'err']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
35,    },['}'],['OPERATOR']
36,    res := []struct {,"['res', ':=', '[]', 'struct', '{']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
37,"        Title string `json:""a.title""` // `json` tag matches column name in query","['Title', 'string', 'json', ':', '""a.title""', '// `json` tag matches column name in query']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'COMMENT', 'JJ', 'NN', 'NNS', 'NN', 'NN', 'IN', 'NN']"
38,"        Body  string `json:""a.body""`","['Body', 'string', 'json', ':', '""a.body""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
39,    }{},['}{}'],['OPERATOR']
40,    cq := neoism.CypherQuery{,"['cq', ':=', 'neoism', '.', 'CypherQuery', '{']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
41,        Statement: `,"['Statement', ':']","['IDENTIFIER', 'OPERATOR']"
42,            MATCH (a:Page),"['MATCH', '(', 'a', ':', 'Page', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
43,            WHERE a.title = {name},"['WHERE', 'a', '.', 'title', '=', '{', 'name', '}']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
44,"            RETURN a.title, a.body","['RETURN', 'a', '.', 'title', ',', 'a', '.', 'body']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
45,"        `,","[',']",['OPERATOR']
46,"        Parameters: neoism.Props{""name"": title},","['Parameters', ':', 'neoism', '.', 'Props', '{', '""name""', ':', 'title', '},']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
47,"        Result:     &res,","['Result', ':', '&', 'res', ',']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
48,    },['}'],['OPERATOR']
49,    db.Cypher(&cq),"['db', '.', 'Cypher', '(&', 'cq', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
50,    r := res[0],"['r', ':=', 'res', '[', '0', ']']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
51,"    if r.Title == """" || r.Body == """" {","['if', 'r', '.', 'Title', '==', '"""" || r.Body == """"', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
52,"        return nil, errors.New(""Page doesn't exist"")","['return', 'nil', ',', 'errors', '.', 'New', '(', '""Page doesn\'t exist""', ')']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
53,    },['}'],['OPERATOR']
54,"    return &Page{Title: r.Title, Body: r.Body}, nil","['return', '&', 'Page', '{', 'Title', ':', 'r', '.', 'Title', ',', 'Body', ':', 'r', '.', 'Body', '},', 'nil']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
55,},['}'],['OPERATOR']
56,"func viewHandler(w http.ResponseWriter, r *http.Request, title string) {","['func', 'viewHandler', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ',', 'title', 'string', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
57,"    p, err := loadPage(title)","['p', ',', 'err', ':=', 'loadPage', '(', 'title', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
58,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
59,"        http.Redirect(w, r, ""/edit/""+title, http.StatusFound)","['http', '.', 'Redirect', '(', 'w', ',', 'r', ',', '""/edit/""', '+', 'title', ',', 'http', '.', 'StatusFound', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
60,        return,['return'],['KEYWORD']
61,    },['}'],['OPERATOR']
62,"    renderTemplate(w, ""view"", p)","['renderTemplate', '(', 'w', ',', '""view""', ',', 'p', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
63,},['}'],['OPERATOR']
64,"func editHandler(w http.ResponseWriter, r *http.Request, title string) {","['func', 'editHandler', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ',', 'title', 'string', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
65,"    p, err := loadPage(title)","['p', ',', 'err', ':=', 'loadPage', '(', 'title', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
66,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
67,        p = &Page{Title: title},"['p', '=', '&', 'Page', '{', 'Title', ':', 'title', '}']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
68,    },['}'],['OPERATOR']
69,"    renderTemplate(w, ""edit"", p)","['renderTemplate', '(', 'w', ',', '""edit""', ',', 'p', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
70,},['}'],['OPERATOR']
71,"func saveHandler(w http.ResponseWriter, r *http.Request, title string) {","['func', 'saveHandler', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ',', 'title', 'string', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
72,"    body := r.FormValue(""body"")","['body', ':=', 'r', '.', 'FormValue', '(', '""body""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
73,"    p := &Page{Title: title, Body: body}","['p', ':=', '&', 'Page', '{', 'Title', ':', 'title', ',', 'Body', ':', 'body', '}']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
74,    err := p.save(),"['err', ':=', 'p', '.', 'save', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
75,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
76,"        http.Error(w, err.Error(), http.StatusInternalServerError)","['http', '.', 'Error', '(', 'w', ',', 'err', '.', 'Error', '(),', 'http', '.', 'StatusInternalServerError', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
77,        return,['return'],['KEYWORD']
78,    },['}'],['OPERATOR']
79,"    http.Redirect(w, r, ""/view/""+title, http.StatusFound)","['http', '.', 'Redirect', '(', 'w', ',', 'r', ',', '""/view/""', '+', 'title', ',', 'http', '.', 'StatusFound', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
80,},['}'],['OPERATOR']
81,"func homeHandler(w http.ResponseWriter, r *http.Request) {","['func', 'homeHandler', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
82,"    body, err := ioutil.ReadFile(""home.html"")","['body', ',', 'err', ':=', 'ioutil', '.', 'ReadFile', '(', '""home.html""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
83,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
84,"        http.Error(w, err.Error(), http.StatusInternalServerError)","['http', '.', 'Error', '(', 'w', ',', 'err', '.', 'Error', '(),', 'http', '.', 'StatusInternalServerError', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
85,        return,['return'],['KEYWORD']
86,    },['}'],['OPERATOR']
87,"    fmt.Fprintf(w, ""%s"", body)","['fmt', '.', 'Fprintf', '(', 'w', ',', '""%s""', ',', 'body', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
88,},['}'],['OPERATOR']
89,"func rootHandler(w http.ResponseWriter, r *http.Request) {","['func', 'rootHandler', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
90,"    http.Redirect(w, r, ""/home"", http.StatusFound)","['http', '.', 'Redirect', '(', 'w', ',', 'r', ',', '""/home""', ',', 'http', '.', 'StatusFound', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
91,},['}'],['OPERATOR']
92,"var templates = template.Must(template.ParseFiles(""edit.html"", ""view.html""))","['var', 'templates', '=', 'template', '.', 'Must', '(', 'template', '.', 'ParseFiles', '(', '""edit.html"", ""view.html""', '))']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
93,"func renderTemplate(w http.ResponseWriter, tmpl string, p *Page) {","['func', 'renderTemplate', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'tmpl', 'string', ',', 'p', '*', 'Page', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
94,"    err := templates.ExecuteTemplate(w, tmpl+"".html"", p)","['err', ':=', 'templates', '.', 'ExecuteTemplate', '(', 'w', ',', 'tmpl', '+', '"".html""', ',', 'p', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
95,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
96,"        http.Error(w, err.Error(), http.StatusInternalServerError)","['http', '.', 'Error', '(', 'w', ',', 'err', '.', 'Error', '(),', 'http', '.', 'StatusInternalServerError', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
97,    },['}'],['OPERATOR']
98,},['}'],['OPERATOR']
99,"var validPath = regexp.MustCompile(""^/(edit|save|view)/([a-zA-Z0-9]+)$"")","['var', 'validPath', '=', 'regexp', '.', 'MustCompile', '(', '""^/(edit|save|view)/([a-zA-Z0-9]+)$""', ')']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
100,"func makeHandler(fn func(http.ResponseWriter, *http.Request, string)) http.HandlerFunc {","['func', 'makeHandler', '(', 'fn', 'func', '(', 'http', '.', 'ResponseWriter', ',', '*', 'http', '.', 'Request', ',', 'string', '))', 'http', '.', 'HandlerFunc', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
101,"    return func(w http.ResponseWriter, r *http.Request) {","['return', 'func', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
102,        m := validPath.FindStringSubmatch(r.URL.Path),"['m', ':=', 'validPath', '.', 'FindStringSubmatch', '(', 'r', '.', 'URL', '.', 'Path', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
103,        if m == nil {,"['if', 'm', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
104,"            http.NotFound(w, r)","['http', '.', 'NotFound', '(', 'w', ',', 'r', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
105,            return,['return'],['KEYWORD']
106,        },['}'],['OPERATOR']
107,"        fn(w, r, m[2])","['fn', '(', 'w', ',', 'r', ',', 'm', '[', '2', '])']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
108,    },['}'],['OPERATOR']
109,},['}'],['OPERATOR']
110,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
111,"    http.HandleFunc(""/view/"", makeHandler(viewHandler))","['http', '.', 'HandleFunc', '(', '""/view/""', ',', 'makeHandler', '(', 'viewHandler', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
112,"    http.HandleFunc(""/edit/"", makeHandler(editHandler))","['http', '.', 'HandleFunc', '(', '""/edit/""', ',', 'makeHandler', '(', 'editHandler', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
113,"    http.HandleFunc(""/save/"", makeHandler(saveHandler))","['http', '.', 'HandleFunc', '(', '""/save/""', ',', 'makeHandler', '(', 'saveHandler', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
114,"    http.HandleFunc(""/home"", homeHandler)","['http', '.', 'HandleFunc', '(', '""/home""', ',', 'homeHandler', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
115,"    http.HandleFunc(""/"", rootHandler)","['http', '.', 'HandleFunc', '(', '""/""', ',', 'rootHandler', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
116,"    http.ListenAndServe("":8082"", nil)","['http', '.', 'ListenAndServe', '(', '"":8082""', ',', 'nil', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
117,},['}'],['OPERATOR']
