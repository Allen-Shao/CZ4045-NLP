,text,token,annotation
0,"I am working with Redigo Redis library and trying to json.Marshal the result I get from a sorted set but I get results such as this:

","['I', 'am', 'working', 'with', 'Redigo', 'Redis', 'library', 'and', 'trying', 'to', 'json.Marshal', 'the', 'result', 'I', 'get', 'from', 'a', 'sorted', 'set', 'but', 'I', 'get', 'results', 'such', 'as', 'this:']","['PRP', 'VBP', 'VBG', 'IN', 'NNP', 'NNP', 'NN', 'CC', 'VBG', 'TO', 'VB', 'DT', 'NN', 'PRP', 'VBP', 'IN', 'DT', 'JJ', 'NN', 'CC', 'PRP', 'VBP', 'NNS', 'JJ', 'IN', 'NN']"
1,"""eyJmcm9tSWQiOjEsInRvSWQiOjUsInR5cGUiOjMsInBvc3RJZCI6MSwiY29tbWVudElkIjo0NCwiY3JlYXRlZFRpbWUiOjE0NjMxNTY0ODQsImlzVmlld2VkIjpmYWxzZSwidXNlcm5hbWUiOiJBZG1pbiIsImltYWdlIjoiaHc2ZE5EQlQtMzZ4MzYuanBnIn0=""","['""eyJmcm9tSWQiOjEsInRvSWQiOjUsInR5cGUiOjMsInBvc3RJZCI6MSwiY29tbWVudElkIjo0NCwiY3JlYXRlZFRpbWUiOjE0NjMxNTY0ODQsImlzVmlld2VkIjpmYWxzZSwidXNlcm5hbWUiOiJBZG1pbiIsImltYWdlIjoiaHc2ZE5EQlQtMzZ4MzYuanBnIn0=""']",['STRING_LITERAL']
2,"

When I should be getting this:

","['When', 'I', 'should', 'be', 'getting', 'this:']","['WRB', 'PRP', 'MD', 'VB', 'VBG', 'JJ']"
3,"""{""fromId"":5,""toId"":1,""type"":3,""postId"":4,""commentId"":49,""createdTime"":1463161736,""isViewed"":false,""username"":""Alexander"",""image"":""JZIfHp8i-36x36.png""}""","['""{""', 'fromId', '"":5,""', 'toId', '"":1,""', 'type', '"":3,""', 'postId', '"":4,""', 'commentId', '"":49,""', 'createdTime', '"":1463161736,""', 'isViewed', '"":false,""', 'username', '"":""', 'Alexander', '"",""', 'image', '"":""', 'JZIfHp8i', '-', '36', 'x36', '.', 'png', '""}""']","['STRING_LITERAL', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'STRING_LITERAL', 'KEYWORD', 'STRING_LITERAL', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'STRING_LITERAL']"
4,"

I have a Notification struct

","['I', 'have', 'a', 'Notification', 'struct']","['PRP', 'VBP', 'DT', 'NNP', 'NN']"
5,type Notification struct {,"['type', 'Notification', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
6,"    FromId int64 `json:""fromId""`","['FromId', 'int64', 'json', ':', '""fromId""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
7,"    ToId   int64 `json:""toId""`","['ToId', 'int64', 'json', ':', '""toId""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
8,"    OfType int64 `json:""type""`","['OfType', 'int64', 'json', ':', '""type""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
9,"    PostId       int64  `json:""postId""`","['PostId', 'int64', 'json', ':', '""postId""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
10,"    CommentId    int64  `json:""commentId""`","['CommentId', 'int64', 'json', ':', '""commentId""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
11,"    CreatedTime  int64  `json:""createdTime""`","['CreatedTime', 'int64', 'json', ':', '""createdTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
12,"    IsViewed     bool   `json:""isViewed""`","['IsViewed', 'bool', 'json', ':', '""isViewed""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
13,"    FromUsername string `json:""username""`","['FromUsername', 'string', 'json', ':', '""username""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
14,"    FromImage    string `json:""image""`","['FromImage', 'string', 'json', ':', '""image""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
15,},['}'],['PUNCTUATION']
16,func New() *Notification {,"['func', 'New', '()', '*', 'Notification', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
17,    return &Notification{,"['return', '&', 'Notification', '{']","['KEYWORD', 'BITWISE_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
18,"        CreatedTime: time.Now().Unix(),","['CreatedTime', ':', 'time.Now().Unix()', ',']","['IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL', 'PUNCTUATION']"
19,    },['}'],['PUNCTUATION']
20,},['}'],['PUNCTUATION']
21,"

It has a method that saves a string of json into a Redis sorted set.

","['It', 'has', 'a', 'method', 'that', 'saves', 'a', 'string', 'of', 'json', 'into', 'a', 'Redis', 'sorted', 'set.']","['PRP', 'VBZ', 'DT', 'NN', 'WDT', 'VBZ', 'DT', 'NN', 'IN', 'NN', 'IN', 'DT', 'NNP', 'VBD', 'NN']"
22,"func (n *Notification) Create(pool *redis.Pool, multicast chan<- []byte) error {","['func', '(', 'n', '*', 'Notification', ')', 'Create', '(', 'pool', '*', 'redis', '.', 'Pool', ',', 'multicast', 'chan', '<-', '[]', 'byte', ')', 'error', '{']","['KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'CHANNEL_OPERATOR', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
23,    var err error,"['var', 'err', 'error']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
24,"    n.FromUsername, err = validation.FilterUsername(n.FromUsername)","['n', '.', 'FromUsername', ',', 'err', '=', 'validation.FilterUsername(n.FromUsername)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
25,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
26,        return err,"['return', 'err']","['KEYWORD', 'IDENTIFIER']"
27,    },['}'],['PUNCTUATION']
28,    // We can use the same validation as for a username here.,"['//', 'We', 'can', 'use', 'the', 'same', 'validation', 'as', 'for', 'a', 'username', 'here.']","['COMMENT', 'PRP', 'MD', 'VB', 'DT', 'JJ', 'NN', 'IN', 'IN', 'DT', 'JJ', 'NN']"
29,"    n.FromImage, err = validation.FilterUsername(n.FromImage)","['n', '.', 'FromImage', ',', 'err', '=', 'validation.FilterUsername(n.FromImage)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
30,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
31,        return err,"['return', 'err']","['KEYWORD', 'IDENTIFIER']"
32,    },['}'],['PUNCTUATION']
33,"    key := fmt.Sprintf(""user:%d:notification"", n.ToId)","['key', ':=', 'fmt.Sprintf(""user:%d:notification"", n.ToId)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
34,"    b, err := json.Marshal(n)","['b', ',', 'err', ':=', 'json.Marshal(n)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
35,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
36,        return err,"['return', 'err']","['KEYWORD', 'IDENTIFIER']"
37,    },['}'],['PUNCTUATION']
38,    c := pool.Get(),"['c', ':=', 'pool.Get()']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
39,    defer c.Close(),"['defer', 'c.Close()']","['IDENTIFIER', 'FUNCTION_CALL']"
40,"    c.Send(""ZADD"", key, n.CreatedTime, string(b))","['c.Send(""ZADD"", key, n.CreatedTime, string(b))']",['FUNCTION_CALL']
41,    // Limiting to the top ranked 50 items.,"['//', 'Limiting', 'to', 'the', 'top', 'ranked', '50', 'items.']","['COMMENT', 'VBG', 'TO', 'DT', 'JJ', 'VBD', 'CD', 'NN']"
42,"    c.Send(""ZREMRANGEBYRANK"", key, 0, -50)","['c.Send(""ZREMRANGEBYRANK"", key, 0, -50)']",['FUNCTION_CALL']
43,    if err := c.Flush(); err != nil {,"['if', 'err', ':=', 'c.Flush()', ';', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
44,        return err,"['return', 'err']","['KEYWORD', 'IDENTIFIER']"
45,    },['}'],['PUNCTUATION']
46,    multicast <- b,"['multicast', '<-', 'b']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
47,    return nil,"['return', 'nil']","['KEYWORD', 'IDENTIFIER']"
48,},['}'],['PUNCTUATION']
49,"

This works all good. But then I want to fetch those results and send then to the client side as an array of json formatted strings. The same json formatted strings that I save in the sorted set.

I am doing something simple like this.

","['This', 'works', 'all', 'good.', 'But', 'then', 'I', 'want', 'to', 'fetch', 'those', 'results', 'and', 'send', 'then', 'to', 'the', 'client', 'side', 'as', 'an', 'array', 'of', 'json', 'formatted', 'strings.', 'The', 'same', 'json', 'formatted', 'strings', 'that', 'I', 'save', 'in', 'the', 'sorted', 'set.', 'I', 'am', 'doing', 'something', 'simple', 'like', 'this.']","['DT', 'VBZ', 'DT', 'NNS', 'CC', 'RB', 'PRP', 'VBP', 'TO', 'VB', 'DT', 'NNS', 'CC', 'VBP', 'RB', 'TO', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'IN', 'NN', 'VBN', 'PDT', 'DT', 'JJ', 'NN', 'VBD', 'NNS', 'IN', 'PRP', 'VBP', 'IN', 'DT', 'JJ', 'NN', 'PRP', 'VBP', 'VBG', 'NN', 'NNS', 'IN', 'NN']"
50,"func ByUserId(userId int64, pool *redis.Pool) (interface{}, error) {","['func', 'ByUserId', '(', 'userId', 'int64', ',', 'pool', '*', 'redis', '.', 'Pool', ')', '(', 'interface', '{},', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
51,"    key := fmt.Sprintf(""user:%d:notification"", userId)","['key', ':=', 'fmt.Sprintf(""user:%d:notification"", userId)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
52,    c := pool.Get(),"['c', ':=', 'pool.Get()']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
53,    defer c.Close(),"['defer', 'c.Close()']","['IDENTIFIER', 'FUNCTION_CALL']"
54,"    c.Send(""ZREVRANGE"", key, 0, -1)","['c.Send(""ZREVRANGE"", key, 0, -1)']",['FUNCTION_CALL']
55,    c.Flush(),['c.Flush()'],['FUNCTION_CALL']
56,    return c.Receive(),"['return', 'c.Receive()']","['KEYWORD', 'FUNCTION_CALL']"
57,},['}'],['PUNCTUATION']
58,"

But it does not work.

When I json.Marshal the result I get an array of strings like this:

""eyJmcm9tSWQiOjEsInRvSWQiOjUsInR5cGUiOjMsInBvc3RJZCI6MSwiY29tbWVudElkIjo0NCwiY3JlYXRlZFRpbWUiOjE0NjMxNTY0ODQsImlzVmlld2VkIjpmYWxzZSwidXNlcm5hbWUiOiJBZG1pbiIsImltYWdlIjoiaHc2ZE5EQlQtMzZ4MzYuanBnIn0=""


If I spew.Dump() the results I get this output:

","['But', 'it', 'does', 'not', 'work.', 'When', 'I', 'json.Marshal', 'the', 'result', 'I', 'get', 'an', 'array', 'of', 'strings', 'like', 'this:', '""eyJmcm9tSWQiOjEsInRvSWQiOjUsInR5cGUiOjMsInBvc3RJZCI6MSwiY29tbWVudElkIjo0NCwiY3JlYXRlZFRpbWUiOjE0NjMxNTY0ODQsImlzVmlld2VkIjpmYWxzZSwidXNlcm5hbWUiOiJBZG1pbiIsImltYWdlIjoiaHc2ZE5EQlQtMzZ4MzYuanBnIn0=""', 'If', 'I', 'spew.Dump()', 'the', 'results', 'I', 'get', 'this', 'output:']","['CC', 'PRP', 'VBZ', 'RB', 'VB', 'WRB', 'PRP', 'VBP', 'DT', 'NN', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'NNS', 'IN', 'NN', 'VBP', 'IN', 'PRP', 'VBP', 'DT', 'NNS', 'PRP', 'VBP', 'DT', 'NN']"
59,([]interface {}) (len=1 cap=1) {,"['([]', 'interface', '{})', '(', 'len', '=', '1', 'cap', '=', '1', ')', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'DECIMAL_LITERAL', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION', 'PUNCTUATION']"
60, ([]uint8) (len=149 cap=149) {,"['([]', 'uint8', ')', '(', 'len', '=', '149', 'cap', '=', '149', ')', '{']","['PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'DECIMAL_LITERAL', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION', 'PUNCTUATION']"
61,"  00000000  7b 22 66 72 6f 6d 49 64  22 3a 35 2c 22 74 6f 49  |{""fromId"":5,""toI|","['0', '0', '0', '0', '0', '0', '0', '0', '7', 'b', '22', '66', '72', '6', 'f', '6', 'd', '49', '64', '22', '3', 'a', '35', '2', 'c', '22', '74', '6', 'f', '49', '|{', '""fromId""', ':', '5', ',', 'toI', '|']","['OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'BITWISE_OPERATOR']"
62,"  00000010  64 22 3a 31 2c 22 74 79  70 65 22 3a 33 2c 22 70  |d"":1,""type"":3,""p|","['0', '0', '0', '0', '0', '01', '0', '64', '22', '3', 'a', '31', '2', 'c', '22', '74', '79', '70', '65', '22', '3', 'a', '33', '2', 'c', '22', '70', '|', 'd', '"":1,""', 'type', '"":3,""', 'p', '|']","['OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'BITWISE_OPERATOR', 'IDENTIFIER', 'STRING_LITERAL', 'KEYWORD', 'STRING_LITERAL', 'IDENTIFIER', 'BITWISE_OPERATOR']"
63,"  00000020  6f 73 74 49 64 22 3a 34  2c 22 63 6f 6d 6d 65 6e  |ostId"":4,""commen|","['0', '0', '0', '0', '0', '02', '0', '6', 'f', '73', '74', '49', '64', '22', '3', 'a', '34', '2', 'c', '22', '63', '6', 'f', '6', 'd', '6', 'd', '65', '6', 'e', '|', 'ostId', '"":4,""', 'commen', '|']","['OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'BITWISE_OPERATOR', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'BITWISE_OPERATOR']"
64,"  00000030  74 49 64 22 3a 34 39 2c  22 63 72 65 61 74 65 64  |tId"":49,""created|","['0', '0', '0', '0', '0', '03', '0', '74', '49', '64', '22', '3', 'a', '34', '39', '2', 'c', '22', '63', '72', '65', '61', '74', '65', '64', '|', 'tId', '"":49,""', 'created', '|']","['OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'BITWISE_OPERATOR', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'BITWISE_OPERATOR']"
65,"  00000040  54 69 6d 65 22 3a 31 34  36 33 31 36 31 37 33 36  |Time"":1463161736|","['0', '0', '0', '0', '0', '04', '0', '54', '69', '6', 'd', '65', '22', '3', 'a', '31', '34', '36', '33', '31', '36', '31', '37', '33', '36', '|', 'Time', ':', '1463161736', '|']","['OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'BITWISE_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'BITWISE_OPERATOR']"
66,"  00000050  2c 22 69 73 56 69 65 77  65 64 22 3a 66 61 6c 73  |,""isViewed"":fals|","['0', '0', '0', '0', '0', '05', '0', '2', 'c', '22', '69', '73', '56', '69', '65', '77', '65', '64', '22', '3', 'a', '66', '61', '6', 'c', '73', '|,', '""isViewed""', ':', 'fals', '|']","['OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'BITWISE_OPERATOR']"
67,"  00000060  65 2c 22 75 73 65 72 6e  61 6d 65 22 3a 22 53 74  |e,""username"":""Al|","['0', '0', '0', '0', '0', '06', '0', '65', '2', 'c', '22', '75', '73', '65', '72', '6', 'e', '61', '6', 'd', '65', '22', '3', 'a', '22', '53', '74', '|', 'e', ',', '""username""', ':', 'Al', '|']","['OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'BITWISE_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'BITWISE_OPERATOR']"
68,"  00000070  61 72 64 75 73 6b 22 2c  22 69 6d 61 67 65 22 3a  |exander"",""image"":|","['0', '0', '0', '0', '0', '07', '0', '61', '72', '64', '75', '73', '6', 'b', '22', '2', 'c', '22', '69', '6', 'd', '61', '67', '65', '22', '3', 'a', '|', 'exander', '"",""', 'image', ':|']","['OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'BITWISE_OPERATOR', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
69,"  00000080  22 4a 5a 49 66 48 70 38  69 2d 33 36 78 33 36 2e  |""JZIfHp8i-36x36.|","['0', '0', '0', '0', '0', '0', '80', '22', '4', 'a', '5', 'a', '49', '66', '48', '70', '38', '69', '2', 'd', '33', '36', '78', '33', '36', '2', 'e', '|', 'JZIfHp8i', '-', '36', 'x36', '.|']","['OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'BITWISE_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
70,"  00000090  70 6e 67 22 7d                                    |png""}|","['0', '0', '0', '0', '0', '0', '90', '70', '6', 'e', '67', '22', '7', 'd', '|', 'png', '}|']","['OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'BITWISE_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
71, },['}'],['PUNCTUATION']
72,},['}'],['PUNCTUATION']
73,"

What can I do?

EDIT:

This is what I did in the end but it feels like alot of unnecessary conversion.

","['What', 'can', 'I', 'do?', 'EDIT:', 'This', 'is', 'what', 'I', 'did', 'in', 'the', 'end', 'but', 'it', 'feels', 'like', 'alot', 'of', 'unnecessary', 'conversion.']","['WP', 'MD', 'PRP', 'VB', 'NNP', 'DT', 'VBZ', 'WP', 'PRP', 'VBD', 'IN', 'DT', 'NN', 'CC', 'PRP', 'VBZ', 'IN', 'NN', 'IN', 'JJ', 'NN']"
74,"func ByUserId(userId int64, pool *redis.Pool) ([]string, error) {","['func', 'ByUserId', '(', 'userId', 'int64', ',', 'pool', '*', 'redis', '.', 'Pool', ')', '([]', 'string', ',', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
75,"    key := fmt.Sprintf(""user:%d:notification"", userId)","['key', ':=', 'fmt.Sprintf(""user:%d:notification"", userId)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
76,    c := pool.Get(),"['c', ':=', 'pool.Get()']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
77,    defer c.Close(),"['defer', 'c.Close()']","['IDENTIFIER', 'FUNCTION_CALL']"
78,"    c.Send(""ZREVRANGE"", key, 0, -1)","['c.Send(""ZREVRANGE"", key, 0, -1)']",['FUNCTION_CALL']
79,    c.Flush(),['c.Flush()'],['FUNCTION_CALL']
80,"    reply, err := c.Receive()","['reply', ',', 'err', ':=', 'c.Receive()']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
81,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
82,"        return nil, nil","['return', 'nil', ',', 'nil']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
83,    },['}'],['PUNCTUATION']
84,"    arr, ok := reply.([]interface{})","['arr', ',', 'ok', ':=', 'reply', '.([]', 'interface', '{})']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
85,    if !ok {,"['if', '!', 'ok', '{']","['KEYWORD', 'LOGICAL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
86,"        return nil, err","['return', 'nil', ',', 'err']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
87,    },['}'],['PUNCTUATION']
88,    ss := []string{},"['ss', ':=', '[]', 'string', '{}']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
89,"    for _, v := range arr {","['for', '_', ',', 'v', ':=', 'range', 'arr', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
90,"        b, ok := v.([]byte)","['b', ',', 'ok', ':=', 'v', '.([]', 'byte', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
91,        if !ok {,"['if', '!', 'ok', '{']","['KEYWORD', 'LOGICAL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
92,"            return nil, nil","['return', 'nil', ',', 'nil']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
93,        },['}'],['PUNCTUATION']
94,"        ss = append(ss, string(b))","['ss', '=', 'append', '(', 'ss', ',', 'string', '(', 'b', '))']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
95,    },['}'],['PUNCTUATION']
96,"    return ss, nil","['return', 'ss', ',', 'nil']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
97,},['}'],['PUNCTUATION']
98,"

And on the handle:

","['And', 'on', 'the', 'handle:']","['CC', 'IN', 'DT', 'NN']"
99,"func notifications(w http.ResponseWriter, r *http.Request, _ httprouter.Params) error {","['func', 'notifications', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ',', '_', 'httprouter', '.', 'Params', ')', 'error', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
100,"    userId, err := user.LoggedIn(r)","['userId', ',', 'err', ':=', 'user.LoggedIn(r)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
101,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
102,        return unauthorized,"['return', 'unauthorized']","['KEYWORD', 'IDENTIFIER']"
103,    },['}'],['PUNCTUATION']
104,    jsonResp := make(map[string]interface{}),"['jsonResp', ':=', 'make', '(', 'map', '[', 'string', ']', 'interface', '{})']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
105,"    jsonResp[""notifications""], err = notification.ByUserId(userId, redisPool)","['jsonResp', '[', '""notifications""', '],', 'err', '=', 'notification.ByUserId(userId, redisPool)']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
106,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
107,        return err,"['return', 'err']","['KEYWORD', 'IDENTIFIER']"
108,    },['}'],['PUNCTUATION']
109,"    jsonResp[""success""] = true","['jsonResp', '[', '""success""', ']', '=', 'true']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'ASSIGNMENT_OPERATOR', 'BOOLEAN_LITERAL']"
110,"    b, err := json.Marshal(jsonResp)","['b', ',', 'err', ':=', 'json.Marshal(jsonResp)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
111,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
112,        return err,"['return', 'err']","['KEYWORD', 'IDENTIFIER']"
113,    },['}'],['PUNCTUATION']
114,    w.Write(b),['w.Write(b)'],['FUNCTION_CALL']
115,    return nil,"['return', 'nil']","['KEYWORD', 'IDENTIFIER']"
116,},['}'],['PUNCTUATION']
