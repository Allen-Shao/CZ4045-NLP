,text,token,annotation
0,type ModelB struct {,"['type', 'ModelB', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
1,"    MessageID          string   `datastore:""msg_id,noindex""`","['MessageID', 'string', 'datastore', ':', '""msg_id,noindex""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
2,"    CategoryIDs        []string `datastore:""cat_ids,noindex""`","['CategoryIDs', '[]', 'string', 'datastore', ':', '""cat_ids,noindex""']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
3,"    ListIDs            []string `datastore:""list_ids,noindex""`","['ListIDs', '[]', 'string', 'datastore', ':', '""list_ids,noindex""']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
4,"    DefaultListIDIndex int      `datastore:""default_list_id_index,noindex""`","['DefaultListIDIndex', 'int', 'datastore', ':', '""default_list_id_index,noindex""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
5,},['}'],['OPERATOR']
6,type ModelA struct {,"['type', 'ModelA', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
7,"    DateJoin          time.Time `datastore:""date_join,""`","['DateJoin', 'time', '.', 'Time', 'datastore', ':', '""date_join,""']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
8,"    Name              string    `datastore:""name,""`","['Name', 'string', 'datastore', ':', '""name,""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
9,"    OwnerSalutation   string    `datastore:""owner_salutation,noindex""`","['OwnerSalutation', 'string', 'datastore', ':', '""owner_salutation,noindex""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
10,"    OwnerEmailAddress string    `datastore:""owner_email_address,""`","['OwnerEmailAddress', 'string', 'datastore', ':', '""owner_email_address,""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
11,"    LogoURL           string    `datastore:""logo_url,noindex""`","['LogoURL', 'string', 'datastore', ':', '""logo_url,noindex""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
12,"    Messages          []ModelB  `datastore:""-""`","['Messages', '[]', 'ModelB', 'datastore', ':', '""-""']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
13,},['}'],['OPERATOR']
14,// Load is implemented for the PropertyLoaderSaver interface.,['// Load is implemented for the PropertyLoaderSaver interface.'],"['COMMENT', 'NN', 'VBZ', 'VBN', 'IN', 'DT', 'NNP', 'NN', '.']"
15,func (s *ModelA) Load(c <-chan datastore.Property) (err error) {,"['func', '(', 's', '*', 'ModelA', ')', 'Load', '(', 'c', '<-', 'chan', 'datastore', '.', 'Property', ')', '(', 'err', 'error', ')', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
16,"    f := make(chan datastore.Property, 32)","['f', ':=', 'make', '(', 'chan', 'datastore', '.', 'Property', ',', '32', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
17,"    errc := make(chan error, 1)","['errc', ':=', 'make', '(', 'chan', 'error', ',', '1', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
18,    defer func() {,"['defer', 'func', '()', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR', 'OPERATOR']"
19,        if err == nil {,"['if', 'err', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
20,            err = <-errc,"['err', '=', '<-', 'errc']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
21,        },['}'],['OPERATOR']
22,    }(),['}()'],['OPERATOR']
23,    go func() {,"['go', 'func', '()', '{']","['KEYWORD', 'KEYWORD', 'OPERATOR', 'OPERATOR']"
24,        defer close(f),"['defer', 'close', '(', 'f', ')']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
25,        for p := range c {,"['for', 'p', ':=', 'range', 'c', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
26,"            if p.Name == ""bm"" {","['if', 'p', '.', 'Name', '==', '""bm""', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
27,                var b ModelB,"['var', 'b', 'ModelB']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
28,"                err := loadLocalStructuredProperty(&b, []byte(p.Value.(string)))","['err', ':=', 'loadLocalStructuredProperty', '(&', 'b', ',', '[]', 'byte', '(', 'p', '.', 'Value', '.(', 'string', ')))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
29,                if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
30,                    errc <- err,"['errc', '<-', 'err']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
31,                    return,['return'],['KEYWORD']
32,                },['}'],['OPERATOR']
33,"                s.Messages = append(s.Messages, b)","['s', '.', 'Messages', '=', 'append', '(', 's', '.', 'Messages', ',', 'b', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
34,            } else {,"['}', 'else', '{']","['OPERATOR', 'KEYWORD', 'OPERATOR']"
35,                f <- p,"['f', '<-', 'p']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
36,            },['}'],['OPERATOR']
37,        },['}'],['OPERATOR']
38,        errc <- nil,"['errc', '<-', 'nil']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
39,    }(),['}()'],['OPERATOR']
40,"    return datastore.LoadStruct(s, f)","['return', 'datastore', '.', 'LoadStruct', '(', 's', ',', 'f', ')']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
41,},['}'],['OPERATOR']
