,text,token,annotation
0,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
1,import (,"['import', '(']","['KEYWORD', 'OPERATOR']"
2,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
3,"    ""log""","['""log""']",['STRING_LITERAL']
4,),[')'],['OPERATOR']
5,type Stmt struct {,"['type', 'Stmt', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
6,    Name  string,"['Name', 'string']","['IDENTIFIER', 'IDENTIFIER']"
7,    After []string,"['After', '[]', 'string']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
8,},['}'],['OPERATOR']
9,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
10,    stmts := []Stmt{,"['stmts', ':=', '[]', 'Stmt', '{']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
11,"        {Name: ""app"", After: []string{""app_user""}},","['{', 'Name', ':', '""app"", After: []string{""app_user""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
12,"        {Name: ""billingplan"", After: []string{}},","['{', 'Name', ':', '""billingplan""', ',', 'After', ':', '[]', 'string', '{}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
13,"        {Name: ""campaign"", After: []string{""app_user""}},","['{', 'Name', ':', '""campaign"", After: []string{""app_user""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
14,"        {Name: ""campaign_app"", After: []string{""campaign"", ""app""}},","['{', 'Name', ':', '""campaign_app"", After: []string{""campaign"", ""app""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
15,"        {Name: ""campaign_ip"", After: []string{""campaign"", ""ip""}},","['{', 'Name', ':', '""campaign_ip"", After: []string{""campaign"", ""ip""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
16,"        {Name: ""campaign_operator"", After: []string{""campaign"", ""operator""}},","['{', 'Name', ':', '""campaign_operator"", After: []string{""campaign"", ""operator""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
17,"        {Name: ""campaign_sponsor"", After: []string{""campaign"", ""sponsor""}},","['{', 'Name', ':', '""campaign_sponsor"", After: []string{""campaign"", ""sponsor""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
18,"        {Name: ""campaign_subscriberfilter"", After: []string{""campaign"", ""subscriber_filters""}},","['{', 'Name', ':', '""campaign_subscriberfilter"", After: []string{""campaign"", ""subscriber_filters""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
19,"        {Name: ""campaign_url"", After: []string{""campaign"", ""url""}},","['{', 'Name', ':', '""campaign_url"", After: []string{""campaign"", ""url""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
20,"        {Name: ""contentpartner"", After: []string{""app_user""}},","['{', 'Name', ':', '""contentpartner"", After: []string{""app_user""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
21,"        {Name: ""filter_criteria"", After: []string{""campaign"", ""subscriber_filters""}},","['{', 'Name', ':', '""filter_criteria"", After: []string{""campaign"", ""subscriber_filters""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
22,"        {Name: ""ip"", After: []string{""app_user""}},","['{', 'Name', ':', '""ip"", After: []string{""app_user""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
23,"        {Name: ""mobile_registered"", After: []string{""campaign"", ""app""}},","['{', 'Name', ':', '""mobile_registered"", After: []string{""campaign"", ""app""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
24,"        {Name: ""operator"", After: []string{}},","['{', 'Name', ':', '""operator""', ',', 'After', ':', '[]', 'string', '{}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
25,"        {Name: ""passwords"", After: []string{""app_user""}},","['{', 'Name', ':', '""passwords"", After: []string{""app_user""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
26,"        {Name: ""publish_package"", After: []string{}},","['{', 'Name', ':', '""publish_package""', ',', 'After', ':', '[]', 'string', '{}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
27,"        {Name: ""role"", After: []string{}},","['{', 'Name', ':', '""role""', ',', 'After', ':', '[]', 'string', '{}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
28,"        {Name: ""passwords"", After: []string{""app_user""}},","['{', 'Name', ':', '""passwords"", After: []string{""app_user""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
29,"        {Name: ""sponsor"", After: []string{""app_user""}},","['{', 'Name', ':', '""sponsor"", After: []string{""app_user""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
30,"        {Name: ""subscriber_dbs"", After: []string{}},","['{', 'Name', ':', '""subscriber_dbs""', ',', 'After', ':', '[]', 'string', '{}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
31,"        {Name: ""subscriber_filters"", After: []string{""subscriber_dbs""}},","['{', 'Name', ':', '""subscriber_filters"", After: []string{""subscriber_dbs""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
32,"        {Name: ""timezone"", After: []string{}},","['{', 'Name', ':', '""timezone""', ',', 'After', ':', '[]', 'string', '{}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
33,"        {Name: ""url"", After: []string{""app_user""}},","['{', 'Name', ':', '""url"", After: []string{""app_user""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
34,"        {Name: ""app_user"", After: []string{}},","['{', 'Name', ':', '""app_user""', ',', 'After', ':', '[]', 'string', '{}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
35,"        {Name: ""user_role"", After: []string{""app_user"", ""role""}},","['{', 'Name', ':', '""user_role"", After: []string{""app_user"", ""role""', '}},']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
36,    },['}'],['OPERATOR']
37,    g := make(graph),"['g', ':=', 'make', '(', 'graph', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
38,"    for _, s := range stmts {","['for', '_', ',', 's', ':=', 'range', 'stmts', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
39,        g[s.Name] = after(s.After),"['g', '[', 's', '.', 'Name', ']', '=', 'after', '(', 's', '.', 'After', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
40,    },['}'],['OPERATOR']
41,"    sorted, err := topoSort(g)","['sorted', ',', 'err', ':=', 'topoSort', '(', 'g', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
42,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
43,"        log.Fatalf(""could not sort: %v"", err)","['log', '.', 'Fatalf', '(', '""could not sort: %v""', ',', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
44,    },['}'],['OPERATOR']
45,"    for _, s := range sorted {","['for', '_', ',', 's', ':=', 'range', 'sorted', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
46,        fmt.Println(s),"['fmt', '.', 'Println', '(', 's', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
47,    },['}'],['OPERATOR']
48,},['}'],['OPERATOR']
49,"func topoSort(g graph) ([]string, error) {","['func', 'topoSort', '(', 'g', 'graph', ')', '([]', 'string', ',', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
50,    sccs := tarjanSCC(g),"['sccs', ':=', 'tarjanSCC', '(', 'g', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
51,"    sorted := make([]string, len(sccs))","['sorted', ':=', 'make', '([]', 'string', ',', 'len', '(', 'sccs', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
52,"    for i, s := range sccs {","['for', 'i', ',', 's', ':=', 'range', 'sccs', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
53,        if len(s) != 1 {,"['if', 'len', '(', 's', ')', '!=', '1', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
54,"            return nil, fmt.Errorf(""found directed cycle: %q"", s)","['return', 'nil', ',', 'fmt', '.', 'Errorf', '(', '""found directed cycle: %q""', ',', 's', ')']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
55,        },['}'],['OPERATOR']
56,        sorted[i] = s[0],"['sorted', '[', 'i', ']', '=', 's', '[', '0', ']']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
57,    },['}'],['OPERATOR']
58,"    return sorted, nil","['return', 'sorted', ',', 'nil']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
59,},['}'],['OPERATOR']
60,// graph is an edge list representation of a directed graph.,['// graph is an edge list representation of a directed graph.'],"['COMMENT', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', '.']"
61,type graph map[string]set,"['type', 'graph', 'map', '[', 'string', ']', 'set']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
62,// set is an string set.,['// set is an string set.'],"['COMMENT', 'NN', 'VBZ', 'DT', 'NN', 'NN', '.']"
63,type set map[string]struct{},"['type', 'set', 'map', '[', 'string', ']', 'struct', '{}']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
64,func after(i []string) set {,"['func', 'after', '(', 'i', '[]', 'string', ')', 'set', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
65,    if len(i) == 0 {,"['if', 'len', '(', 'i', ')', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
66,        return nil,"['return', 'nil']","['KEYWORD', 'IDENTIFIER']"
67,    },['}'],['OPERATOR']
68,    s := make(set),"['s', ':=', 'make', '(', 'set', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
69,"    for _, v := range i {","['for', '_', ',', 'v', ':=', 'range', 'i', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
70,        s[v] = struct{}{},"['s', '[', 'v', ']', '=', 'struct', '{}{}']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
71,    },['}'],['OPERATOR']
72,    return s,"['return', 's']","['KEYWORD', 'IDENTIFIER']"
73,},['}'],['OPERATOR']
74,// tarjanSCC returns a the strongly connected components of the,['// tarjanSCC returns a the strongly connected components of the'],"['COMMENT', 'NN', 'VBZ', 'DT', 'DT', 'RB', 'JJ', 'NNS', 'IN', 'DT']"
75,// directed graph g.,['// directed graph g.'],"['COMMENT', 'VBN', 'NN', 'NN', '.']"
76,func tarjanSCC(g graph) [][]string {,"['func', 'tarjanSCC', '(', 'g', 'graph', ')', '[][]', 'string', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
77,    t := tarjan{,"['t', ':=', 'tarjan', '{']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
78,"        g: g,","['g', ':', 'g', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
79,"        indexTable: make(map[string]int, len(g)),","['indexTable', ':', 'make', '(', 'map', '[', 'string', ']', 'int', ',', 'len', '(', 'g', ')),']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
80,"        lowLink:    make(map[string]int, len(g)),","['lowLink', ':', 'make', '(', 'map', '[', 'string', ']', 'int', ',', 'len', '(', 'g', ')),']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
81,"        onStack:    make(map[string]bool, len(g)),","['onStack', ':', 'make', '(', 'map', '[', 'string', ']', 'bool', ',', 'len', '(', 'g', ')),']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
82,    },['}'],['OPERATOR']
83,    for v := range t.g {,"['for', 'v', ':=', 'range', 't', '.', 'g', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
84,        if t.indexTable[v] == 0 {,"['if', 't', '.', 'indexTable', '[', 'v', ']', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
85,            t.strongconnect(v),"['t', '.', 'strongconnect', '(', 'v', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
86,        },['}'],['OPERATOR']
87,    },['}'],['OPERATOR']
88,    return t.sccs,"['return', 't', '.', 'sccs']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
89,},['}'],['OPERATOR']
90,// tarjan implements Tarjan's strongly connected component finding,"[""// tarjan implements Tarjan's strongly connected component finding""]","['COMMENT', 'NN', 'NNS', 'NNP', 'POS', 'RB', 'VBN', 'NN', 'VBG']"
91,// algorithm. The implementation is from the pseudocode at,['// algorithm. The implementation is from the pseudocode at'],"['COMMENT', 'NN', '.', 'DT', 'NN', 'VBZ', 'IN', 'DT', 'NN', 'IN']"
92,//,['//'],['COMMENT']
93,// http://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm,['// http://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm'],"['COMMENT', 'NN', ':', 'NN', 'NN', 'CD']"
94,//,['//'],['COMMENT']
95,type tarjan struct {,"['type', 'tarjan', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
96,    g graph,"['g', 'graph']","['IDENTIFIER', 'IDENTIFIER']"
97,    index      int,"['index', 'int']","['IDENTIFIER', 'IDENTIFIER']"
98,    indexTable map[string]int,"['indexTable', 'map', '[', 'string', ']', 'int']","['IDENTIFIER', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
99,    lowLink    map[string]int,"['lowLink', 'map', '[', 'string', ']', 'int']","['IDENTIFIER', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
100,    onStack    map[string]bool,"['onStack', 'map', '[', 'string', ']', 'bool']","['IDENTIFIER', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
101,    stack []string,"['stack', '[]', 'string']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
102,    sccs [][]string,"['sccs', '[][]', 'string']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
103,},['}'],['OPERATOR']
104,// strongconnect is the strongconnect function described in the,['// strongconnect is the strongconnect function described in the'],"['COMMENT', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'VBN', 'IN', 'DT']"
105,// wikipedia article.,['// wikipedia article.'],"['COMMENT', 'JJ', 'NN', '.']"
106,func (t *tarjan) strongconnect(v string) {,"['func', '(', 't', '*', 'tarjan', ')', 'strongconnect', '(', 'v', 'string', ')', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
107,    // Set the depth index for v to the smallest unused index.,['// Set the depth index for v to the smallest unused index.'],"['COMMENT', 'NNP', 'DT', 'NN', 'NN', 'IN', 'NN', 'TO', 'DT', 'JJS', 'JJ', 'NN', '.']"
108,    t.index++,"['t', '.', 'index', '++']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
109,    t.indexTable[v] = t.index,"['t', '.', 'indexTable', '[', 'v', ']', '=', 't', '.', 'index']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
110,    t.lowLink[v] = t.index,"['t', '.', 'lowLink', '[', 'v', ']', '=', 't', '.', 'index']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
111,"    t.stack = append(t.stack, v)","['t', '.', 'stack', '=', 'append', '(', 't', '.', 'stack', ',', 'v', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
112,    t.onStack[v] = true,"['t', '.', 'onStack', '[', 'v', ']', '=', 'true']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
113,    // Consider successors of v.,['// Consider successors of v.'],"['COMMENT', 'VB', 'NNS', 'IN', 'NN', '.']"
114,    for w := range t.g[v] {,"['for', 'w', ':=', 'range', 't', '.', 'g', '[', 'v', ']', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
115,        if t.indexTable[w] == 0 {,"['if', 't', '.', 'indexTable', '[', 'w', ']', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
116,            // Successor w has not yet been visited; recur on it.,['// Successor w has not yet been visited; recur on it.'],"['COMMENT', 'NNP', 'NN', 'VBZ', 'RB', 'RB', 'VBN', 'VBN', ':', 'VB', 'IN', 'PRP', '.']"
117,            t.strongconnect(w),"['t', '.', 'strongconnect', '(', 'w', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
118,"            t.lowLink[v] = min(t.lowLink[v], t.lowLink[w])","['t', '.', 'lowLink', '[', 'v', ']', '=', 'min', '(', 't', '.', 'lowLink', '[', 'v', '],', 't', '.', 'lowLink', '[', 'w', '])']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
119,        } else if t.onStack[w] {,"['}', 'else', 'if', 't', '.', 'onStack', '[', 'w', ']', '{']","['OPERATOR', 'KEYWORD', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
120,            // Successor w is in stack s and hence in the current SCC.,['// Successor w is in stack s and hence in the current SCC.'],"['COMMENT', 'NNP', 'NN', 'VBZ', 'IN', 'NN', 'NN', 'CC', 'NN', 'IN', 'DT', 'JJ', 'NNP', '.']"
121,"            t.lowLink[v] = min(t.lowLink[v], t.indexTable[w])","['t', '.', 'lowLink', '[', 'v', ']', '=', 'min', '(', 't', '.', 'lowLink', '[', 'v', '],', 't', '.', 'indexTable', '[', 'w', '])']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
122,        },['}'],['OPERATOR']
123,    },['}'],['OPERATOR']
124,"    // If v is a root node, pop the stack and generate an SCC.","['// If v is a root node, pop the stack and generate an SCC.']","['COMMENT', 'IN', 'NN', 'VBZ', 'DT', 'NN', 'NN', ',', 'VBP', 'DT', 'NN', 'CC', 'VB', 'DT', 'NNP', '.']"
125,    if t.lowLink[v] == t.indexTable[v] {,"['if', 't', '.', 'lowLink', '[', 'v', ']', '==', 't', '.', 'indexTable', '[', 'v', ']', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
126,        // Start a new strongly connected component.,['// Start a new strongly connected component.'],"['COMMENT', 'VB', 'DT', 'JJ', 'RB', 'VBN', 'NN', '.']"
127,        var (,"['var', '(']","['KEYWORD', 'OPERATOR']"
128,            scc []string,"['scc', '[]', 'string']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
129,            w   string,"['w', 'string']","['IDENTIFIER', 'IDENTIFIER']"
130,        ),[')'],['OPERATOR']
131,        for {,"['for', '{']","['KEYWORD', 'OPERATOR']"
132,"            w, t.stack = t.stack[len(t.stack)-1], t.stack[:len(t.stack)-1]","['w', ',', 't', '.', 'stack', '=', 't', '.', 'stack', '[', 'len', '(', 't', '.', 'stack', ')-', '1', '],', 't', '.', 'stack', '[:', 'len', '(', 't', '.', 'stack', ')-', '1', ']']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
133,            t.onStack[w] = false,"['t', '.', 'onStack', '[', 'w', ']', '=', 'false']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
134,            // Add w to current strongly connected component.,['// Add w to current strongly connected component.'],"['COMMENT', 'NNP', 'VBP', 'TO', 'JJ', 'RB', 'VBN', 'NN', '.']"
135,"            scc = append(scc, w)","['scc', '=', 'append', '(', 'scc', ',', 'w', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
136,            if w == v {,"['if', 'w', '==', 'v', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
137,                break,['break'],['KEYWORD']
138,            },['}'],['OPERATOR']
139,        },['}'],['OPERATOR']
140,        // Output the current strongly connected component.,['// Output the current strongly connected component.'],"['COMMENT', 'IN', 'DT', 'JJ', 'RB', 'VBN', 'NN', '.']"
141,"        t.sccs = append(t.sccs, scc)","['t', '.', 'sccs', '=', 'append', '(', 't', '.', 'sccs', ',', 'scc', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
142,    },['}'],['OPERATOR']
143,},['}'],['OPERATOR']
144,"func min(a, b int) int {","['func', 'min', '(', 'a', ',', 'b', 'int', ')', 'int', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
145,    if a < b {,"['if', 'a', '<', 'b', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
146,        return a,"['return', 'a']","['KEYWORD', 'IDENTIFIER']"
147,    },['}'],['OPERATOR']
148,    return b,"['return', 'b']","['KEYWORD', 'IDENTIFIER']"
149,},['}'],['OPERATOR']
