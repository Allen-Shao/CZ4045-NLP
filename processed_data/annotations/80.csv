,text,token,annotation
0,package main,"['package', 'main']","['keyword', 'identifier']"
1,import (,"['import', '(']","['keyword', 'operator']"
2,"    ""fmt""","['""fmt""']",['string_literal']
3,"    ""log""","['""log""']",['string_literal']
4,),[')'],['operator']
5,type Stmt struct {,"['type', 'Stmt', 'struct', '{']","['keyword', 'identifier', 'keyword', 'operator']"
6,    Name  string,"['Name', 'string']","['identifier', 'identifier']"
7,    After []string,"['After', '[]', 'string']","['identifier', 'operator', 'identifier']"
8,},['}'],['operator']
9,func main() {,"['func', 'main', '()', '{']","['keyword', 'identifier', 'operator', 'operator']"
10,    stmts := []Stmt{,"['stmts', ':=', '[]', 'Stmt', '{']","['identifier', 'operator', 'operator', 'identifier', 'operator']"
11,"        {Name: ""app"", After: []string{""app_user""}},","['{', 'Name', ':', '""app"", After: []string{""app_user""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
12,"        {Name: ""billingplan"", After: []string{}},","['{', 'Name', ':', '""billingplan""', ',', 'After', ':', '[]', 'string', '{}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator']"
13,"        {Name: ""campaign"", After: []string{""app_user""}},","['{', 'Name', ':', '""campaign"", After: []string{""app_user""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
14,"        {Name: ""campaign_app"", After: []string{""campaign"", ""app""}},","['{', 'Name', ':', '""campaign_app"", After: []string{""campaign"", ""app""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
15,"        {Name: ""campaign_ip"", After: []string{""campaign"", ""ip""}},","['{', 'Name', ':', '""campaign_ip"", After: []string{""campaign"", ""ip""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
16,"        {Name: ""campaign_operator"", After: []string{""campaign"", ""operator""}},","['{', 'Name', ':', '""campaign_operator"", After: []string{""campaign"", ""operator""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
17,"        {Name: ""campaign_sponsor"", After: []string{""campaign"", ""sponsor""}},","['{', 'Name', ':', '""campaign_sponsor"", After: []string{""campaign"", ""sponsor""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
18,"        {Name: ""campaign_subscriberfilter"", After: []string{""campaign"", ""subscriber_filters""}},","['{', 'Name', ':', '""campaign_subscriberfilter"", After: []string{""campaign"", ""subscriber_filters""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
19,"        {Name: ""campaign_url"", After: []string{""campaign"", ""url""}},","['{', 'Name', ':', '""campaign_url"", After: []string{""campaign"", ""url""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
20,"        {Name: ""contentpartner"", After: []string{""app_user""}},","['{', 'Name', ':', '""contentpartner"", After: []string{""app_user""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
21,"        {Name: ""filter_criteria"", After: []string{""campaign"", ""subscriber_filters""}},","['{', 'Name', ':', '""filter_criteria"", After: []string{""campaign"", ""subscriber_filters""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
22,"        {Name: ""ip"", After: []string{""app_user""}},","['{', 'Name', ':', '""ip"", After: []string{""app_user""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
23,"        {Name: ""mobile_registered"", After: []string{""campaign"", ""app""}},","['{', 'Name', ':', '""mobile_registered"", After: []string{""campaign"", ""app""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
24,"        {Name: ""operator"", After: []string{}},","['{', 'Name', ':', '""operator""', ',', 'After', ':', '[]', 'string', '{}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator']"
25,"        {Name: ""passwords"", After: []string{""app_user""}},","['{', 'Name', ':', '""passwords"", After: []string{""app_user""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
26,"        {Name: ""publish_package"", After: []string{}},","['{', 'Name', ':', '""publish_package""', ',', 'After', ':', '[]', 'string', '{}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator']"
27,"        {Name: ""role"", After: []string{}},","['{', 'Name', ':', '""role""', ',', 'After', ':', '[]', 'string', '{}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator']"
28,"        {Name: ""passwords"", After: []string{""app_user""}},","['{', 'Name', ':', '""passwords"", After: []string{""app_user""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
29,"        {Name: ""sponsor"", After: []string{""app_user""}},","['{', 'Name', ':', '""sponsor"", After: []string{""app_user""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
30,"        {Name: ""subscriber_dbs"", After: []string{}},","['{', 'Name', ':', '""subscriber_dbs""', ',', 'After', ':', '[]', 'string', '{}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator']"
31,"        {Name: ""subscriber_filters"", After: []string{""subscriber_dbs""}},","['{', 'Name', ':', '""subscriber_filters"", After: []string{""subscriber_dbs""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
32,"        {Name: ""timezone"", After: []string{}},","['{', 'Name', ':', '""timezone""', ',', 'After', ':', '[]', 'string', '{}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator']"
33,"        {Name: ""url"", After: []string{""app_user""}},","['{', 'Name', ':', '""url"", After: []string{""app_user""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
34,"        {Name: ""app_user"", After: []string{}},","['{', 'Name', ':', '""app_user""', ',', 'After', ':', '[]', 'string', '{}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator']"
35,"        {Name: ""user_role"", After: []string{""app_user"", ""role""}},","['{', 'Name', ':', '""user_role"", After: []string{""app_user"", ""role""', '}},']","['operator', 'identifier', 'operator', 'string_literal', 'operator']"
36,    },['}'],['operator']
37,    g := make(graph),"['g', ':=', 'make', '(', 'graph', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
38,"    for _, s := range stmts {","['for', '_', ',', 's', ':=', 'range', 'stmts', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'keyword', 'identifier', 'operator']"
39,        g[s.Name] = after(s.After),"['g', '[', 's', '.', 'Name', ']', '=', 'after', '(', 's', '.', 'After', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
40,    },['}'],['operator']
41,"    sorted, err := topoSort(g)","['sorted', ',', 'err', ':=', 'topoSort', '(', 'g', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
42,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator']"
43,"        log.Fatalf(""could not sort: %v"", err)","['log', '.', 'Fatalf', '(', '""could not sort: %v""', ',', 'err', ')']","['identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator']"
44,    },['}'],['operator']
45,"    for _, s := range sorted {","['for', '_', ',', 's', ':=', 'range', 'sorted', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'keyword', 'identifier', 'operator']"
46,        fmt.Println(s),"['fmt', '.', 'Println', '(', 's', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
47,    },['}'],['operator']
48,},['}'],['operator']
49,"func topoSort(g graph) ([]string, error) {","['func', 'topoSort', '(', 'g', 'graph', ')', '([]', 'string', ',', 'error', ')', '{']","['keyword', 'identifier', 'operator', 'identifier', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator']"
50,    sccs := tarjanSCC(g),"['sccs', ':=', 'tarjanSCC', '(', 'g', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
51,"    sorted := make([]string, len(sccs))","['sorted', ':=', 'make', '([]', 'string', ',', 'len', '(', 'sccs', '))']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
52,"    for i, s := range sccs {","['for', 'i', ',', 's', ':=', 'range', 'sccs', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'keyword', 'identifier', 'operator']"
53,        if len(s) != 1 {,"['if', 'len', '(', 's', ')', '!=', '1', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'operator', 'decimal_literal', 'operator']"
54,"            return nil, fmt.Errorf(""found directed cycle: %q"", s)","['return', 'nil', ',', 'fmt', '.', 'Errorf', '(', '""found directed cycle: %q""', ',', 's', ')']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator']"
55,        },['}'],['operator']
56,        sorted[i] = s[0],"['sorted', '[', 'i', ']', '=', 's', '[', '0', ']']","['identifier', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'decimal_literal', 'operator']"
57,    },['}'],['operator']
58,"    return sorted, nil","['return', 'sorted', ',', 'nil']","['keyword', 'identifier', 'operator', 'identifier']"
59,},['}'],['operator']
60,// graph is an edge list representation of a directed graph.,['// graph is an edge list representation of a directed graph.'],"['comment', 'graph', 'is', 'an', 'edge', 'list', 'representation', 'of', 'a', 'directed', 'graph', '.']"
61,type graph map[string]set,"['type', 'graph', 'map', '[', 'string', ']', 'set']","['keyword', 'identifier', 'keyword', 'operator', 'identifier', 'operator', 'identifier']"
62,// set is an string set.,['// set is an string set.'],"['comment', 'set', 'is', 'an', 'string', 'set', '.']"
63,type set map[string]struct{},"['type', 'set', 'map', '[', 'string', ']', 'struct', '{}']","['keyword', 'identifier', 'keyword', 'operator', 'identifier', 'operator', 'keyword', 'operator']"
64,func after(i []string) set {,"['func', 'after', '(', 'i', '[]', 'string', ')', 'set', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
65,    if len(i) == 0 {,"['if', 'len', '(', 'i', ')', '==', '0', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'operator', 'decimal_literal', 'operator']"
66,        return nil,"['return', 'nil']","['keyword', 'identifier']"
67,    },['}'],['operator']
68,    s := make(set),"['s', ':=', 'make', '(', 'set', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
69,"    for _, v := range i {","['for', '_', ',', 'v', ':=', 'range', 'i', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'keyword', 'identifier', 'operator']"
70,        s[v] = struct{}{},"['s', '[', 'v', ']', '=', 'struct', '{}{}']","['identifier', 'operator', 'identifier', 'operator', 'operator', 'keyword', 'operator']"
71,    },['}'],['operator']
72,    return s,"['return', 's']","['keyword', 'identifier']"
73,},['}'],['operator']
74,// tarjanSCC returns a the strongly connected components of the,['// tarjanSCC returns a the strongly connected components of the'],"['comment', 'tarjanSCC', 'returns', 'a', 'the', 'strongly', 'connected', 'components', 'of', 'the']"
75,// directed graph g.,['// directed graph g.'],"['comment', 'directed', 'graph', 'g', '.']"
76,func tarjanSCC(g graph) [][]string {,"['func', 'tarjanSCC', '(', 'g', 'graph', ')', '[][]', 'string', '{']","['keyword', 'identifier', 'operator', 'identifier', 'identifier', 'operator', 'operator', 'identifier', 'operator']"
77,    t := tarjan{,"['t', ':=', 'tarjan', '{']","['identifier', 'operator', 'identifier', 'operator']"
78,"        g: g,","['g', ':', 'g', ',']","['identifier', 'operator', 'identifier', 'operator']"
79,"        indexTable: make(map[string]int, len(g)),","['indexTable', ':', 'make', '(', 'map', '[', 'string', ']', 'int', ',', 'len', '(', 'g', ')),']","['identifier', 'operator', 'identifier', 'operator', 'keyword', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
80,"        lowLink:    make(map[string]int, len(g)),","['lowLink', ':', 'make', '(', 'map', '[', 'string', ']', 'int', ',', 'len', '(', 'g', ')),']","['identifier', 'operator', 'identifier', 'operator', 'keyword', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
81,"        onStack:    make(map[string]bool, len(g)),","['onStack', ':', 'make', '(', 'map', '[', 'string', ']', 'bool', ',', 'len', '(', 'g', ')),']","['identifier', 'operator', 'identifier', 'operator', 'keyword', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
82,    },['}'],['operator']
83,    for v := range t.g {,"['for', 'v', ':=', 'range', 't', '.', 'g', '{']","['keyword', 'identifier', 'operator', 'keyword', 'identifier', 'operator', 'identifier', 'operator']"
84,        if t.indexTable[v] == 0 {,"['if', 't', '.', 'indexTable', '[', 'v', ']', '==', '0', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator', 'decimal_literal', 'operator']"
85,            t.strongconnect(v),"['t', '.', 'strongconnect', '(', 'v', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
86,        },['}'],['operator']
87,    },['}'],['operator']
88,    return t.sccs,"['return', 't', '.', 'sccs']","['keyword', 'identifier', 'operator', 'identifier']"
89,},['}'],['operator']
90,// tarjan implements Tarjan's strongly connected component finding,"[""// tarjan implements Tarjan's strongly connected component finding""]","['comment', 'tarjan', 'implements', 'Tarjan', ""'s"", 'strongly', 'connected', 'component', 'finding']"
91,// algorithm. The implementation is from the pseudocode at,['// algorithm. The implementation is from the pseudocode at'],"['comment', 'algorithm', '.', 'The', 'implementation', 'is', 'from', 'the', 'pseudocode', 'at']"
92,//,['//'],['comment']
93,// http://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm,['// http://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm'],"['comment', 'http', ':', 'en.wikipedia.org/wiki/Tarjan', '%', '27s_strongly_connected_components_algorithm']"
94,//,['//'],['comment']
95,type tarjan struct {,"['type', 'tarjan', 'struct', '{']","['keyword', 'identifier', 'keyword', 'operator']"
96,    g graph,"['g', 'graph']","['identifier', 'identifier']"
97,    index      int,"['index', 'int']","['identifier', 'identifier']"
98,    indexTable map[string]int,"['indexTable', 'map', '[', 'string', ']', 'int']","['identifier', 'keyword', 'operator', 'identifier', 'operator', 'identifier']"
99,    lowLink    map[string]int,"['lowLink', 'map', '[', 'string', ']', 'int']","['identifier', 'keyword', 'operator', 'identifier', 'operator', 'identifier']"
100,    onStack    map[string]bool,"['onStack', 'map', '[', 'string', ']', 'bool']","['identifier', 'keyword', 'operator', 'identifier', 'operator', 'identifier']"
101,    stack []string,"['stack', '[]', 'string']","['identifier', 'operator', 'identifier']"
102,    sccs [][]string,"['sccs', '[][]', 'string']","['identifier', 'operator', 'identifier']"
103,},['}'],['operator']
104,// strongconnect is the strongconnect function described in the,['// strongconnect is the strongconnect function described in the'],"['comment', 'strongconnect', 'is', 'the', 'strongconnect', 'function', 'described', 'in', 'the']"
105,// wikipedia article.,['// wikipedia article.'],"['comment', 'wikipedia', 'article', '.']"
106,func (t *tarjan) strongconnect(v string) {,"['func', '(', 't', '*', 'tarjan', ')', 'strongconnect', '(', 'v', 'string', ')', '{']","['keyword', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'identifier', 'operator', 'operator']"
107,    // Set the depth index for v to the smallest unused index.,['// Set the depth index for v to the smallest unused index.'],"['comment', 'Set', 'the', 'depth', 'index', 'for', 'v', 'to', 'the', 'smallest', 'unused', 'index', '.']"
108,    t.index++,"['t', '.', 'index', '++']","['identifier', 'operator', 'identifier', 'operator']"
109,    t.indexTable[v] = t.index,"['t', '.', 'indexTable', '[', 'v', ']', '=', 't', '.', 'index']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'identifier']"
110,    t.lowLink[v] = t.index,"['t', '.', 'lowLink', '[', 'v', ']', '=', 't', '.', 'index']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'identifier']"
111,"    t.stack = append(t.stack, v)","['t', '.', 'stack', '=', 'append', '(', 't', '.', 'stack', ',', 'v', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
112,    t.onStack[v] = true,"['t', '.', 'onStack', '[', 'v', ']', '=', 'true']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator', 'identifier']"
113,    // Consider successors of v.,['// Consider successors of v.'],"['comment', 'Consider', 'successors', 'of', 'v', '.']"
114,    for w := range t.g[v] {,"['for', 'w', ':=', 'range', 't', '.', 'g', '[', 'v', ']', '{']","['keyword', 'identifier', 'operator', 'keyword', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator']"
115,        if t.indexTable[w] == 0 {,"['if', 't', '.', 'indexTable', '[', 'w', ']', '==', '0', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator', 'decimal_literal', 'operator']"
116,            // Successor w has not yet been visited; recur on it.,['// Successor w has not yet been visited; recur on it.'],"['comment', 'Successor', 'w', 'has', 'not', 'yet', 'been', 'visited', ';', 'recur', 'on', 'it', '.']"
117,            t.strongconnect(w),"['t', '.', 'strongconnect', '(', 'w', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
118,"            t.lowLink[v] = min(t.lowLink[v], t.lowLink[w])","['t', '.', 'lowLink', '[', 'v', ']', '=', 'min', '(', 't', '.', 'lowLink', '[', 'v', '],', 't', '.', 'lowLink', '[', 'w', '])']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
119,        } else if t.onStack[w] {,"['}', 'else', 'if', 't', '.', 'onStack', '[', 'w', ']', '{']","['operator', 'keyword', 'keyword', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator']"
120,            // Successor w is in stack s and hence in the current SCC.,['// Successor w is in stack s and hence in the current SCC.'],"['comment', 'Successor', 'w', 'is', 'in', 'stack', 's', 'and', 'hence', 'in', 'the', 'current', 'SCC', '.']"
121,"            t.lowLink[v] = min(t.lowLink[v], t.indexTable[w])","['t', '.', 'lowLink', '[', 'v', ']', '=', 'min', '(', 't', '.', 'lowLink', '[', 'v', '],', 't', '.', 'indexTable', '[', 'w', '])']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
122,        },['}'],['operator']
123,    },['}'],['operator']
124,"    // If v is a root node, pop the stack and generate an SCC.","['// If v is a root node, pop the stack and generate an SCC.']","['comment', 'If', 'v', 'is', 'a', 'root', 'node', ',', 'pop', 'the', 'stack', 'and', 'generate', 'an', 'SCC', '.']"
125,    if t.lowLink[v] == t.indexTable[v] {,"['if', 't', '.', 'lowLink', '[', 'v', ']', '==', 't', '.', 'indexTable', '[', 'v', ']', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator']"
126,        // Start a new strongly connected component.,['// Start a new strongly connected component.'],"['comment', 'Start', 'a', 'new', 'strongly', 'connected', 'component', '.']"
127,        var (,"['var', '(']","['keyword', 'operator']"
128,            scc []string,"['scc', '[]', 'string']","['identifier', 'operator', 'identifier']"
129,            w   string,"['w', 'string']","['identifier', 'identifier']"
130,        ),[')'],['operator']
131,        for {,"['for', '{']","['keyword', 'operator']"
132,"            w, t.stack = t.stack[len(t.stack)-1], t.stack[:len(t.stack)-1]","['w', ',', 't', '.', 'stack', '=', 't', '.', 'stack', '[', 'len', '(', 't', '.', 'stack', ')-', '1', '],', 't', '.', 'stack', '[:', 'len', '(', 't', '.', 'stack', ')-', '1', ']']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'decimal_literal', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'decimal_literal', 'operator']"
133,            t.onStack[w] = false,"['t', '.', 'onStack', '[', 'w', ']', '=', 'false']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator', 'identifier']"
134,            // Add w to current strongly connected component.,['// Add w to current strongly connected component.'],"['comment', 'Add', 'w', 'to', 'current', 'strongly', 'connected', 'component', '.']"
135,"            scc = append(scc, w)","['scc', '=', 'append', '(', 'scc', ',', 'w', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
136,            if w == v {,"['if', 'w', '==', 'v', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator']"
137,                break,['break'],['keyword']
138,            },['}'],['operator']
139,        },['}'],['operator']
140,        // Output the current strongly connected component.,['// Output the current strongly connected component.'],"['comment', 'Output', 'the', 'current', 'strongly', 'connected', 'component', '.']"
141,"        t.sccs = append(t.sccs, scc)","['t', '.', 'sccs', '=', 'append', '(', 't', '.', 'sccs', ',', 'scc', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
142,    },['}'],['operator']
143,},['}'],['operator']
144,"func min(a, b int) int {","['func', 'min', '(', 'a', ',', 'b', 'int', ')', 'int', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'identifier', 'operator', 'identifier', 'operator']"
145,    if a < b {,"['if', 'a', '<', 'b', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator']"
146,        return a,"['return', 'a']","['keyword', 'identifier']"
147,    },['}'],['operator']
148,    return b,"['return', 'b']","['keyword', 'identifier']"
149,},['}'],['operator']
