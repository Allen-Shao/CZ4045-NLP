,text,token,annotation
0,"The following Golang test never exits. I suspect it has something to do with a channel deadlock but being a go-noob, I am not very certain.

","['The', 'following', 'Golang', 'test', 'never', 'exits.', 'I', 'suspect', 'it', 'has', 'something', 'to', 'do', 'with', 'a', 'channel', 'deadlock', 'but', 'being', 'a', 'go-noob,', 'I', 'am', 'not', 'very', 'certain.']","['DT', 'JJ', 'NNP', 'NN', 'RB', 'VBP', 'PRP', 'VBP', 'PRP', 'VBZ', 'NN', 'TO', 'VB', 'IN', 'DT', 'NN', 'NN', 'CC', 'VBG', 'DT', 'NN', 'PRP', 'VBP', 'RB', 'RB', 'JJ']"
1,"const userName = ""xxxxxxxxxxxx""","['const', 'userName', '=', '""xxxxxxxxxxxx""']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
2,func TestSynchroninze(t *testing.T) {,"['func', 'TestSynchroninze', '(', 't', '*', 'testing', '.', 'T', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
3,"    c, err := channel.New(github.ChannelName, authToken)","['c', ',', 'err', ':=', 'chan', 'nel.New(github.ChannelName, authToken)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'FUNCTION_CALL']"
4,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
5,"        t.Fatalf(""Could not create channel: %s"", err)","['t.Fatalf(""Could not create channel: %s"", err)']",['FUNCTION_CALL']
6,        return,['return'],['KEYWORD']
7,    },['}'],['PUNCTUATION']
8,    state := channel.NewState(nil),"['state', ':=', 'chan', 'nel.NewState(nil)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'FUNCTION_CALL']"
9,    ctx := context.Background(),"['ctx', ':=', 'context.Background()']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
10,"    ctx = context.WithValue(ctx, ""userId"", userName)","['ctx', '=', 'context.WithValue(ctx, ""userId"", userName)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
11,    user := api.User{},"['user', ':=', 'api', '.', 'User', '{}']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
12,"    output, errs := c.Synchronize(state, ctx)","['output', ',', 'errs', ':=', 'c.Synchronize(state, ctx)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
13,    if err = <-errs; err != nil {,"['if', 'err', '=', '<-', 'errs', ';', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'CHANNEL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
14,"        t.Fatalf(""Error performing synchronize: %s"", err)","['t.Fatalf(""Error performing synchronize: %s"", err)']",['FUNCTION_CALL']
15,        return,['return'],['KEYWORD']
16,    },['}'],['PUNCTUATION']
17,    for o := range output {,"['for', 'o', ':=', 'range', 'output', '{']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
18,        switch oo := o.Data.(type) {,"['switch', 'oo', ':=', 'o', '.', 'Data', '.(', 'type', ')', '{']","['IDENTIFIER', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'PUNCTUATION', 'PUNCTUATION']"
19,        case api.User:,"['case', 'api', '.', 'User', ':']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
20,            user = oo,"['user', '=', 'oo']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
21,"            glog.Infof(""we have a USER %s\n"", user)","['glog.Infof(""we have a USER %s\\n"", user)']",['FUNCTION_CALL']
22,        default:,"['default', ':']","['KEYWORD', 'PUNCTUATION']"
23,"            t.Errorf(""Encountered unexpected data type: %T"", oo)","['t.Errorf(""Encountered unexpected data type: %T"", oo)']",['FUNCTION_CALL']
24,        },['}'],['PUNCTUATION']
25,    },['}'],['PUNCTUATION']
26,},['}'],['PUNCTUATION']
27,"

Here are the methods being tested.

","['Here', 'are', 'the', 'methods', 'being', 'tested.']","['RB', 'VBP', 'DT', 'NNS', 'VBG', 'NN']"
28,type github struct {,"['type', 'github', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
29,    client *api.Client,"['client', '*', 'api', '.', 'Client']","['IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
30,},['}'],['PUNCTUATION']
31,func newImplementation(t auth.UserToken) implementation.Implementation {,"['func', 'newImplementation', '(', 't', 'auth', '.', 'UserToken', ')', 'implementation', '.', 'Implementation', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
32,    return &github{client: api.NewClient(t)},"['return', '&', 'github', '{', 'client', ':', 'api.NewClient(t)', '}']","['KEYWORD', 'BITWISE_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL', 'PUNCTUATION']"
33,},['}'],['PUNCTUATION']
34,// -------------------------------------------------------------------------------------,"['//', '-------------------------------------------------------------------------------------']","['COMMENT', 'NN']"
35,const (,"['const', '(']","['KEYWORD', 'PUNCTUATION']"
36,"    kLastUserFetch = ""lastUserFetch""","['kLastUserFetch', '=', '""lastUserFetch""']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
37,),[')'],['PUNCTUATION']
38,"type synchronizeFunc func(implementation.MutableState, chan *implementation.Output, context.Context) error","['type', 'synchronizeFunc', 'func', '(', 'implementation', '.', 'MutableState', ',', 'chan', '*', 'implementation', '.', 'Output', ',', 'context', '.', 'Context', ')', 'error']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
39,// -------------------------------------------------------------------------------------,"['//', '-------------------------------------------------------------------------------------']","['COMMENT', 'NN']"
40,"    func (g *github) Synchronize(state implementation.MutableState, ctx context.Context) (<-chan *implementation.Output, <-chan error) {","['func', '(', 'g', '*', 'github', ')', 'Synchronize', '(', 'state', 'implementation', '.', 'MutableState', ',', 'ctx', 'context', '.', 'Context', ')', '(<-', 'chan', '*', 'implementation', '.', 'Output', ',', '<-', 'chan', 'error', ')', '{']","['KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'KEYWORD', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'CHANNEL_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
41,        output := make(chan *implementation.Output),"['output', ':=', 'make', '(', 'chan', '*', 'implementation', '.', 'Output', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
42,"        errors := make(chan error, 1) // buffer allows preflight errors","['errors', ':=', 'make', '(', 'chan', 'error', ',', '1', ')', '//', 'buffer', 'allows', 'preflight', 'errors']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'COMMENT', 'NN', 'VBZ', 'JJ', 'NNS']"
43,        // Close output channels once we're done,"['//', 'Close', 'output', 'channels', 'once', ""we're"", 'done']","['COMMENT', 'NNP', 'NN', 'NNS', 'RB', 'VBP', 'VBN']"
44,        defer func() {,"['defer', 'func', '()', '{']","['IDENTIFIER', 'KEYWORD', 'PUNCTUATION', 'PUNCTUATION']"
45,            go func() {,"['go', 'func', '()', '{']","['KEYWORD', 'KEYWORD', 'PUNCTUATION', 'PUNCTUATION']"
46,                // wg.Wait(),"['//', 'wg.Wait()']","['COMMENT', 'NN']"
47,                close(errors),"['close', '(', 'errors', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
48,                close(output),"['close', '(', 'output', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
49,            }(),['}()'],['PUNCTUATION']
50,        }(),['}()'],['PUNCTUATION']
51,"        err := g.fetchUser(state, output, ctx)","['err', ':=', 'g.fetchUser(state, output, ctx)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
52,        if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
53,            errors <- err,"['errors', '<-', 'err']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
54,        },['}'],['PUNCTUATION']
55,"        return output, errors","['return', 'output', ',', 'errors']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
56,    },['}'],['PUNCTUATION']
57,"func (g *github) fetchUser(state implementation.MutableState, output chan *implementation.Output, ctx context.Context) error {","['func', '(', 'g', '*', 'github', ')', 'fetchUser', '(', 'state', 'implementation', '.', 'MutableState', ',', 'output', 'chan', '*', 'implementation', '.', 'Output', ',', 'ctx', 'context', '.', 'Context', ')', 'error', '{']","['KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
58,    var err error,"['var', 'err', 'error']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
59,    var user = api.User{},"['var', 'user', '=', 'api', '.', 'User', '{}']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
60,"    userId, _ := ctx.Value(""userId"").(string)","['userId', ',', '_', ':=', 'ctx.Value(""userId"").(string)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
61,"    user, err = g.client.GetUser(userId, ctx.Done())","['user', ',', 'err', '=', 'g', '.', 'client.GetUser(userId, ctx.Done())']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL']"
62,    if err == nil {,"['if', 'err', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
63,"        glog.Info(""No error in fetchUser"")","['glog.Info(""No error in fetchUser"")']",['FUNCTION_CALL']
64,        output <- &implementation.Output{Data: user},"['output', '<-', '&', 'implementation', '.', 'Output', '{', 'Data', ':', 'user', '}']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
65,"        state.SetTime(kLastUserFetch, time.Now())","['state.SetTime(kLastUserFetch, time.Now())']",['FUNCTION_CALL']
66,    },['}'],['PUNCTUATION']
67,    return err,"['return', 'err']","['KEYWORD', 'IDENTIFIER']"
68,},['}'],['PUNCTUATION']
69,"func (c *Client) GetUser(id string, quit <-chan struct{}) (user User, err error) {","['func', '(', 'c', '*', 'Client', ')', 'GetUser', '(', 'id', 'string', ',', 'quit', '<-', 'chan', 'struct', '{})', '(', 'user', 'User', ',', 'err', 'error', ')', '{']","['KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'CHANNEL_OPERATOR', 'KEYWORD', 'KEYWORD', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
70,    // Execute request,"['//', 'Execute', 'request']","['COMMENT', 'NN', 'NN']"
71,    var data []byte,"['var', 'data', '[]', 'byte']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
72,"    data, err = c.get(""users/""+id, nil, quit)","['data', ',', 'err', '=', 'c.get(""users/""+id, nil, quit)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
73,"    glog.Infof(""USER DATA %s"", data)","['glog.Infof(""USER DATA %s"", data)']",['FUNCTION_CALL']
74,    // Parse response,"['//', 'Parse', 'response']","['COMMENT', 'NNP', 'NN']"
75,    if err == nil && len(data) > 0 {,"['if', 'err', '==', 'nil', '&&', 'len', '(', 'data', ')', '>', '0', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
76,"        err = json.Unmarshal(data, &user)","['err', '=', 'json.Unmarshal(data, &user)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
77,"        data, _ = json.Marshal(user)","['data', ',', '_', '=', 'json.Marshal(user)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
78,    },['}'],['PUNCTUATION']
79,    return,['return'],['KEYWORD']
80,},['}'],['PUNCTUATION']
81,"

Here is what I see in the console (most of the user details removed)

","['Here', 'is', 'what', 'I', 'see', 'in', 'the', 'console', '(most', 'of', 'the', 'user', 'details', 'removed)']","['RB', 'VBZ', 'WP', 'PRP', 'VBP', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN', 'NNS', 'VBP']"
82,I1228 13:25:05.291010   21313 client.go:177] GET https://api.github.com/users/xxxxxxxx,"['I1228', '13', ':', '25', ':', '05', '.', '291010', '21313', 'client', '.', 'go', ':', '177', ']', 'GET', 'https://api.github.com/users/xxxxxxxx']","['IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'DIRECTORY']"
83,"I1228 13:25:06.010085   21313 client.go:36] USER DATA {""login"":""xxxxxxxx"",""id"":00000000,""avatar_url"":""https://avatars.githubusercontent.com/u/0000000?v=3"",...}","['I1228', '13', ':', '25', ':', '06', '.', '01', '0', '0', '85', '21313', 'client', '.', 'go', ':', '36', ']', 'USER', 'DATA', '{""login"":""xxxxxxxx"",""id"":00000000,""avatar_url"":""https://avatars.githubusercontent.com/u/0000000?v=3"",...}']","['IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'DIRECTORY']"
84,I1228 13:25:06.010357   21313 github.go:90] No error in fetchUser,"['I1228', '13', ':', '25', ':', '06', '.', '01', '0357', '21313', 'github', '.', 'go', ':', '90', ']', 'No', 'error', 'in', 'fetchUser']","['IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER']"
85,"

==========EDIT=============

Here is the relevant portion of the api package.

","['==========EDIT=============', 'Here', 'is', 'the', 'relevant', 'portion', 'of', 'the', 'api', 'package.']","['NN', 'RB', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN']"
86,package api,"['package', 'api']","['KEYWORD', 'IDENTIFIER']"
87,type Client struct {,"['type', 'Client', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
88,    authToken auth.UserToken,"['authToken', 'auth', '.', 'UserToken']","['IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
89,    http      *http.Client,"['http', '*', 'http', '.', 'Client']","['IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
90,},['}'],['PUNCTUATION']
91,func NewClient(authToken auth.UserToken) *Client {,"['func', 'NewClient', '(', 'authToken', 'auth', '.', 'UserToken', ')', '*', 'Client', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
92,    return &Client{,"['return', '&', 'Client', '{']","['KEYWORD', 'BITWISE_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
93,"        authToken: authToken,","['authToken', ':', 'authToken', ',']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
94,"        http:      auth.NewClient(authToken),","['http', ':', 'auth.NewClient(authToken)', ',']","['IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL', 'PUNCTUATION']"
95,    },['}'],['PUNCTUATION']
96,},['}'],['PUNCTUATION']
97,// -------------------------------------------------------------------------------------,"['//', '-------------------------------------------------------------------------------------']","['COMMENT', 'NN']"
98,type User struct {,"['type', 'User', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
99,"    Id             int    `json:""id,omitempty""`","['Id', 'int', 'json', ':', '""id,omitempty""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
100,"    Username       string `json:""login,omitempty""`","['Username', 'string', 'json', ':', '""login,omitempty""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
101,"    Email          string `json:""email,omitempty""`","['Email', 'string', 'json', ':', '""email,omitempty""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
102,"    FullName       string `json:""name,omitempty""`","['FullName', 'string', 'json', ':', '""name,omitempty""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
103,"    ProfilePicture string `json:""avatar_url,omitempty""`","['ProfilePicture', 'string', 'json', ':', '""avatar_url,omitempty""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
104,"    Bio            string `json:""bio,omitempty""`","['Bio', 'string', 'json', ':', '""bio,omitempty""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
105,"    Website        string `json:""blog,omitempty""`","['Website', 'string', 'json', ':', '""blog,omitempty""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
106,"    Company        string `json:""company,omitempty""`","['Company', 'string', 'json', ':', '""company,omitempty""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
107,},['}'],['PUNCTUATION']
108,"

And the channel package

","['And', 'the', 'channel', 'package']","['CC', 'DT', 'NN', 'NN']"
109,package channel,"['package', 'chan', 'nel']","['KEYWORD', 'KEYWORD', 'IDENTIFIER']"
110,type Channel struct {,"['type', 'Channel', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
111,    implementation.Descriptor,"['implementation', '.', 'Descriptor']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
112,    imp implementation.Implementation,"['imp', 'implementation', '.', 'Implementation']","['IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
113,},['}'],['PUNCTUATION']
114,// New returns a channel implementation with a given name and auth token.,"['//', 'New', 'returns', 'a', 'channel', 'implementation', 'with', 'a', 'given', 'name', 'and', 'auth', 'token.']","['COMMENT', 'NNP', 'VBZ', 'DT', 'NN', 'NN', 'IN', 'DT', 'VBN', 'NN', 'CC', 'NN', 'NN']"
115,"func New(name string, token auth.UserToken) (*Channel, error) {","['func', 'New', '(', 'name', 'string', ',', 'token', 'auth', '.', 'UserToken', ')', '(*', 'Channel', ',', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
116,"    if desc, ok := implementation.Lookup(name); ok {","['if', 'desc', ',', 'ok', ':=', 'implementation.Lookup(name)', ';', 'ok', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
117,"        if imp := implementation.New(name, token); imp != nil {","['if', 'imp', ':=', 'implementation.New(name, token)', ';', 'imp', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
118,"            return &Channel{Descriptor: desc, imp: imp}, nil","['return', '&', 'Channel', '{', 'Descriptor', ':', 'desc', ',', 'imp', ':', 'imp', '},', 'nil']","['KEYWORD', 'BITWISE_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
119,        },['}'],['PUNCTUATION']
120,    },['}'],['PUNCTUATION']
121,"    return nil, ErrInvalidChannel","['return', 'nil', ',', 'ErrInvalidChannel']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
122,},['}'],['PUNCTUATION']
123,"

and the implementation package...

","['and', 'the', 'implementation', 'package...']","['CC', 'DT', 'NN', 'NN']"
124,package implementation,"['package', 'implementation']","['KEYWORD', 'IDENTIFIER']"
125,"import ""golang.org/x/net/context""","['import', '""golang.org/x/net/context""']","['KEYWORD', 'STRING_LITERAL']"
126,// -------------------------------------------------------------------------------------,"['//', '-------------------------------------------------------------------------------------']","['COMMENT', 'NN']"
127,// Implementation is the interface implemented by subpackages.,"['//', 'Implementation', 'is', 'the', 'interface', 'implemented', 'by', 'subpackages.']","['COMMENT', 'NN', 'VBZ', 'DT', 'NN', 'VBN', 'IN', 'NN']"
128,type Implementation interface {,"['type', 'Implementation', 'interface', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
129,    // Synchronize performs a synchronization using the given state. A context parameters,"['//', 'Synchronize', 'performs', 'a', 'synchronization', 'using', 'the', 'given', 'state.', 'A', 'context', 'parameters']","['COMMENT', 'VB', 'NNS', 'DT', 'NN', 'VBG', 'DT', 'VBN', 'VBP', 'DT', 'NN', 'NNS']"
130,    // is provided to provide cancellation as well as implementation-specific behaviors.,"['//', 'is', 'provided', 'to', 'provide', 'cancellation', 'as', 'well', 'as', 'implementation-specific', 'behaviors.']","['COMMENT', 'VBZ', 'VBN', 'TO', 'VB', 'NN', 'RB', 'RB', 'IN', 'JJ', 'NN']"
131,    //,['//'],['COMMENT']
132,"    // If a fatal error occurs (see package error definitions), the state can be discarded","['//', 'If', 'a', 'fatal', 'error', 'occurs', '(see', 'package', 'error', 'definitions),', 'the', 'state', 'can', 'be', 'discarded']","['COMMENT', 'IN', 'DT', 'JJ', 'NN', 'VBZ', 'JJ', 'NN', 'NN', 'VBD', 'DT', 'NN', 'MD', 'VB', 'VBN']"
133,    // to prevent the persistence of an invalid state.,"['//', 'to', 'prevent', 'the', 'persistence', 'of', 'an', 'invalid', 'state.']","['COMMENT', 'TO', 'VB', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN']"
134,"    Synchronize(state MutableState, ctx context.Context) (<-chan *Output, <-chan error)","['Synchronize', '(', 'state', 'MutableState', ',', 'ctx', 'context', '.', 'Context', ')', '(<-', 'chan', '*', 'Output', ',', '<-', 'chan', 'error', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'KEYWORD', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'CHANNEL_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
135,    // FetchDetails gets details for a given timeline item. Any changes to the TimelineItem,"['//', 'FetchDetails', 'gets', 'details', 'for', 'a', 'given', 'timeline', 'item.', 'Any', 'changes', 'to', 'the', 'TimelineItem']","['COMMENT', 'NNS', 'VBZ', 'NNS', 'IN', 'DT', 'VBN', 'NN', 'NN', 'NNP', 'NNS', 'TO', 'DT', 'NN']"
136,    // (including the Meta value) will be persisted.,"['//', '(including', 'the', 'Meta', 'value)', 'will', 'be', 'persisted.']","['COMMENT', 'VBG', 'DT', 'NNP', 'NN', 'MD', 'VB', 'JJ']"
137,"    FetchDetails(item *TimelineItem, ctx context.Context) (interface{}, error)","['FetchDetails', '(', 'item', '*', 'TimelineItem', ',', 'ctx', 'context', '.', 'Context', ')', '(', 'interface', '{},', 'error', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
138,},['}'],['PUNCTUATION']
139,"

======Edit #2=======

This is the original Synchronize method. I removed some details in my testing to try and simplify the problem. By removing a go func call, I believe I introduced a new problem which could be confusing things.

Here is the original Synchronize method. There are some things with Wait Groups and a function array containing a single function because this method will eventually be synchronizing multiple functions.

","['======Edit', '#2=======', 'This', 'is', 'the', 'original', 'Synchronize', 'method.', 'I', 'removed', 'some', 'details', 'in', 'my', 'testing', 'to', 'try', 'and', 'simplify', 'the', 'problem.', 'By', 'removing', 'a', 'go', 'func', 'call,', 'I', 'believe', 'I', 'introduced', 'a', 'new', 'problem', 'which', 'could', 'be', 'confusing', 'things.', 'Here', 'is', 'the', 'original', 'Synchronize', 'method.', 'There', 'are', 'some', 'things', 'with', 'Wait', 'Groups', 'and', 'a', 'function', 'array', 'containing', 'a', 'single', 'function', 'because', 'this', 'method', 'will', 'eventually', 'be', 'synchronizing', 'multiple', 'functions.']","['NN', 'NN', 'DT', 'VBZ', 'DT', 'JJ', 'NNP', 'NN', 'PRP', 'VBD', 'DT', 'NNS', 'IN', 'PRP$', 'NN', 'TO', 'VB', 'CC', 'VB', 'DT', 'NN', 'IN', 'VBG', 'DT', 'JJ', 'JJ', 'NN', 'PRP', 'VBP', 'PRP', 'VBD', 'DT', 'JJ', 'NN', 'WDT', 'MD', 'VB', 'VBG', 'NN', 'RB', 'VBZ', 'DT', 'JJ', 'NNP', 'NN', 'EX', 'VBP', 'DT', 'NNS', 'IN', 'NNP', 'NNP', 'CC', 'DT', 'NN', 'NN', 'VBG', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'MD', 'RB', 'VB', 'VBG', 'JJ', 'NN']"
140,"func (g *github) Synchronize(state implementation.MutableState, ctx context.Context) (<-chan *implementation.Output, <-chan error) {","['func', '(', 'g', '*', 'github', ')', 'Synchronize', '(', 'state', 'implementation', '.', 'MutableState', ',', 'ctx', 'context', '.', 'Context', ')', '(<-', 'chan', '*', 'implementation', '.', 'Output', ',', '<-', 'chan', 'error', ')', '{']","['KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'KEYWORD', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'CHANNEL_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
141,    wg := sync.WaitGroup{},"['wg', ':=', 'sync', '.', 'WaitGroup', '{}']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
142,    output := make(chan *implementation.Output),"['output', ':=', 'make', '(', 'chan', '*', 'implementation', '.', 'Output', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
143,"    errors := make(chan error, 1) // buffer allows preflight errors","['errors', ':=', 'make', '(', 'chan', 'error', ',', '1', ')', '//', 'buffer', 'allows', 'preflight', 'errors']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'COMMENT', 'NN', 'VBZ', 'JJ', 'NNS']"
144,    // Close output channels once we're done,"['//', 'Close', 'output', 'channels', 'once', ""we're"", 'done']","['COMMENT', 'NNP', 'NN', 'NNS', 'RB', 'VBP', 'VBN']"
145,    defer func() {,"['defer', 'func', '()', '{']","['IDENTIFIER', 'KEYWORD', 'PUNCTUATION', 'PUNCTUATION']"
146,        go func() {,"['go', 'func', '()', '{']","['KEYWORD', 'KEYWORD', 'PUNCTUATION', 'PUNCTUATION']"
147,            wg.Wait(),['wg.Wait()'],['FUNCTION_CALL']
148,            close(errors),"['close', '(', 'errors', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
149,            close(output),"['close', '(', 'output', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
150,        }(),['}()'],['PUNCTUATION']
151,    }(),['}()'],['PUNCTUATION']
152,    // Perform fetch functions in separate routines,"['//', 'Perform', 'fetch', 'functions', 'in', 'separate', 'routines']","['COMMENT', 'NNP', 'NN', 'NNS', 'IN', 'JJ', 'NNS']"
153,    funcs := []synchronizeFunc{,"['func', 's', ':=', '[]', 'synchronizeFunc', '{']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
154,"        g.fetchUser,","['g', '.', 'fetchUser', ',']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
155,    },['}'],['PUNCTUATION']
156,"    for _, f := range funcs {","['for', '_', ',', 'f', ':=', 'range', 'func', 's', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
157,        wg.Add(1),['wg.Add(1)'],['FUNCTION_CALL']
158,        go func(f synchronizeFunc) {,"['go', 'func', '(', 'f', 'synchronizeFunc', ')', '{']","['KEYWORD', 'KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
159,            defer wg.Done(),"['defer', 'wg.Done()']","['IDENTIFIER', 'FUNCTION_CALL']"
160,"            if err := f(state, output, ctx); err != nil {","['if', 'err', ':=', 'f', '(', 'state', ',', 'output', ',', 'ctx', ');', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
161,                errors <- err,"['errors', '<-', 'err']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
162,            },['}'],['PUNCTUATION']
163,        }(f),"['}(', 'f', ')']","['PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
164,    },['}'],['PUNCTUATION']
165,"    glog.Info(""after go sync..."")","['glog.Info(""after go sync..."")']",['FUNCTION_CALL']
166,"    return output, errors","['return', 'output', ',', 'errors']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
167,},['}'],['PUNCTUATION']
