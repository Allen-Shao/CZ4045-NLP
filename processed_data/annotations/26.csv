,text,token,annotation
0,"I'm trying to extract match data from whoscored.com. When I view the source on firefox, I find on line 816 a big json string with the data I want for that matchid. My goal is to eventually get this json.

In doing this, I've tried to download every page of https://www.whoscored.com/Matches/ID/Live where ID is the id of the match. I wrote a little Go program to GET request each ID up to a certain point:

","[""I'm"", 'trying', 'to', 'extract', 'match', 'data', 'from', 'whoscored.com.', 'When', 'I', 'view', 'the', 'source', 'on', 'firefox,', 'I', 'find', 'on', 'line', '816', 'a', 'big', 'json', 'string', 'with', 'the', 'data', 'I', 'want', 'for', 'that', 'matchid.', 'My', 'goal', 'is', 'to', 'eventually', 'get', 'this', 'json.', 'In', 'doing', 'this,', ""I've"", 'tried', 'to', 'download', 'every', 'page', 'of', 'https://www.whoscored.com/Matches/ID/Live', 'where', 'ID', 'is', 'the', 'id', 'of', 'the', 'match.', 'I', 'wrote', 'a', 'little', 'Go', 'program', 'to', 'GET', 'request', 'each', 'ID', 'up', 'to', 'a', 'certain', 'point:']","['NNP', 'VBG', 'TO', 'VB', 'VB', 'NNS', 'IN', 'NN', 'WRB', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'NN', 'PRP', 'VBP', 'IN', 'NN', 'CD', 'DT', 'JJ', 'NN', 'VBG', 'IN', 'DT', 'NNS', 'PRP', 'VBP', 'IN', 'DT', 'NN', 'NNP', 'NN', 'VBZ', 'TO', 'RB', 'VB', 'DT', 'NN', 'IN', 'VBG', 'JJ', 'NNP', 'VBD', 'TO', 'VB', 'DT', 'NN', 'IN', 'JJ', 'WRB', 'NNP', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN', 'PRP', 'VBD', 'DT', 'JJ', 'NNP', 'NN', 'TO', 'VB', 'VB', 'DT', 'NNP', 'RB', 'TO', 'DT', 'JJ', 'NN']"
1,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
2,import (,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
3,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
4,"    ""io/ioutil""","['""io/ioutil""']",['STRING_LITERAL']
5,"    ""net/http""","['""net/http""']",['STRING_LITERAL']
6,"    ""os""","['""os""']",['STRING_LITERAL']
7,),[')'],['PUNCTUATION']
8,// http://www.whoscored.com/Matches/614052/Live is the match for,"['//', 'http:www.whoscored.com/Matches/614052/Live', 'is', 'the', 'match', 'for']","['COMMENT', 'NN', 'VBZ', 'DT', 'NN', 'IN']"
9,// Eveton vs Manchester,"['//', 'Eveton', 'vs', 'Manchester']","['COMMENT', 'NNP', 'NN', 'NNP']"
10,"const match_address = ""http://www.whoscored.com/Matches/""","['const', 'match_address', '=', '""http://www.whoscored.com/Matches/""']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
11,// the max id we get,"['//', 'the', 'max', 'id', 'we', 'get']","['COMMENT', 'DT', 'NN', 'NN', 'PRP', 'VBP']"
12,const max_id = 300,"['const', 'max_id', '=', '300']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'DECIMAL_LITERAL']"
13,const num_workers = 10,"['const', 'num_workers', '=', '10']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'DECIMAL_LITERAL']"
14,// function that get the bytes of the match id from the website,"['//', 'function', 'that', 'get', 'the', 'bytes', 'of', 'the', 'match', 'id', 'from', 'the', 'website']","['COMMENT', 'NN', 'WDT', 'VBP', 'DT', 'NNS', 'IN', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN']"
15,func match_fetch(matchid int) {,"['func', 'match_fetch', '(', 'matchid', 'int', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
16,"    url := fmt.Sprintf(""%s%d/Live"", match_address, matchid)","['url', ':=', 'fmt.Sprintf(""%s%d/Live"", match_address, matchid)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
17,"    resp, err := http.Get(url)","['resp', ',', 'err', ':=', 'http.Get(url)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
18,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
19,        fmt.Println(err),['fmt.Println(err)'],['FUNCTION_CALL']
20,        return,['return'],['KEYWORD']
21,    },['}'],['PUNCTUATION']
22,"    // if we sucessfully got a response, store the","['//', 'if', 'we', 'sucessfully', 'got', 'a', 'response,', 'store', 'the']","['COMMENT', 'IN', 'PRP', 'RB', 'VBD', 'DT', 'NN', 'NN', 'DT']"
23,    // body in memory,"['//', 'body', 'in', 'memory']","['COMMENT', 'NN', 'IN', 'NN']"
24,    defer resp.Body.Close(),"['defer', 'resp', '.', 'Body.Close()']","['IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL']"
25,"    body, err := ioutil.ReadAll(resp.Body)","['body', ',', 'err', ':=', 'ioutil.ReadAll(resp.Body)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
26,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
27,        fmt.Println(err),['fmt.Println(err)'],['FUNCTION_CALL']
28,        return,['return'],['KEYWORD']
29,    },['}'],['PUNCTUATION']
30,    // write the body to memory,"['//', 'write', 'the', 'body', 'to', 'memory']","['COMMENT', 'VB', 'DT', 'NN', 'TO', 'NN']"
31,"    pwd, _ := os.Getwd()","['pwd', ',', '_', ':=', 'os.Getwd()']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
32,"    filepath := fmt.Sprintf(""%s/match_data/%d"", pwd, matchid)","['filepath', ':=', 'fmt.Sprintf(""%s/match_data/%d"", pwd, matchid)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
33,"    err = ioutil.WriteFile(filepath, body, 0644)","['err', '=', 'ioutil.WriteFile(filepath, body, 0644)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
34,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
35,        fmt.Println(err),['fmt.Println(err)'],['FUNCTION_CALL']
36,        return,['return'],['KEYWORD']
37,    },['}'],['PUNCTUATION']
38,},['}'],['PUNCTUATION']
39,"// data type to send to the workers,","['//', 'data', 'type', 'to', 'send', 'to', 'the', 'workers,']","['COMMENT', 'NNS', 'NN', 'TO', 'VB', 'TO', 'DT', 'NN']"
40,// last means this job is the last one,"['//', 'last', 'means', 'this', 'job', 'is', 'the', 'last', 'one']","['COMMENT', 'JJ', 'VBZ', 'DT', 'NN', 'VBZ', 'DT', 'JJ', 'NN']"
41,// matchid is the match id to be fetched,"['//', 'matchid', 'is', 'the', 'match', 'id', 'to', 'be', 'fetched']","['COMMENT', 'NN', 'VBZ', 'DT', 'NN', 'NN', 'TO', 'VB', 'VBN']"
42,// a matchid of -1 means don't fetch a match,"['//', 'a', 'matchid', 'of', '-1', 'means', ""don't"", 'fetch', 'a', 'match']","['COMMENT', 'DT', 'NN', 'IN', 'NN', 'NNS', 'VBP', 'VB', 'DT', 'NN']"
43,type job struct {,"['type', 'job', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
44,    last    bool,"['last', 'bool']","['IDENTIFIER', 'IDENTIFIER']"
45,    matchid int,"['matchid', 'int']","['IDENTIFIER', 'IDENTIFIER']"
46,},['}'],['PUNCTUATION']
47,func create_worker(jobs chan job) {,"['func', 'create_worker', '(', 'jobs', 'chan', 'job', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
48,    for {,"['for', '{']","['KEYWORD', 'PUNCTUATION']"
49,        next_job := <-jobs,"['next_job', ':=', '<-', 'jobs']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
50,        if next_job.matchid != -1 {,"['if', 'next_job', '.', 'matchid', '!=', '-', '1', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION']"
51,            match_fetch(next_job.matchid),"['match_fetch', '(', 'next_job', '.', 'matchid', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
52,        },['}'],['PUNCTUATION']
53,        if next_job.last {,"['if', 'next_job', '.', 'last', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
54,            return,['return'],['KEYWORD']
55,        },['}'],['PUNCTUATION']
56,    },['}'],['PUNCTUATION']
57,},['}'],['PUNCTUATION']
58,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
59,    // do the eveton match as a reference,"['//', 'do', 'the', 'eveton', 'match', 'as', 'a', 'reference']","['COMMENT', 'VB', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN']"
60,    match_fetch(614052),"['match_fetch', '(', '614052', ')']","['IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
61,    var joblist [num_workers]chan job,"['var', 'joblist', '[', 'num_workers', ']', 'chan', 'job']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'IDENTIFIER']"
62,    var v int,"['var', 'v', 'int']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
63,    for i := 0; i < num_workers; i++ {,"['for', 'i', ':=', '0', ';', 'i', '<', 'num_workers', ';', 'i', '++', '{']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'PUNCTUATION']"
64,        job_chan := make(chan job),"['job_chan', ':=', 'make', '(', 'chan', 'job', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
65,        joblist[i] = job_chan,"['joblist', '[', 'i', ']', '=', 'job_chan']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
66,        go create_worker(job_chan),"['go', 'create_worker', '(', 'job_chan', ')']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
67,    },['}'],['PUNCTUATION']
68,    for i := 0; i < max_id; i = i + num_workers {,"['for', 'i', ':=', '0', ';', 'i', '<', 'max_id', ';', 'i', '=', 'i', '+', 'num_workers', '{']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
69,"        for index, c := range joblist {","['for', 'index', ',', 'c', ':=', 'range', 'joblist', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
70,            if i+index < max_id {,"['if', 'i', '+', 'index', '<', 'max_id', '{']","['KEYWORD', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
71,                v = i + index,"['v', '=', 'i', '+', 'index']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER']"
72,            } else {,"['}', 'else', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
73,                v = -1,"['v', '=', '-', '1']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL']"
74,            },['}'],['PUNCTUATION']
75,"            c <- job{false, v}","['c', '<-', 'job', '{', 'false', ',', 'v', '}']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'BOOLEAN_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
76,        },['}'],['PUNCTUATION']
77,    },['}'],['PUNCTUATION']
78,"    for _, c := range joblist {","['for', '_', ',', 'c', ':=', 'range', 'joblist', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
79,"        c <- job{true, -1}","['c', '<-', 'job', '{', 'true', ',', '-', '1', '}']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'BOOLEAN_LITERAL', 'PUNCTUATION', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION']"
80,    },['}'],['PUNCTUATION']
81,},['}'],['PUNCTUATION']
82,"

The code seems to work in that it fills a directory called match_data with html. The problem is that this html is completely different to what I get in the browser! Here is the section which I think does this: (from the body of the GET request of http://www.whoscored.com/Matches/614052/Live.

","['The', 'code', 'seems', 'to', 'work', 'in', 'that', 'it', 'fills', 'a', 'directory', 'called', 'match_data', 'with', 'html.', 'The', 'problem', 'is', 'that', 'this', 'html', 'is', 'completely', 'different', 'to', 'what', 'I', 'get', 'in', 'the', 'browser!', 'Here', 'is', 'the', 'section', 'which', 'I', 'think', 'does', 'this:', '(from', 'the', 'body', 'of', 'the', 'GET', 'request', 'of', 'http://www.whoscored.com/Matches/614052/Live.']","['DT', 'NN', 'VBZ', 'TO', 'VB', 'IN', 'DT', 'PRP', 'VBZ', 'DT', 'NN', 'VBN', 'NN', 'IN', 'PDT', 'DT', 'NN', 'VBZ', 'IN', 'DT', 'NN', 'VBZ', 'RB', 'JJ', 'TO', 'WP', 'PRP', 'VBP', 'IN', 'DT', 'NN', 'RB', 'VBZ', 'DT', 'NN', 'WDT', 'PRP', 'VBP', 'VBZ', 'VB', 'IN', 'DT', 'NN', 'IN', 'DT', 'NNP', 'NN', 'IN', 'NN']"
83,(function() { ,"['(', 'func', 'tion', '()', '{']","['PUNCTUATION', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
84,"var z="""";var bfor (var i=0;i<b.length;i+=2){z=z+parseInt(b.substring(i, i+2), 16)+"","";}z = z.substring(0,z.length-1); eval(eval('String.fromCharCode('+z+')'));})();","['var', 'z', '=', '""""', ';', 'var', 'bfor', '(', 'var', 'i', '=', '0', ';', 'i', '<', 'b', '.', 'length', ';', 'i', '+=', '2', '){', 'z', '=', 'z', '+', 'parseInt', '(', 'b.substring(i, i+2), 16)+"","";}z = z.substring(0,z.length-1); eval(eval(\'String.fromCharCode(\'+z+\')\'));})()', ';']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL', 'PUNCTUATION', 'KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL', 'PUNCTUATION', 'KEYWORD', 'PUNCTUATION', 'KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL', 'PUNCTUATION']"
85,"

The reason I think this is the case is that the javascript in the page fetches and edits the DOM to what I see on view source. How can I get golang to run the javascript? Is there are library to do this? Better still, could I directly grab the JSON from the servers?
","['The', 'reason', 'I', 'think', 'this', 'is', 'the', 'case', 'is', 'that', 'the', 'javascript', 'in', 'the', 'page', 'fetches', 'and', 'edits', 'the', 'DOM', 'to', 'what', 'I', 'see', 'on', 'view', 'source.', 'How', 'can', 'I', 'get', 'golang', 'to', 'run', 'the', 'javascript?', 'Is', 'there', 'are', 'library', 'to', 'do', 'this?', 'Better', 'still,', 'could', 'I', 'directly', 'grab', 'the', 'JSON', 'from', 'the', 'servers?']","['DT', 'NN', 'PRP', 'VBP', 'DT', 'VBZ', 'DT', 'NN', 'VBZ', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'NNS', 'CC', 'VBZ', 'DT', 'NNP', 'TO', 'WP', 'PRP', 'VBP', 'IN', 'NN', 'VBP', 'WRB', 'MD', 'PRP', 'VB', 'NN', 'TO', 'VB', 'DT', 'NN', 'VBZ', 'EX', 'VBP', 'JJ', 'TO', 'VB', 'VB', 'NNP', 'NN', 'MD', 'PRP', 'RB', 'VBP', 'DT', 'NNP', 'IN', 'DT', 'NN']"
