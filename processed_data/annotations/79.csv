,text,token,annotation
0,"I'm trying to implement a very simple test function to verify results coming from my solutions for Euler problems.

In the following code I've created a map of slices where on the index 0, I call the function which return a integer and on the index 1, the result I expect from that function.

","[""I'm"", 'trying', 'to', 'implement', 'a', 'very', 'simple', 'test', 'function', 'to', 'verify', 'results', 'coming', 'from', 'my', 'solutions', 'for', 'Euler', 'problems.', 'In', 'the', 'following', 'code', ""I've"", 'created', 'a', 'map', 'of', 'slices', 'where', 'on', 'the', 'index', '0,', 'I', 'call', 'the', 'function', 'which', 'return', 'a', 'integer', 'and', 'on', 'the', 'index', '1,', 'the', 'result', 'I', 'expect', 'from', 'that', 'function.']","['NNP', 'VBG', 'TO', 'VB', 'DT', 'RB', 'JJ', 'NN', 'NN', 'TO', 'VB', 'NNS', 'VBG', 'IN', 'PRP$', 'NNS', 'IN', 'NNP', 'NN', 'IN', 'DT', 'JJ', 'NN', 'NNP', 'VBD', 'DT', 'NN', 'IN', 'NNS', 'WRB', 'IN', 'DT', 'NN', 'CD', 'PRP', 'VBP', 'DT', 'NN', 'WDT', 'VBP', 'DT', 'NN', 'CC', 'IN', 'DT', 'NN', 'CD', 'DT', 'NN', 'PRP', 'VBP', 'IN', 'DT', 'NN']"
1,package euler,"['package', 'euler']","['KEYWORD', 'IDENTIFIER']"
2,"import ""testing""","['import', '""testing""']","['KEYWORD', 'STRING_LITERAL']"
3,func TestEulers(t *testing.T) {,"['func', 'TestEulers', '(', 't', '*', 'testing', '.', 'T', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
4,    tests := map[string][]int{,"['tests', ':=', 'map', '[', 'string', '][]', 'int', '{']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
5,"        ""Euler1"": {Euler1(), 233168},","['""Euler1""', ':', '{', 'Euler1', '(),', '233168', '},']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
6,"        ""Euler2"": {Euler2(), 4613732},","['""Euler2""', ':', '{', 'Euler2', '(),', '4613732', '},']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
7,"        ""Euler3"": {Euler3(), 6857},","['""Euler3""', ':', '{', 'Euler3', '(),', '6857', '},']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
8,"        ""Euler4"": {Euler4(), 906609},","['""Euler4""', ':', '{', 'Euler4', '(),', '906609', '},']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
9,"        ""Euler5"": {Euler5(), 232792560},","['""Euler5""', ':', '{', 'Euler5', '(),', '232792560', '},']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
10,"        ""Euler6"": {Euler6(), 25164150},","['""Euler6""', ':', '{', 'Euler6', '(),', '25164150', '},']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
11,    },['}'],['PUNCTUATION']
12,"    for key, value := range tests {","['for', 'key', ',', 'value', ':=', 'range', 'tests', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
13,        if value[0] != value[1] {,"['if', 'value', '[', '0', ']', '!=', 'value', '[', '1', ']', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'PUNCTUATION', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'PUNCTUATION']"
14,"            t.Errorf(""%s\nExpected: %d\nGot:%d"",","['t', '.', 'Errorf', '(', '""%s\\nExpected: %d\\nGot:%d""', ',']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
15,"                key, value[0], value[1])","['key', ',', 'value', '[', '0', '],', 'value', '[', '1', '])']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
16,        },['}'],['PUNCTUATION']
17,    },['}'],['PUNCTUATION']
18,},['}'],['PUNCTUATION']
19,"

For that map, every function works fine and return the result I expect if I run one by one or if I comment, let's say, half part of those keys/values.

For example, if I call the the function above with these lines commented the test will PASS.

","['For', 'that', 'map,', 'every', 'function', 'works', 'fine', 'and', 'return', 'the', 'result', 'I', 'expect', 'if', 'I', 'run', 'one', 'by', 'one', 'or', 'if', 'I', 'comment,', ""let's"", 'say,', 'half', 'part', 'of', 'those', 'keys/values.', 'For', 'example,', 'if', 'I', 'call', 'the', 'the', 'function', 'above', 'with', 'these', 'lines', 'commented', 'the', 'test', 'will', 'PASS.']","['IN', 'DT', 'NN', 'DT', 'NN', 'VBZ', 'JJ', 'CC', 'VB', 'DT', 'NN', 'PRP', 'VBP', 'IN', 'PRP', 'VBP', 'CD', 'IN', 'CD', 'CC', 'IN', 'PRP', 'VBP', 'JJ', 'NN', 'JJ', 'NN', 'IN', 'DT', 'NNS', 'IN', 'NN', 'IN', 'PRP', 'VBP', 'DT', 'DT', 'NN', 'IN', 'IN', 'DT', 'NNS', 'VBD', 'DT', 'NN', 'MD', 'VB']"
20,tests := map[string][]int{,"['tests', ':=', 'map', '[', 'string', '][]', 'int', '{']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
21,"    ""Euler1"": {Euler1(), 233168},","['""Euler1""', ':', '{', 'Euler1', '(),', '233168', '},']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
22,"    // ""Euler2"": {Euler2(), 4613732},","['//', '""Euler2"":', '{Euler2(),', '4613732},']","['COMMENT', 'JJ', 'CD', 'CD']"
23,"    ""Euler3"": {Euler3(), 6857},","['""Euler3""', ':', '{', 'Euler3', '(),', '6857', '},']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
24,"    ""Euler4"": {Euler4(), 906609},","['""Euler4""', ':', '{', 'Euler4', '(),', '906609', '},']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
25,"    // ""Euler5"": {Euler5(), 232792560},","['//', '""Euler5"":', '{Euler5(),', '232792560},']","['COMMENT', 'JJ', 'CD', 'CD']"
26,"    // ""Euler6"": {Euler6(), 25164150},","['//', '""Euler6"":', '{Euler6(),', '25164150},']","['COMMENT', 'JJ', 'CD', 'CD']"
27,} ,['}'],['PUNCTUATION']
28,"

But if I arrange the comments on that next way, for example, the test wouldn't.

","['But', 'if', 'I', 'arrange', 'the', 'comments', 'on', 'that', 'next', 'way,', 'for', 'example,', 'the', 'test', ""wouldn't.""]","['CC', 'IN', 'PRP', 'VBP', 'DT', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'WP', 'DT', 'NN', 'NN']"
29,tests := map[string][]int{,"['tests', ':=', 'map', '[', 'string', '][]', 'int', '{']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
30,"        //""Euler1"": {Euler1(), 233168},","['//', '""Euler1"":', '{Euler1(),', '233168},']","['COMMENT', 'JJ', 'CD', 'CD']"
31,"        ""Euler2"": {Euler2(), 4613732},","['""Euler2""', ':', '{', 'Euler2', '(),', '4613732', '},']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
32,"        ""Euler3"": {Euler3(), 6857},","['""Euler3""', ':', '{', 'Euler3', '(),', '6857', '},']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
33,"        ""Euler4"": {Euler4(), 906609},","['""Euler4""', ':', '{', 'Euler4', '(),', '906609', '},']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
34,"        //""Euler5"": {Euler5(), 232792560},","['//', '""Euler5"":', '{Euler5(),', '232792560},']","['COMMENT', 'JJ', 'CD', 'CD']"
35,"        // ""Euler6"": {Euler6(), 25164150},","['//', '""Euler6"":', '{Euler6(),', '25164150},']","['COMMENT', 'JJ', 'CD', 'CD']"
36,    },['}'],['PUNCTUATION']
37,"

The test will give me an error:

","['The', 'test', 'will', 'give', 'me', 'an', 'error:']","['DT', 'NN', 'MD', 'VB', 'PRP', 'DT', 'NN']"
38,    WARNING: DATA RACE,"['WARNING', ':', 'DATA', 'RACE']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER']"
39,Write by goroutine 6:,"['Write', 'by', 'go', 'routine', '6', ':']","['IDENTIFIER', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION']"
40,  runtime.closechan(),['runtime.closechan()'],['FUNCTION_CALL']
41,      /private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/runtime/chan.go:295 +0x0,"['/private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/runtime/chan.go:295', '+', '0', 'x0']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER']"
42,  github.com/alesr/project-euler.Euler2(),['github.com/alesr/project-euler.Euler2()'],['DIRECTORY']
43,      /Users/Alessandro/GO/src/github.com/alesr/project-euler/euler.go:40 +0xd7,"['/Users/Alessandro/GO/src/github.com/alesr/project-euler/euler.go:40', '+', '0xd7']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
44,  github.com/alesr/project-euler.TestEulers(),['github.com/alesr/project-euler.TestEulers()'],['DIRECTORY']
45,      /Users/Alessandro/GO/src/github.com/alesr/project-euler/euler_test.go:9 +0x46,"['/Users/Alessandro/GO/src/github.com/alesr/project-euler/euler_test.go:9', '+', '0x46']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
46,  testing.tRunner(),['testing.tRunner()'],['FUNCTION_CALL']
47,      /private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/testing/testing.go:456 +0xdc,"['/private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/testing/testing.go:456', '+', '0xdc']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
48,Previous read by goroutine 7:,"['Previous', 'read', 'by', 'go', 'routine', '7', ':']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION']"
49,  runtime.chansend(),['runtime.chansend()'],['FUNCTION_CALL']
50,      /private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/runtime/chan.go:107 +0x0,"['/private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/runtime/chan.go:107', '+', '0', 'x0']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'OCTAL_LITERAL', 'IDENTIFIER']"
51,  github.com/alesr/numbers.FibonacciGen.func1(),['github.com/alesr/numbers.FibonacciGen.func1()'],['DIRECTORY']
52,      /Users/Alessandro/GO/src/github.com/alesr/numbers/numbers.go:103 +0x59,"['/Users/Alessandro/GO/src/github.com/alesr/numbers/numbers.go:103', '+', '0x59']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
53,Goroutine 6 (running) created at:,"['Goroutine', '6', '(', 'running', ')', 'created', 'at', ':']","['IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION']"
54,  testing.RunTests(),['testing.RunTests()'],['FUNCTION_CALL']
55,      /private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/testing/testing.go:561 +0xaa3,"['/private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/testing/testing.go:561', '+', '0xaa3']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
56,  testing.(*M).Run(),"['testing', '.(*', 'M', ').', 'Run', '()']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
57,      /private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/testing/testing.go:494 +0xe4,"['/private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/testing/testing.go:494', '+', '0xe4']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
58,  main.main(),['main.main()'],['FUNCTION_CALL']
59,      github.com/alesr/project-euler/_test/_testmain.go:54 +0x20f,"['github.com/alesr/project-euler/_test/_testmain.go:54', '+', '0x2', '0', 'f']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL', 'IDENTIFIER']"
60,Goroutine 7 (running) created at:,"['Goroutine', '7', '(', 'running', ')', 'created', 'at', ':']","['IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION']"
61,  github.com/alesr/numbers.FibonacciGen(),['github.com/alesr/numbers.FibonacciGen()'],['DIRECTORY']
62,      /Users/Alessandro/GO/src/github.com/alesr/numbers/numbers.go:105 +0x60,"['/Users/Alessandro/GO/src/github.com/alesr/numbers/numbers.go:105', '+', '0x6', '0']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL']"
63,  github.com/alesr/project-euler.Euler2(),['github.com/alesr/project-euler.Euler2()'],['DIRECTORY']
64,      /Users/Alessandro/GO/src/github.com/alesr/project-euler/euler.go:27 +0x32,"['/Users/Alessandro/GO/src/github.com/alesr/project-euler/euler.go:27', '+', '0x32']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
65,  github.com/alesr/project-euler.TestEulers(),['github.com/alesr/project-euler.TestEulers()'],['DIRECTORY']
66,      /Users/Alessandro/GO/src/github.com/alesr/project-euler/euler_test.go:9 +0x46,"['/Users/Alessandro/GO/src/github.com/alesr/project-euler/euler_test.go:9', '+', '0x46']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
67,  testing.tRunner(),['testing.tRunner()'],['FUNCTION_CALL']
68,      /private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/testing/testing.go:456 +0xdc,"['/private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/testing/testing.go:456', '+', '0xdc']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
69,==================,['=================='],['PUNCTUATION']
70,panic: send on closed channel,"['panic', ':', 'send', 'on', 'closed', 'chan', 'nel']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER']"
71,goroutine 36 [running]:,"['go', 'routine', '36', '[', 'running', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
72,github.com/alesr/numbers.FibonacciGen.func1(0xc8200a01e0),['github.com/alesr/numbers.FibonacciGen.func1(0xc8200a01e0)'],['DIRECTORY']
73,    /Users/Alessandro/GO/src/github.com/alesr/numbers/numbers.go:103 +0x5a,"['/Users/Alessandro/GO/src/github.com/alesr/numbers/numbers.go:103', '+', '0x5a']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
74,created by github.com/alesr/numbers.FibonacciGen,"['created', 'by', 'github.com/alesr/numbers.FibonacciGen']","['IDENTIFIER', 'IDENTIFIER', 'DIRECTORY']"
75,    /Users/Alessandro/GO/src/github.com/alesr/numbers/numbers.go:105 +0x61,"['/Users/Alessandro/GO/src/github.com/alesr/numbers/numbers.go:105', '+', '0x61']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
76,goroutine 1 [chan receive]:,"['go', 'routine', '1', '[', 'chan', 'receive', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
77,"testing.RunTests(0x24d038, 0x2f7340, 0x1, 0x1, 0xf78401)","['testing.RunTests(0x24d038, 0x2f7340, 0x1, 0x1, 0xf78401)']",['FUNCTION_CALL']
78,    /private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/testing/testing.go:562 +0xafa,"['/private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/testing/testing.go:562', '+', '0xafa']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
79,"testing.(*M).Run(0xc82004df00, 0x1ff0e8)","['testing', '.(*', 'M', ').', 'Run', '(', '0xc82', '0', '04', 'df00', ',', '0x1ff', '0', 'e8', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
80,    /private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/testing/testing.go:494 +0xe5,"['/private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/testing/testing.go:494', '+', '0xe5']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
81,main.main(),['main.main()'],['FUNCTION_CALL']
82,    github.com/alesr/project-euler/_test/_testmain.go:54 +0x210,"['github.com/alesr/project-euler/_test/_testmain.go:54', '+', '0x21', '0']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL']"
83,"goroutine 17 [syscall, locked to thread]:","['go', 'routine', '17', '[', 'syscall', ',', 'locked', 'to', 'thread', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION']"
84,runtime.goexit(),['runtime.goexit()'],['FUNCTION_CALL']
85,    /private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/runtime/asm_amd64.s:1696 +0x1,"['/private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/runtime/asm_amd64.s:1696', '+', '0x1']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
86,goroutine 35 [runnable]:,"['go', 'routine', '35', '[', 'runnable', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
87,"github.com/alesr/strings.Flip(0xc8200727a0, 0x6, 0x0, 0x0)","['github.com/alesr/strings.Flip(0xc8200727a0,', '0x6', ',', '0', 'x0', ',', '0', 'x0', ')']","['DIRECTORY', 'HEX_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
88,    /Users/Alessandro/GO/src/github.com/alesr/strings/strings.go:33 +0x17e,"['/Users/Alessandro/GO/src/github.com/alesr/strings/strings.go:33', '+', '0x17e']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
89,github.com/alesr/project-euler.Euler4(0x1ac9),['github.com/alesr/project-euler.Euler4(0x1ac9)'],['DIRECTORY']
90,    /Users/Alessandro/GO/src/github.com/alesr/project-euler/euler.go:73 +0x95,"['/Users/Alessandro/GO/src/github.com/alesr/project-euler/euler.go:73', '+', '0x95']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
91,github.com/alesr/project-euler.TestEulers(0xc8200b6000),['github.com/alesr/project-euler.TestEulers(0xc8200b6000)'],['DIRECTORY']
92,    /Users/Alessandro/GO/src/github.com/alesr/project-euler/euler_test.go:11 +0x63,"['/Users/Alessandro/GO/src/github.com/alesr/project-euler/euler_test.go:11', '+', '0x63']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
93,"testing.tRunner(0xc8200b6000, 0x2f7340)","['testing.tRunner(0xc8200b6000, 0x2f7340)']",['FUNCTION_CALL']
94,    /private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/testing/testing.go:456 +0xdd,"['/private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/testing/testing.go:456', '+', '0xdd']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
95,created by testing.RunTests,"['created', 'by', 'testing', '.', 'RunTests']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
96,    /private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/testing/testing.go:561 +0xaa4,"['/private/var/folders/q8/bf_4b1ts2zj0l7b0p1dv36lr0000gp/T/workdir/go/src/testing/testing.go:561', '+', '0xaa4']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
97,exit status 2,"['exit', 'status', '2']","['IDENTIFIER', 'IDENTIFIER', 'DECIMAL_LITERAL']"
98,FAIL    github.com/alesr/project-euler  0.022s,"['FAIL', 'github.com/alesr/project-euler', '0', '.', '022', 's']","['IDENTIFIER', 'DIRECTORY', 'OCTAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER']"
99,"

But still, I checked every single function and they work just as expected.
You can access the Euler source code or the packages numbers and strings if you want.

At Euler2 function I have a defer statement to close the channel which is receiving from FibonacciGen.

And on FibonacciGen I do have another defer statement to close the same channel.

It seems that's the my first error. I should have just one and not two statements to close the channel, since they are trying to close the same thing. Is that correct?

Second (and here I'm even a little more unsure), the defer statement will prevent the function to be called until the main goroutine returns, right? Independently if I call it on the package main or not? 

Plus, since the data is flowing through the channel from FibonacciGen to the main function. It seems for me, that if I close the channel at FibonacciGen I don't need to notify the main function. But If I close the channel on the main function I do have to notify FibonacciGen to stop trying to send to this channel.
","['But', 'still,', 'I', 'checked', 'every', 'single', 'function', 'and', 'they', 'work', 'just', 'as', 'expected.', 'You', 'can', 'access', 'the', 'Euler', 'source', 'code', 'or', 'the', 'packages', 'numbers', 'and', 'strings', 'if', 'you', 'want.', 'At', 'Euler2', 'function', 'I', 'have', 'a', 'defer', 'statement', 'to', 'close', 'the', 'channel', 'which', 'is', 'receiving', 'from', 'FibonacciGen.', 'And', 'on', 'FibonacciGen', 'I', 'do', 'have', 'another', 'defer', 'statement', 'to', 'close', 'the', 'same', 'channel.', 'It', 'seems', ""that's"", 'the', 'my', 'first', 'error.', 'I', 'should', 'have', 'just', 'one', 'and', 'not', 'two', 'statements', 'to', 'close', 'the', 'channel,', 'since', 'they', 'are', 'trying', 'to', 'close', 'the', 'same', 'thing.', 'Is', 'that', 'correct?', 'Second', '(and', 'here', ""I'm"", 'even', 'a', 'little', 'more', 'unsure),', 'the', 'defer', 'statement', 'will', 'prevent', 'the', 'function', 'to', 'be', 'called', 'until', 'the', 'main', 'goroutine', 'returns,', 'right?', 'Independently', 'if', 'I', 'call', 'it', 'on', 'the', 'package', 'main', 'or', 'not?', 'Plus,', 'since', 'the', 'data', 'is', 'flowing', 'through', 'the', 'channel', 'from', 'FibonacciGen', 'to', 'the', 'main', 'function.', 'It', 'seems', 'for', 'me,', 'that', 'if', 'I', 'close', 'the', 'channel', 'at', 'FibonacciGen', 'I', ""don't"", 'need', 'to', 'notify', 'the', 'main', 'function.', 'But', 'If', 'I', 'close', 'the', 'channel', 'on', 'the', 'main', 'function', 'I', 'do', 'have', 'to', 'notify', 'FibonacciGen', 'to', 'stop', 'trying', 'to', 'send', 'to', 'this', 'channel.']","['CC', 'NN', 'PRP', 'VBD', 'DT', 'JJ', 'NN', 'CC', 'PRP', 'VBP', 'RB', 'IN', 'NN', 'PRP', 'MD', 'NN', 'DT', 'NNP', 'NN', 'NN', 'CC', 'DT', 'NNS', 'NNS', 'CC', 'NNS', 'IN', 'PRP', 'VBP', 'IN', 'NNP', 'NN', 'PRP', 'VBP', 'DT', 'NN', 'NN', 'TO', 'VB', 'DT', 'NN', 'WDT', 'VBZ', 'VBG', 'IN', 'NNP', 'CC', 'IN', 'NNP', 'PRP', 'VBP', 'VB', 'DT', 'NN', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'PRP', 'VBZ', 'IN', 'DT', 'PRP$', 'JJ', 'NN', 'PRP', 'MD', 'VB', 'RB', 'CD', 'CC', 'RB', 'CD', 'NNS', 'TO', 'VB', 'DT', 'NN', 'IN', 'PRP', 'VBP', 'VBG', 'TO', 'VB', 'DT', 'JJ', 'NN', 'VBZ', 'IN', 'JJ', 'NNP', 'NNP', 'RB', 'NNP', 'RB', 'DT', 'RB', 'RBR', 'JJ', 'DT', 'NN', 'NN', 'MD', 'VB', 'DT', 'NN', 'TO', 'VB', 'VBN', 'IN', 'DT', 'JJ', 'NN', 'NN', 'NN', 'NNP', 'IN', 'PRP', 'VBP', 'PRP', 'IN', 'DT', 'NN', 'JJ', 'CC', 'JJ', 'NNP', 'IN', 'DT', 'NN', 'VBZ', 'VBG', 'IN', 'DT', 'NN', 'IN', 'NNP', 'TO', 'DT', 'JJ', 'NN', 'PRP', 'VBZ', 'IN', 'NN', 'IN', 'IN', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'NNP', 'PRP', 'VBP', 'VB', 'TO', 'VB', 'DT', 'JJ', 'NN', 'CC', 'IN', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN', 'PRP', 'VBP', 'VB', 'TO', 'VB', 'NNP', 'TO', 'VB', 'VBG', 'TO', 'VB', 'TO', 'DT', 'NN']"
