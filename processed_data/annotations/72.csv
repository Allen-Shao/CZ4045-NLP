,text,token,annotation
0,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
1,import (,"['import', '(']","['KEYWORD', 'OPERATOR']"
2,"    ""sanguo/base/log""","['""sanguo/base/log""']",['STRING_LITERAL']
3,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
4,"    ""runtime""","['""runtime""']",['STRING_LITERAL']
5,"    ""math/rand""","['""math/rand""']",['STRING_LITERAL']
6,"    ""time""","['""time""']",['STRING_LITERAL']
7,"    ""net""","['""net""']",['STRING_LITERAL']
8,"    ""os""","['""os""']",['STRING_LITERAL']
9,),[')'],['OPERATOR']
10,type GameServer struct {,"['type', 'GameServer', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
11,    Host   string,"['Host', 'string']","['IDENTIFIER', 'IDENTIFIER']"
12,},['}'],['OPERATOR']
13,func (server *GameServer) Start() {,"['func', '(', 'server', '*', 'GameServer', ')', 'Start', '()', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
14,    // load system data,['// load system data'],"['COMMENT', 'NN', 'NN', 'NNS']"
15,"    log.Debug(""/*************************SREVER START********************************/"")","['log', '.', 'Debug', '(', '""/*************************SREVER START********************************/""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
16,"    tcpAddr, err := net.ResolveTCPAddr(""tcp4"", server.Host)","['tcpAddr', ',', 'err', ':=', 'net', '.', 'ResolveTCPAddr', '(', '""tcp4""', ',', 'server', '.', 'Host', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
17,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
18,        log.Error(err.Error()),"['log', '.', 'Error', '(', 'err', '.', 'Error', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
19,        os.Exit(-1),"['os', '.', 'Exit', '(-', '1', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
20,    },['}'],['OPERATOR']
21,    go func(){,"['go', 'func', '(){']","['KEYWORD', 'KEYWORD', 'OPERATOR']"
22,        for{,"['for', '{']","['KEYWORD', 'OPERATOR']"
23,            select {,"['select', '{']","['KEYWORD', 'OPERATOR']"
24,            case <-time.After(30*time.Second):,"['case', '<-', 'time', '.', 'After', '(', '30', '*', 'time', '.', 'Second', '):']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
25,"                LookUp(""read memstats"")","['LookUp', '(', '""read memstats""', ')']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
26,            },['}'],['OPERATOR']
27,        },['}'],['OPERATOR']
28,    }(),['}()'],['OPERATOR']
29,"    listener, err := net.ListenTCP(""tcp"", tcpAddr)","['listener', ',', 'err', ':=', 'net', '.', 'ListenTCP', '(', '""tcp""', ',', 'tcpAddr', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
30,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
31,        log.Error(err.Error()),"['log', '.', 'Error', '(', 'err', '.', 'Error', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
32,        os.Exit(-1),"['os', '.', 'Exit', '(-', '1', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
33,    },['}'],['OPERATOR']
34,"    log.Debug(""/*************************SERVER SUCC********************************/"")","['log', '.', 'Debug', '(', '""/*************************SERVER SUCC********************************/""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
35,    for {,"['for', '{']","['KEYWORD', 'OPERATOR']"
36,"        conn, err := listener.AcceptTCP()","['conn', ',', 'err', ':=', 'listener', '.', 'AcceptTCP', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
37,        if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
38,            continue,['continue'],['KEYWORD']
39,        },['}'],['OPERATOR']
40,"        log.Debug(""Accept a new connection "", conn.RemoteAddr())","['log', '.', 'Debug', '(', '""Accept a new connection ""', ',', 'conn', '.', 'RemoteAddr', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
41,        go handleClient(conn),"['go', 'handleClient', '(', 'conn', ')']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
42,    },['}'],['OPERATOR']
43,},['}'],['OPERATOR']
44,func handleClient(conn *net.TCPConn) {,"['func', 'handleClient', '(', 'conn', '*', 'net', '.', 'TCPConn', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
45,    sess := NewSession(conn),"['sess', ':=', 'NewSession', '(', 'conn', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
46,    sess.Start(),"['sess', '.', 'Start', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
47,},['}'],['OPERATOR']
48,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
49,    rand.Seed(time.Now().Unix()),"['rand', '.', 'Seed', '(', 'time', '.', 'Now', '().', 'Unix', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
50,    runtime.GOMAXPROCS(runtime.NumCPU()),"['runtime', '.', 'GOMAXPROCS', '(', 'runtime', '.', 'NumCPU', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
51,    log.SetLevel(0),"['log', '.', 'SetLevel', '(', '0', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
52,"    filew := log.NewFileWriter(""log"", true)","['filew', ':=', 'log', '.', 'NewFileWriter', '(', '""log""', ',', 'true', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
53,    err := filew.StartLogger(),"['err', ':=', 'filew', '.', 'StartLogger', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
54,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
55,"        fmt.Println(""Failed start log"",err)","['fmt', '.', 'Println', '(', '""Failed start log""', ',', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
56,        return,['return'],['KEYWORD']
57,    },['}'],['OPERATOR']
58,    var server GameServer,"['var', 'server', 'GameServer']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
59,"    server.Host = ""127.0.0.1:9999""","['server', '.', 'Host', '=', '""127.0.0.1:9999""']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
60,    server.Start(),"['server', '.', 'Start', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
61,},['}'],['OPERATOR']
