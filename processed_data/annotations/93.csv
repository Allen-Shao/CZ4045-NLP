,text,token,annotation
0,package galileo,"['package', 'galileo']","['KEYWORD', 'IDENTIFIER']"
1,import (,"['import', '(']","['KEYWORD', 'OPERATOR']"
2,"    ""encoding/json""","['""encoding/json""']",['STRING_LITERAL']
3,"    ""golang.org/x/net/context""","['""golang.org/x/net/context""']",['STRING_LITERAL']
4,"    ""golang.org/x/oauth2""","['""golang.org/x/oauth2""']",['STRING_LITERAL']
5,"    ""golang.org/x/oauth2/google""","['""golang.org/x/oauth2/google""']",['STRING_LITERAL']
6,"    ""google.golang.org/appengine""","['""google.golang.org/appengine""']",['STRING_LITERAL']
7,"    ""google.golang.org/appengine/file""","['""google.golang.org/appengine/file""']",['STRING_LITERAL']
8,"    ""google.golang.org/appengine/urlfetch""","['""google.golang.org/appengine/urlfetch""']",['STRING_LITERAL']
9,"    ""google.golang.org/cloud""","['""google.golang.org/cloud""']",['STRING_LITERAL']
10,"    ""google.golang.org/cloud/storage""","['""google.golang.org/cloud/storage""']",['STRING_LITERAL']
11,"    ""io""","['""io""']",['STRING_LITERAL']
12,"    ""io/ioutil""","['""io/ioutil""']",['STRING_LITERAL']
13,"    ""log""","['""log""']",['STRING_LITERAL']
14,"    ""net/http""","['""net/http""']",['STRING_LITERAL']
15,),[')'],['OPERATOR']
16,"var bucket = ""prod_agl_expt""","['var', 'bucket', '=', '""prod_agl_expt""']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
17,// saveData struct holds information needed to run the various saving functions.,['// saveData struct holds information needed to run the various saving functions.'],"['COMMENT', 'NNS', 'NN', 'VBZ', 'NN', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'VBG', 'NNS', '.']"
18,type saveData struct {,"['type', 'saveData', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
19,    c       context.Context,"['c', 'context', '.', 'Context']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
20,    r       *http.Request       //http response,"['r', '*', 'http', '.', 'Request', '//http response']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'COMMENT', 'NN', 'NN']"
21,    w       http.ResponseWriter //http writer,"['w', 'http', '.', 'ResponseWriter', '//http writer']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'COMMENT', 'NN', 'NN']"
22,    ctx     context.Context,"['ctx', 'context', '.', 'Context']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
23,    cleanUp []string // cleanUp is a list of filenames that need cleaning up at the end of the saving.,"['cleanUp', '[]', 'string', '// cleanUp is a list of filenames that need cleaning up at the end of the saving.']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'COMMENT', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'NNS', 'WDT', 'VBP', 'VBG', 'RP', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', '.']"
24,    failed  bool     // failed indicates that one or more of the saving steps failed.,"['failed', 'bool', '// failed indicates that one or more of the saving steps failed.']","['IDENTIFIER', 'IDENTIFIER', 'COMMENT', 'VBN', 'VBZ', 'IN', 'CD', 'CC', 'JJR', 'IN', 'DT', 'VBG', 'NNS', 'VBD', '.']"
25,},['}'],['OPERATOR']
26,// saveData struct holds information needed to run the various saving functions.,['// saveData struct holds information needed to run the various saving functions.'],"['COMMENT', 'NNS', 'NN', 'VBZ', 'NN', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'VBG', 'NNS', '.']"
27,type loadData struct {,"['type', 'loadData', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
28,    c       context.Context,"['c', 'context', '.', 'Context']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
29,    r       *http.Request       //http response,"['r', '*', 'http', '.', 'Request', '//http response']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'COMMENT', 'NN', 'NN']"
30,    w       http.ResponseWriter //http writer,"['w', 'http', '.', 'ResponseWriter', '//http writer']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'COMMENT', 'NN', 'NN']"
31,    ctx     context.Context,"['ctx', 'context', '.', 'Context']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
32,    cleanUp []string // cleanUp is a list of filenames that need cleaning up at the end of the saving.,"['cleanUp', '[]', 'string', '// cleanUp is a list of filenames that need cleaning up at the end of the saving.']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'COMMENT', 'NN', 'VBZ', 'DT', 'NN', 'IN', 'NNS', 'WDT', 'VBP', 'VBG', 'RP', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', '.']"
33,    failed  bool     // failed indicates that one or more of the saving steps failed.,"['failed', 'bool', '// failed indicates that one or more of the saving steps failed.']","['IDENTIFIER', 'IDENTIFIER', 'COMMENT', 'VBN', 'VBZ', 'IN', 'CD', 'CC', 'JJR', 'IN', 'DT', 'VBG', 'NNS', 'VBD', '.']"
34,},['}'],['OPERATOR']
35,type jsonStruct struct {,"['type', 'jsonStruct', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
36,    User struct {,"['User', 'struct', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR']"
37,"        Gender string `json:""gender""`","['Gender', 'string', 'json', ':', '""gender""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
38,"        Age    string `json:""age""`","['Age', 'string', 'json', ':', '""age""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
39,"        ID     string `json:""id""`","['ID', 'string', 'json', ':', '""id""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
40,"    } `json:""user""`","['}', 'json', ':', '""user""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
41,    Stim map[string]struct {,"['Stim', 'map', '[', 'string', ']', 'struct', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
42,"        Index           int    `json:""index""`","['Index', 'int', 'json', ':', '""index""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
43,"        Word            string `json:""word""`","['Word', 'string', 'json', ':', '""word""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
44,"        WordDisplayTime int    `json:""wordDisplayTime""`","['WordDisplayTime', 'int', 'json', ':', '""wordDisplayTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
45,"        AnswerMaxTime   int    `json:""answerMaxTime""`","['AnswerMaxTime', 'int', 'json', ':', '""answerMaxTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
46,"        FixationTime    int    `json:""fixationTime""`","['FixationTime', 'int', 'json', ':', '""fixationTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
47,"        Train           bool   `json:""train""`","['Train', 'bool', 'json', ':', '""train""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
48,"        Test            bool   `json:""test""`","['Test', 'bool', 'json', ':', '""test""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
49,"        Grammatical     bool   `json:""grammatical""`","['Grammatical', 'bool', 'json', ':', '""grammatical""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
50,"        Grammar         string `json:""grammar""`","['Grammar', 'string', 'json', ':', '""grammar""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
51,"        Keyboard        bool   `json:""keyboard""`","['Keyboard', 'bool', 'json', ':', '""keyboard""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
52,"        TestSeq         int    `json:""testSeq""`","['TestSeq', 'int', 'json', ':', '""testSeq""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
53,"    } `json:""viewedTrials""`","['}', 'json', ':', '""viewedTrials""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
54,    Answers struct {,"['Answers', 'struct', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR']"
55,        Training []struct {,"['Training', '[]', 'struct', '{']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
56,"            Answer   string  `json:""ans""`","['Answer', 'string', 'json', ':', '""ans""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
57,"            RT       float32 `json:""RT""`","['RT', 'float32', 'json', ':', '""RT""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
58,"            GtAnswer string  `json:""gtAns""`","['GtAnswer', 'string', 'json', ':', '""gtAns""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
59,"            Correct  int     `json:""correct""`","['Correct', 'int', 'json', ':', '""correct""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
60,"        } `json:""training""`","['}', 'json', ':', '""training""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
61,        Test []struct {,"['Test', '[]', 'struct', '{']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
62,"            Answer   string  `json:""ans""`","['Answer', 'string', 'json', ':', '""ans""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
63,"            RT       float32 `json:""RT""`","['RT', 'float32', 'json', ':', '""RT""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
64,"            GtAnswer bool    `json:""gtAns""`","['GtAnswer', 'bool', 'json', ':', '""gtAns""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
65,"            Correct  int     `json:""correct""`","['Correct', 'int', 'json', ':', '""correct""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
66,"        } `json:""test""`","['}', 'json', ':', '""test""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
67,"    } `json:""answers""`","['}', 'json', ':', '""answers""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
68,    Trials []struct {,"['Trials', '[]', 'struct', '{']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
69,        Trial struct {,"['Trial', 'struct', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR']"
70,"            Index           int    `json:""index""`","['Index', 'int', 'json', ':', '""index""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
71,"            Word            string `json:""word""`","['Word', 'string', 'json', ':', '""word""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
72,"            WordDisplayTime int    `json:""wordDisplayTime""`","['WordDisplayTime', 'int', 'json', ':', '""wordDisplayTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
73,"            AnswerMaxTime   int    `json:""answerMaxTime""`","['AnswerMaxTime', 'int', 'json', ':', '""answerMaxTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
74,"            FixationTime    int    `json:""fixationTime""`","['FixationTime', 'int', 'json', ':', '""fixationTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
75,"            Train           bool   `json:""train""`","['Train', 'bool', 'json', ':', '""train""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
76,"            Test            bool   `json:""test""`","['Test', 'bool', 'json', ':', '""test""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
77,"            Grammatical     bool   `json:""grammatical""`","['Grammatical', 'bool', 'json', ':', '""grammatical""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
78,"            Grammar         string `json:""grammar""`","['Grammar', 'string', 'json', ':', '""grammar""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
79,"            Keyboard        bool   `json:""keyboard""`","['Keyboard', 'bool', 'json', ':', '""keyboard""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
80,"            TestSeq         int    `json:""testSeq""`","['TestSeq', 'int', 'json', ':', '""testSeq""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
81,"        } `json:""trial""`","['}', 'json', ':', '""trial""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
82,        Metadata struct {,"['Metadata', 'struct', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR']"
83,"            Instructions string `json:""instructions""`","['Instructions', 'string', 'json', ':', '""instructions""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
84,"            SubmitUrl    string `json:""submitUrl""`","['SubmitUrl', 'string', 'json', ':', '""submitUrl""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
85,"        } `json:""metadata""`","['}', 'json', ':', '""metadata""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
86,"    } `json:""shuffledTrials""`","['}', 'json', ':', '""shuffledTrials""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
87,    Debriefing []struct {,"['Debriefing', '[]', 'struct', '{']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
88,"        Type             string `json:""type""`","['Type', 'string', 'json', ':', '""type""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
89,"        RadioWithTextAns string `json:""radioWithTextAns""`","['RadioWithTextAns', 'string', 'json', ':', '""radioWithTextAns""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
90,"        TextAns          string `json:""textAns""`","['TextAns', 'string', 'json', ':', '""textAns""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
91,"        Rating           int    `json:""rating""`","['Rating', 'int', 'json', ':', '""rating""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
92,"        RadioOnlyAns     string `json:""radioOnlyAns""`","['RadioOnlyAns', 'string', 'json', ':', '""radioOnlyAns""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
93,"    } `json:""debriefingAns""`","['}', 'json', ':', '""debriefingAns""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
94,},['}'],['OPERATOR']
95,type trialStruct []struct {,"['type', 'trialStruct', '[]', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
96,    Trial struct {,"['Trial', 'struct', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR']"
97,"        Index           int    `json:""index""`","['Index', 'int', 'json', ':', '""index""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
98,"        Word            string `json:""word""`","['Word', 'string', 'json', ':', '""word""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
99,"        WordDisplayTime int    `json:""wordDisplayTime""`","['WordDisplayTime', 'int', 'json', ':', '""wordDisplayTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
100,"        AnswerMaxTime   int    `json:""answerMaxTime""`","['AnswerMaxTime', 'int', 'json', ':', '""answerMaxTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
101,"        FixationTime    int    `json:""fixationTime""`","['FixationTime', 'int', 'json', ':', '""fixationTime""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
102,"        Train           bool   `json:""train""`","['Train', 'bool', 'json', ':', '""train""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
103,"        Test            bool   `json:""test""`","['Test', 'bool', 'json', ':', '""test""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
104,"        Grammatical     bool   `json:""grammatical""`","['Grammatical', 'bool', 'json', ':', '""grammatical""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
105,"        Grammar         string `json:""grammar""`","['Grammar', 'string', 'json', ':', '""grammar""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
106,"        Keyboard        bool   `json:""keyboard""`","['Keyboard', 'bool', 'json', ':', '""keyboard""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
107,"        TestSeq         int    `json:""testSeq""`","['TestSeq', 'int', 'json', ':', '""testSeq""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
108,"    } `json:""trial""`","['}', 'json', ':', '""trial""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
109,    Metadata struct {,"['Metadata', 'struct', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR']"
110,"        Instructions string `json:""instructions""`","['Instructions', 'string', 'json', ':', '""instructions""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
111,"        SubmitUrl    string `json:""submitUrl""`","['SubmitUrl', 'string', 'json', ':', '""submitUrl""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
112,"    } `json:""metadata""`","['}', 'json', ':', '""metadata""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
113,},['}'],['OPERATOR']
114,"func fromJSON(r io.Reader) (jsonStruct, error) {","['func', 'fromJSON', '(', 'r', 'io', '.', 'Reader', ')', '(', 'jsonStruct', ',', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
115,    var x jsonStruct,"['var', 'x', 'jsonStruct']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
116,    dec := json.NewDecoder(r),"['dec', ':=', 'json', '.', 'NewDecoder', '(', 'r', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
117,    err := dec.Decode(&x),"['err', ':=', 'dec', '.', 'Decode', '(&', 'x', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
118,"    return x, err","['return', 'x', ',', 'err']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
119,},['}'],['OPERATOR']
120,"func toJSON(b io.Writer, trial trialStruct) (io.Writer, error) {","['func', 'toJSON', '(', 'b', 'io', '.', 'Writer', ',', 'trial', 'trialStruct', ')', '(', 'io', '.', 'Writer', ',', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
121,    enc := json.NewEncoder(b),"['enc', ':=', 'json', '.', 'NewEncoder', '(', 'b', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
122,    err := enc.Encode(&trial),"['err', ':=', 'enc', '.', 'Encode', '(&', 'trial', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
123,"    return b, err","['return', 'b', ',', 'err']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
124,},['}'],['OPERATOR']
125,func init() {,"['func', 'init', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
126,"    http.HandleFunc(""/"", handleStatic)","['http', '.', 'HandleFunc', '(', '""/""', ',', 'handleStatic', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
127,"    http.HandleFunc(""/saveUserData"", handleSaveUser)","['http', '.', 'HandleFunc', '(', '""/saveUserData""', ',', 'handleSaveUser', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
128,"    http.HandleFunc(""/loadTrials"", handleloadTrials)","['http', '.', 'HandleFunc', '(', '""/loadTrials""', ',', 'handleloadTrials', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
129,},['}'],['OPERATOR']
130,"func handleStatic(w http.ResponseWriter, r *http.Request) {","['func', 'handleStatic', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
131,"    w.Header().Set(""Cache-Control"", ""no-cache"")","['w', '.', 'Header', '().', 'Set', '(', '""Cache-Control"", ""no-cache""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
132,"    http.ServeFile(w, r, ""static/""+r.URL.Path)","['http', '.', 'ServeFile', '(', 'w', ',', 'r', ',', '""static/""', '+', 'r', '.', 'URL', '.', 'Path', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
133,},['}'],['OPERATOR']
134,// testSave is the main saving entry point that calls the GCS operations.,['// testSave is the main saving entry point that calls the GCS operations.'],"['COMMENT', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'NN', 'WDT', 'VBZ', 'DT', 'NNP', 'NNS', '.']"
135,"func handleSaveUser(w http.ResponseWriter, r *http.Request) {","['func', 'handleSaveUser', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
136,    c := appengine.NewContext(r),"['c', ':=', 'appengine', '.', 'NewContext', '(', 'r', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
137,"    if bucket == """" {","['if', 'bucket', '==', '""""', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
138,        var err error,"['var', 'err', 'error']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
139,"        if bucket, err = file.DefaultBucketName(c); err != nil {","['if', 'bucket', ',', 'err', '=', 'file', '.', 'DefaultBucketName', '(', 'c', ');', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
140,"            // log.Errorf(c, ""failed to get default GCS bucket name: %v"", err)","['// log.Errorf(c, ""failed to get default GCS bucket name: %v"", err)']","['COMMENT', 'NN', '(', 'NN', ',', '``', 'VBD', 'TO', 'VB', 'NN', 'NNP', 'NN', 'NN', ':', 'NN', 'NN', ""''"", ',', 'NN', ')']"
141,            return,['return'],['KEYWORD']
142,        },['}'],['OPERATOR']
143,    },['}'],['OPERATOR']
144,    hc := &http.Client{,"['hc', ':=', '&', 'http', '.', 'Client', '{']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
145,        Transport: &oauth2.Transport{,"['Transport', ':', '&', 'oauth2', '.', 'Transport', '{']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
146,"            Source: google.AppEngineTokenSource(c, storage.ScopeFullControl),","['Source', ':', 'go', 'ogle', '.', 'AppEngineTokenSource', '(', 'c', ',', 'storage', '.', 'ScopeFullControl', '),']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
147,"            Base:   &urlfetch.Transport{Context: c},","['Base', ':', '&', 'urlfetch', '.', 'Transport', '{', 'Context', ':', 'c', '},']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
148,"        },","['},']",['OPERATOR']
149,    },['}'],['OPERATOR']
150,"    ctx := cloud.NewContext(appengine.AppID(c), hc)","['ctx', ':=', 'cloud', '.', 'NewContext', '(', 'appengine', '.', 'AppID', '(', 'c', '),', 'hc', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
151,    // structure to holds information needed to run the various saving functions,['// structure to holds information needed to run the various saving functions'],"['COMMENT', 'NN', 'TO', 'VBZ', 'NN', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'VBG', 'NNS']"
152,    d := &saveData{,"['d', ':=', '&', 'saveData', '{']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
153,"        c:   c,","['c', ':', 'c', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
154,"        r:   r,","['r', ':', 'r', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
155,"        w:   w,","['w', ':', 'w', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
156,"        ctx: ctx,","['ctx', ':', 'ctx', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
157,    },['}'],['OPERATOR']
158,    // retrieve data,['// retrieve data'],"['COMMENT', 'NN', 'NNS']"
159,"    processedJson, trials, trainAns, testAns, stimSeq, userDetails, debriefingAns, rawJson := getJsonUserData(d.r, d.w)","['processedJson', ',', 'trials', ',', 'trainAns', ',', 'testAns', ',', 'stimSeq', ',', 'userDetails', ',', 'debriefingAns', ',', 'rawJson', ':=', 'getJsonUserData', '(', 'd', '.', 'r', ',', 'd', '.', 'w', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
160,    //,['//'],['COMMENT']
161,    d.createUserFolder(processedJson.User.ID),"['d', '.', 'createUserFolder', '(', 'processedJson', '.', 'User', '.', 'ID', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
162,"    // d.saveJson(k.User.ID, ""raw"", z)","['// d.saveJson(k.User.ID, ""raw"", z)']","['COMMENT', 'NN', '(', 'VB', ',', '``', 'JJ', ""''"", ',', 'NN', ')']"
163,"    d.saveJson(processedJson.User.ID, ""trials"", trials)","['d', '.', 'saveJson', '(', 'processedJson', '.', 'User', '.', 'ID', ',', '""trials""', ',', 'trials', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
164,"    d.saveJson(processedJson.User.ID, ""train"", trainAns)","['d', '.', 'saveJson', '(', 'processedJson', '.', 'User', '.', 'ID', ',', '""train""', ',', 'trainAns', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
165,"    d.saveJson(processedJson.User.ID, ""test"", testAns)","['d', '.', 'saveJson', '(', 'processedJson', '.', 'User', '.', 'ID', ',', '""test""', ',', 'testAns', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
166,"    d.saveJson(processedJson.User.ID, ""stim"", stimSeq)","['d', '.', 'saveJson', '(', 'processedJson', '.', 'User', '.', 'ID', ',', '""stim""', ',', 'stimSeq', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
167,"    d.saveJson(processedJson.User.ID, ""user"", userDetails)","['d', '.', 'saveJson', '(', 'processedJson', '.', 'User', '.', 'ID', ',', '""user""', ',', 'userDetails', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
168,"    d.saveJson(processedJson.User.ID, ""debriefing"", debriefingAns)","['d', '.', 'saveJson', '(', 'processedJson', '.', 'User', '.', 'ID', ',', '""debriefing""', ',', 'debriefingAns', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
169,"    d.saveJson(processedJson.User.ID, ""raw"", rawJson)","['d', '.', 'saveJson', '(', 'processedJson', '.', 'User', '.', 'ID', ',', '""raw""', ',', 'rawJson', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
170,},['}'],['OPERATOR']
171,// Deal with error,['// Deal with error'],"['COMMENT', 'NN', 'IN', 'NN']"
172,"func (d *saveData) errorf(format string, args ...interface{}) {","['func', '(', 'd', '*', 'saveData', ')', 'errorf', '(', 'for', 'mat', 'string', ',', 'args', '...', 'interface', '{})', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR', 'OPERATOR']"
173,    d.failed = true,"['d', '.', 'failed', '=', 'true']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
174,},['}'],['OPERATOR']
175,"func getJsonUserData(r *http.Request, w http.ResponseWriter) (jsonStruct, []byte, []byte, []byte, []byte, []byte, []byte, []byte) {","['func', 'getJsonUserData', '(', 'r', '*', 'http', '.', 'Request', ',', 'w', 'http', '.', 'ResponseWriter', ')', '(', 'jsonStruct', ',', '[]', 'byte', ',', '[]', 'byte', ',', '[]', 'byte', ',', '[]', 'byte', ',', '[]', 'byte', ',', '[]', 'byte', ',', '[]', 'byte', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
176,    defer r.Body.Close(),"['defer', 'r', '.', 'Body', '.', 'Close', '()']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
177,"    procJson, err := fromJSON(r.Body)","['procJson', ',', 'err', ':=', 'fromJSON', '(', 'r', '.', 'Body', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
178,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
179,        log.Fatal(err),"['log', '.', 'Fatal', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
180,    },['}'],['OPERATOR']
181,"    log.Printf(""initial structure: "", procJson)","['log', '.', 'Printf', '(', '""initial structure: ""', ',', 'procJson', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
182,"    log.Printf(""%+v\n"", procJson)","['log', '.', 'Printf', '(', '""%+v\\n""', ',', 'procJson', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
183,"    trials, err := json.Marshal(procJson.Trials)","['trials', ',', 'err', ':=', 'json', '.', 'Marshal', '(', 'procJson', '.', 'Trials', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
184,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
185,        log.Fatal(err),"['log', '.', 'Fatal', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
186,    },['}'],['OPERATOR']
187,"    trainAns, err := json.Marshal(procJson.Answers.Training)","['trainAns', ',', 'err', ':=', 'json', '.', 'Marshal', '(', 'procJson', '.', 'Answers', '.', 'Training', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
188,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
189,        log.Fatal(err),"['log', '.', 'Fatal', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
190,    },['}'],['OPERATOR']
191,"    testAns, err := json.Marshal(procJson.Answers.Test)","['testAns', ',', 'err', ':=', 'json', '.', 'Marshal', '(', 'procJson', '.', 'Answers', '.', 'Test', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
192,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
193,        log.Fatal(err),"['log', '.', 'Fatal', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
194,    },['}'],['OPERATOR']
195,"    stimSeq, err := json.Marshal(procJson.Stim)","['stimSeq', ',', 'err', ':=', 'json', '.', 'Marshal', '(', 'procJson', '.', 'Stim', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
196,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
197,        log.Fatal(err),"['log', '.', 'Fatal', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
198,    },['}'],['OPERATOR']
199,"    userDetail, err := json.Marshal(procJson.User)","['userDetail', ',', 'err', ':=', 'json', '.', 'Marshal', '(', 'procJson', '.', 'User', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
200,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
201,        log.Fatal(err),"['log', '.', 'Fatal', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
202,    },['}'],['OPERATOR']
203,"    debriefingAns, err := json.Marshal(procJson.Debriefing)","['debriefingAns', ',', 'err', ':=', 'json', '.', 'Marshal', '(', 'procJson', '.', 'Debriefing', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
204,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
205,        log.Fatal(err),"['log', '.', 'Fatal', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
206,    },['}'],['OPERATOR']
207,"    rawJson, err := json.Marshal(procJson)","['rawJson', ',', 'err', ':=', 'json', '.', 'Marshal', '(', 'procJson', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
208,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
209,        log.Fatal(err),"['log', '.', 'Fatal', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
210,    },['}'],['OPERATOR']
211,"    return procJson, trials, trainAns, testAns, stimSeq, userDetail, debriefingAns, rawJson","['return', 'procJson', ',', 'trials', ',', 'trainAns', ',', 'testAns', ',', 'stimSeq', ',', 'userDetail', ',', 'debriefingAns', ',', 'rawJson']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
212,},['}'],['OPERATOR']
213,func (d *saveData) createUserFolder(folderName string) {,"['func', '(', 'd', '*', 'saveData', ')', 'createUserFolder', '(', 'folderName', 'string', ')', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
214,"    fName := folderName + ""/""","['fName', ':=', 'folderName', '+', '""/""']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
215,"    wc := storage.NewWriter(d.ctx, bucket, fName)","['wc', ':=', 'storage', '.', 'NewWriter', '(', 'd', '.', 'ctx', ',', 'bucket', ',', 'fName', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
216,"    wc.ContentType = ""text/plain""","['wc', '.', 'ContentType', '=', '""text/plain""']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
217,"    d.cleanUp = append(d.cleanUp, fName)","['d', '.', 'cleanUp', '=', 'append', '(', 'd', '.', 'cleanUp', ',', 'fName', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
218,    if err := wc.Close(); err != nil {,"['if', 'err', ':=', 'wc', '.', 'Close', '();', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
219,"        d.errorf(""createFile: unable to close bucket %q, file %q: %v"", bucket, fName, err)","['d', '.', 'errorf', '(', '""createFile: unable to close bucket %q, file %q: %v""', ',', 'bucket', ',', 'fName', ',', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
220,        return,['return'],['KEYWORD']
221,    },['}'],['OPERATOR']
222,},['}'],['OPERATOR']
223,"func (d *saveData) saveJson(folderName string, fileName string, fileContent []byte) {","['func', '(', 'd', '*', 'saveData', ')', 'saveJson', '(', 'folderName', 'string', ',', 'fileName', 'string', ',', 'fileContent', '[]', 'byte', ')', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
224,"    fullName := folderName + ""/"" + fileName","['fullName', ':=', 'folderName', '+', '""/""', '+', 'fileName']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER']"
225,"    wc := storage.NewWriter(d.ctx, bucket, fullName)","['wc', ':=', 'storage', '.', 'NewWriter', '(', 'd', '.', 'ctx', ',', 'bucket', ',', 'fullName', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
226,"    wc.ContentType = ""text/plain""","['wc', '.', 'ContentType', '=', '""text/plain""']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
227,"    d.cleanUp = append(d.cleanUp, fullName)","['d', '.', 'cleanUp', '=', 'append', '(', 'd', '.', 'cleanUp', ',', 'fullName', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
228,"    d.createFile(fullName, fileContent)","['d', '.', 'createFile', '(', 'fullName', ',', 'fileContent', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
229,},['}'],['OPERATOR']
230,"func (d *saveData) createFile(fileName string, content []byte) {","['func', '(', 'd', '*', 'saveData', ')', 'createFile', '(', 'fileName', 'string', ',', 'content', '[]', 'byte', ')', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
231,"    wc := storage.NewWriter(d.ctx, bucket, fileName)","['wc', ':=', 'storage', '.', 'NewWriter', '(', 'd', '.', 'ctx', ',', 'bucket', ',', 'fileName', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
232,"    wc.ContentType = ""text/plain""","['wc', '.', 'ContentType', '=', '""text/plain""']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
233,"    d.cleanUp = append(d.cleanUp, fileName)","['d', '.', 'cleanUp', '=', 'append', '(', 'd', '.', 'cleanUp', ',', 'fileName', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
234,"    if _, err := wc.Write([]byte(content)); err != nil {","['if', '_', ',', 'err', ':=', 'wc', '.', 'Write', '([]', 'byte', '(', 'content', '));', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
235,"        d.errorf(""createFile: unable to write data to bucket %q, file %q: %v"", bucket, fileName, err)","['d', '.', 'errorf', '(', '""createFile: unable to write data to bucket %q, file %q: %v""', ',', 'bucket', ',', 'fileName', ',', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
236,        return,['return'],['KEYWORD']
237,    },['}'],['OPERATOR']
238,    if err := wc.Close(); err != nil {,"['if', 'err', ':=', 'wc', '.', 'Close', '();', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
239,"        d.errorf(""createFile: unable to close bucket %q, file %q: %v"", bucket, fileName, err)","['d', '.', 'errorf', '(', '""createFile: unable to close bucket %q, file %q: %v""', ',', 'bucket', ',', 'fileName', ',', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
240,        return,['return'],['KEYWORD']
241,    },['}'],['OPERATOR']
242,},['}'],['OPERATOR']
243,"func handleloadTrials(w http.ResponseWriter, r *http.Request) {","['func', 'handleloadTrials', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
244,    c := appengine.NewContext(r),"['c', ':=', 'appengine', '.', 'NewContext', '(', 'r', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
245,"    if bucket == """" {","['if', 'bucket', '==', '""""', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
246,        var err error,"['var', 'err', 'error']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
247,"        if bucket, err = file.DefaultBucketName(c); err != nil {","['if', 'bucket', ',', 'err', '=', 'file', '.', 'DefaultBucketName', '(', 'c', ');', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
248,"            // log.Errorf(c, ""failed to get default GCS bucket name: %v"", err)","['// log.Errorf(c, ""failed to get default GCS bucket name: %v"", err)']","['COMMENT', 'NN', '(', 'NN', ',', '``', 'VBD', 'TO', 'VB', 'NN', 'NNP', 'NN', 'NN', ':', 'NN', 'NN', ""''"", ',', 'NN', ')']"
249,            return,['return'],['KEYWORD']
250,        },['}'],['OPERATOR']
251,    },['}'],['OPERATOR']
252,    hc := &http.Client{,"['hc', ':=', '&', 'http', '.', 'Client', '{']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
253,        Transport: &oauth2.Transport{,"['Transport', ':', '&', 'oauth2', '.', 'Transport', '{']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
254,"            Source: google.AppEngineTokenSource(c, storage.ScopeFullControl),","['Source', ':', 'go', 'ogle', '.', 'AppEngineTokenSource', '(', 'c', ',', 'storage', '.', 'ScopeFullControl', '),']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
255,"            Base:   &urlfetch.Transport{Context: c},","['Base', ':', '&', 'urlfetch', '.', 'Transport', '{', 'Context', ':', 'c', '},']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
256,"        },","['},']",['OPERATOR']
257,    },['}'],['OPERATOR']
258,"    ctx := cloud.NewContext(appengine.AppID(c), hc)","['ctx', ':=', 'cloud', '.', 'NewContext', '(', 'appengine', '.', 'AppID', '(', 'c', '),', 'hc', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
259,    // structure to holds information needed to run the various saving functions,['// structure to holds information needed to run the various saving functions'],"['COMMENT', 'NN', 'TO', 'VBZ', 'NN', 'VBN', 'TO', 'VB', 'DT', 'JJ', 'VBG', 'NNS']"
260,    d := &saveData{,"['d', ':=', '&', 'saveData', '{']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
261,"        c:   c,","['c', ':', 'c', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
262,"        r:   r,","['r', ':', 'r', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
263,"        w:   w,","['w', ':', 'w', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
264,"        ctx: ctx,","['ctx', ':', 'ctx', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
265,    },['}'],['OPERATOR']
266,"    userID := r.URL.Query().Get(""id"")","['userID', ':=', 'r', '.', 'URL', '.', 'Query', '().', 'Get', '(', '""id""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
267,    log.Println(userID),"['log', '.', 'Println', '(', 'userID', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
268,    trialJson := d.readFile(userID),"['trialJson', ':=', 'd', '.', 'readFile', '(', 'userID', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
269,    w.Write(trialJson),"['w', '.', 'Write', '(', 'trialJson', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
270,},['}'],['OPERATOR']
271,// readFile reads the named file in Google Cloud Storage.,['// readFile reads the named file in Google Cloud Storage.'],"['COMMENT', 'NN', 'VBZ', 'DT', 'VBN', 'NN', 'IN', 'NNP', 'NNP', 'NNP', '.']"
272,func (d *saveData) readFile(fileName string) []byte {,"['func', '(', 'd', '*', 'saveData', ')', 'readFile', '(', 'fileName', 'string', ')', '[]', 'byte', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
273,"    trialName := fileName + ""/trials""","['trialName', ':=', 'fileName', '+', '""/trials""']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
274,"    rc, err := storage.NewReader(d.ctx, bucket, trialName)","['rc', ',', 'err', ':=', 'storage', '.', 'NewReader', '(', 'd', '.', 'ctx', ',', 'bucket', ',', 'trialName', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
275,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
276,"        d.errorf(""readFile: unable to open file from bucket %q, file %q: %v"", bucket, trialName, err)","['d', '.', 'errorf', '(', '""readFile: unable to open file from bucket %q, file %q: %v""', ',', 'bucket', ',', 'trialName', ',', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
277,    },['}'],['OPERATOR']
278,    defer rc.Close(),"['defer', 'rc', '.', 'Close', '()']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
279,"    slurp, err := ioutil.ReadAll(rc)","['slurp', ',', 'err', ':=', 'ioutil', '.', 'ReadAll', '(', 'rc', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
280,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
281,"        d.errorf(""readFile: unable to read data from bucket %q, file %q: %v"", bucket, fileName, err)","['d', '.', 'errorf', '(', '""readFile: unable to read data from bucket %q, file %q: %v""', ',', 'bucket', ',', 'fileName', ',', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
282,    },['}'],['OPERATOR']
283,    return slurp,"['return', 'slurp']","['KEYWORD', 'IDENTIFIER']"
284,},['}'],['OPERATOR']
