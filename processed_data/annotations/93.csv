,text,token,annotation
0,package galileo,"['package', 'galileo']","['keyword', 'identifier']"
1,import (,"['import', '(']","['keyword', 'operator']"
2,"    ""encoding/json""","['""encoding/json""']",['string_literal']
3,"    ""golang.org/x/net/context""","['""golang.org/x/net/context""']",['string_literal']
4,"    ""golang.org/x/oauth2""","['""golang.org/x/oauth2""']",['string_literal']
5,"    ""golang.org/x/oauth2/google""","['""golang.org/x/oauth2/google""']",['string_literal']
6,"    ""google.golang.org/appengine""","['""google.golang.org/appengine""']",['string_literal']
7,"    ""google.golang.org/appengine/file""","['""google.golang.org/appengine/file""']",['string_literal']
8,"    ""google.golang.org/appengine/urlfetch""","['""google.golang.org/appengine/urlfetch""']",['string_literal']
9,"    ""google.golang.org/cloud""","['""google.golang.org/cloud""']",['string_literal']
10,"    ""google.golang.org/cloud/storage""","['""google.golang.org/cloud/storage""']",['string_literal']
11,"    ""io""","['""io""']",['string_literal']
12,"    ""io/ioutil""","['""io/ioutil""']",['string_literal']
13,"    ""log""","['""log""']",['string_literal']
14,"    ""net/http""","['""net/http""']",['string_literal']
15,),[')'],['operator']
16,"var bucket = ""prod_agl_expt""","['var', 'bucket', '=', '""prod_agl_expt""']","['keyword', 'identifier', 'operator', 'string_literal']"
17,// saveData struct holds information needed to run the various saving functions.,['// saveData struct holds information needed to run the various saving functions.'],"['comment', 'saveData', 'struct', 'holds', 'information', 'needed', 'to', 'run', 'the', 'various', 'saving', 'functions', '.']"
18,type saveData struct {,"['type', 'saveData', 'struct', '{']","['keyword', 'identifier', 'keyword', 'operator']"
19,    c       context.Context,"['c', 'context', '.', 'Context']","['identifier', 'identifier', 'operator', 'identifier']"
20,    r       *http.Request       //http response,"['r', '*', 'http', '.', 'Request', '//http response']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'comment', 'http', 'response']"
21,    w       http.ResponseWriter //http writer,"['w', 'http', '.', 'ResponseWriter', '//http writer']","['identifier', 'identifier', 'operator', 'identifier', 'comment', 'http', 'writer']"
22,    ctx     context.Context,"['ctx', 'context', '.', 'Context']","['identifier', 'identifier', 'operator', 'identifier']"
23,    cleanUp []string // cleanUp is a list of filenames that need cleaning up at the end of the saving.,"['cleanUp', '[]', 'string', '// cleanUp is a list of filenames that need cleaning up at the end of the saving.']","['identifier', 'operator', 'identifier', 'comment', 'cleanUp', 'is', 'a', 'list', 'of', 'filenames', 'that', 'need', 'cleaning', 'up', 'at', 'the', 'end', 'of', 'the', 'saving', '.']"
24,    failed  bool     // failed indicates that one or more of the saving steps failed.,"['failed', 'bool', '// failed indicates that one or more of the saving steps failed.']","['identifier', 'identifier', 'comment', 'failed', 'indicates', 'that', 'one', 'or', 'more', 'of', 'the', 'saving', 'steps', 'failed', '.']"
25,},['}'],['operator']
26,// saveData struct holds information needed to run the various saving functions.,['// saveData struct holds information needed to run the various saving functions.'],"['comment', 'saveData', 'struct', 'holds', 'information', 'needed', 'to', 'run', 'the', 'various', 'saving', 'functions', '.']"
27,type loadData struct {,"['type', 'loadData', 'struct', '{']","['keyword', 'identifier', 'keyword', 'operator']"
28,    c       context.Context,"['c', 'context', '.', 'Context']","['identifier', 'identifier', 'operator', 'identifier']"
29,    r       *http.Request       //http response,"['r', '*', 'http', '.', 'Request', '//http response']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'comment', 'http', 'response']"
30,    w       http.ResponseWriter //http writer,"['w', 'http', '.', 'ResponseWriter', '//http writer']","['identifier', 'identifier', 'operator', 'identifier', 'comment', 'http', 'writer']"
31,    ctx     context.Context,"['ctx', 'context', '.', 'Context']","['identifier', 'identifier', 'operator', 'identifier']"
32,    cleanUp []string // cleanUp is a list of filenames that need cleaning up at the end of the saving.,"['cleanUp', '[]', 'string', '// cleanUp is a list of filenames that need cleaning up at the end of the saving.']","['identifier', 'operator', 'identifier', 'comment', 'cleanUp', 'is', 'a', 'list', 'of', 'filenames', 'that', 'need', 'cleaning', 'up', 'at', 'the', 'end', 'of', 'the', 'saving', '.']"
33,    failed  bool     // failed indicates that one or more of the saving steps failed.,"['failed', 'bool', '// failed indicates that one or more of the saving steps failed.']","['identifier', 'identifier', 'comment', 'failed', 'indicates', 'that', 'one', 'or', 'more', 'of', 'the', 'saving', 'steps', 'failed', '.']"
34,},['}'],['operator']
35,type jsonStruct struct {,"['type', 'jsonStruct', 'struct', '{']","['keyword', 'identifier', 'keyword', 'operator']"
36,    User struct {,"['User', 'struct', '{']","['identifier', 'keyword', 'operator']"
37,"        Gender string `json:""gender""`","['Gender', 'string', 'json', ':', '""gender""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
38,"        Age    string `json:""age""`","['Age', 'string', 'json', ':', '""age""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
39,"        ID     string `json:""id""`","['ID', 'string', 'json', ':', '""id""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
40,"    } `json:""user""`","['}', 'json', ':', '""user""']","['operator', 'identifier', 'operator', 'string_literal']"
41,    Stim map[string]struct {,"['Stim', 'map', '[', 'string', ']', 'struct', '{']","['identifier', 'keyword', 'operator', 'identifier', 'operator', 'keyword', 'operator']"
42,"        Index           int    `json:""index""`","['Index', 'int', 'json', ':', '""index""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
43,"        Word            string `json:""word""`","['Word', 'string', 'json', ':', '""word""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
44,"        WordDisplayTime int    `json:""wordDisplayTime""`","['WordDisplayTime', 'int', 'json', ':', '""wordDisplayTime""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
45,"        AnswerMaxTime   int    `json:""answerMaxTime""`","['AnswerMaxTime', 'int', 'json', ':', '""answerMaxTime""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
46,"        FixationTime    int    `json:""fixationTime""`","['FixationTime', 'int', 'json', ':', '""fixationTime""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
47,"        Train           bool   `json:""train""`","['Train', 'bool', 'json', ':', '""train""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
48,"        Test            bool   `json:""test""`","['Test', 'bool', 'json', ':', '""test""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
49,"        Grammatical     bool   `json:""grammatical""`","['Grammatical', 'bool', 'json', ':', '""grammatical""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
50,"        Grammar         string `json:""grammar""`","['Grammar', 'string', 'json', ':', '""grammar""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
51,"        Keyboard        bool   `json:""keyboard""`","['Keyboard', 'bool', 'json', ':', '""keyboard""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
52,"        TestSeq         int    `json:""testSeq""`","['TestSeq', 'int', 'json', ':', '""testSeq""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
53,"    } `json:""viewedTrials""`","['}', 'json', ':', '""viewedTrials""']","['operator', 'identifier', 'operator', 'string_literal']"
54,    Answers struct {,"['Answers', 'struct', '{']","['identifier', 'keyword', 'operator']"
55,        Training []struct {,"['Training', '[]', 'struct', '{']","['identifier', 'operator', 'keyword', 'operator']"
56,"            Answer   string  `json:""ans""`","['Answer', 'string', 'json', ':', '""ans""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
57,"            RT       float32 `json:""RT""`","['RT', 'float32', 'json', ':', '""RT""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
58,"            GtAnswer string  `json:""gtAns""`","['GtAnswer', 'string', 'json', ':', '""gtAns""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
59,"            Correct  int     `json:""correct""`","['Correct', 'int', 'json', ':', '""correct""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
60,"        } `json:""training""`","['}', 'json', ':', '""training""']","['operator', 'identifier', 'operator', 'string_literal']"
61,        Test []struct {,"['Test', '[]', 'struct', '{']","['identifier', 'operator', 'keyword', 'operator']"
62,"            Answer   string  `json:""ans""`","['Answer', 'string', 'json', ':', '""ans""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
63,"            RT       float32 `json:""RT""`","['RT', 'float32', 'json', ':', '""RT""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
64,"            GtAnswer bool    `json:""gtAns""`","['GtAnswer', 'bool', 'json', ':', '""gtAns""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
65,"            Correct  int     `json:""correct""`","['Correct', 'int', 'json', ':', '""correct""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
66,"        } `json:""test""`","['}', 'json', ':', '""test""']","['operator', 'identifier', 'operator', 'string_literal']"
67,"    } `json:""answers""`","['}', 'json', ':', '""answers""']","['operator', 'identifier', 'operator', 'string_literal']"
68,    Trials []struct {,"['Trials', '[]', 'struct', '{']","['identifier', 'operator', 'keyword', 'operator']"
69,        Trial struct {,"['Trial', 'struct', '{']","['identifier', 'keyword', 'operator']"
70,"            Index           int    `json:""index""`","['Index', 'int', 'json', ':', '""index""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
71,"            Word            string `json:""word""`","['Word', 'string', 'json', ':', '""word""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
72,"            WordDisplayTime int    `json:""wordDisplayTime""`","['WordDisplayTime', 'int', 'json', ':', '""wordDisplayTime""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
73,"            AnswerMaxTime   int    `json:""answerMaxTime""`","['AnswerMaxTime', 'int', 'json', ':', '""answerMaxTime""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
74,"            FixationTime    int    `json:""fixationTime""`","['FixationTime', 'int', 'json', ':', '""fixationTime""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
75,"            Train           bool   `json:""train""`","['Train', 'bool', 'json', ':', '""train""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
76,"            Test            bool   `json:""test""`","['Test', 'bool', 'json', ':', '""test""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
77,"            Grammatical     bool   `json:""grammatical""`","['Grammatical', 'bool', 'json', ':', '""grammatical""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
78,"            Grammar         string `json:""grammar""`","['Grammar', 'string', 'json', ':', '""grammar""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
79,"            Keyboard        bool   `json:""keyboard""`","['Keyboard', 'bool', 'json', ':', '""keyboard""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
80,"            TestSeq         int    `json:""testSeq""`","['TestSeq', 'int', 'json', ':', '""testSeq""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
81,"        } `json:""trial""`","['}', 'json', ':', '""trial""']","['operator', 'identifier', 'operator', 'string_literal']"
82,        Metadata struct {,"['Metadata', 'struct', '{']","['identifier', 'keyword', 'operator']"
83,"            Instructions string `json:""instructions""`","['Instructions', 'string', 'json', ':', '""instructions""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
84,"            SubmitUrl    string `json:""submitUrl""`","['SubmitUrl', 'string', 'json', ':', '""submitUrl""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
85,"        } `json:""metadata""`","['}', 'json', ':', '""metadata""']","['operator', 'identifier', 'operator', 'string_literal']"
86,"    } `json:""shuffledTrials""`","['}', 'json', ':', '""shuffledTrials""']","['operator', 'identifier', 'operator', 'string_literal']"
87,    Debriefing []struct {,"['Debriefing', '[]', 'struct', '{']","['identifier', 'operator', 'keyword', 'operator']"
88,"        Type             string `json:""type""`","['Type', 'string', 'json', ':', '""type""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
89,"        RadioWithTextAns string `json:""radioWithTextAns""`","['RadioWithTextAns', 'string', 'json', ':', '""radioWithTextAns""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
90,"        TextAns          string `json:""textAns""`","['TextAns', 'string', 'json', ':', '""textAns""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
91,"        Rating           int    `json:""rating""`","['Rating', 'int', 'json', ':', '""rating""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
92,"        RadioOnlyAns     string `json:""radioOnlyAns""`","['RadioOnlyAns', 'string', 'json', ':', '""radioOnlyAns""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
93,"    } `json:""debriefingAns""`","['}', 'json', ':', '""debriefingAns""']","['operator', 'identifier', 'operator', 'string_literal']"
94,},['}'],['operator']
95,type trialStruct []struct {,"['type', 'trialStruct', '[]', 'struct', '{']","['keyword', 'identifier', 'operator', 'keyword', 'operator']"
96,    Trial struct {,"['Trial', 'struct', '{']","['identifier', 'keyword', 'operator']"
97,"        Index           int    `json:""index""`","['Index', 'int', 'json', ':', '""index""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
98,"        Word            string `json:""word""`","['Word', 'string', 'json', ':', '""word""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
99,"        WordDisplayTime int    `json:""wordDisplayTime""`","['WordDisplayTime', 'int', 'json', ':', '""wordDisplayTime""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
100,"        AnswerMaxTime   int    `json:""answerMaxTime""`","['AnswerMaxTime', 'int', 'json', ':', '""answerMaxTime""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
101,"        FixationTime    int    `json:""fixationTime""`","['FixationTime', 'int', 'json', ':', '""fixationTime""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
102,"        Train           bool   `json:""train""`","['Train', 'bool', 'json', ':', '""train""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
103,"        Test            bool   `json:""test""`","['Test', 'bool', 'json', ':', '""test""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
104,"        Grammatical     bool   `json:""grammatical""`","['Grammatical', 'bool', 'json', ':', '""grammatical""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
105,"        Grammar         string `json:""grammar""`","['Grammar', 'string', 'json', ':', '""grammar""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
106,"        Keyboard        bool   `json:""keyboard""`","['Keyboard', 'bool', 'json', ':', '""keyboard""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
107,"        TestSeq         int    `json:""testSeq""`","['TestSeq', 'int', 'json', ':', '""testSeq""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
108,"    } `json:""trial""`","['}', 'json', ':', '""trial""']","['operator', 'identifier', 'operator', 'string_literal']"
109,    Metadata struct {,"['Metadata', 'struct', '{']","['identifier', 'keyword', 'operator']"
110,"        Instructions string `json:""instructions""`","['Instructions', 'string', 'json', ':', '""instructions""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
111,"        SubmitUrl    string `json:""submitUrl""`","['SubmitUrl', 'string', 'json', ':', '""submitUrl""']","['identifier', 'identifier', 'identifier', 'operator', 'string_literal']"
112,"    } `json:""metadata""`","['}', 'json', ':', '""metadata""']","['operator', 'identifier', 'operator', 'string_literal']"
113,},['}'],['operator']
114,"func fromJSON(r io.Reader) (jsonStruct, error) {","['func', 'fromJSON', '(', 'r', 'io', '.', 'Reader', ')', '(', 'jsonStruct', ',', 'error', ')', '{']","['keyword', 'identifier', 'operator', 'identifier', 'identifier', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator']"
115,    var x jsonStruct,"['var', 'x', 'jsonStruct']","['keyword', 'identifier', 'identifier']"
116,    dec := json.NewDecoder(r),"['dec', ':=', 'json', '.', 'NewDecoder', '(', 'r', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
117,    err := dec.Decode(&x),"['err', ':=', 'dec', '.', 'Decode', '(&', 'x', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
118,"    return x, err","['return', 'x', ',', 'err']","['keyword', 'identifier', 'operator', 'identifier']"
119,},['}'],['operator']
120,"func toJSON(b io.Writer, trial trialStruct) (io.Writer, error) {","['func', 'toJSON', '(', 'b', 'io', '.', 'Writer', ',', 'trial', 'trialStruct', ')', '(', 'io', '.', 'Writer', ',', 'error', ')', '{']","['keyword', 'identifier', 'operator', 'identifier', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator']"
121,    enc := json.NewEncoder(b),"['enc', ':=', 'json', '.', 'NewEncoder', '(', 'b', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
122,    err := enc.Encode(&trial),"['err', ':=', 'enc', '.', 'Encode', '(&', 'trial', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
123,"    return b, err","['return', 'b', ',', 'err']","['keyword', 'identifier', 'operator', 'identifier']"
124,},['}'],['operator']
125,func init() {,"['func', 'init', '()', '{']","['keyword', 'identifier', 'operator', 'operator']"
126,"    http.HandleFunc(""/"", handleStatic)","['http', '.', 'HandleFunc', '(', '""/""', ',', 'handleStatic', ')']","['identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator']"
127,"    http.HandleFunc(""/saveUserData"", handleSaveUser)","['http', '.', 'HandleFunc', '(', '""/saveUserData""', ',', 'handleSaveUser', ')']","['identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator']"
128,"    http.HandleFunc(""/loadTrials"", handleloadTrials)","['http', '.', 'HandleFunc', '(', '""/loadTrials""', ',', 'handleloadTrials', ')']","['identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator']"
129,},['}'],['operator']
130,"func handleStatic(w http.ResponseWriter, r *http.Request) {","['func', 'handleStatic', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['keyword', 'identifier', 'operator', 'identifier', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator']"
131,"    w.Header().Set(""Cache-Control"", ""no-cache"")","['w', '.', 'Header', '().', 'Set', '(', '""Cache-Control"", ""no-cache""', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator']"
132,"    http.ServeFile(w, r, ""static/""+r.URL.Path)","['http', '.', 'ServeFile', '(', 'w', ',', 'r', ',', '""static/""', '+', 'r', '.', 'URL', '.', 'Path', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
133,},['}'],['operator']
134,// testSave is the main saving entry point that calls the GCS operations.,['// testSave is the main saving entry point that calls the GCS operations.'],"['comment', 'testSave', 'is', 'the', 'main', 'saving', 'entry', 'point', 'that', 'calls', 'the', 'GCS', 'operations', '.']"
135,"func handleSaveUser(w http.ResponseWriter, r *http.Request) {","['func', 'handleSaveUser', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['keyword', 'identifier', 'operator', 'identifier', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator']"
136,    c := appengine.NewContext(r),"['c', ':=', 'appengine', '.', 'NewContext', '(', 'r', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
137,"    if bucket == """" {","['if', 'bucket', '==', '""""', '{']","['keyword', 'identifier', 'operator', 'string_literal', 'operator']"
138,        var err error,"['var', 'err', 'error']","['keyword', 'identifier', 'identifier']"
139,"        if bucket, err = file.DefaultBucketName(c); err != nil {","['if', 'bucket', ',', 'err', '=', 'file', '.', 'DefaultBucketName', '(', 'c', ');', 'err', '!=', 'nil', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
140,"            // log.Errorf(c, ""failed to get default GCS bucket name: %v"", err)","['// log.Errorf(c, ""failed to get default GCS bucket name: %v"", err)']","['comment', 'log.Errorf', '(', 'c', ',', '``', 'failed', 'to', 'get', 'default', 'GCS', 'bucket', 'name', ':', '%', 'v', ""''"", ',', 'err', ')']"
141,            return,['return'],['keyword']
142,        },['}'],['operator']
143,    },['}'],['operator']
144,    hc := &http.Client{,"['hc', ':=', '&', 'http', '.', 'Client', '{']","['identifier', 'operator', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
145,        Transport: &oauth2.Transport{,"['Transport', ':', '&', 'oauth2', '.', 'Transport', '{']","['identifier', 'operator', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
146,"            Source: google.AppEngineTokenSource(c, storage.ScopeFullControl),","['Source', ':', 'go', 'ogle', '.', 'AppEngineTokenSource', '(', 'c', ',', 'storage', '.', 'ScopeFullControl', '),']","['identifier', 'operator', 'keyword', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
147,"            Base:   &urlfetch.Transport{Context: c},","['Base', ':', '&', 'urlfetch', '.', 'Transport', '{', 'Context', ':', 'c', '},']","['identifier', 'operator', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
148,"        },","['},']",['operator']
149,    },['}'],['operator']
150,"    ctx := cloud.NewContext(appengine.AppID(c), hc)","['ctx', ':=', 'cloud', '.', 'NewContext', '(', 'appengine', '.', 'AppID', '(', 'c', '),', 'hc', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
151,    // structure to holds information needed to run the various saving functions,['// structure to holds information needed to run the various saving functions'],"['comment', 'structure', 'to', 'holds', 'information', 'needed', 'to', 'run', 'the', 'various', 'saving', 'functions']"
152,    d := &saveData{,"['d', ':=', '&', 'saveData', '{']","['identifier', 'operator', 'operator', 'identifier', 'operator']"
153,"        c:   c,","['c', ':', 'c', ',']","['identifier', 'operator', 'identifier', 'operator']"
154,"        r:   r,","['r', ':', 'r', ',']","['identifier', 'operator', 'identifier', 'operator']"
155,"        w:   w,","['w', ':', 'w', ',']","['identifier', 'operator', 'identifier', 'operator']"
156,"        ctx: ctx,","['ctx', ':', 'ctx', ',']","['identifier', 'operator', 'identifier', 'operator']"
157,    },['}'],['operator']
158,    // retrieve data,['// retrieve data'],"['comment', 'retrieve', 'data']"
159,"    processedJson, trials, trainAns, testAns, stimSeq, userDetails, debriefingAns, rawJson := getJsonUserData(d.r, d.w)","['processedJson', ',', 'trials', ',', 'trainAns', ',', 'testAns', ',', 'stimSeq', ',', 'userDetails', ',', 'debriefingAns', ',', 'rawJson', ':=', 'getJsonUserData', '(', 'd', '.', 'r', ',', 'd', '.', 'w', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
160,    //,['//'],['comment']
161,    d.createUserFolder(processedJson.User.ID),"['d', '.', 'createUserFolder', '(', 'processedJson', '.', 'User', '.', 'ID', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
162,"    // d.saveJson(k.User.ID, ""raw"", z)","['// d.saveJson(k.User.ID, ""raw"", z)']","['comment', 'd.saveJson', '(', 'k.User.ID', ',', '``', 'raw', ""''"", ',', 'z', ')']"
163,"    d.saveJson(processedJson.User.ID, ""trials"", trials)","['d', '.', 'saveJson', '(', 'processedJson', '.', 'User', '.', 'ID', ',', '""trials""', ',', 'trials', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator']"
164,"    d.saveJson(processedJson.User.ID, ""train"", trainAns)","['d', '.', 'saveJson', '(', 'processedJson', '.', 'User', '.', 'ID', ',', '""train""', ',', 'trainAns', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator']"
165,"    d.saveJson(processedJson.User.ID, ""test"", testAns)","['d', '.', 'saveJson', '(', 'processedJson', '.', 'User', '.', 'ID', ',', '""test""', ',', 'testAns', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator']"
166,"    d.saveJson(processedJson.User.ID, ""stim"", stimSeq)","['d', '.', 'saveJson', '(', 'processedJson', '.', 'User', '.', 'ID', ',', '""stim""', ',', 'stimSeq', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator']"
167,"    d.saveJson(processedJson.User.ID, ""user"", userDetails)","['d', '.', 'saveJson', '(', 'processedJson', '.', 'User', '.', 'ID', ',', '""user""', ',', 'userDetails', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator']"
168,"    d.saveJson(processedJson.User.ID, ""debriefing"", debriefingAns)","['d', '.', 'saveJson', '(', 'processedJson', '.', 'User', '.', 'ID', ',', '""debriefing""', ',', 'debriefingAns', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator']"
169,"    d.saveJson(processedJson.User.ID, ""raw"", rawJson)","['d', '.', 'saveJson', '(', 'processedJson', '.', 'User', '.', 'ID', ',', '""raw""', ',', 'rawJson', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator']"
170,},['}'],['operator']
171,// Deal with error,['// Deal with error'],"['comment', 'Deal', 'with', 'error']"
172,"func (d *saveData) errorf(format string, args ...interface{}) {","['func', '(', 'd', '*', 'saveData', ')', 'errorf', '(', 'for', 'mat', 'string', ',', 'args', '...', 'interface', '{})', '{']","['keyword', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'keyword', 'identifier', 'identifier', 'operator', 'identifier', 'operator', 'keyword', 'operator', 'operator']"
173,    d.failed = true,"['d', '.', 'failed', '=', 'true']","['identifier', 'operator', 'identifier', 'operator', 'identifier']"
174,},['}'],['operator']
175,"func getJsonUserData(r *http.Request, w http.ResponseWriter) (jsonStruct, []byte, []byte, []byte, []byte, []byte, []byte, []byte) {","['func', 'getJsonUserData', '(', 'r', '*', 'http', '.', 'Request', ',', 'w', 'http', '.', 'ResponseWriter', ')', '(', 'jsonStruct', ',', '[]', 'byte', ',', '[]', 'byte', ',', '[]', 'byte', ',', '[]', 'byte', ',', '[]', 'byte', ',', '[]', 'byte', ',', '[]', 'byte', ')', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'identifier', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator', 'operator']"
176,    defer r.Body.Close(),"['defer', 'r', '.', 'Body', '.', 'Close', '()']","['identifier', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
177,"    procJson, err := fromJSON(r.Body)","['procJson', ',', 'err', ':=', 'fromJSON', '(', 'r', '.', 'Body', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
178,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator']"
179,        log.Fatal(err),"['log', '.', 'Fatal', '(', 'err', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
180,    },['}'],['operator']
181,"    log.Printf(""initial structure: "", procJson)","['log', '.', 'Printf', '(', '""initial structure: ""', ',', 'procJson', ')']","['identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator']"
182,"    log.Printf(""%+v\n"", procJson)","['log', '.', 'Printf', '(', '""%+v\\n""', ',', 'procJson', ')']","['identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator']"
183,"    trials, err := json.Marshal(procJson.Trials)","['trials', ',', 'err', ':=', 'json', '.', 'Marshal', '(', 'procJson', '.', 'Trials', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
184,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator']"
185,        log.Fatal(err),"['log', '.', 'Fatal', '(', 'err', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
186,    },['}'],['operator']
187,"    trainAns, err := json.Marshal(procJson.Answers.Training)","['trainAns', ',', 'err', ':=', 'json', '.', 'Marshal', '(', 'procJson', '.', 'Answers', '.', 'Training', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
188,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator']"
189,        log.Fatal(err),"['log', '.', 'Fatal', '(', 'err', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
190,    },['}'],['operator']
191,"    testAns, err := json.Marshal(procJson.Answers.Test)","['testAns', ',', 'err', ':=', 'json', '.', 'Marshal', '(', 'procJson', '.', 'Answers', '.', 'Test', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
192,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator']"
193,        log.Fatal(err),"['log', '.', 'Fatal', '(', 'err', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
194,    },['}'],['operator']
195,"    stimSeq, err := json.Marshal(procJson.Stim)","['stimSeq', ',', 'err', ':=', 'json', '.', 'Marshal', '(', 'procJson', '.', 'Stim', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
196,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator']"
197,        log.Fatal(err),"['log', '.', 'Fatal', '(', 'err', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
198,    },['}'],['operator']
199,"    userDetail, err := json.Marshal(procJson.User)","['userDetail', ',', 'err', ':=', 'json', '.', 'Marshal', '(', 'procJson', '.', 'User', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
200,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator']"
201,        log.Fatal(err),"['log', '.', 'Fatal', '(', 'err', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
202,    },['}'],['operator']
203,"    debriefingAns, err := json.Marshal(procJson.Debriefing)","['debriefingAns', ',', 'err', ':=', 'json', '.', 'Marshal', '(', 'procJson', '.', 'Debriefing', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
204,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator']"
205,        log.Fatal(err),"['log', '.', 'Fatal', '(', 'err', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
206,    },['}'],['operator']
207,"    rawJson, err := json.Marshal(procJson)","['rawJson', ',', 'err', ':=', 'json', '.', 'Marshal', '(', 'procJson', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
208,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator']"
209,        log.Fatal(err),"['log', '.', 'Fatal', '(', 'err', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
210,    },['}'],['operator']
211,"    return procJson, trials, trainAns, testAns, stimSeq, userDetail, debriefingAns, rawJson","['return', 'procJson', ',', 'trials', ',', 'trainAns', ',', 'testAns', ',', 'stimSeq', ',', 'userDetail', ',', 'debriefingAns', ',', 'rawJson']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier']"
212,},['}'],['operator']
213,func (d *saveData) createUserFolder(folderName string) {,"['func', '(', 'd', '*', 'saveData', ')', 'createUserFolder', '(', 'folderName', 'string', ')', '{']","['keyword', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'identifier', 'operator', 'operator']"
214,"    fName := folderName + ""/""","['fName', ':=', 'folderName', '+', '""/""']","['identifier', 'operator', 'identifier', 'operator', 'string_literal']"
215,"    wc := storage.NewWriter(d.ctx, bucket, fName)","['wc', ':=', 'storage', '.', 'NewWriter', '(', 'd', '.', 'ctx', ',', 'bucket', ',', 'fName', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
216,"    wc.ContentType = ""text/plain""","['wc', '.', 'ContentType', '=', '""text/plain""']","['identifier', 'operator', 'identifier', 'operator', 'string_literal']"
217,"    d.cleanUp = append(d.cleanUp, fName)","['d', '.', 'cleanUp', '=', 'append', '(', 'd', '.', 'cleanUp', ',', 'fName', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
218,    if err := wc.Close(); err != nil {,"['if', 'err', ':=', 'wc', '.', 'Close', '();', 'err', '!=', 'nil', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
219,"        d.errorf(""createFile: unable to close bucket %q, file %q: %v"", bucket, fName, err)","['d', '.', 'errorf', '(', '""createFile: unable to close bucket %q, file %q: %v""', ',', 'bucket', ',', 'fName', ',', 'err', ')']","['identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
220,        return,['return'],['keyword']
221,    },['}'],['operator']
222,},['}'],['operator']
223,"func (d *saveData) saveJson(folderName string, fileName string, fileContent []byte) {","['func', '(', 'd', '*', 'saveData', ')', 'saveJson', '(', 'folderName', 'string', ',', 'fileName', 'string', ',', 'fileContent', '[]', 'byte', ')', '{']","['keyword', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'identifier', 'operator', 'identifier', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator']"
224,"    fullName := folderName + ""/"" + fileName","['fullName', ':=', 'folderName', '+', '""/""', '+', 'fileName']","['identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier']"
225,"    wc := storage.NewWriter(d.ctx, bucket, fullName)","['wc', ':=', 'storage', '.', 'NewWriter', '(', 'd', '.', 'ctx', ',', 'bucket', ',', 'fullName', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
226,"    wc.ContentType = ""text/plain""","['wc', '.', 'ContentType', '=', '""text/plain""']","['identifier', 'operator', 'identifier', 'operator', 'string_literal']"
227,"    d.cleanUp = append(d.cleanUp, fullName)","['d', '.', 'cleanUp', '=', 'append', '(', 'd', '.', 'cleanUp', ',', 'fullName', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
228,"    d.createFile(fullName, fileContent)","['d', '.', 'createFile', '(', 'fullName', ',', 'fileContent', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
229,},['}'],['operator']
230,"func (d *saveData) createFile(fileName string, content []byte) {","['func', '(', 'd', '*', 'saveData', ')', 'createFile', '(', 'fileName', 'string', ',', 'content', '[]', 'byte', ')', '{']","['keyword', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator']"
231,"    wc := storage.NewWriter(d.ctx, bucket, fileName)","['wc', ':=', 'storage', '.', 'NewWriter', '(', 'd', '.', 'ctx', ',', 'bucket', ',', 'fileName', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
232,"    wc.ContentType = ""text/plain""","['wc', '.', 'ContentType', '=', '""text/plain""']","['identifier', 'operator', 'identifier', 'operator', 'string_literal']"
233,"    d.cleanUp = append(d.cleanUp, fileName)","['d', '.', 'cleanUp', '=', 'append', '(', 'd', '.', 'cleanUp', ',', 'fileName', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
234,"    if _, err := wc.Write([]byte(content)); err != nil {","['if', '_', ',', 'err', ':=', 'wc', '.', 'Write', '([]', 'byte', '(', 'content', '));', 'err', '!=', 'nil', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
235,"        d.errorf(""createFile: unable to write data to bucket %q, file %q: %v"", bucket, fileName, err)","['d', '.', 'errorf', '(', '""createFile: unable to write data to bucket %q, file %q: %v""', ',', 'bucket', ',', 'fileName', ',', 'err', ')']","['identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
236,        return,['return'],['keyword']
237,    },['}'],['operator']
238,    if err := wc.Close(); err != nil {,"['if', 'err', ':=', 'wc', '.', 'Close', '();', 'err', '!=', 'nil', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
239,"        d.errorf(""createFile: unable to close bucket %q, file %q: %v"", bucket, fileName, err)","['d', '.', 'errorf', '(', '""createFile: unable to close bucket %q, file %q: %v""', ',', 'bucket', ',', 'fileName', ',', 'err', ')']","['identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
240,        return,['return'],['keyword']
241,    },['}'],['operator']
242,},['}'],['operator']
243,"func handleloadTrials(w http.ResponseWriter, r *http.Request) {","['func', 'handleloadTrials', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['keyword', 'identifier', 'operator', 'identifier', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator']"
244,    c := appengine.NewContext(r),"['c', ':=', 'appengine', '.', 'NewContext', '(', 'r', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
245,"    if bucket == """" {","['if', 'bucket', '==', '""""', '{']","['keyword', 'identifier', 'operator', 'string_literal', 'operator']"
246,        var err error,"['var', 'err', 'error']","['keyword', 'identifier', 'identifier']"
247,"        if bucket, err = file.DefaultBucketName(c); err != nil {","['if', 'bucket', ',', 'err', '=', 'file', '.', 'DefaultBucketName', '(', 'c', ');', 'err', '!=', 'nil', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
248,"            // log.Errorf(c, ""failed to get default GCS bucket name: %v"", err)","['// log.Errorf(c, ""failed to get default GCS bucket name: %v"", err)']","['comment', 'log.Errorf', '(', 'c', ',', '``', 'failed', 'to', 'get', 'default', 'GCS', 'bucket', 'name', ':', '%', 'v', ""''"", ',', 'err', ')']"
249,            return,['return'],['keyword']
250,        },['}'],['operator']
251,    },['}'],['operator']
252,    hc := &http.Client{,"['hc', ':=', '&', 'http', '.', 'Client', '{']","['identifier', 'operator', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
253,        Transport: &oauth2.Transport{,"['Transport', ':', '&', 'oauth2', '.', 'Transport', '{']","['identifier', 'operator', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
254,"            Source: google.AppEngineTokenSource(c, storage.ScopeFullControl),","['Source', ':', 'go', 'ogle', '.', 'AppEngineTokenSource', '(', 'c', ',', 'storage', '.', 'ScopeFullControl', '),']","['identifier', 'operator', 'keyword', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
255,"            Base:   &urlfetch.Transport{Context: c},","['Base', ':', '&', 'urlfetch', '.', 'Transport', '{', 'Context', ':', 'c', '},']","['identifier', 'operator', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
256,"        },","['},']",['operator']
257,    },['}'],['operator']
258,"    ctx := cloud.NewContext(appengine.AppID(c), hc)","['ctx', ':=', 'cloud', '.', 'NewContext', '(', 'appengine', '.', 'AppID', '(', 'c', '),', 'hc', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
259,    // structure to holds information needed to run the various saving functions,['// structure to holds information needed to run the various saving functions'],"['comment', 'structure', 'to', 'holds', 'information', 'needed', 'to', 'run', 'the', 'various', 'saving', 'functions']"
260,    d := &saveData{,"['d', ':=', '&', 'saveData', '{']","['identifier', 'operator', 'operator', 'identifier', 'operator']"
261,"        c:   c,","['c', ':', 'c', ',']","['identifier', 'operator', 'identifier', 'operator']"
262,"        r:   r,","['r', ':', 'r', ',']","['identifier', 'operator', 'identifier', 'operator']"
263,"        w:   w,","['w', ':', 'w', ',']","['identifier', 'operator', 'identifier', 'operator']"
264,"        ctx: ctx,","['ctx', ':', 'ctx', ',']","['identifier', 'operator', 'identifier', 'operator']"
265,    },['}'],['operator']
266,"    userID := r.URL.Query().Get(""id"")","['userID', ':=', 'r', '.', 'URL', '.', 'Query', '().', 'Get', '(', '""id""', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator']"
267,    log.Println(userID),"['log', '.', 'Println', '(', 'userID', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
268,    trialJson := d.readFile(userID),"['trialJson', ':=', 'd', '.', 'readFile', '(', 'userID', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
269,    w.Write(trialJson),"['w', '.', 'Write', '(', 'trialJson', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
270,},['}'],['operator']
271,// readFile reads the named file in Google Cloud Storage.,['// readFile reads the named file in Google Cloud Storage.'],"['comment', 'readFile', 'reads', 'the', 'named', 'file', 'in', 'Google', 'Cloud', 'Storage', '.']"
272,func (d *saveData) readFile(fileName string) []byte {,"['func', '(', 'd', '*', 'saveData', ')', 'readFile', '(', 'fileName', 'string', ')', '[]', 'byte', '{']","['keyword', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'identifier', 'operator', 'operator', 'identifier', 'operator']"
273,"    trialName := fileName + ""/trials""","['trialName', ':=', 'fileName', '+', '""/trials""']","['identifier', 'operator', 'identifier', 'operator', 'string_literal']"
274,"    rc, err := storage.NewReader(d.ctx, bucket, trialName)","['rc', ',', 'err', ':=', 'storage', '.', 'NewReader', '(', 'd', '.', 'ctx', ',', 'bucket', ',', 'trialName', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
275,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator']"
276,"        d.errorf(""readFile: unable to open file from bucket %q, file %q: %v"", bucket, trialName, err)","['d', '.', 'errorf', '(', '""readFile: unable to open file from bucket %q, file %q: %v""', ',', 'bucket', ',', 'trialName', ',', 'err', ')']","['identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
277,    },['}'],['operator']
278,    defer rc.Close(),"['defer', 'rc', '.', 'Close', '()']","['identifier', 'identifier', 'operator', 'identifier', 'operator']"
279,"    slurp, err := ioutil.ReadAll(rc)","['slurp', ',', 'err', ':=', 'ioutil', '.', 'ReadAll', '(', 'rc', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
280,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator']"
281,"        d.errorf(""readFile: unable to read data from bucket %q, file %q: %v"", bucket, fileName, err)","['d', '.', 'errorf', '(', '""readFile: unable to read data from bucket %q, file %q: %v""', ',', 'bucket', ',', 'fileName', ',', 'err', ')']","['identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
282,    },['}'],['operator']
283,    return slurp,"['return', 'slurp']","['keyword', 'identifier']"
284,},['}'],['operator']
