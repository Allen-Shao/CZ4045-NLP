,text,token,annotation
0,"I'm trying to run a go program using LiteIDE x22 but I get the message

","[""I'm"", 'trying', 'to', 'run', 'a', 'go', 'program', 'using', 'LiteIDE', 'x22', 'but', 'I', 'get', 'the', 'message']","['NNP', 'VBG', 'TO', 'VB', 'DT', 'NN', 'NN', 'VBG', 'NNP', 'NNP', 'CC', 'PRP', 'VBP', 'DT', 'NN']"
1,C:/Go/bin/go.exe build  [C:/Users/admins/Desktop/desktp/worm_scraper-master],"['C:/Go/bin/go.exe', 'build', '[C:/Users/admins/Desktop/desktp/worm_scraper-master]']","['DIRECTORY', 'IDENTIFIER', 'DIRECTORY']"
2,"worm_scraper.go:11:2: cannot find package ""github.com/codegangsta/cli"" in any of:","['worm_scraper', '.', 'go', ':', '11', ':', '2', ':', 'cannot', 'find', 'package', '""github.com/codegangsta/cli""', 'in', 'any', 'of', ':']","['IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'KEYWORD', 'STRING_LITERAL', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION']"
3,    C:\Go\src\pkg\github.com\codegangsta\cli (from $GOROOT),"['C', ':', 'Go', 'src', 'pkg', 'github', '.', 'com', 'codegangsta', 'cli', '(', 'from', '$', 'GOROOT', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
4,    C:\users\admins\gostuff\src\github.com\codegangsta\cli (from $GOPATH),"['C', ':', 'users', 'admins', 'go', 'stuff', 'src', 'github', '.', 'com', 'codegangsta', 'cli', '(', 'from', '$', 'GOPATH', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
5,"worm_scraper.go:12:2: cannot find package ""github.com/puerkitobio/goquery"" in any of:","['worm_scraper', '.', 'go', ':', '12', ':', '2', ':', 'cannot', 'find', 'package', '""github.com/puerkitobio/goquery""', 'in', 'any', 'of', ':']","['IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'KEYWORD', 'STRING_LITERAL', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION']"
6,    C:\Go\src\pkg\github.com\puerkitobio\goquery (from $GOROOT),"['C', ':', 'Go', 'src', 'pkg', 'github', '.', 'com', 'puerkitobio', 'go', 'query', '(', 'from', '$', 'GOROOT', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
7,    C:\users\admins\gostuff\src\github.com\puerkitobio\goquery (from $GOPATH),"['C', ':', 'users', 'admins', 'go', 'stuff', 'src', 'github', '.', 'com', 'puerkitobio', 'go', 'query', '(', 'from', '$', 'GOPATH', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
8,Error: process exited with code 1.,"['Error', ':', 'process', 'exited', 'with', 'code', '1', '.']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION']"
9,"

I think this means it's looking for it on my harddrive instead of online right? (btw I'm pretty clueless about programming just trying to something some else wrote) 
how to I get it to access the web?
here's the full code

","['I', 'think', 'this', 'means', ""it's"", 'looking', 'for', 'it', 'on', 'my', 'harddrive', 'instead', 'of', 'online', 'right?', '(btw', ""I'm"", 'pretty', 'clueless', 'about', 'programming', 'just', 'trying', 'to', 'something', 'some', 'else', 'wrote)', 'how', 'to', 'I', 'get', 'it', 'to', 'access', 'the', 'web?', ""here's"", 'the', 'full', 'code']","['PRP', 'VBP', 'DT', 'VBZ', 'JJ', 'VBG', 'IN', 'PRP', 'IN', 'PRP$', 'JJ', 'RB', 'IN', 'JJ', 'NN', 'NNP', 'NNP', 'RB', 'NN', 'IN', 'VBG', 'RB', 'VBG', 'TO', 'NN', 'DT', 'RB', 'JJ', 'WRB', 'TO', 'PRP', 'VB', 'PRP', 'TO', 'NN', 'DT', 'NN', 'VBD', 'DT', 'JJ', 'NN']"
10,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
11,import (,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
12,"    ""errors""","['""errors""']",['STRING_LITERAL']
13,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
14,"    ""os""","['""os""']",['STRING_LITERAL']
15,"    ""os/exec""","['""os/exec""']",['STRING_LITERAL']
16,"    ""regexp""","['""regexp""']",['STRING_LITERAL']
17,"    ""strings""","['""strings""']",['STRING_LITERAL']
18,"    ""github.com/codegangsta/cli""","['""github.com/codegangsta/cli""']",['STRING_LITERAL']
19,"    ""github.com/puerkitobio/goquery""","['""github.com/puerkitobio/goquery""']",['STRING_LITERAL']
20,),[')'],['PUNCTUATION']
21,const (,"['const', '(']","['KEYWORD', 'PUNCTUATION']"
22,"    MainSite        = ""https://parahumans.wordpress.com/""","['MainSite', '=', '""https://parahumans.wordpress.com/""']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
23,"    TableOfContents = ""https://parahumans.wordpress.com/table-of-contents/""","['TableOfContents', '=', '""https://parahumans.wordpress.com/table-of-contents/""']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
24,),[')'],['PUNCTUATION']
25,type Arc struct {,"['type', 'Arc', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
26,    Identifier string,"['Identifier', 'string']","['IDENTIFIER', 'IDENTIFIER']"
27,    Title      string,"['Title', 'string']","['IDENTIFIER', 'IDENTIFIER']"
28,    Chapters   []Chapter,"['Chapters', '[]', 'Chapter']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
29,},['}'],['PUNCTUATION']
30,type Chapter struct {,"['type', 'Chapter', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
31,    Title      string,"['Title', 'string']","['IDENTIFIER', 'IDENTIFIER']"
32,    Url        string,"['Url', 'string']","['IDENTIFIER', 'IDENTIFIER']"
33,    Tags       []string,"['Tags', '[]', 'string']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
34,    Paragraphs []Paragraph,"['Paragraphs', '[]', 'Paragraph']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
35,    Retries    int,"['Retries', 'int']","['IDENTIFIER', 'IDENTIFIER']"
36,    DatePosted string,"['DatePosted', 'string']","['IDENTIFIER', 'IDENTIFIER']"
37,},['}'],['PUNCTUATION']
38,type Paragraph string,"['type', 'Paragraph', 'string']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
39,// Format the paragraph,"['//', 'Format', 'the', 'paragraph']","['COMMENT', 'IN', 'DT', 'NN']"
40,func (p *Paragraph) Format() {,"['func', '(', 'p', '*', 'Paragraph', ')', 'Format', '()', '{']","['KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
41,    s := string(*p),"['s', ':=', 'string', '(*', 'p', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
42,    // Handle emphasis,"['//', 'Handle', 'emphasis']","['COMMENT', 'NNP', 'NN']"
43,"    s = strings.Replace(s, """", ""*"", -1)","['s', '=', 'strings.Replace(s, """", ""*"", -1)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
44,"    s = strings.Replace(s, """", ""*"", -1)","['s', '=', 'strings.Replace(s, """", ""*"", -1)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
45,"    s = strings.Replace(s, """", ""*"", -1)","['s', '=', 'strings.Replace(s, """", ""*"", -1)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
46,"    s = strings.Replace(s, """", ""*"", -1)","['s', '=', 'strings.Replace(s, """", ""*"", -1)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
47,    // Handle bold,"['//', 'Handle', 'bold']","['COMMENT', 'NNP', 'VBD']"
48,"    s = strings.Replace(s, """", ""**"", -1)","['s', '=', 'strings.Replace(s, """", ""**"", -1)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
49,"    s = strings.Replace(s, """", ""**"", -1)","['s', '=', 'strings.Replace(s, """", ""**"", -1)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
50,"    s = strings.Replace(s, """", ""**"", -1)","['s', '=', 'strings.Replace(s, """", ""**"", -1)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
51,"    s = strings.Replace(s, """", ""**"", -1)","['s', '=', 'strings.Replace(s, """", ""**"", -1)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
52,    // Remove new lines,"['//', 'Remove', 'new', 'lines']","['COMMENT', 'NNP', 'JJ', 'NNS']"
53,"    s = strings.Replace(s, ""\n"", """", -1)","['s', '=', 'strings.Replace(s, ""\\n"", """", -1)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
54,    // And random double spaces,"['//', 'And', 'random', 'double', 'spaces']","['COMMENT', 'CC', 'VB', 'JJ', 'NNS']"
55,"    s = strings.Replace(s, "".  "", "". "", -1)","['s', '=', 'strings.Replace(s, "".  "", "". "", -1)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
56,    *p = Paragraph(s),"['*', 'p', '=', 'Paragraph', '(', 's', ')']","['POINTER_OPERATOR', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
57,},['}'],['PUNCTUATION']
58,// Return the Arc that the given chapter belongs to,"['//', 'Return', 'the', 'Arc', 'that', 'the', 'given', 'chapter', 'belongs', 'to']","['COMMENT', 'VB', 'DT', 'NNP', 'IN', 'DT', 'VBN', 'NN', 'NNS', 'TO']"
59,"func (ch *Chapter) WhichArc(arcList []*Arc) (*Arc, error) {","['func', '(', 'ch', '*', 'Chapter', ')', 'WhichArc', '(', 'arcList', '[]*', 'Arc', ')', '(*', 'Arc', ',', 'error', ')', '{']","['KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
60,"    for _, arc := range arcList {","['for', '_', ',', 'arc', ':=', 'range', 'arcList', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
61,"        if strings.Replace(ch.Title[:2], ""."", """", -1) == arc.Identifier {","['if', 'strings.Replace(ch.Title[:2], ""."", """", -1)', '==', 'arc', '.', 'Identifier', '{']","['KEYWORD', 'FUNCTION_CALL', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
62,"            return arc, nil","['return', 'arc', ',', 'nil']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
63,        },['}'],['PUNCTUATION']
64,    },['}'],['PUNCTUATION']
65,"    return &Arc{}, errors.New(""chapter '"" + ch.Title + ""' did not match any Arcs"")","['return', '&', 'Arc', '{},', 'errors.New(""chapter \'"" + ch.Title + ""\' did not match any Arcs"")']","['KEYWORD', 'BITWISE_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL']"
66,},['}'],['PUNCTUATION']
67,// Parse a chapter and return it,"['//', 'Parse', 'a', 'chapter', 'and', 'return', 'it']","['COMMENT', 'VB', 'DT', 'NN', 'CC', 'VB', 'PRP']"
68,func (ch *Chapter) Parse(done chan bool) {,"['func', '(', 'ch', '*', 'Chapter', ')', 'Parse', '(', 'done', 'chan', 'bool', ')', '{']","['KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
69,    if ch.Retries > 3 {,"['if', 'ch', '.', 'Retries', '>', '3', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION']"
70,"        panic(""Chapter url '"" + ch.Url + ""' has timed out too many times"")","['panic', '(', '""Chapter url \'""', '+', 'ch', '.', 'Url', '+', '""\' has timed out too many times""', ')']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'STRING_LITERAL', 'PUNCTUATION']"
71,    },['}'],['PUNCTUATION']
72,    // Get the chapter,"['//', 'Get', 'the', 'chapter']","['COMMENT', 'VB', 'DT', 'NN']"
73,"    if strings.HasPrefix(ch.Url, ""http"") == false {","['if', 'strings.HasPrefix(ch.Url, ""http"")', '==', 'false', '{']","['KEYWORD', 'FUNCTION_CALL', 'RELATION_OPERATOR', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
74,        // Make sure it begins with http so goquery can use it,"['//', 'Make', 'sure', 'it', 'begins', 'with', 'http', 'so', 'goquery', 'can', 'use', 'it']","['COMMENT', 'NNP', 'NN', 'PRP', 'VBZ', 'IN', 'NNS', 'RB', 'RB', 'MD', 'VB', 'PRP']"
75,"        ch.Url = ""https://"" + ch.Url","['ch', '.', 'Url', '=', '""https://""', '+', 'ch', '.', 'Url']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
76,    },['}'],['PUNCTUATION']
77,"    doc, err := goquery.NewDocument(ch.Url)","['doc', ',', 'err', ':=', 'go', 'query.NewDocument(ch.Url)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'FUNCTION_CALL']"
78,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
79,        // Try again,"['//', 'Try', 'again']","['COMMENT', 'VB', 'RB']"
80,        ch.Retries++,"['ch', '.', 'Retries', '++']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR']"
81,        go ch.Parse(done),"['go', 'ch.Parse(done)']","['KEYWORD', 'FUNCTION_CALL']"
82,        return,['return'],['KEYWORD']
83,    },['}'],['PUNCTUATION']
84,    // Set the new chapter title,"['//', 'Set', 'the', 'new', 'chapter', 'title']","['COMMENT', 'VB', 'DT', 'JJ', 'NN', 'NN']"
85,"    ch.Title = doc.Find(""h1.entry-title"").Text()","['ch', '.', 'Title', '=', 'doc.Find(""h1.entry-title"").Text()']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
86,    // Set the tags,"['//', 'Set', 'the', 'tags']","['COMMENT', 'NNP', 'DT', 'NN']"
87,"    doc.Find("".entry-meta a[rel=tag]"").Each(func(_ int, s *goquery.Selection) {","['doc.Find("".entry-meta a[rel=tag]"").Each(func(_ int, s *goquery.Selection)', '{']","['FUNCTION_CALL', 'PUNCTUATION']"
88,"        ch.Tags = append(ch.Tags, s.Text())","['ch', '.', 'Tags', '=', 'append', '(', 'ch', '.', 'Tags', ',', 's.Text())']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL']"
89,        if len(ch.Tags) == 0 {,"['if', 'len', '(', 'ch', '.', 'Tags', ')', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
90,"            ch.Tags = append(ch.Tags, ""NONE"")","['ch', '.', 'Tags', '=', 'append', '(', 'ch', '.', 'Tags', ',', '""NONE""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
91,        },['}'],['PUNCTUATION']
92,    }),['})'],['PUNCTUATION']
93,    // Get the date it was posted,"['//', 'Get', 'the', 'date', 'it', 'was', 'posted']","['COMMENT', 'VB', 'DT', 'NN', 'PRP', 'VBD', 'VBN']"
94,"    ch.DatePosted = doc.Find(""time.entry-date"").Text()","['ch', '.', 'DatePosted', '=', 'doc.Find(""time.entry-date"").Text()']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
95,    // Now we'll get all the paragraphs,"['//', 'Now', ""we'll"", 'get', 'all', 'the', 'paragraphs']","['COMMENT', 'RB', 'VBZ', 'VB', 'PDT', 'DT', 'NN']"
96,"    doc.Find("".entry-content > p"").Each(func(_ int, s *goquery.Selection) {","['doc.Find("".entry-content > p"").Each(func(_ int, s *goquery.Selection)', '{']","['FUNCTION_CALL', 'PUNCTUATION']"
97,        // Check for the previous/next links,"['//', 'Check', 'for', 'the', 'previous/next', 'links']","['COMMENT', 'NN', 'IN', 'DT', 'JJ', 'NNS']"
98,"        if len(s.Find(""a"").Nodes) > 0 {","['if', 'len', '(', 's.Find(""a"").Nodes)', '>', '0', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
99,            return,['return'],['KEYWORD']
100,        },['}'],['PUNCTUATION']
101,        // Get the paragraph HTML,"['//', 'Get', 'the', 'paragraph', 'HTML']","['COMMENT', 'VB', 'DT', 'NN', 'NNP']"
102,"        st, _ := s.Html()","['st', ',', '_', ':=', 's.Html()']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
103,"        para := Paragraph("""")","['para', ':=', 'Paragraph', '(', '""""', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
104,        // Get the actual paragraph,"['//', 'Get', 'the', 'actual', 'paragraph']","['COMMENT', 'VB', 'DT', 'JJ', 'NN']"
105,"        if val, exists := s.Attr(""padding-left""); exists && val == ""30px"" {","['if', 'val', ',', 'exists', ':=', 's.Attr(""padding-left"")', ';', 'exists', '&&', 'val', '==', '""30px""', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'STRING_LITERAL', 'PUNCTUATION']"
106,            // Check to see if the paragraph is special (indented) block,"['//', 'Check', 'to', 'see', 'if', 'the', 'paragraph', 'is', 'special', '(indented)', 'block']","['COMMENT', 'NN', 'TO', 'VB', 'IN', 'DT', 'NN', 'VBZ', 'JJ', 'JJ', 'NN']"
107,"            para = Paragraph(""    "" + st)","['para', '=', 'Paragraph', '(', '""    ""', '+', 'st', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
108,"        } else if val, exists := s.Attr(""text-align""); exists && val == ""center"" {","['}', 'else', 'if', 'val', ',', 'exists', ':=', 's.Attr(""text-align"")', ';', 'exists', '&&', 'val', '==', '""center""', '{']","['PUNCTUATION', 'KEYWORD', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'STRING_LITERAL', 'PUNCTUATION']"
109,            // Otherwise check to see if it's a separator paragraph,"['//', 'Otherwise', 'check', 'to', 'see', 'if', ""it's"", 'a', 'separator', 'paragraph']","['COMMENT', 'RB', 'NN', 'TO', 'VB', 'IN', 'VB', 'DT', 'NN', 'NN']"
110,"            para = Paragraph(""----------"")","['para', '=', 'Paragraph', '(', '""----------""', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
111,        } else {,"['}', 'else', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
112,            // It's just a normal paragraph in this case,"['//', ""It's"", 'just', 'a', 'normal', 'paragraph', 'in', 'this', 'case']","['COMMENT', 'NNP', 'RB', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN']"
113,            para = Paragraph(st),"['para', '=', 'Paragraph', '(', 'st', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
114,        },['}'],['PUNCTUATION']
115,        // And add the paragraph to the chapter,"['//', 'And', 'add', 'the', 'paragraph', 'to', 'the', 'chapter']","['COMMENT', 'CC', 'VB', 'DT', 'NN', 'TO', 'DT', 'NN']"
116,        para.Format(),['para.Format()'],['FUNCTION_CALL']
117,"        ch.Paragraphs = append(ch.Paragraphs, para)","['ch', '.', 'Paragraphs', '=', 'append', '(', 'ch', '.', 'Paragraphs', ',', 'para', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
118,    }),['})'],['PUNCTUATION']
119,"    // Finally, let's signal a success","['//', 'Finally,', ""let's"", 'signal', 'a', 'success']","['COMMENT', 'NNP', 'VBZ', 'VB', 'DT', 'NN']"
120,    done <- true,"['done', '<-', 'true']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'BOOLEAN_LITERAL']"
121,},['}'],['PUNCTUATION']
122,// Return a slice of Arcs extracted from the table of contents,"['//', 'Return', 'a', 'slice', 'of', 'Arcs', 'extracted', 'from', 'the', 'table', 'of', 'contents']","['COMMENT', 'VB', 'DT', 'NN', 'IN', 'NNP', 'VBD', 'IN', 'DT', 'NN', 'IN', 'NNS']"
123,func ParseArcs(s string) []*Arc {,"['func', 'ParseArcs', '(', 's', 'string', ')', '[]*', 'Arc', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
124,    arcs := []*Arc{},"['arcs', ':=', '[]*', 'Arc', '{}']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
125,"    r, _ := regexp.Compile(`[0-9]+`)","['r', ',', '_', ':=', 'regexp.Compile(`[0-9]+`)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
126,"    for _, line := range strings.Split(s, ""\n"") {","['for', '_', ',', 'line', ':=', 'range', 'strings.Split(s, ""\\n"")', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'FUNCTION_CALL', 'PUNCTUATION']"
127,        line = strings.TrimSpace(line),"['line', '=', 'strings.TrimSpace(line)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
128,"        if strings.HasPrefix(line, ""Arc"") {","['if', 'strings.HasPrefix(line, ""Arc"")', '{']","['KEYWORD', 'FUNCTION_CALL', 'PUNCTUATION']"
129,"            arcs = append(arcs, &Arc{","['arcs', '=', 'append', '(', 'arcs', ',', '&', 'Arc', '{']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
130,"                Identifier: r.FindString(line),","['Identifier', ':', 'r.FindString(line)', ',']","['IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL', 'PUNCTUATION']"
131,"                Title:      line,","['Title', ':', 'line', ',']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
132,            }),['})'],['PUNCTUATION']
133,"        } else if strings.HasPrefix(line, ""Epilogue"") {","['}', 'else', 'if', 'strings.HasPrefix(line, ""Epilogue"")', '{']","['PUNCTUATION', 'KEYWORD', 'KEYWORD', 'FUNCTION_CALL', 'PUNCTUATION']"
134,"            arcs = append(arcs, &Arc{","['arcs', '=', 'append', '(', 'arcs', ',', '&', 'Arc', '{']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
135,"                Identifier: ""E"",","['Identifier', ':', '""E""', ',']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
136,"                Title:      line,","['Title', ':', 'line', ',']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
137,            }),['})'],['PUNCTUATION']
138,        },['}'],['PUNCTUATION']
139,    },['}'],['PUNCTUATION']
140,    return arcs,"['return', 'arcs']","['KEYWORD', 'IDENTIFIER']"
141,},['}'],['PUNCTUATION']
142,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
143,    // Define the app,"['//', 'Define', 'the', 'app']","['COMMENT', 'VB', 'DT', 'NN']"
144,    app := cli.NewApp(),"['app', ':=', 'cli.NewApp()']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
145,"    app.Name = ""Worm Scraper""","['app', '.', 'Name', '=', '""Worm Scraper""']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
146,"    app.Usage = ""A tool to let you get an updated EPUB copy of the serial web novel Worm, by Wildbow""","['app', '.', 'Usage', '=', '""A tool to let you get an updated EPUB copy of the serial web novel Worm, by Wildbow""']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
147,"    app.Version = ""1.0""","['app', '.', 'Version', '=', '""1.0""']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
148,"    app.Author = ""Benjamin Harris""","['app', '.', 'Author', '=', '""Benjamin Harris""']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
149,    // Define the application flags,"['//', 'Define', 'the', 'application', 'flags']","['COMMENT', 'VB', 'DT', 'NN', 'NNS']"
150,    app.Flags = []cli.Flag{,"['app', '.', 'Flags', '=', '[]', 'cli', '.', 'Flag', '{']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
151,"        cli.BoolFlag{""pdf"", ""Save the book as a PDF instead of an EPUB, if possible""},","['cli', '.', 'BoolFlag', '{', '""pdf""', ',', '""Save the book as a PDF instead of an EPUB, if possible""', '},']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
152,"        cli.BoolFlag{""with-link"", ""Include a link to the chapter online""},","['cli', '.', 'BoolFlag', '{', '""with-link""', ',', '""Include a link to the chapter online""', '},']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
153,"        cli.BoolFlag{""with-tags"", ""Include the tags each chapter was posted under""},","['cli', '.', 'BoolFlag', '{', '""with-tags""', ',', '""Include the tags each chapter was posted under""', '},']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
154,"        cli.BoolFlag{""with-date"", ""Include the date each chapter was posted""},","['cli', '.', 'BoolFlag', '{', '""with-date""', ',', '""Include the date each chapter was posted""', '},']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
155,    },['}'],['PUNCTUATION']
156,    // The heart of the application,"['//', 'The', 'heart', 'of', 'the', 'application']","['COMMENT', 'DT', 'NN', 'IN', 'DT', 'NN']"
157,    app.Action = func(context *cli.Context) {,"['app', '.', 'Action', '=', 'func', '(', 'context', '*', 'cli', '.', 'Context', ')', '{']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
158,        // Starting the program,"['//', 'Starting', 'the', 'program']","['COMMENT', 'VBG', 'DT', 'NN']"
159,"        fmt.Println(""Starting to scrape Worm"")","['fmt.Println(""Starting to scrape Worm"")']",['FUNCTION_CALL']
160,        // Get the list of arcs from the table of contents,"['//', 'Get', 'the', 'list', 'of', 'arcs', 'from', 'the', 'table', 'of', 'contents']","['COMMENT', 'VB', 'DT', 'NN', 'IN', 'NN', 'IN', 'DT', 'NN', 'IN', 'NNS']"
161,"        fmt.Println(""Gathering links from table of contents..."")","['fmt.Println(""Gathering links from table of contents..."")']",['FUNCTION_CALL']
162,"        contents, err := goquery.NewDocument(TableOfContents)","['contents', ',', 'err', ':=', 'go', 'query.NewDocument(TableOfContents)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'FUNCTION_CALL']"
163,        if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
164,"            panic(""Failed to get the table of contents! "" + err.Error())","['panic', '(', '""Failed to get the table of contents! ""', '+', 'err.Error())']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'ARITHMETIC_OPERATOR', 'FUNCTION_CALL']"
165,        },['}'],['PUNCTUATION']
166,        // Parse the arcs,"['//', 'Parse', 'the', 'arcs']","['COMMENT', 'VB', 'DT', 'NN']"
167,"        arcs := ParseArcs(contents.Find("".entry-content"").Text())","['arcs', ':=', 'ParseArcs', '(', 'contents.Find("".entry-content"").Text())']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL']"
168,        // Now get the links for the arc chapters,"['//', 'Now', 'get', 'the', 'links', 'for', 'the', 'arc', 'chapters']","['COMMENT', 'RB', 'VB', 'DT', 'NNS', 'IN', 'DT', 'NN', 'NNS']"
169,"        contents.Find("".entry-content a:not([class*=share-icon])"").Each(func(_ int, s *goquery.Selection) {","['contents.Find("".entry-content a:not([class*=share-icon])"").Each(func(_ int, s *goquery.Selection)', '{']","['FUNCTION_CALL', 'PUNCTUATION']"
170,            ch := Chapter{},"['ch', ':=', 'Chapter', '{}']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
171,"            ch.Title = strings.Replace(strings.TrimSpace(s.Text()), ""\n"", """", -1)","['ch', '.', 'Title', '=', 'strings.Replace(strings.TrimSpace(s.Text()), ""\\n"", """", -1)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
172,"            ch.Url, _ = s.Attr(""href"")","['ch', '.', 'Url', ',', '_', '=', 's.Attr(""href"")']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
173,"            if ch.Title == """" {","['if', 'ch', '.', 'Title', '==', '""""', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'STRING_LITERAL', 'PUNCTUATION']"
174,                return,['return'],['KEYWORD']
175,            },['}'],['PUNCTUATION']
176,"            arc, _ := ch.WhichArc(arcs)","['arc', ',', '_', ':=', 'ch.WhichArc(arcs)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
177,"            arc.Chapters = append(arc.Chapters, ch)","['arc', '.', 'Chapters', '=', 'append', '(', 'arc', '.', 'Chapters', ',', 'ch', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
178,        }),['})'],['PUNCTUATION']
179,        // Manually add missing chapter in Epilogue,"['//', 'Manually', 'add', 'missing', 'chapter', 'in', 'Epilogue']","['COMMENT', 'RB', 'VB', 'VBG', 'NN', 'IN', 'NNP']"
180,        c := Chapter{,"['c', ':=', 'Chapter', '{']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
181,"            Title: ""E.2"",","['Title', ':', '""E.2""', ',']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
182,"            Url:   ""https://parahumans.wordpress.com/2013/11/05/teneral-e-2/"",","['Url', ':', '""https://parahumans.wordpress.com/2013/11/05/teneral-e-2/""', ',']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
183,        },['}'],['PUNCTUATION']
184,"        a, _ := c.WhichArc(arcs)","['a', ',', '_', ':=', 'c.WhichArc(arcs)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
185,"        a.Chapters = append(a.Chapters, c)","['a', '.', 'Chapters', '=', 'append', '(', 'a', '.', 'Chapters', ',', 'c', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
186,"        copy(a.Chapters[1+1:], a.Chapters[1:])","['copy', '(', 'a', '.', 'Chapters', '[', '1', '+', '1', ':],', 'a', '.', 'Chapters', '[', '1', ':])']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
187,        a.Chapters[1] = c,"['a', '.', 'Chapters', '[', '1', ']', '=', 'c']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
188,        // Now start getting the chapters,"['//', 'Now', 'start', 'getting', 'the', 'chapters']","['COMMENT', 'RB', 'VBZ', 'VBG', 'DT', 'NNS']"
189,        chapters := 0,"['chapters', ':=', '0']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'OCTAL_LITERAL']"
190,        done := make(chan bool),"['done', ':=', 'make', '(', 'chan', 'bool', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
191,"        for _, arc := range arcs {","['for', '_', ',', 'arc', ':=', 'range', 'arcs', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
192,"            for i, _ := range arc.Chapters {","['for', 'i', ',', '_', ':=', 'range', 'arc', '.', 'Chapters', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
193,                chapters++,"['chapters', '++']","['IDENTIFIER', 'ARITHMETIC_OPERATOR']"
194,                go arc.Chapters[i].Parse(done),"['go', 'arc', '.', 'Chapters', '[', 'i', '].', 'Parse', '(', 'done', ')']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
195,            },['}'],['PUNCTUATION']
196,        },['}'],['PUNCTUATION']
197,"        fmt.Println(""Starting to parse"", chapters, ""chapters"")","['fmt.Println(""Starting to parse"", chapters, ""chapters"")']",['FUNCTION_CALL']
198,"        fmt.Print(""Finished: "")","['fmt.Print(""Finished: "")']",['FUNCTION_CALL']
199,        totalChapters := chapters,"['totalChapters', ':=', 'chapters']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
200,        for {,"['for', '{']","['KEYWORD', 'PUNCTUATION']"
201,            select {,"['select', '{']","['KEYWORD', 'PUNCTUATION']"
202,            case <-done:,"['case', '<-', 'done', ':']","['KEYWORD', 'CHANNEL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
203,                chapters--,"['chapters', '--']","['IDENTIFIER', 'ARITHMETIC_OPERATOR']"
204,"                fmt.Print(totalChapters-chapters, "","")","['fmt.Print(totalChapters-chapters, "","")']",['FUNCTION_CALL']
205,            },['}'],['PUNCTUATION']
206,            if chapters == 0 {,"['if', 'chapters', '==', '0', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
207,                // We're done with all the chapters,"['//', ""We're"", 'done', 'with', 'all', 'the', 'chapters']","['COMMENT', 'NNP', 'VBN', 'IN', 'PDT', 'DT', 'NNS']"
208,                close(done),"['close', '(', 'done', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
209,                fmt.Println(),['fmt.Println()'],['FUNCTION_CALL']
210,                break,['break'],['KEYWORD']
211,            },['}'],['PUNCTUATION']
212,        },['}'],['PUNCTUATION']
213,        // And let's write all this stuff to a file now,"['//', 'And', ""let's"", 'write', 'all', 'this', 'stuff', 'to', 'a', 'file', 'now']","['COMMENT', 'CC', 'VB', 'RB', 'PDT', 'DT', 'NN', 'TO', 'DT', 'NN', 'RB']"
214,"        fmt.Println(""Saving results to file..."")","['fmt.Println(""Saving results to file..."")']",['FUNCTION_CALL']
215,"        f, err := os.OpenFile(""Worm.md"", os.O_RDWR|os.O_CREATE|os.O_EXCL, 0666)","['f', ',', 'err', ':=', 'os.OpenFile(""Worm.md"", os.O_RDWR|os.O_CREATE|os.O_EXCL, 0666)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
216,        if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
217,            panic(err),"['panic', '(', 'err', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
218,        },['}'],['PUNCTUATION']
219,        defer f.Close(),"['defer', 'f.Close()']","['IDENTIFIER', 'FUNCTION_CALL']"
220,        // Define pagebreak,"['//', 'Define', 'pagebreak']","['COMMENT', 'NNP', 'NN']"
221,"        PageBreak := ""\n\n""","['PageBreak', ':=', '""\\n\\n""']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
222,        // Write the cover,"['//', 'Write', 'the', 'cover']","['COMMENT', 'IN', 'DT', 'NN']"
223,"        f.WriteString(""# Worm\n\n"")","['f.WriteString(""# Worm\\n\\n"")']",['FUNCTION_CALL']
224,"        f.WriteString(""By Wildbow\n\n"")","['f.WriteString(""By Wildbow\\n\\n"")']",['FUNCTION_CALL']
225,"        f.WriteString(""Website: "" + MainSite)","['f.WriteString(""Website: "" + MainSite)']",['FUNCTION_CALL']
226,        // Now loop through the Arcs,"['//', 'Now', 'loop', 'through', 'the', 'Arcs']","['COMMENT', 'RB', 'VBZ', 'IN', 'DT', 'NNP']"
227,"        for _, arc := range arcs {","['for', '_', ',', 'arc', ':=', 'range', 'arcs', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
228,"            f.WriteString(PageBreak + ""# "" + arc.Title)","['f.WriteString(PageBreak + ""# "" + arc.Title)']",['FUNCTION_CALL']
229,"            for _, chapter := range arc.Chapters {","['for', '_', ',', 'chapter', ':=', 'range', 'arc', '.', 'Chapters', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
230,"                f.WriteString(""\n\n"")","['f.WriteString(""\\n\\n"")']",['FUNCTION_CALL']
231,"                f.WriteString(""## "" + chapter.Title + ""\n\n"")","['f.WriteString(""## "" + chapter.Title + ""\\n\\n"")']",['FUNCTION_CALL']
232,"                if context.Bool(""with-tags"") {","['if', 'context.Bool(""with-tags"")', '{']","['KEYWORD', 'FUNCTION_CALL', 'PUNCTUATION']"
233,"                    f.WriteString(""**Tags:** "" + strings.Join(chapter.Tags, "", "") + ""  "")","['f.WriteString(""**Tags:** "" + strings.Join(chapter.Tags, "", "") + ""  "")']",['FUNCTION_CALL']
234,                },['}'],['PUNCTUATION']
235,"                if context.Bool(""with-date"") {","['if', 'context.Bool(""with-date"")', '{']","['KEYWORD', 'FUNCTION_CALL', 'PUNCTUATION']"
236,"                    f.WriteString(""**Date:** "" + chapter.DatePosted + ""  "")","['f.WriteString(""**Date:** "" + chapter.DatePosted + ""  "")']",['FUNCTION_CALL']
237,                },['}'],['PUNCTUATION']
238,"                if context.Bool(""with-link"") {","['if', 'context.Bool(""with-link"")', '{']","['KEYWORD', 'FUNCTION_CALL', 'PUNCTUATION']"
239,"                    f.WriteString(""**Link:** "" + chapter.Url + ""  "")","['f.WriteString(""**Link:** "" + chapter.Url + ""  "")']",['FUNCTION_CALL']
240,                },['}'],['PUNCTUATION']
241,"                f.WriteString(""\n\n"")","['f.WriteString(""\\n\\n"")']",['FUNCTION_CALL']
242,                // Now save the chapter's paragraphs,"['//', 'Now', 'save', 'the', ""chapter's"", 'paragraphs']","['COMMENT', 'RB', 'VBP', 'DT', 'NN', 'NN']"
243,"                for _, p := range chapter.Paragraphs {","['for', '_', ',', 'p', ':=', 'range', 'chapter', '.', 'Paragraphs', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
244,"                    f.WriteString(string(p) + ""\n\n"")","['f.WriteString(string(p) + ""\\n\\n"")']",['FUNCTION_CALL']
245,                },['}'],['PUNCTUATION']
246,            },['}'],['PUNCTUATION']
247,        },['}'],['PUNCTUATION']
248,"        // Now let's try to convert the markdown file into an ebook format (epub, pdf)","['//', 'Now', ""let's"", 'try', 'to', 'convert', 'the', 'markdown', 'file', 'into', 'an', 'ebook', 'format', '(epub,', 'pdf)']","['COMMENT', 'RB', 'VBZ', 'NN', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'NNP', 'NN']"
249,"        fmt.Print(""Attempting to convert Markdown file... "")","['fmt.Print(""Attempting to convert Markdown file... "")']",['FUNCTION_CALL']
250,"        cmdText := []string{""-S"", ""Worm.md"", ""--epub-chapter-level"", ""2"", ""-o"", ""Worm.epub""}","['cmdText', ':=', '[]', 'string', '{', '""-S""', ',', '""Worm.md""', ',', '""--epub-chapter-level""', ',', '""2""', ',', '""-o""', ',', '""Worm.epub""', '}']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
251,"        if context.Bool(""pdf"") {","['if', 'context.Bool(""pdf"")', '{']","['KEYWORD', 'FUNCTION_CALL', 'PUNCTUATION']"
252,"            cmdText = []string{""Worm.md"", ""-o"", ""Worm.pdf""}","['cmdText', '=', '[]', 'string', '{', '""Worm.md""', ',', '""-o""', ',', '""Worm.pdf""', '}']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
253,            PageBreak = ``,"['PageBreak', '=']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR']"
254,        },['}'],['PUNCTUATION']
255,"        cmd := exec.Command(""pandoc"", cmdText...)","['cmd', ':=', 'exec.Command(""pandoc"", cmdText...)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
256,        err = cmd.Run(),"['err', '=', 'cmd.Run()']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
257,        if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
258,"            fmt.Println(""Conversion failed! Make sure you've installed Pandoc (http://johnmacfarlane.net/pandoc/installing.html) if you want to convert the generated Markdown file to an ebook compatible format. In the meantime, we've left you the Markdown file."")","['fmt.Println(""Conversion failed! Make sure you\'ve installed Pandoc (http://johnmacfarlane.net/pandoc/installing.html) if you want to convert the generated Markdown file to an ebook compatible format. In the meantime, we\'ve left you the Markdown file."")']",['FUNCTION_CALL']
259,        } else {,"['}', 'else', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
260,"            _ = os.Remove(""Worm.md"")","['_', '=', 'os.Remove(""Worm.md"")']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
261,"            fmt.Println(""Completed!"")","['fmt.Println(""Completed!"")']",['FUNCTION_CALL']
262,        },['}'],['PUNCTUATION']
263,    },['}'],['PUNCTUATION']
264,    // Run the application,"['//', 'Run', 'the', 'application']","['COMMENT', 'VB', 'DT', 'NN']"
265,    app.Run(os.Args),['app.Run(os.Args)'],['FUNCTION_CALL']
266,},['}'],['PUNCTUATION']
267,"

oh also would it be possible to modify it to output as .txt or .mobi? if not I'll just convert using Calibre. Thanks in advance.
Oh if it matters I'm using windows 7 64-bit
","['oh', 'also', 'would', 'it', 'be', 'possible', 'to', 'modify', 'it', 'to', 'output', 'as', '.txt', 'or', '.mobi?', 'if', 'not', ""I'll"", 'just', 'convert', 'using', 'Calibre.', 'Thanks', 'in', 'advance.', 'Oh', 'if', 'it', 'matters', ""I'm"", 'using', 'windows', '7', '64-bit']","['NN', 'RB', 'MD', 'PRP', 'VB', 'JJ', 'TO', 'VB', 'PRP', 'TO', 'NN', 'IN', 'NN', 'CC', 'VB', 'IN', 'RB', 'NNP', 'RB', 'VB', 'VBG', 'NNP', 'NNP', 'IN', 'NN', 'UH', 'IN', 'PRP', 'VBZ', 'NNP', 'VBG', 'NNS', 'CD', 'JJ']"
