,text,token,annotation
0,"After a lot of trial and error, I present to you this fully functional solution:

","['After', 'a', 'lot', 'of', 'trial', 'and', 'error,', 'I', 'present', 'to', 'you', 'this', 'fully', 'functional', 'solution:']","['IN', 'DT', 'NN', 'IN', 'NN', 'CC', 'NN', 'PRP', 'VBP', 'TO', 'PRP', 'DT', 'RB', 'JJ', 'NN']"
1,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
2,import (,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
3,"    ""encoding/json""","['""encoding/json""']",['STRING_LITERAL']
4,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
5,"    ""log""","['""log""']",['STRING_LITERAL']
6,"    ""time""","['""time""']",['STRING_LITERAL']
7,),[')'],['PUNCTUATION']
8,type Clip struct {,"['type', 'Clip', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
9,    Value []InfoClip `json:value`,"['Value', '[]', 'InfoClip', 'json', ':', 'value']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
10,},['}'],['PUNCTUATION']
11,type customTime struct {,"['type', 'customTime', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
12,    time.Time,"['time', '.', 'Time']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
13,},['}'],['PUNCTUATION']
14,"const ctLayout = ""2006-01-02 15:04:05""","['const', 'ctLayout', '=', '""2006-01-02 15:04:05""']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
15,func (ct *customTime) UnmarshalJSON(b []byte) (err error) {,"['func', '(', 'ct', '*', 'customTime', ')', 'UnmarshalJSON', '(', 'b', '[]', 'byte', ')', '(', 'err', 'error', ')', '{']","['KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
16,"    if b[0] == '""' && b[len(b)-1] == '""' {","['if', 'b', '[', '0', ']', '==', '\'""\'', '&&', 'b', '[', 'len', '(', 'b', ')-', '1', ']', '==', '\'""\'', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'PUNCTUATION', 'RELATION_OPERATOR', 'STRING_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'RELATION_OPERATOR', 'STRING_LITERAL', 'PUNCTUATION']"
17,        b = b[1 : len(b)-1],"['b', '=', 'b', '[', '1', ':', 'len', '(', 'b', ')-', '1', ']']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
18,    },['}'],['PUNCTUATION']
19,"    ct.Time, err = time.Parse(ctLayout, string(b))","['ct', '.', 'Time', ',', 'err', '=', 'time.Parse(ctLayout, string(b))']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
20,    return,['return'],['KEYWORD']
21,},['}'],['PUNCTUATION']
22,type InfoClip struct {,"['type', 'InfoClip', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
23,"    Id                string     `json:""clipId""`","['Id', 'string', 'json', ':', '""clipId""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
24,"    CreatedAt         customTime `json:""createdAt""`","['CreatedAt', 'customTime', 'json', ':', '""createdAt""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
25,"    StartTimeCode     string     `json:""startTimeCode""` //if you want ints here, you'll have to decode manually, or fix the json beforehand","['StartTimeCode', 'string', 'json', ':', '""startTimeCode""', '//', 'if', 'you', 'want', 'ints', 'here,', ""you'll"", 'have', 'to', 'decode', 'manually,', 'or', 'fix', 'the', 'json', 'beforehand']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'COMMENT', 'IN', 'PRP', 'VBP', 'NNS', 'VB', 'NNS', 'VBP', 'TO', 'VB', 'NN', 'CC', 'VB', 'DT', 'NN', 'NN']"
26,"    EndTimeCode       string     `json:""endTimeCode""`   //same for this one","['EndTimeCode', 'string', 'json', ':', '""endTimeCode""', '//', 'same', 'for', 'this', 'one']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'COMMENT', 'JJ', 'IN', 'DT', 'CD']"
27,"    Metas             metas      `json:""-""`","['Metas', 'metas', 'json', ':', '""-""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
28,"    MetasString       string     `json:""metas""`","['MetasString', 'string', 'json', ':', '""metas""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
29,"    Tags              []string   `json:""tags""`","['Tags', '[]', 'string', 'json', ':', '""tags""']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
30,"    Categories        []string   `json:""categories""`","['Categories', '[]', 'string', 'json', ':', '""categories""']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
31,"    UserId            string     `json:""userId""`","['UserId', 'string', 'json', ':', '""userId""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
32,"    SourceId          string     `json:""sourceId""`","['SourceId', 'string', 'json', ':', '""sourceId""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
33,"    ProviderName      string     `json:""providerName""`","['ProviderName', 'string', 'json', ':', '""providerName""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
34,"    ProviderReference string     `json:""providerReference""`","['ProviderReference', 'string', 'json', ':', '""providerReference""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
35,"    PublicationStatus string     `json:""publicationStatus""`","['PublicationStatus', 'string', 'json', ':', '""publicationStatus""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
36,"    Name              string     `json:""name""`","['Name', 'string', 'json', ':', '""name""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
37,"    FacebookPage      string     `json:""facebookPage""`","['FacebookPage', 'string', 'json', ':', '""facebookPage""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
38,"    TwitterHandle     string     `json:""twitterHandle""`","['TwitterHandle', 'string', 'json', ':', '""twitterHandle""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
39,"    PermaLinkUrl      string     `json:""permalinkBaseURL""`","['PermaLinkUrl', 'string', 'json', ':', '""permalinkBaseURL""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
40,"    Logo              string     `json:""logo""`","['Logo', 'string', 'json', ':', '""logo""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
41,"    Link              string     `json:""link""`","['Link', 'string', 'json', ':', '""link""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
42,"    Views             int        `json:""views""`","['Views', 'int', 'json', ':', '""views""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
43,},['}'],['PUNCTUATION']
44,type metas struct {,"['type', 'metas', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
45,"    Title      string   `json:""title""`","['Title', 'string', 'json', ':', '""title""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
46,"    Tags       []string `json:""tags""`","['Tags', '[]', 'string', 'json', ':', '""tags""']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
47,"    Categories []string `json:""categories""`","['Categories', '[]', 'string', 'json', ':', '""categories""']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
48,"    PermaLink  string   `json:""permalink""`","['PermaLink', 'string', 'json', ':', '""permalink""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
49,},['}'],['PUNCTUATION']
50,var jsonString = `{  ,"['var', 'jsonString', '=', '{']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'PUNCTUATION']"
51,"   ""clipId"":""9b2ea9bb-e54b-4291-ba16-9211fa3c755f"",","['""clipId""', ':', '""9b2ea9bb-e54b-4291-ba16-9211fa3c755f""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
52,"   ""streamUrl"":""https:///asset-32e43a5d-1500-80c3-cc6b-f1e4fe2b5c44\/6c53fbf5-dbe9-4617-9692-78e8d76a7b6e_H264_500kbps_AAC_und_ch2_128kbps.mp4?sv=2012-02-12&sr=c&si=17ed71e8-5176-4432-8092-ee64928a55f6&sig=KHyToRlqvwQxWZXVvRYOkBOBOF0SuBLVmKiGp4joBpw%3D&st=2015-05-18T13%3A32%3A41Z&se=2057-05-07T13%3A32%3A41Z"",","['""streamUrl""', ':', '""https:///asset-32e43a5d-1500-80c3-cc6b-f1e4fe2b5c44\\/6c53fbf5-dbe9-4617-9692-78e8d76a7b6e_H264_500kbps_AAC_und_ch2_128kbps.mp4?sv=2012-02-12&sr=c&si=17ed71e8-5176-4432-8092-ee64928a55f6&sig=KHyToRlqvwQxWZXVvRYOkBOBOF0SuBLVmKiGp4joBpw%3D&st=2015-05-18T13%3A32%3A41Z&se=2057-05-07T13%3A32%3A41Z""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
53,"   ""startTimecode"":""6"",","['""startTimecode""', ':', '""6""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
54,"   ""endTimecode"":""16"",","['""endTimecode""', ':', '""16""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
55,"   ""createdAt"":""2015-05-19 13:31:32"",","['""createdAt""', ':', '""2015-05-19 13:31:32""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
56,"   ""metas"":""{\""title\"":\""Zapping : Obama, Marine Le Pen et Michael Jackson\"",\""tags\"":[\""actualite\""],\""categories\"":[\""actualite\""],\""permalink\"":\""http:\/\/videos.lexpress.fr\/actualite\/zapping-obama-marine-le-pen-et-michael-jackson_910357.html\""}"",","['""metas""', ':', '""{\\""', 'title', '"":\\""', 'Zapping', ':', 'Obama', ',', 'Marine', 'Le', 'Pen', 'et', 'Michael', 'Jackson', '"",\\""', 'tags', '"":[\\""', 'actualite', '""],\\""', 'categories', '"":[\\""', 'actualite', '""],\\""', 'permalink', '"":\\""', 'http', ':', '/', '/', 'videos', '.', 'lexpress', '.', 'fr', '/', 'actualite', '/', 'zapping', '-', 'obama', '-', 'marine', '-', 'le', '-', 'pen', '-', 'et', '-', 'michael', '-', 'jackson_910357', '.', 'html', '""}""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'STRING_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'ARITHMETIC_OPERATOR', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'STRING_LITERAL', 'PUNCTUATION']"
57,"   ""sourceId"":""6c53fbf5-dbe9-4617-9692-78e8d76a7b6e"",","['""sourceId""', ':', '""6c53fbf5-dbe9-4617-9692-78e8d76a7b6e""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
58,"   ""providerName"":""dailymotion"",","['""providerName""', ':', '""dailymotion""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
59,"   ""providerReference"":""x1xmnxq"",","['""providerReference""', ':', '""x1xmnxq""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
60,"   ""publicationStatus"":""1"",","['""publicationStatus""', ':', '""1""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
61,"   ""userId"":""b373400a-bd7e-452a-af68-36992b0323a5"",","['""userId""', ':', '""b373400a-bd7e-452a-af68-36992b0323a5""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
62,"   ""name"":""LEXPRESS.fr"",","['""name""', ':', '""LEXPRESS.fr""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
63,"   ""facebookPage"":""https:\/\/www.facebook.com\/LExpress"",","['""facebookPage""', ':', '""https:\\/\\/www.facebook.com\\/LExpress""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
64,"   ""twitterHandle"":""https:\/\/twitter.com\/lexpress"",","['""twitterHandle""', ':', '""https:\\/\\/twitter.com\\/lexpress""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
65,"   ""permalinkBaseURL"":""https:\/\/tym.net\/fr\/{CLIP_ID}"",","['""permalinkBaseURL""', ':', '""https:\\/\\/tym.net\\/fr\\/{CLIP_ID}""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
66,"   ""logo"":""lexpress-120px.png"",","['""logo""', ':', '""lexpress-120px.png""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
67,"   ""link"":""http:\/\/videos.lexpress.fr\/""","['""link""', ':', '""http:\\/\\/videos.lexpress.fr\\/""']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL']"
68,}`,['}'],['PUNCTUATION']
69,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
70,    res := parseJson(jsonString),"['res', ':=', 'parseJson', '(', 'jsonString', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
71,"    fmt.Printf(""%+v\n"",res)","['fmt.Printf(""%+v\\n"",res)']",['FUNCTION_CALL']
72,},['}'],['PUNCTUATION']
73,func parseJson(theJson string) InfoClip {,"['func', 'parseJson', '(', 'theJson', 'string', ')', 'InfoClip', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
74,    toParseInto := struct {,"['toParseInto', ':=', 'struct', '{']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'PUNCTUATION']"
75,        InfoClip,['InfoClip'],['IDENTIFIER']
76,"        MetasString string `json:""metas""`","['MetasString', 'string', 'json', ':', '""metas""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
77,    }{,['}{'],['PUNCTUATION']
78,"        InfoClip:    InfoClip{},","['InfoClip', ':', 'InfoClip', '{},']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
79,"        MetasString: """"}","['MetasString', ':', '""""', '}']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
80,"    err := json.Unmarshal([]byte(jsonString), &toParseInto)","['err', ':=', 'json.Unmarshal([]byte(jsonString), &toParseInto)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
81,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
82,        log.Panic(err),['log.Panic(err)'],['FUNCTION_CALL']
83,    },['}'],['PUNCTUATION']
84,"    err = json.Unmarshal([]byte(toParseInto.MetasString), &toParseInto.InfoClip.Metas)","['err', '=', 'json.Unmarshal([]byte(toParseInto.MetasString), &toParseInto.InfoClip.Metas)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
85,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
86,        log.Panic(err),['log.Panic(err)'],['FUNCTION_CALL']
87,    },['}'],['PUNCTUATION']
88,    return toParseInto.InfoClip,"['return', 'toParseInto', '.', 'InfoClip']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
89,},['}'],['PUNCTUATION']
90,"

What are we doing in the parseJson function?

We create a new struct and assign that to the toParseInto variable. We design the struct in a way that it contains all of the fields from InfoClip via embedding, and We add a field to temporarily hold the JSON string metas.

We then unmarshal into that struct, which, after fixing the issues listed below, works fine.

After that, we unmarshal that inner JSON into the correct field in the embedded InfoClip.

We can now easily return that embedded InfoClip to get what we really wanted.

Now, all the issues I have identified in your original solution:


The time format in your JSON is not the standard time format to be used in JSON. That is defined in some RFC, but anyways: because of that, we have to use our own type customTime to parse that. It handles just like a normal time.Time, because that is embedded within.
All your json tags were wrong. All of them had missing quotes, and some were just not even correct.
startTimeCode and endTimeCode are strings in the JSON, not ints


Left to you to improve:


Error handling: Don't just panic in the parseJson function, but rather return the error somehow
If you want startTimecode and endTimecode to be available as ints, parse them manually. You can employ a ""hack"" similar to the one I used to parse the inner JSON.


One final note, not related to this answer but rather to your question: If you had provided both your code and the JSON with your original question, you would have had an answer in probably less than an hour. Please, please don't make this harder than it needs to be.

EDIT: I forgot to provide my sources, I used this question to parse your time format.
","['What', 'are', 'we', 'doing', 'in', 'the', 'parseJson', 'function?', 'We', 'create', 'a', 'new', 'struct', 'and', 'assign', 'that', 'to', 'the', 'toParseInto', 'variable.', 'We', 'design', 'the', 'struct', 'in', 'a', 'way', 'that', 'it', 'contains', 'all', 'of', 'the', 'fields', 'from', 'InfoClip', 'via', 'embedding,', 'and', 'We', 'add', 'a', 'field', 'to', 'temporarily', 'hold', 'the', 'JSON', 'string', 'metas.', 'We', 'then', 'unmarshal', 'into', 'that', 'struct,', 'which,', 'after', 'fixing', 'the', 'issues', 'listed', 'below,', 'works', 'fine.', 'After', 'that,', 'we', 'unmarshal', 'that', 'inner', 'JSON', 'into', 'the', 'correct', 'field', 'in', 'the', 'embedded', 'InfoClip.', 'We', 'can', 'now', 'easily', 'return', 'that', 'embedded', 'InfoClip', 'to', 'get', 'what', 'we', 'really', 'wanted.', 'Now,', 'all', 'the', 'issues', 'I', 'have', 'identified', 'in', 'your', 'original', 'solution:', 'The', 'time', 'format', 'in', 'your', 'JSON', 'is', 'not', 'the', 'standard', 'time', 'format', 'to', 'be', 'used', 'in', 'JSON.', 'That', 'is', 'defined', 'in', 'some', 'RFC,', 'but', 'anyways:', 'because', 'of', 'that,', 'we', 'have', 'to', 'use', 'our', 'own', 'type', 'customTime', 'to', 'parse', 'that.', 'It', 'handles', 'just', 'like', 'a', 'normal', 'time.Time,', 'because', 'that', 'is', 'embedded', 'within.', 'All', 'your', 'json', 'tags', 'were', 'wrong.', 'All', 'of', 'them', 'had', 'missing', 'quotes,', 'and', 'some', 'were', 'just', 'not', 'even', 'correct.', 'startTimeCode', 'and', 'endTimeCode', 'are', 'strings', 'in', 'the', 'JSON,', 'not', 'ints', 'Left', 'to', 'you', 'to', 'improve:', 'Error', 'handling:', ""Don't"", 'just', 'panic', 'in', 'the', 'parseJson', 'function,', 'but', 'rather', 'return', 'the', 'error', 'somehow', 'If', 'you', 'want', 'startTimecode', 'and', 'endTimecode', 'to', 'be', 'available', 'as', 'ints,', 'parse', 'them', 'manually.', 'You', 'can', 'employ', 'a', '""hack""', 'similar', 'to', 'the', 'one', 'I', 'used', 'to', 'parse', 'the', 'inner', 'JSON.', 'One', 'final', 'note,', 'not', 'related', 'to', 'this', 'answer', 'but', 'rather', 'to', 'your', 'question:', 'If', 'you', 'had', 'provided', 'both', 'your', 'code', 'and', 'the', 'JSON', 'with', 'your', 'original', 'question,', 'you', 'would', 'have', 'had', 'an', 'answer', 'in', 'probably', 'less', 'than', 'an', 'hour.', 'Please,', 'please', ""don't"", 'make', 'this', 'harder', 'than', 'it', 'needs', 'to', 'be.', 'EDIT:', 'I', 'forgot', 'to', 'provide', 'my', 'sources,', 'I', 'used', 'this', 'question', 'to', 'parse', 'your', 'time', 'format.']","['WP', 'VBP', 'PRP', 'VBG', 'IN', 'DT', 'NN', 'NN', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'CC', 'NN', 'WDT', 'TO', 'DT', 'NN', 'NN', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'DT', 'NN', 'IN', 'PRP', 'VBZ', 'DT', 'IN', 'DT', 'NNS', 'IN', 'NNP', 'IN', 'NN', 'CC', 'PRP', 'VBP', 'DT', 'NN', 'TO', 'RB', 'VB', 'DT', 'NNP', 'VBG', 'NN', 'PRP', 'RB', 'VBD', 'IN', 'DT', 'NN', 'NN', 'IN', 'VBG', 'DT', 'NNS', 'VBN', 'NN', 'VBZ', 'RB', 'IN', 'NN', 'PRP', 'VBP', 'DT', 'JJ', 'NNP', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'JJ', 'NNP', 'PRP', 'MD', 'RB', 'RB', 'VB', 'DT', 'VBD', 'NNP', 'TO', 'VB', 'WP', 'PRP', 'RB', 'VB', 'NNP', 'PDT', 'DT', 'NNS', 'PRP', 'VBP', 'VBN', 'IN', 'PRP$', 'JJ', 'VB', 'DT', 'NN', 'NN', 'IN', 'PRP$', 'NNP', 'VBZ', 'RB', 'DT', 'JJ', 'NN', 'NN', 'TO', 'VB', 'VBN', 'IN', 'NNP', 'NNP', 'VBZ', 'VBN', 'IN', 'DT', 'NNP', 'CC', 'RB', 'IN', 'IN', 'NN', 'PRP', 'VBP', 'TO', 'VB', 'PRP$', 'JJ', 'NN', 'NN', 'TO', 'VB', 'NN', 'PRP', 'VBZ', 'RB', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'VBZ', 'VBN', 'IN', 'DT', 'PRP$', 'NN', 'NNS', 'VBD', 'JJ', 'NNP', 'IN', 'PRP', 'VBD', 'VBG', 'NN', 'CC', 'DT', 'VBD', 'RB', 'RB', 'RB', 'VB', 'NN', 'CC', 'NN', 'VBP', 'NNS', 'IN', 'DT', 'NNP', 'RB', 'VBZ', 'VBN', 'TO', 'PRP', 'TO', 'VB', 'NNP', 'VB', 'NNP', 'RB', 'NN', 'IN', 'DT', 'NN', 'NN', 'CC', 'RB', 'VB', 'DT', 'NN', 'RB', 'IN', 'PRP', 'VBP', 'JJ', 'CC', 'NN', 'TO', 'VB', 'JJ', 'IN', 'JJ', 'IN', 'PRP', 'VBP', 'PRP', 'MD', 'VB', 'DT', 'JJ', 'JJ', 'TO', 'DT', 'NN', 'PRP', 'VBD', 'TO', 'VB', 'DT', 'JJ', 'NNP', 'NNP', 'JJ', 'NN', 'RB', 'VBN', 'TO', 'DT', 'NN', 'CC', 'RB', 'TO', 'PRP$', 'NN', 'IN', 'PRP', 'VBD', 'VBN', 'DT', 'PRP$', 'NN', 'CC', 'DT', 'NNP', 'IN', 'PRP$', 'JJ', 'NN', 'PRP', 'MD', 'VB', 'VBD', 'DT', 'NN', 'IN', 'RB', 'JJR', 'IN', 'DT', 'JJ', 'NNP', 'NN', 'RB', 'VB', 'DT', 'JJR', 'IN', 'PRP', 'VBZ', 'TO', 'VB', 'NNP', 'PRP', 'VBD', 'TO', 'VB', 'PRP$', 'NN', 'PRP', 'VBD', 'DT', 'NN', 'TO', 'VB', 'PRP$', 'NN', 'NN']"
