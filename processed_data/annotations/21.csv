,text,token,annotation
0,"#include ""wrapper.h""","['include', '""wrapper.h""']","['IDENTIFIER', 'STRING_LITERAL']"
1,#include ,['include'],['IDENTIFIER']
2,extern void HandleXPCEvent(xpc_object_t);,"['extern', 'void', 'HandleXPCEvent', '(', 'xpc_object_t', ');']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
3,xpc_connection_t connect( char* name) {,"['xpc_connection_t', 'connect', '(', 'char', '*', 'name', ')', '{']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
4,"    dispatch_queue_t queue = dispatch_queue_create(name,0);","['dispatch_queue_t', 'queue', '=', 'dispatch_queue_create', '(', 'name', ',', '0', ');']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
5,"    return xpc_connection_create(name,queue);","['return', 'xpc_connection_create', '(', 'name', ',', 'queue', ');']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
6,},['}'],['OPERATOR']
7,void set_event_handler(xpc_connection_t connection) {,"['void', 'set_event_handler', '(', 'xpc_connection_t', 'connection', ')', '{']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
8,"    xpc_connection_set_event_handler(connection, ^(xpc_object_t event) {","['xpc_connection_set_event_handler', '(', 'connection', ',', '^(', 'xpc_object_t', 'event', ')', '{']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
9,        xpc_retain(event);,"['xpc_retain', '(', 'event', ');']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
10,        // Call Go function,['// Call Go function'],"['COMMENT', 'VB', 'NNP', 'NN']"
11,        HandleXPCEvent(event);,"['HandleXPCEvent', '(', 'event', ');']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
12,    });,['});'],['OPERATOR']
13,},['}'],['OPERATOR']
