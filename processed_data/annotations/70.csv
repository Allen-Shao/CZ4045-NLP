,text,token,annotation
0,"func IndexVehicle(client *elastic.Client, vehicle Vehicle) (bool, error) {","['func', 'IndexVehicle', '(', 'client', '*', 'elastic', '.', 'Client', ',', 'vehicle', 'Vehicle', ')', '(', 'bool', ',', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
1,    // See if it exists already,['// See if it exists already'],"['COMMENT', 'VB', 'IN', 'PRP', 'VBZ', 'RB']"
2,"    fetch, err := client.Get().","['fetch', ',', 'err', ':=', 'client', '.', 'Get', '().']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
3,        Index(vehicleIndex).,"['Index', '(', 'vehicleIndex', ').']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
4,"        Type(""vehicle"").","['Type', '(', '""vehicle""', ').']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
5,        Id(vehicle.Id).,"['Id', '(', 'vehicle', '.', 'Id', ').']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
6,        Do(),"['Do', '()']","['IDENTIFIER', 'OPERATOR']"
7,    if err != nil || fetch.Found {,"['if', 'err', '!=', 'nil', '||', 'fetch', '.', 'Found', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
8,"        return false, err","['return', 'false', ',', 'err']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
9,    },['}'],['OPERATOR']
10,"    vehicleName := fmt.Sprintf(""%s %s (%s) %s"", vehicle.Make, vehicle.Model, vehicle.Model_year, vehicle.Primary_fuel)","['vehicleName', ':=', 'fmt', '.', 'Sprintf', '(', '""%s %s (%s) %s""', ',', 'vehicle', '.', 'Make', ',', 'vehicle', '.', 'Model', ',', 'vehicle', '.', 'Model_year', ',', 'vehicle', '.', 'Primary_fuel', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
11,    suggest := elastic.NewSuggestField(),"['suggest', ':=', 'elastic', '.', 'NewSuggestField', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
12,"    suggest.Input(vehicle.Make, vehicle.Model, vehicle.Primary_fuel, vehicle.Model_year).","['suggest', '.', 'Input', '(', 'vehicle', '.', 'Make', ',', 'vehicle', '.', 'Model', ',', 'vehicle', '.', 'Primary_fuel', ',', 'vehicle', '.', 'Model_year', ').']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
13,        Output(vehicleName).,"['Output', '(', 'vehicleName', ').']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
14,        Payload(vehicle),"['Payload', '(', 'vehicle', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
15,    // Go forth and save,['// Go forth and save'],"['COMMENT', 'NNP', 'NN', 'CC', 'VB']"
16,"    put, err := client.Index().","['put', ',', 'err', ':=', 'client', '.', 'Index', '().']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
17,        Index(vehicleIndex).,"['Index', '(', 'vehicleIndex', ').']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
18,"        Type(""vehicle"").","['Type', '(', '""vehicle""', ').']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
19,        Id(vehicle.Id).,"['Id', '(', 'vehicle', '.', 'Id', ').']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
20,        Debug(true).Pretty(true).,"['Debug', '(', 'true', ').', 'Pretty', '(', 'true', ').']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
21,"        BodyJson(indexBody{Name: vehicleName, Suggest: suggest}).","['BodyJson', '(', 'indexBody', '{', 'Name', ':', 'vehicleName', ',', 'Suggest', ':', 'suggest', '}).']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
22,        Do(),"['Do', '()']","['IDENTIFIER', 'OPERATOR']"
23,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
24,"        return false, err","['return', 'false', ',', 'err']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
25,    },['}'],['OPERATOR']
26,"    return put.Created, nil","['return', 'put', '.', 'Created', ',', 'nil']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
27,},['}'],['OPERATOR']
