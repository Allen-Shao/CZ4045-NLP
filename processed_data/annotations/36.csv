,text,token,annotation
0,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
1,import (,"['import', '(']","['KEYWORD', 'OPERATOR']"
2,"    ""crypto/md5""","['""crypto/md5""']",['STRING_LITERAL']
3,"    ""encoding/hex""","['""encoding/hex""']",['STRING_LITERAL']
4,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
5,"    ""github.com/gocql/gocql""","['""github.com/gocql/gocql""']",['STRING_LITERAL']
6,"    ""github.com/gorilla/mux""","['""github.com/gorilla/mux""']",['STRING_LITERAL']
7,"    ""github.com/gorilla/sessions""","['""github.com/gorilla/sessions""']",['STRING_LITERAL']
8,"    ""net/http""","['""net/http""']",['STRING_LITERAL']
9,"    ""time""","['""time""']",['STRING_LITERAL']
10,),[')'],['OPERATOR']
11,"var store = sessions.NewCookieStore([]byte(""something-very-secret""))","['var', 'store', '=', 'sessions', '.', 'NewCookieStore', '([]', 'byte', '(', '""something-very-secret""', '))']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
12,var router = mux.NewRouter(),"['var', 'router', '=', 'mux', '.', 'NewRouter', '()']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
13,func init() {,"['func', 'init', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
14,    store.Options = &sessions.Options{,"['store', '.', 'Options', '=', '&', 'sessions', '.', 'Options', '{']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
15,"        Domain:   ""localhost"",","['Domain', ':', '""localhost""', ',']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
16,"        Path:     ""/"",","['Path', ':', '""/""', ',']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
17,"        MaxAge:   3600 * 1, // 1 hour","['MaxAge', ':', '3600', '*', '1', ',', '// 1 hour']","['IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR', 'COMMENT', 'CD', 'NN']"
18,"        HttpOnly: true,","['HttpOnly', ':', 'true', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
19,    },['}'],['OPERATOR']
20,},['}'],['OPERATOR']
21,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
22,    //session handling,['//session handling'],"['COMMENT', 'NN', 'VBG']"
23,"    router.HandleFunc(""/"", SessionHandler)","['router', '.', 'HandleFunc', '(', '""/""', ',', 'SessionHandler', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
24,"    router.HandleFunc(""/signIn"", SignInHandler)","['router', '.', 'HandleFunc', '(', '""/signIn""', ',', 'SignInHandler', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
25,"    router.HandleFunc(""/signUp"", SignUpHandler)","['router', '.', 'HandleFunc', '(', '""/signUp""', ',', 'SignUpHandler', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
26,"    router.HandleFunc(""/logOut"", LogOutHandler)","['router', '.', 'HandleFunc', '(', '""/logOut""', ',', 'LogOutHandler', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
27,"    http.Handle(""/"", router)","['http', '.', 'Handle', '(', '""/""', ',', 'router', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
28,"    http.ListenAndServe("":8100"", nil)","['http', '.', 'ListenAndServe', '(', '"":8100""', ',', 'nil', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
29,},['}'],['OPERATOR']
30,//handler for signIn,['//handler for signIn'],"['COMMENT', 'NN', 'IN', 'NN']"
31,"func SignInHandler(res http.ResponseWriter, req *http.Request) {","['func', 'SignInHandler', '(', 'res', 'http', '.', 'ResponseWriter', ',', 'req', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
32,"    email := req.FormValue(""email"")","['email', ':=', 'req', '.', 'FormValue', '(', '""email""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
33,"    password := req.FormValue(""password"")","['password', ':=', 'req', '.', 'FormValue', '(', '""password""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
34,    //Generate hash of password,['//Generate hash of password'],"['COMMENT', 'NNP', 'NN', 'IN', 'NN']"
35,    hasher := md5.New(),"['hasher', ':=', 'md5', '.', 'New', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
36,    hasher.Write([]byte(password)),"['hasher', '.', 'Write', '([]', 'byte', '(', 'password', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
37,    encrypted_password := hex.EncodeToString(hasher.Sum(nil)),"['encrypted_password', ':=', 'hex', '.', 'EncodeToString', '(', 'hasher', '.', 'Sum', '(', 'nil', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
38,    //cassandra connection,['//cassandra connection'],"['COMMENT', 'NN', 'NN']"
39,"    cluster := gocql.NewCluster(""localhost"")","['cluster', ':=', 'go', 'cql', '.', 'NewCluster', '(', '""localhost""', ')']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
40,"    cluster.Keyspace = ""gbuy""","['cluster', '.', 'Keyspace', '=', '""gbuy""']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
41,    cluster.DefaultPort = 9042,"['cluster', '.', 'DefaultPort', '=', '9042']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL']"
42,    cluster.Consistency = gocql.Quorum,"['cluster', '.', 'Consistency', '=', 'go', 'cql', '.', 'Quorum']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
43,"    session, _ := cluster.CreateSession()","['session', ',', '_', ':=', 'cluster', '.', 'CreateSession', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
44,    defer session.Close(),"['defer', 'session', '.', 'Close', '()']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
45,    //select query,['//select query'],"['COMMENT', 'JJ', 'NN']"
46,    var firstname string,"['var', 'firstname', 'string']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
47,"    stmt := ""SELECT firstname FROM USER WHERE email= '"" + email + ""' and password ='"" + encrypted_password + ""';""","['stmt', ':=', '""SELECT firstname FROM USER WHERE email= \'"" + email + ""\' and password =\'"" + encrypted_password + ""\';""']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
48,    err := session.Query(stmt).Scan(&firstname),"['err', ':=', 'session', '.', 'Query', '(', 'stmt', ').', 'Scan', '(&', 'firstname', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
49,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
50,"        fmt.Fprintf(res, ""failed"")","['fmt', '.', 'Fprintf', '(', 'res', ',', '""failed""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
51,    } else {,"['}', 'else', '{']","['OPERATOR', 'KEYWORD', 'OPERATOR']"
52,"        if firstname == """" {","['if', 'firstname', '==', '""""', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
53,"            fmt.Fprintf(res, ""failed"")","['fmt', '.', 'Fprintf', '(', 'res', ',', '""failed""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
54,        } else {,"['}', 'else', '{']","['OPERATOR', 'KEYWORD', 'OPERATOR']"
55,"            fmt.Fprintf(res, firstname)","['fmt', '.', 'Fprintf', '(', 'res', ',', 'firstname', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
56,        },['}'],['OPERATOR']
57,    },['}'],['OPERATOR']
58,    //store in session variable,['//store in session variable'],"['COMMENT', 'NN', 'IN', 'NN', 'NN']"
59,"    sessionNew, _ := store.Get(req, ""loginSession"")","['sessionNew', ',', '_', ':=', 'store', '.', 'Get', '(', 'req', ',', '""loginSession""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
60,    // Set some session values.,['// Set some session values.'],"['COMMENT', 'NNP', 'DT', 'NN', 'NNS', '.']"
61,"    sessionNew.Values[""email""] = email","['sessionNew', '.', 'Values', '[', '""email""', ']', '=', 'email']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
62,"    sessionNew.Values[""name""] = firstname","['sessionNew', '.', 'Values', '[', '""name""', ']', '=', 'firstname']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
63,    // Save it.,['// Save it.'],"['COMMENT', 'VB', 'PRP', '.']"
64,"    sessionNew.Save(req, res)","['sessionNew', '.', 'Save', '(', 'req', ',', 'res', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
65,"    //store.Save(req,res,sessionNew)","['//store.Save(req,res,sessionNew)']","['COMMENT', 'NN', '(', 'NN', ',', 'NNS', ',', 'NN', ')']"
66,"    fmt.Println(""Session after logging:"")","['fmt', '.', 'Println', '(', '""Session after logging:""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
67,    fmt.Println(sessionNew),"['fmt', '.', 'Println', '(', 'sessionNew', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
68,},['}'],['OPERATOR']
69,//handler for signUp,['//handler for signUp'],"['COMMENT', 'NN', 'IN', 'NN']"
70,"func SignUpHandler(res http.ResponseWriter, req *http.Request) {","['func', 'SignUpHandler', '(', 'res', 'http', '.', 'ResponseWriter', ',', 'req', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
71,"    fName := req.FormValue(""fName"")","['fName', ':=', 'req', '.', 'FormValue', '(', '""fName""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
72,"    lName := req.FormValue(""lName"")","['lName', ':=', 'req', '.', 'FormValue', '(', '""lName""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
73,"    email := req.FormValue(""email"")","['email', ':=', 'req', '.', 'FormValue', '(', '""email""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
74,"    password := req.FormValue(""passwd"")","['password', ':=', 'req', '.', 'FormValue', '(', '""passwd""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
75,"    birthdate := req.FormValue(""date"")","['birthdate', ':=', 'req', '.', 'FormValue', '(', '""date""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
76,"    city := req.FormValue(""city"")","['city', ':=', 'req', '.', 'FormValue', '(', '""city""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
77,"    gender := req.FormValue(""gender"")","['gender', ':=', 'req', '.', 'FormValue', '(', '""gender""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
78,    //Get current timestamp and format it.,['//Get current timestamp and format it.'],"['COMMENT', 'NNP', 'JJ', 'NN', 'CC', 'VB', 'PRP', '.']"
79,"    sysdate := time.Now().Format(""2006-01-02 15:04:05-0700"")","['sysdate', ':=', 'time', '.', 'Now', '().', 'Format', '(', '""2006-01-02 15:04:05-0700""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
80,    //Generate hash of password,['//Generate hash of password'],"['COMMENT', 'NNP', 'NN', 'IN', 'NN']"
81,    hasher := md5.New(),"['hasher', ':=', 'md5', '.', 'New', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
82,    hasher.Write([]byte(password)),"['hasher', '.', 'Write', '([]', 'byte', '(', 'password', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
83,    encrypted_password := hex.EncodeToString(hasher.Sum(nil)),"['encrypted_password', ':=', 'hex', '.', 'EncodeToString', '(', 'hasher', '.', 'Sum', '(', 'nil', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
84,    //cassandra connection,['//cassandra connection'],"['COMMENT', 'NN', 'NN']"
85,"    cluster := gocql.NewCluster(""localhost"")","['cluster', ':=', 'go', 'cql', '.', 'NewCluster', '(', '""localhost""', ')']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
86,"    cluster.Keyspace = ""gbuy""","['cluster', '.', 'Keyspace', '=', '""gbuy""']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
87,    cluster.DefaultPort = 9042,"['cluster', '.', 'DefaultPort', '=', '9042']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL']"
88,    cluster.Consistency = gocql.Quorum,"['cluster', '.', 'Consistency', '=', 'go', 'cql', '.', 'Quorum']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
89,"    session, _ := cluster.CreateSession()","['session', ',', '_', ':=', 'cluster', '.', 'CreateSession', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
90,    defer session.Close(),"['defer', 'session', '.', 'Close', '()']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
91,    //Insert the data into the Table,['//Insert the data into the Table'],"['COMMENT', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN']"
92,"    stmt := ""INSERT INTO USER (email,firstname,lastname,birthdate,city,gender,password,creation_date) VALUES ('"" + email + ""','"" + fName + ""','"" + lName + ""','"" + birthdate + ""','"" + city + ""','"" + gender + ""','"" + encrypted_password + ""','"" + sysdate + ""');""","['stmt', ':=', '""INSERT INTO USER (email,firstname,lastname,birthdate,city,gender,password,creation_date) VALUES (\'"" + email + ""\',\'"" + fName + ""\',\'"" + lName + ""\',\'"" + birthdate + ""\',\'"" + city + ""\',\'"" + gender + ""\',\'"" + encrypted_password + ""\',\'"" + sysdate + ""\');""']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
93,    fmt.Println(stmt),"['fmt', '.', 'Println', '(', 'stmt', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
94,    err := session.Query(stmt).Exec(),"['err', ':=', 'session', '.', 'Query', '(', 'stmt', ').', 'Exec', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
95,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
96,"        fmt.Fprintf(res, ""failed"")","['fmt', '.', 'Fprintf', '(', 'res', ',', '""failed""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
97,    } else {,"['}', 'else', '{']","['OPERATOR', 'KEYWORD', 'OPERATOR']"
98,"        fmt.Fprintf(res, fName)","['fmt', '.', 'Fprintf', '(', 'res', ',', 'fName', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
99,    },['}'],['OPERATOR']
100,},['}'],['OPERATOR']
101,//handler for logOut,['//handler for logOut'],"['COMMENT', 'NN', 'IN', 'NN']"
102,"func LogOutHandler(res http.ResponseWriter, req *http.Request) {","['func', 'LogOutHandler', '(', 'res', 'http', '.', 'ResponseWriter', ',', 'req', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
103,"    sessionOld, err := store.Get(req, ""loginSession"")","['sessionOld', ',', 'err', ':=', 'store', '.', 'Get', '(', 'req', ',', '""loginSession""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
104,"    fmt.Println(""Session in logout"")","['fmt', '.', 'Println', '(', '""Session in logout""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
105,    fmt.Println(sessionOld),"['fmt', '.', 'Println', '(', 'sessionOld', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
106,"    if err = sessionOld.Save(req, res); err != nil {","['if', 'err', '=', 'sessionOld', '.', 'Save', '(', 'req', ',', 'res', ');', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
107,"        fmt.Println(""Error saving session: %v"", err)","['fmt', '.', 'Println', '(', '""Error saving session: %v""', ',', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
108,    },['}'],['OPERATOR']
109,},['}'],['OPERATOR']
110,//handler for Session,['//handler for Session'],"['COMMENT', 'NN', 'IN', 'NN']"
111,"func SessionHandler(res http.ResponseWriter, req *http.Request) {","['func', 'SessionHandler', '(', 'res', 'http', '.', 'ResponseWriter', ',', 'req', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
112,"    router.PathPrefix(""/"").Handler(http.FileServer(http.Dir(""../static/"")))","['router', '.', 'PathPrefix', '(', '""/"").Handler(http.FileServer(http.Dir(""../static/""', ')))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
113,"    session, _ := store.Get(req, ""loginSession"")","['session', ',', '_', ':=', 'store', '.', 'Get', '(', 'req', ',', '""loginSession""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
114,"    fmt.Println(""Session in SessionHandler"")","['fmt', '.', 'Println', '(', '""Session in SessionHandler""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
115,    fmt.Println(session),"['fmt', '.', 'Println', '(', 'session', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
116,"    if val, ok := session.Values[""email""].(string); ok {","['if', 'val', ',', 'ok', ':=', 'session', '.', 'Values', '[', '""email""', '].(', 'string', ');', 'ok', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
117,        // if val is a string,['// if val is a string'],"['COMMENT', 'IN', 'NN', 'VBZ', 'DT', 'NN']"
118,        switch val {,"['switch', 'val', '{']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR']"
119,"        case """": {","['case', '""""', ':', '{']","['KEYWORD', 'STRING_LITERAL', 'OPERATOR', 'OPERATOR']"
120,"            http.Redirect(res, req, ""html/login.html"", http.StatusFound) }","['http', '.', 'Redirect', '(', 'res', ',', 'req', ',', '""html/login.html""', ',', 'http', '.', 'StatusFound', ')', '}']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
121,        default:,"['default', ':']","['KEYWORD', 'OPERATOR']"
122,"            http.Redirect(res, req, ""html/home.html"", http.StatusFound)","['http', '.', 'Redirect', '(', 'res', ',', 'req', ',', '""html/home.html""', ',', 'http', '.', 'StatusFound', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
123,        },['}'],['OPERATOR']
124,    } else {,"['}', 'else', '{']","['OPERATOR', 'KEYWORD', 'OPERATOR']"
125,        // if val is not a string type,['// if val is not a string type'],"['COMMENT', 'IN', 'NN', 'VBZ', 'RB', 'DT', 'NN', 'NN']"
126,"        http.Redirect(res, req, ""html/login.html"", http.StatusFound)","['http', '.', 'Redirect', '(', 'res', ',', 'req', ',', '""html/login.html""', ',', 'http', '.', 'StatusFound', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
127,    },['}'],['OPERATOR']
128,},['}'],['OPERATOR']
