,text,token,annotation
0,"It seems the use case is not as common as I thought. I implemented a custom ""parser"". Hopefully this doesn't violate any RFC. Any patch is welcome!

","['It', 'seems', 'the', 'use', 'case', 'is', 'not', 'as', 'common', 'as', 'I', 'thought.', 'I', 'implemented', 'a', 'custom', '""parser"".', 'Hopefully', 'this', ""doesn't"", 'violate', 'any', 'RFC.', 'Any', 'patch', 'is', 'welcome!']","['PRP', 'VBZ', 'DT', 'NN', 'NN', 'VBZ', 'RB', 'RB', 'JJ', 'IN', 'PRP', 'VBP', 'PRP', 'VBD', 'DT', 'NN', 'NNP', 'NNP', 'DT', 'JJ', 'NN', 'DT', 'NNP', 'NNP', 'NN', 'VBZ', 'JJ']"
1,package query,"['package', 'query']","['KEYWORD', 'IDENTIFIER']"
2,import(,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
3,"    ""net/url""","['""net/url""']",['STRING_LITERAL']
4,"    ""strings""","['""strings""']",['STRING_LITERAL']
5,),[')'],['PUNCTUATION']
6,//ParseQueryOp parses the URL-encoded query string and returns a map ,"['//', 'ParseQueryOp', 'parses', 'the', 'URL-encoded', 'query', 'string', 'and', 'returns', 'a', 'map']","['COMMENT', 'NNP', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'CC', 'VBZ', 'DT', 'NN']"
7,// listing the values specified for each key. ParseQueryOp always returns ,"['//', 'listing', 'the', 'values', 'specified', 'for', 'each', 'key.', 'ParseQueryOp', 'always', 'returns']","['COMMENT', 'VBG', 'DT', 'NNS', 'VBN', 'IN', 'DT', 'NN', 'NNP', 'RB', 'NNS']"
8,// a non-nil map containing all the valid query parameters found;,"['//', 'a', 'non-nil', 'map', 'containing', 'all', 'the', 'valid', 'query', 'parameters', 'found;']","['COMMENT', 'DT', 'JJ', 'NN', 'VBG', 'PDT', 'DT', 'JJ', 'NN', 'NNS', 'VBP']"
9,"// err describes the first decoding error encountered, if any.","['//', 'err', 'describes', 'the', 'first', 'decoding', 'error', 'encountered,', 'if', 'any.']","['COMMENT', 'NN', 'VBZ', 'DT', 'JJ', 'NN', 'NN', 'NN', 'IN', 'NN']"
10,// If the query has operators (e.g. &amount>300) it is Add-ed in the map,"['//', 'If', 'the', 'query', 'has', 'operators', '(e.g.', '&amount>300)', 'it', 'is', 'Add-ed', 'in', 'the', 'map']","['COMMENT', 'IN', 'DT', 'NN', 'VBZ', 'NNS', 'VBP', 'IN', 'PRP', 'VBZ', 'JJ', 'IN', 'DT', 'NN']"
11,// with a prefixed key ( {{prefix}}key ).,"['//', 'with', 'a', 'prefixed', 'key', '(', '{{prefix}}key', ').']","['COMMENT', 'IN', 'DT', 'JJ', 'NN', '(', 'JJ', 'NN']"
12,/*,['/*'],['PUNCTUATION']
13," e.g. for a query &Amount>300 the operator("">"") is returnd","['e', '.', 'g', '.', 'for', 'a', 'query', '&', 'Amount', '>', '300', 'the', 'operator', '(', '"">""', ')', 'is', 'return', 'd']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'BITWISE_OPERATOR', 'IDENTIFIER', 'RELATION_OPERATOR', 'DECIMAL_LITERAL', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER']"
14,"    s := ""query &Amount>300""","['s', ':=', '""query &Amount>300""']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
15,"    q, _ := ParseQueryOp(s, ""_op_"")","['q', ',', '_', ':=', 'ParseQueryOp', '(', 's', ',', '""_op_""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
16,"    print(q.Get(""_op_Amount"")) // prints `>`","['print', '(', 'q.Get(""_op_Amount""))', '//', 'prints', '`>`']","['IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL', 'COMMENT', 'NNS', 'VBP']"
17,"    print(q.Get(""Amount"")) // prints 300","['print', '(', 'q.Get(""Amount""))', '//', 'prints', '300']","['IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL', 'COMMENT', 'NNS', 'CD']"
18,*/,['*/'],['PUNCTUATION']
19,"func ParseQueryOp(query, prefix string) (m url.Values, err error){","['func', 'ParseQueryOp', '(', 'query', ',', 'prefix', 'string', ')', '(', 'm', 'url', '.', 'Values', ',', 'err', 'error', '){']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION']"
20,    m = make(url.Values),"['m', '=', 'make', '(', 'url', '.', 'Values', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
21,"    for query != """" {","['for', 'query', '!=', '""""', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'STRING_LITERAL', 'PUNCTUATION']"
22,        var opKey string,"['var', 'opKey', 'string']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
23,        key := query,"['key', ':=', 'query']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
24,"        if i := strings.IndexAny(key, ""&;""); i >= 0 {","['if', 'i', ':=', 'strings.IndexAny(key, ""&;"")', ';', 'i', '>=', '0', '{']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
25,"            key, query = key[:i], key[i+1:]","['key', ',', 'query', '=', 'key', '[:', 'i', '],', 'key', '[', 'i', '+', '1', ':]']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION']"
26,        } else {,"['}', 'else', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
27,"            query = """"","['query', '=', '""""']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
28,        },['}'],['PUNCTUATION']
29,"        if key == """" {","['if', 'key', '==', '""""', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'STRING_LITERAL', 'PUNCTUATION']"
30,            continue,['continue'],['KEYWORD']
31,        },['}'],['PUNCTUATION']
32,"        value := """"","['value', ':=', '""""']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
33,        var err1 error,"['var', 'err1', 'error']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
34,"        if i := strings.Index(key, "">=""); i >= 0{","['if', 'i', ':=', 'strings.Index(key, "">="")', ';', 'i', '>=', '0', '{']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
35,"            key, value = key[:i], key[i+2:]","['key', ',', 'value', '=', 'key', '[:', 'i', '],', 'key', '[', 'i', '+', '2', ':]']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION']"
36,            opKey = prefix + key ,"['opKey', '=', 'prefix', '+', 'key']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER']"
37,"            opKey, err1 = url.QueryUnescape(opKey)","['opKey', ',', 'err1', '=', 'url.QueryUnescape(opKey)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
38,            if err1 != nil {,"['if', 'err1', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
39,                if err == nil {,"['if', 'err', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
40,                    err = err1,"['err', '=', 'err1']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
41,                },['}'],['PUNCTUATION']
42,                continue,['continue'],['KEYWORD']
43,            },['}'],['PUNCTUATION']
44,"            m[opKey] = append(m[opKey], "">="")","['m', '[', 'opKey', ']', '=', 'append', '(', 'm', '[', 'opKey', '],', '"">=""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
45,"        }else if i = strings.Index(key, ""= 0{","['}', 'else', 'if', 'i', '=', 'strings', '.', 'Index', '(', 'key', ',', '=', '0', '{']","['PUNCTUATION', 'KEYWORD', 'KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'ASSIGNMENT_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
46,"            key, value = key[:i], key[i+2:]","['key', ',', 'value', '=', 'key', '[:', 'i', '],', 'key', '[', 'i', '+', '2', ':]']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION']"
47,            opKey = prefix + key ,"['opKey', '=', 'prefix', '+', 'key']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER']"
48,"            opKey, err1 = url.QueryUnescape(opKey)","['opKey', ',', 'err1', '=', 'url.QueryUnescape(opKey)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
49,            if err1 != nil {,"['if', 'err1', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
50,                if err == nil {,"['if', 'err', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
51,                    err = err1,"['err', '=', 'err1']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
52,                },['}'],['PUNCTUATION']
53,                continue,['continue'],['KEYWORD']
54,            },['}'],['PUNCTUATION']
55,"            m[opKey] = append(m[opKey], ""<="")","['m', '[', 'opKey', ']', '=', 'append', '(', 'm', '[', 'opKey', '],', '""<=""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
56,"        }else if i = strings.Index(key, ""="");  i >= 0{","['}', 'else', 'if', 'i', '=', 'strings.Index(key, ""="")', ';', 'i', '>=', '0', '{']","['PUNCTUATION', 'KEYWORD', 'KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
57,"            key, value = key[:i], key[i+1:]","['key', ',', 'value', '=', 'key', '[:', 'i', '],', 'key', '[', 'i', '+', '1', ':]']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION']"
58,"        }else if i = strings.Index(key, "">"");  i >= 0{","['}', 'else', 'if', 'i', '=', 'strings.Index(key, "">"")', ';', 'i', '>=', '0', '{']","['PUNCTUATION', 'KEYWORD', 'KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
59,"            key, value = key[:i], key[i+1:]","['key', ',', 'value', '=', 'key', '[:', 'i', '],', 'key', '[', 'i', '+', '1', ':]']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION']"
60,            opKey = prefix + key ,"['opKey', '=', 'prefix', '+', 'key']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER']"
61,"            opKey, err1 = url.QueryUnescape(opKey)","['opKey', ',', 'err1', '=', 'url.QueryUnescape(opKey)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
62,            if err1 != nil {,"['if', 'err1', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
63,                if err == nil {,"['if', 'err', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
64,                    err = err1,"['err', '=', 'err1']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
65,                },['}'],['PUNCTUATION']
66,                continue,['continue'],['KEYWORD']
67,            },['}'],['PUNCTUATION']
68,"            m[opKey] = append(m[opKey], "">"")","['m', '[', 'opKey', ']', '=', 'append', '(', 'm', '[', 'opKey', '],', '"">""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
69,"        }else if i = strings.Index(key, ""= 0{","['}', 'else', 'if', 'i', '=', 'strings', '.', 'Index', '(', 'key', ',', '=', '0', '{']","['PUNCTUATION', 'KEYWORD', 'KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'ASSIGNMENT_OPERATOR', 'OCTAL_LITERAL', 'PUNCTUATION']"
70,"            key, value = key[:i], key[i+1:]","['key', ',', 'value', '=', 'key', '[:', 'i', '],', 'key', '[', 'i', '+', '1', ':]']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION']"
71,            opKey = prefix + key ,"['opKey', '=', 'prefix', '+', 'key']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER']"
72,"            opKey, err1 = url.QueryUnescape(opKey)","['opKey', ',', 'err1', '=', 'url.QueryUnescape(opKey)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
73,            if err1 != nil {,"['if', 'err1', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
74,                if err == nil {,"['if', 'err', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
75,                    err = err1,"['err', '=', 'err1']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
76,                },['}'],['PUNCTUATION']
77,                continue,['continue'],['KEYWORD']
78,            },['}'],['PUNCTUATION']
79,"            m[opKey] = append(m[opKey], ""<"")","['m', '[', 'opKey', ']', '=', 'append', '(', 'm', '[', 'opKey', '],', '""<""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
80,        },['}'],['PUNCTUATION']
81,"        key, err1 = url.QueryUnescape(key)","['key', ',', 'err1', '=', 'url.QueryUnescape(key)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
82,        if err1 != nil {,"['if', 'err1', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
83,            if err == nil {,"['if', 'err', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
84,                err = err1,"['err', '=', 'err1']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
85,            },['}'],['PUNCTUATION']
86,            continue,['continue'],['KEYWORD']
87,        },['}'],['PUNCTUATION']
88,"        value, err1 = url.QueryUnescape(value)","['value', ',', 'err1', '=', 'url.QueryUnescape(value)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
89,        if err1 != nil {,"['if', 'err1', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
90,            if err == nil {,"['if', 'err', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
91,                err = err1,"['err', '=', 'err1']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
92,            },['}'],['PUNCTUATION']
93,            continue,['continue'],['KEYWORD']
94,        },['}'],['PUNCTUATION']
95,"        m[key] = append(m[key], value)","['m', '[', 'key', ']', '=', 'append', '(', 'm', '[', 'key', '],', 'value', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
96,    },['}'],['PUNCTUATION']
97,"    return m, err","['return', 'm', ',', 'err']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
98,},['}'],['PUNCTUATION']
99,"

And some tests

","['And', 'some', 'tests']","['CC', 'DT', 'NNS']"
100,package query,"['package', 'query']","['KEYWORD', 'IDENTIFIER']"
101,import(,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
102,"    ""testing""","['""testing""']",['STRING_LITERAL']
103,"    ""net/url""","['""net/url""']",['STRING_LITERAL']
104,),[')'],['PUNCTUATION']
105,type parseTest struct {,"['type', 'parseTest', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
106,    query string,"['query', 'string']","['IDENTIFIER', 'IDENTIFIER']"
107,    out   url.Values,"['out', 'url', '.', 'Values']","['IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
108,},['}'],['PUNCTUATION']
109,var parseTests = []parseTest{,"['var', 'parseTests', '=', '[]', 'parseTest', '{']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
110,    {,['{'],['PUNCTUATION']
111,"        query: ""a=1&b=2"",","['query', ':', '""a=1&b=2""', ',']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
112,"        out:   url.Values{""a"": []string{""1""}, ""b"": []string{""2""}},","['out', ':', 'url', '.', 'Values', '{', '""a""', ':', '[]', 'string', '{', '""1""', '},', '""b""', ':', '[]', 'string', '{', '""2""', '}},']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
113,"    },","['},']",['PUNCTUATION']
114,    {,['{'],['PUNCTUATION']
115,"        query: ""a=1&a=2&a=banana"",","['query', ':', '""a=1&a=2&a=banana""', ',']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
116,"        out:   url.Values{""a"": []string{""1"", ""2"", ""banana""}},","['out', ':', 'url', '.', 'Values', '{', '""a""', ':', '[]', 'string', '{', '""1""', ',', '""2""', ',', '""banana""', '}},']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
117,"    },","['},']",['PUNCTUATION']
118,    {,['{'],['PUNCTUATION']
119,"        query: ""ascii=%3Ckey%3A+0x90%3E"",","['query', ':', '""ascii=%3Ckey%3A+0x90%3E""', ',']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
120,"        out:   url.Values{""ascii"": []string{""""}},","['out', ':', 'url', '.', 'Values', '{', '""ascii""', ':', '[]', 'string', '{', '""""', '}},']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
121,"    },","['},']",['PUNCTUATION']
122,    {,['{'],['PUNCTUATION']
123,"        query: ""a=1;b=2"",","['query', ':', '""a=1;b=2""', ',']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
124,"        out:   url.Values{""a"": []string{""1""}, ""b"": []string{""2""}},","['out', ':', 'url', '.', 'Values', '{', '""a""', ':', '[]', 'string', '{', '""1""', '},', '""b""', ':', '[]', 'string', '{', '""2""', '}},']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
125,"    },","['},']",['PUNCTUATION']
126,    {,['{'],['PUNCTUATION']
127,"        query: ""a=1&a=2;a=banana"",","['query', ':', '""a=1&a=2;a=banana""', ',']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
128,"        out:   url.Values{""a"": []string{""1"", ""2"", ""banana""}},","['out', ':', 'url', '.', 'Values', '{', '""a""', ':', '[]', 'string', '{', '""1""', ',', '""2""', ',', '""banana""', '}},']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
129,"    },","['},']",['PUNCTUATION']
130,    {,['{'],['PUNCTUATION']
131,"        query: ""a=1&b>2"",","['query', ':', '""a=1&b>2""', ',']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
132,"        out:   url.Values{""a"": []string{""1""}, ""_op_b"": []string{"">""}, ""b"": []string{""2""}},","['out', ':', 'url', '.', 'Values', '{', '""a""', ':', '[]', 'string', '{', '""1""', '},', '""_op_b""', ':', '[]', 'string', '{', '"">""', '},', '""b""', ':', '[]', 'string', '{', '""2""', '}},']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
133,"    },","['},']",['PUNCTUATION']
134,    {,['{'],['PUNCTUATION']
135,"        query: ""a=1&b<2"",","['query', ':', '""a=1&b<2""', ',']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
136,"        out:   url.Values{""a"": []string{""1""}, ""_op_b"": []string{""<""}, ""b"": []string{""2""}},","['out', ':', 'url', '.', 'Values', '{', '""a""', ':', '[]', 'string', '{', '""1""', '},', '""_op_b""', ':', '[]', 'string', '{', '""<""', '},', '""b""', ':', '[]', 'string', '{', '""2""', '}},']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
137,"    },","['},']",['PUNCTUATION']
138,    {,['{'],['PUNCTUATION']
139,"        query: ""a=1&b>=2"",","['query', ':', '""a=1&b>=2""', ',']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
140,"        out:   url.Values{""a"": []string{""1""}, ""_op_b"": []string{"">=""}, ""b"": []string{""2""}},","['out', ':', 'url', '.', 'Values', '{', '""a""', ':', '[]', 'string', '{', '""1""', '},', '""_op_b""', ':', '[]', 'string', '{', '"">=""', '},', '""b""', ':', '[]', 'string', '{', '""2""', '}},']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
141,"    },","['},']",['PUNCTUATION']
142,    {,['{'],['PUNCTUATION']
143,"        query: ""a=1&b<=2"",","['query', ':', '""a=1&b<=2""', ',']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
144,"        out:   url.Values{""a"": []string{""1""}, ""_op_b"": []string{""<=""}, ""b"": []string{""2""}},","['out', ':', 'url', '.', 'Values', '{', '""a""', ':', '[]', 'string', '{', '""1""', '},', '""_op_b""', ':', '[]', 'string', '{', '""<=""', '},', '""b""', ':', '[]', 'string', '{', '""2""', '}},']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
145,"    },","['},']",['PUNCTUATION']
146,},['}'],['PUNCTUATION']
147,func TestParseQueryOut(t *testing.T) {,"['func', 'TestParseQueryOut', '(', 't', '*', 'testing', '.', 'T', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
148,"    for i, test := range parseTests {","['for', 'i', ',', 'test', ':=', 'range', 'parseTests', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
149,"        form, err := ParseQueryOp(test.query, ""_op_"")","['for', 'm', ',', 'err', ':=', 'ParseQueryOp', '(', 'test', '.', 'query', ',', '""_op_""', ')']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
150,        if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
151,"            t.Errorf(""test %d: Unexpected error: %v"", i, err)","['t.Errorf(""test %d: Unexpected error: %v"", i, err)']",['FUNCTION_CALL']
152,            continue,['continue'],['KEYWORD']
153,        },['}'],['PUNCTUATION']
154,        if len(form) != len(test.out) {,"['if', 'len', '(', 'for', 'm', ')', '!=', 'len', '(', 'test', '.', 'out', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
155,"            t.Errorf(""test %d: len(form) = %d, want %d"", i, len(form), len(test.out))","['t.Errorf(""test %d: len(form) = %d, want %d"", i, len(form), len(test.out))']",['FUNCTION_CALL']
156,        },['}'],['PUNCTUATION']
157,"        for k, evs := range test.out {","['for', 'k', ',', 'evs', ':=', 'range', 'test', '.', 'out', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
158,"            vs, ok := form[k]","['vs', ',', 'ok', ':=', 'for', 'm', '[', 'k', ']']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
159,            if !ok {,"['if', '!', 'ok', '{']","['KEYWORD', 'LOGICAL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
160,"                t.Errorf(""test %d: Missing key %q"", i, k)","['t.Errorf(""test %d: Missing key %q"", i, k)']",['FUNCTION_CALL']
161,                continue,['continue'],['KEYWORD']
162,            },['}'],['PUNCTUATION']
163,            if len(vs) != len(evs) {,"['if', 'len', '(', 'vs', ')', '!=', 'len', '(', 'evs', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
164,"                t.Errorf(""test %d: len(form[%q]) = %d, want %d"", i, k, len(vs), len(evs))","['t.Errorf(""test %d: len(form[%q]) = %d, want %d"", i, k, len(vs), len(evs))']",['FUNCTION_CALL']
165,                continue,['continue'],['KEYWORD']
166,            },['}'],['PUNCTUATION']
167,"            for j, ev := range evs {","['for', 'j', ',', 'ev', ':=', 'range', 'evs', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
168,                if v := vs[j]; v != ev {,"['if', 'v', ':=', 'vs', '[', 'j', '];', 'v', '!=', 'ev', '{']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
169,"                    t.Errorf(""test %d: form[%q][%d] = %q, want %q"", i, k, j, v, ev)","['t.Errorf(""test %d: form[%q][%d] = %q, want %q"", i, k, j, v, ev)']",['FUNCTION_CALL']
170,                },['}'],['PUNCTUATION']
171,            },['}'],['PUNCTUATION']
172,        },['}'],['PUNCTUATION']
173,    },['}'],['PUNCTUATION']
174,},['}'],['PUNCTUATION']
