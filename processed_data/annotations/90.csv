,text,token,annotation
0,"Over the last few weeks I have been lurking around Stack Overflow looking for information related to reading numerous websockets.   Basically, I have numerous hosts that all emit messages over a websocket and I need to aggregate them.  

I've accomplished this with Golang thus far for a single websocket connection.  I've accomplished what I am looking for using Python as well, but I would really like to do this in Go!

I have used gorilla's websocket example as well a few others and can successfully read a socket in Go.  However, it seems the websocket server does not completely conform to the typical development practice(s) as using a method such as .forEach or .Each in JS; causes handshake failures.

Original Version

","['Over', 'the', 'last', 'few', 'weeks', 'I', 'have', 'been', 'lurking', 'around', 'Stack', 'Overflow', 'looking', 'for', 'information', 'related', 'to', 'reading', 'numerous', 'websockets.', 'Basically,', 'I', 'have', 'numerous', 'hosts', 'that', 'all', 'emit', 'messages', 'over', 'a', 'websocket', 'and', 'I', 'need', 'to', 'aggregate', 'them.', ""I've"", 'accomplished', 'this', 'with', 'Golang', 'thus', 'far', 'for', 'a', 'single', 'websocket', 'connection.', ""I've"", 'accomplished', 'what', 'I', 'am', 'looking', 'for', 'using', 'Python', 'as', 'well,', 'but', 'I', 'would', 'really', 'like', 'to', 'do', 'this', 'in', 'Go!', 'I', 'have', 'used', ""gorilla's"", 'websocket', 'example', 'as', 'well', 'a', 'few', 'others', 'and', 'can', 'successfully', 'read', 'a', 'socket', 'in', 'Go.', 'However,', 'it', 'seems', 'the', 'websocket', 'server', 'does', 'not', 'completely', 'conform', 'to', 'the', 'typical', 'development', 'practice(s)', 'as', 'using', 'a', 'method', 'such', 'as', '.forEach', 'or', '.Each', 'in', 'JS;', 'causes', 'handshake', 'failures.', 'Original', 'Version']","['IN', 'DT', 'JJ', 'JJ', 'NNS', 'PRP', 'VBP', 'VBN', 'VBG', 'RB', 'NNP', 'NNP', 'VBG', 'IN', 'NN', 'VBN', 'TO', 'VBG', 'JJ', 'NNS', 'VBP', 'PRP', 'VBP', 'JJ', 'NNS', 'IN', 'DT', 'NN', 'NNS', 'IN', 'DT', 'NN', 'CC', 'PRP', 'VBP', 'TO', 'VB', 'JJ', 'NNP', 'VBD', 'DT', 'IN', 'NNP', 'RB', 'RB', 'IN', 'DT', 'JJ', 'NN', 'NN', 'NNP', 'VBD', 'WP', 'PRP', 'VBP', 'VBG', 'IN', 'VBG', 'NNP', 'IN', 'NN', 'CC', 'PRP', 'MD', 'RB', 'VB', 'TO', 'VB', 'DT', 'IN', 'NNP', 'PRP', 'VBP', 'VBN', 'NN', 'NN', 'NN', 'RB', 'RB', 'DT', 'JJ', 'NNS', 'CC', 'MD', 'RB', 'VB', 'DT', 'NN', 'IN', 'NNP', 'NNP', 'PRP', 'VBZ', 'DT', 'NN', 'NN', 'VBZ', 'RB', 'RB', 'VB', 'TO', 'DT', 'JJ', 'NN', 'NN', 'IN', 'VBG', 'DT', 'NN', 'JJ', 'IN', 'NN', 'CC', 'NN', 'IN', 'NNP', 'NNS', 'VBP', 'JJ', 'NNP', 'NNP']"
1,    package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
2,    import (,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
3,"            ""fmt""","['""fmt""']",['STRING_LITERAL']
4,"            ""golang.org/x/net/websocket""","['""golang.org/x/net/websocket""']",['STRING_LITERAL']
5,"            ""log""","['""log""']",['STRING_LITERAL']
6,    ),[')'],['PUNCTUATION']
7,"    var url = ""ws://10.0.1.19:5000/data/websocket""","['var', 'url', '=', '""ws://10.0.1.19:5000/data/websocket""']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
8,    func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
9,"            ws, err := websocket.Dial(url, """", origin)","['ws', ',', 'err', ':=', 'websocket.Dial(url, """", origin)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
10,            if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
11,                    log.Fatal(err),['log.Fatal(err)'],['FUNCTION_CALL']
12,            },['}'],['PUNCTUATION']
13,"            var msg = make([]byte, 512)","['var', 'msg', '=', 'make', '([]', 'byte', ',', '512', ')']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
14,"            _, err = ws.Read(msg)","['_', ',', 'err', '=', 'ws.Read(msg)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
15,            if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
16,                    log.Fatal(err),['log.Fatal(err)'],['FUNCTION_CALL']
17,            },['}'],['PUNCTUATION']
18,"            fmt.Printf(""Receive: %s\n"", msg)","['fmt.Printf(""Receive: %s\\n"", msg)']",['FUNCTION_CALL']
19,    },['}'],['PUNCTUATION']
20,"

I dont actually need to send any data to the socket, I simply need to connect and continue to read it and then I'll aggregate that data into a single stream for performing later operations.



Update (2016-03-19)

After continuous changes and testing with both the gorilla and the old x/net/websocket library, I found that unfortunately it seems the websocket server(s) I am connecting to do not properly adhere to the standard that gorilla wants to use for the handshake.  Either that or I am not telling gorilla how to properly connect.  x/net/websocket connects just fine; I just specify localhost/ as the origin and it seems to work.  I am unsure how to tell gorilla how to do the same to see if it works the same way.  Digging through the DefaultDialer.Dial() has some configuration options but in my modest Go knowledge now I have not found a way to leverage it to do what I am trying to do.  

Current Version (2016-03-19)

","['I', 'dont', 'actually', 'need', 'to', 'send', 'any', 'data', 'to', 'the', 'socket,', 'I', 'simply', 'need', 'to', 'connect', 'and', 'continue', 'to', 'read', 'it', 'and', 'then', ""I'll"", 'aggregate', 'that', 'data', 'into', 'a', 'single', 'stream', 'for', 'performing', 'later', 'operations.', 'Update', '(2016-03-19)', 'After', 'continuous', 'changes', 'and', 'testing', 'with', 'both', 'the', 'gorilla', 'and', 'the', 'old', 'x/net/websocket', 'library,', 'I', 'found', 'that', 'unfortunately', 'it', 'seems', 'the', 'websocket', 'server(s)', 'I', 'am', 'connecting', 'to', 'do', 'not', 'properly', 'adhere', 'to', 'the', 'standard', 'that', 'gorilla', 'wants', 'to', 'use', 'for', 'the', 'handshake.', 'Either', 'that', 'or', 'I', 'am', 'not', 'telling', 'gorilla', 'how', 'to', 'properly', 'connect.', 'x/net/websocket', 'connects', 'just', 'fine;', 'I', 'just', 'specify', 'localhost/', 'as', 'the', 'origin', 'and', 'it', 'seems', 'to', 'work.', 'I', 'am', 'unsure', 'how', 'to', 'tell', 'gorilla', 'how', 'to', 'do', 'the', 'same', 'to', 'see', 'if', 'it', 'works', 'the', 'same', 'way.', 'Digging', 'through', 'the', 'DefaultDialer.Dial()', 'has', 'some', 'configuration', 'options', 'but', 'in', 'my', 'modest', 'Go', 'knowledge', 'now', 'I', 'have', 'not', 'found', 'a', 'way', 'to', 'leverage', 'it', 'to', 'do', 'what', 'I', 'am', 'trying', 'to', 'do.', 'Current', 'Version', '(2016-03-19)']","['PRP', 'VBP', 'RB', 'VBP', 'TO', 'VB', 'DT', 'NNS', 'TO', 'DT', 'NN', 'PRP', 'RB', 'VB', 'TO', 'VB', 'CC', 'VB', 'TO', 'VB', 'PRP', 'CC', 'RB', 'NNP', 'VBP', 'IN', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'VBG', 'RB', 'JJ', 'NNP', 'NN', 'IN', 'JJ', 'NNS', 'CC', 'VBG', 'IN', 'DT', 'DT', 'NN', 'CC', 'DT', 'JJ', 'NN', 'NN', 'PRP', 'VBD', 'IN', 'RB', 'PRP', 'VBZ', 'DT', 'NN', 'NN', 'PRP', 'VBP', 'VBG', 'TO', 'VB', 'RB', 'RB', 'RB', 'TO', 'DT', 'NN', 'WDT', 'NN', 'VBZ', 'TO', 'VB', 'IN', 'DT', 'NN', 'CC', 'IN', 'CC', 'PRP', 'VBP', 'RB', 'VBG', 'VB', 'WRB', 'TO', 'VB', 'NN', 'NNP', 'VBZ', 'RB', 'VBN', 'PRP', 'RB', 'VB', 'NN', 'IN', 'DT', 'NN', 'CC', 'PRP', 'VBZ', 'TO', 'VB', 'PRP', 'VBP', 'JJ', 'WRB', 'TO', 'VB', 'VB', 'WRB', 'TO', 'VB', 'DT', 'JJ', 'TO', 'VB', 'IN', 'PRP', 'VBZ', 'DT', 'JJ', 'NN', 'NNP', 'IN', 'DT', 'NNP', 'VBZ', 'DT', 'NN', 'NNS', 'CC', 'IN', 'PRP$', 'JJ', 'NNP', 'NN', 'RB', 'PRP', 'VBP', 'RB', 'VBN', 'DT', 'NN', 'TO', 'VB', 'PRP', 'TO', 'VB', 'WP', 'PRP', 'VBP', 'VBG', 'TO', 'VB', 'NNP', 'NNP', 'NN']"
21,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
22,import (,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
23,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
24,"    ""golang.org/x/net/websocket""","['""golang.org/x/net/websocket""']",['STRING_LITERAL']
25,"    // ""log""","['//', '""log""']","['COMMENT', 'NN']"
26,"    ""time""","['""time""']",['STRING_LITERAL']
27,),[')'],['PUNCTUATION']
28,"var origin = ""http://localhost""","['var', 'origin', '=', '""http://localhost""']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'STRING_LITERAL']"
29,type url struct {,"['type', 'url', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
30,    host string,"['host', 'string']","['IDENTIFIER', 'IDENTIFIER']"
31,},['}'],['PUNCTUATION']
32,"func processUrl(host string, messages chan []byte) {","['func', 'processUrl', '(', 'host', 'string', ',', 'messages', 'chan', '[]', 'byte', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
33,"    client, err := websocket.Dial(host, """", origin)","['client', ',', 'err', ':=', 'websocket.Dial(host, """", origin)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
34,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
35,"        // log.Printf(""dial:"", err)","['//', 'log.Printf(""dial:"",', 'err)']","['COMMENT', 'NN', 'NN']"
36,    },['}'],['PUNCTUATION']
37,    // Clean up on exit from this goroutine,"['//', 'Clean', 'up', 'on', 'exit', 'from', 'this', 'goroutine']","['COMMENT', 'NNP', 'RP', 'IN', 'NN', 'IN', 'DT', 'NN']"
38,    defer client.Close(),"['defer', 'client.Close()']","['IDENTIFIER', 'FUNCTION_CALL']"
39,    // Loop reading messages. Send each message to the channel.,"['//', 'Loop', 'reading', 'messages.', 'Send', 'each', 'message', 'to', 'the', 'channel.']","['COMMENT', 'NNP', 'VBG', 'JJ', 'NNP', 'DT', 'NN', 'TO', 'DT', 'NN']"
40,    for {,"['for', '{']","['KEYWORD', 'PUNCTUATION']"
41,"        var msg = make([]byte, 512)","['var', 'msg', '=', 'make', '([]', 'byte', ',', '512', ')']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION']"
42,"        _, err = client.Read(msg)","['_', ',', 'err', '=', 'client.Read(msg)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
43,        if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
44,"            // log.Fatal(""read:"", err)","['//', 'log.Fatal(""read:"",', 'err)']","['COMMENT', 'NN', 'NN']"
45,            return,['return'],['KEYWORD']
46,        },['}'],['PUNCTUATION']
47,        messages <- msg,"['messages', '<-', 'msg']","['IDENTIFIER', 'CHANNEL_OPERATOR', 'IDENTIFIER']"
48,    },['}'],['PUNCTUATION']
49,},['}'],['PUNCTUATION']
50,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
51,    // Create an arry of hosts to read websockets from,"['//', 'Create', 'an', 'arry', 'of', 'hosts', 'to', 'read', 'websockets', 'from']","['COMMENT', 'NNP', 'DT', 'NN', 'IN', 'NNS', 'TO', 'VB', 'NNS', 'IN']"
52,    urls := []string{,"['urls', ':=', '[]', 'string', '{']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
53,"        ""ws://10.0.1.90:3000/data/websocket"",","['""ws://10.0.1.90:3000/data/websocket""', ',']","['STRING_LITERAL', 'PUNCTUATION']"
54,"        ""ws://10.0.2.90:3000/data/websocket"",","['""ws://10.0.2.90:3000/data/websocket""', ',']","['STRING_LITERAL', 'PUNCTUATION']"
55,"        ""ws://10.0.3.90:3000/data/websocket"",","['""ws://10.0.3.90:3000/data/websocket""', ',']","['STRING_LITERAL', 'PUNCTUATION']"
56,    },['}'],['PUNCTUATION']
57,    // Create channel to receive messages from all connections,"['//', 'Create', 'channel', 'to', 'receive', 'messages', 'from', 'all', 'connections']","['COMMENT', 'NNP', 'NNS', 'TO', 'VB', 'NNS', 'IN', 'DT', 'NNS']"
58,    messages := make(chan []byte),"['messages', ':=', 'make', '(', 'chan', '[]', 'byte', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
59,    // Run a goroutine for each URL that you want to dial.,"['//', 'Run', 'a', 'goroutine', 'for', 'each', 'URL', 'that', 'you', 'want', 'to', 'dial.']","['COMMENT', 'VB', 'DT', 'NN', 'IN', 'DT', 'NNP', 'IN', 'PRP', 'VBP', 'TO', 'VB']"
60,"    for _, host := range urls {","['for', '_', ',', 'host', ':=', 'range', 'urls', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
61,"        go processUrl(host, messages)","['go', 'processUrl', '(', 'host', ',', 'messages', ')']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
62,    },['}'],['PUNCTUATION']
63,    // Print all messages received from the goroutines.,"['//', 'Print', 'all', 'messages', 'received', 'from', 'the', 'goroutines.']","['COMMENT', 'NNP', 'DT', 'NNS', 'VBN', 'IN', 'DT', 'NN']"
64,    for msg := range messages {,"['for', 'msg', ':=', 'range', 'messages', '{']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
65,"        fmt.Printf(""%d %s\n"", time.Now().Unix(), msg)","['fmt.Printf(""%d %s\\n"", time.Now().Unix(), msg)']",['FUNCTION_CALL']
66,    },['}'],['PUNCTUATION']
67,},['}'],['PUNCTUATION']
68,"

RESPONSE (message from ws):

","['RESPONSE', '(message', 'from', 'ws):']","['NNP', 'NN', 'IN', 'NN']"
69,    {,['{'],['PUNCTUATION']
70,"        ""src_city"":""Wayne"",","['""src_city""', ':', '""Wayne""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
71,"        ""dest_city"":""Amsterdam"",","['""dest_city""', ':', '""Amsterdam""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
72,"        ""src_country"":""US"",","['""src_country""', ':', '""US""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
73,"        ""dest_country"":""NL"",","['""dest_country""', ':', '""NL""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
74,"        ""type"":""view""","['""type""', ':', '""view""']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL']"
75,    },['}'],['PUNCTUATION']
76,"

IOWait Issue(s)

One issue I am running in to is IOWait errors.  I ran the binary overnight against 10 websockets without any issue.  I ran it against al 488 that I need to run it against and it hit IOWait 2 minutes, etc.  Some of the routine errors I see:

","['IOWait', 'Issue(s)', 'One', 'issue', 'I', 'am', 'running', 'in', 'to', 'is', 'IOWait', 'errors.', 'I', 'ran', 'the', 'binary', 'overnight', 'against', '10', 'websockets', 'without', 'any', 'issue.', 'I', 'ran', 'it', 'against', 'al', '488', 'that', 'I', 'need', 'to', 'run', 'it', 'against', 'and', 'it', 'hit', 'IOWait', '2', 'minutes,', 'etc.', 'Some', 'of', 'the', 'routine', 'errors', 'I', 'see:']","['NNP', 'NNP', 'NNP', 'NN', 'PRP', 'VBP', 'VBG', 'IN', 'TO', 'VBZ', 'NNP', 'NN', 'PRP', 'VBD', 'DT', 'JJ', 'NN', 'IN', 'CD', 'NNS', 'IN', 'DT', 'NN', 'PRP', 'VBD', 'PRP', 'IN', 'RB', 'CD', 'IN', 'PRP', 'VBP', 'TO', 'VB', 'PRP', 'IN', 'CC', 'PRP', 'VBD', 'NNP', 'CD', 'NN', 'CC', 'DT', 'IN', 'DT', 'JJ', 'NNS', 'PRP', 'VBP']"
77,    goroutine 72 [IO wait]:,"['go', 'routine', '72', '[', 'IO', 'wait', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION']"
78,"    net.runtime_pollWait(0x7f356149b208, 0x72, 0x0)","['net.runtime_pollWait(0x7f356149b208, 0x72, 0x0)']",['FUNCTION_CALL']
79,        /usr/lib/go/src/pkg/runtime/netpoll.goc:146 +0x66,"['/usr/lib/go/src/pkg/runtime/netpoll.goc:146', '+', '0x66']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
80,"    net.(*pollDesc).Wait(0xc20804e610, 0x72, 0x0, 0x0)","['net', '.(*', 'pollDesc', ').', 'Wait', '(', '0xc2', '0', '804', 'e610', ',', '0x72', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
81,        /usr/lib/go/src/pkg/net/fd_poll_runtime.go:84 +0x46,"['/usr/lib/go/src/pkg/net/fd_poll_runtime.go:84', '+', '0x46']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
82,"    net.(*pollDesc).WaitRead(0xc20804e610, 0x0, 0x0)","['net', '.(*', 'pollDesc', ').', 'WaitRead', '(', '0xc2', '0', '804', 'e610', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
83,        /usr/lib/go/src/pkg/net/fd_poll_runtime.go:89 +0x42,"['/usr/lib/go/src/pkg/net/fd_poll_runtime.go:89', '+', '0x42']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
84,"    net.(*netFD).Read(0xc20804e5b0, 0xc2080d1000, 0x1000, 0x1000, 0x0, 0x7f3561498418, 0xb)","['net', '.(*', 'netFD', ').', 'Read', '(', '0xc2', '0', '804', 'e5b0', ',', '0xc2', '0', '80', 'd1000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0', 'x0', ',', '0x7f3561498418', ',', '0xb', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'PUNCTUATION']"
85,        /usr/lib/go/src/pkg/net/fd_unix.go:242 +0x34c,"['/usr/lib/go/src/pkg/net/fd_unix.go:242', '+', '0x34c']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
86,"    net.(*conn).Read(0xc20803a150, 0xc2080d1000, 0x1000, 0x1000, 0x0, 0x0, 0x0)","['net', '.(*', 'conn', ').', 'Read', '(', '0xc2', '0', '803', 'a150', ',', '0xc2', '0', '80', 'd1000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
87,        /usr/lib/go/src/pkg/net/net.go:122 +0xe7,"['/usr/lib/go/src/pkg/net/net.go:122', '+', '0xe7']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
88,    bufio.(*Reader).fill(0xc208005140),"['bufio', '.(*', 'Reader', ').', 'fill', '(', '0xc2', '0', '8005140', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'PUNCTUATION']"
89,        /usr/lib/go/src/pkg/bufio/bufio.go:97 +0x1b3,"['/usr/lib/go/src/pkg/bufio/bufio.go:97', '+', '0x1b3']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
90,"    bufio.(*Reader).ReadByte(0xc208005140, 0xc2080f22d0, 0x0, 0x0)","['bufio', '.(*', 'Reader', ').', 'ReadByte', '(', '0xc2', '0', '8005140', ',', '0xc2', '0', '80', 'f22d0', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
91,        /usr/lib/go/src/pkg/bufio/bufio.go:199 +0x7e,"['/usr/lib/go/src/pkg/bufio/bufio.go:199', '+', '0x7e']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
92,"    golang.org/x/net/websocket.hybiFrameReaderFactory.NewFrameReader(0xc208005140, 0x7f356149b908, 0xc2080f22d0, 0x0, 0x0)","['go', 'lang.org/x/net/websocket.hybiFrameReaderFactory.NewFrameReader(0xc208005140,', '0x7f356149b9', '0', '8', ',', '0xc2', '0', '80', 'f22d0', ',', '0', 'x0', ',', '0', 'x0', ')']","['KEYWORD', 'DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
93,        /home/shat/go/src/golang.org/x/net/websocket/hybi.go:126 +0xd7,"['/home/shat/go/src/golang.org/x/net/websocket/hybi.go:126', '+', '0xd7']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
94,"    golang.org/x/net/websocket.(*Conn).Read(0xc2080d7050, 0xc2080f4c00, 0x200, 0x200, 0x0, 0x0, 0x0)","['go', 'lang.org/x/net/websocket.(*Conn).Read(0xc2080d7050,', '0xc2', '0', '80', 'f4c00', ',', '0x2', '0', '0', ',', '0x2', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['KEYWORD', 'DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
95,        /home/shat/go/src/golang.org/x/net/websocket/websocket.go:178 +0xfb,"['/home/shat/go/src/golang.org/x/net/websocket/websocket.go:178', '+', '0xfb']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
96,"    main.processUrl(0x705010, 0x26, 0xc208004180)","['main.processUrl(0x705010, 0x26, 0xc208004180)']",['FUNCTION_CALL']
97,        /home/shat/go/src/github.com/sh4t/scansock/main.go:26 +0x107,"['/home/shat/go/src/github.com/sh4t/scansock/main.go:26', '+', '0x1', '07']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL']"
98,    created by main.main,"['created', 'by', 'main', '.', 'main']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
99,        /home/shat/go/src/github.com/sh4t/scansock/main.go:101 +0x126,"['/home/shat/go/src/github.com/sh4t/scansock/main.go:101', '+', '0x126']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
100,"    goroutine 73 [IO wait, 2 minutes]:","['go', 'routine', '73', '[', 'IO', 'wait', ',', '2', 'minutes', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
101,"    net.runtime_pollWait(0x7f356149b158, 0x72, 0x0)","['net.runtime_pollWait(0x7f356149b158, 0x72, 0x0)']",['FUNCTION_CALL']
102,        /usr/lib/go/src/pkg/runtime/netpoll.goc:146 +0x66,"['/usr/lib/go/src/pkg/runtime/netpoll.goc:146', '+', '0x66']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
103,"    net.(*pollDesc).Wait(0xc20804e760, 0x72, 0x0, 0x0)","['net', '.(*', 'pollDesc', ').', 'Wait', '(', '0xc2', '0', '804', 'e760', ',', '0x72', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
104,        /usr/lib/go/src/pkg/net/fd_poll_runtime.go:84 +0x46,"['/usr/lib/go/src/pkg/net/fd_poll_runtime.go:84', '+', '0x46']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
105,"    net.(*pollDesc).WaitRead(0xc20804e760, 0x0, 0x0)","['net', '.(*', 'pollDesc', ').', 'WaitRead', '(', '0xc2', '0', '804', 'e760', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
106,        /usr/lib/go/src/pkg/net/fd_poll_runtime.go:89 +0x42,"['/usr/lib/go/src/pkg/net/fd_poll_runtime.go:89', '+', '0x42']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
107,"    net.(*netFD).Read(0xc20804e700, 0xc208015000, 0x1000, 0x1000, 0x0, 0x7f3561498418, 0xb)","['net', '.(*', 'netFD', ').', 'Read', '(', '0xc2', '0', '804', 'e700', ',', '0xc2', '0', '8015000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0', 'x0', ',', '0x7f3561498418', ',', '0xb', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'PUNCTUATION']"
108,        /usr/lib/go/src/pkg/net/fd_unix.go:242 +0x34c,"['/usr/lib/go/src/pkg/net/fd_unix.go:242', '+', '0x34c']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
109,"    net.(*conn).Read(0xc20803a018, 0xc208015000, 0x1000, 0x1000, 0x0, 0x0, 0x0)","['net', '.(*', 'conn', ').', 'Read', '(', '0xc2', '0', '803', 'a018', ',', '0xc2', '0', '8015000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
110,        /usr/lib/go/src/pkg/net/net.go:122 +0xe7,"['/usr/lib/go/src/pkg/net/net.go:122', '+', '0xe7']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
111,    bufio.(*Reader).fill(0xc2080042a0),"['bufio', '.(*', 'Reader', ').', 'fill', '(', '0xc2', '0', '80042', 'a0', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
112,        /usr/lib/go/src/pkg/bufio/bufio.go:97 +0x1b3,"['/usr/lib/go/src/pkg/bufio/bufio.go:97', '+', '0x1b3']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
113,"    bufio.(*Reader).ReadByte(0xc2080042a0, 0x67d6e0, 0x0, 0x0)","['bufio', '.(*', 'Reader', ').', 'ReadByte', '(', '0xc2', '0', '80042', 'a0', ',', '0x67d6e', '0', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
114,        /usr/lib/go/src/pkg/bufio/bufio.go:199 +0x7e,"['/usr/lib/go/src/pkg/bufio/bufio.go:199', '+', '0x7e']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
115,"    golang.org/x/net/websocket.hybiFrameReaderFactory.NewFrameReader(0xc2080042a0, 0x7f356149b908, 0xc2080196d0, 0x0, 0x0)","['go', 'lang.org/x/net/websocket.hybiFrameReaderFactory.NewFrameReader(0xc2080042a0,', '0x7f356149b9', '0', '8', ',', '0xc2', '0', '80196', 'd0', ',', '0', 'x0', ',', '0', 'x0', ')']","['KEYWORD', 'DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
116,        /home/shat/go/src/golang.org/x/net/websocket/hybi.go:126 +0xd7,"['/home/shat/go/src/golang.org/x/net/websocket/hybi.go:126', '+', '0xd7']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
117,"    golang.org/x/net/websocket.(*Conn).Read(0xc208024240, 0xc208080000, 0x200, 0x200, 0x0, 0x0, 0x0)","['go', 'lang.org/x/net/websocket.(*Conn).Read(0xc208024240,', '0xc2', '0', '8080000', ',', '0x2', '0', '0', ',', '0x2', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['KEYWORD', 'DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
118,        /home/shat/go/src/golang.org/x/net/websocket/websocket.go:178 +0xfb,"['/home/shat/go/src/golang.org/x/net/websocket/websocket.go:178', '+', '0xfb']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
119,"    main.processUrl(0x705190, 0x25, 0xc208004180)","['main.processUrl(0x705190, 0x25, 0xc208004180)']",['FUNCTION_CALL']
120,        /home/shat/go/src/github.com/sh4t/scansock/main.go:26 +0x107,"['/home/shat/go/src/github.com/sh4t/scansock/main.go:26', '+', '0x1', '07']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL']"
121,    created by main.main,"['created', 'by', 'main', '.', 'main']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
122,        /home/shat/go/src/github.com/sh4t/scansock/main.go:101 +0x126,"['/home/shat/go/src/github.com/sh4t/scansock/main.go:101', '+', '0x126']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
123,    goroutine 74 [IO wait]:,"['go', 'routine', '74', '[', 'IO', 'wait', ']:']","['KEYWORD', 'IDENTIFIER', 'DECIMAL_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION']"
124,"    net.runtime_pollWait(0x7f356149b0a8, 0x72, 0x0)","['net.runtime_pollWait(0x7f356149b0a8, 0x72, 0x0)']",['FUNCTION_CALL']
125,        /usr/lib/go/src/pkg/runtime/netpoll.goc:146 +0x66,"['/usr/lib/go/src/pkg/runtime/netpoll.goc:146', '+', '0x66']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
126,"    net.(*pollDesc).Wait(0xc20804e8b0, 0x72, 0x0, 0x0)","['net', '.(*', 'pollDesc', ').', 'Wait', '(', '0xc2', '0', '804', 'e8b0', ',', '0x72', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
127,        /usr/lib/go/src/pkg/net/fd_poll_runtime.go:84 +0x46,"['/usr/lib/go/src/pkg/net/fd_poll_runtime.go:84', '+', '0x46']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
128,"    net.(*pollDesc).WaitRead(0xc20804e8b0, 0x0, 0x0)","['net', '.(*', 'pollDesc', ').', 'WaitRead', '(', '0xc2', '0', '804', 'e8b0', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
129,        /usr/lib/go/src/pkg/net/fd_poll_runtime.go:89 +0x42,"['/usr/lib/go/src/pkg/net/fd_poll_runtime.go:89', '+', '0x42']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
130,"    net.(*netFD).Read(0xc20804e850, 0xc2080d9000, 0x1000, 0x1000, 0x0, 0x7f3561498418, 0xb)","['net', '.(*', 'netFD', ').', 'Read', '(', '0xc2', '0', '804', 'e850', ',', '0xc2', '0', '80', 'd9000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0', 'x0', ',', '0x7f3561498418', ',', '0xb', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'PUNCTUATION']"
131,        /usr/lib/go/src/pkg/net/fd_unix.go:242 +0x34c,"['/usr/lib/go/src/pkg/net/fd_unix.go:242', '+', '0x34c']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
132,"    net.(*conn).Read(0xc20803a160, 0xc2080d9000, 0x1000, 0x1000, 0x0, 0x0, 0x0)","['net', '.(*', 'conn', ').', 'Read', '(', '0xc2', '0', '803', 'a160', ',', '0xc2', '0', '80', 'd9000', ',', '0x1', '0', '0', '0', ',', '0x1', '0', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
133,        /usr/lib/go/src/pkg/net/net.go:122 +0xe7,"['/usr/lib/go/src/pkg/net/net.go:122', '+', '0xe7']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
134,    bufio.(*Reader).fill(0xc208005200),"['bufio', '.(*', 'Reader', ').', 'fill', '(', '0xc2', '0', '8005200', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'PUNCTUATION']"
135,        /usr/lib/go/src/pkg/bufio/bufio.go:97 +0x1b3,"['/usr/lib/go/src/pkg/bufio/bufio.go:97', '+', '0x1b3']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
136,"    bufio.(*Reader).ReadByte(0xc208005200, 0xc2080f2320, 0x0, 0x0)","['bufio', '.(*', 'Reader', ').', 'ReadByte', '(', '0xc2', '0', '8005200', ',', '0xc2', '0', '80', 'f2320', ',', '0', 'x0', ',', '0', 'x0', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
137,        /usr/lib/go/src/pkg/bufio/bufio.go:199 +0x7e,"['/usr/lib/go/src/pkg/bufio/bufio.go:199', '+', '0x7e']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
138,"    golang.org/x/net/websocket.hybiFrameReaderFactory.NewFrameReader(0xc208005200, 0x7f356149b908, 0xc2080f2320, 0x0, 0x0)","['go', 'lang.org/x/net/websocket.hybiFrameReaderFactory.NewFrameReader(0xc208005200,', '0x7f356149b9', '0', '8', ',', '0xc2', '0', '80', 'f2320', ',', '0', 'x0', ',', '0', 'x0', ')']","['KEYWORD', 'DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
139,        /home/shat/go/src/golang.org/x/net/websocket/hybi.go:126 +0xd7,"['/home/shat/go/src/golang.org/x/net/websocket/hybi.go:126', '+', '0xd7']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
140,"    golang.org/x/net/websocket.(*Conn).Read(0xc2080d70e0, 0xc2080f4e00, 0x200, 0x200, 0x0, 0x0, 0x0)","['go', 'lang.org/x/net/websocket.(*Conn).Read(0xc2080d70e0,', '0xc2', '0', '80', 'f4e00', ',', '0x2', '0', '0', ',', '0x2', '0', '0', ',', '0', 'x0', ',', '0', 'x0', ',', '0', 'x0', ')']","['KEYWORD', 'DIRECTORY', 'HEX_LITERAL', 'OCTAL_LITERAL', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'HEX_LITERAL', 'OCTAL_LITERAL', 'OCTAL_LITERAL', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'OCTAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
141,        /home/shat/go/src/golang.org/x/net/websocket/websocket.go:178 +0xfb,"['/home/shat/go/src/golang.org/x/net/websocket/websocket.go:178', '+', '0xfb']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
142,"    main.processUrl(0x7052d0, 0x27, 0xc208004180)","['main.processUrl(0x7052d0, 0x27, 0xc208004180)']",['FUNCTION_CALL']
143,        /home/shat/go/src/github.com/sh4t/scansock/main.go:26 +0x107,"['/home/shat/go/src/github.com/sh4t/scansock/main.go:26', '+', '0x1', '07']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL', 'OCTAL_LITERAL']"
144,    created by main.main,"['created', 'by', 'main', '.', 'main']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
145,        /home/shat/go/src/github.com/sh4t/scansock/main.go:101 +0x126,"['/home/shat/go/src/github.com/sh4t/scansock/main.go:101', '+', '0x126']","['DIRECTORY', 'ARITHMETIC_OPERATOR', 'HEX_LITERAL']"
146,"

I have another binary that attempts to make an initial connection to each web socket address so that I can make sure it is reachable, however that is another issue all together.  My outstanding questions are:


How to use Gorilla's websocket implementation to read from the websocket being served by SockJS as I am doing with x/net/websocket's implementation.
What could or is the likely cause for the IOWait issue(s) I am seeing?
Because I am using []byte as the response, my log file (im just piping stdout to a file) contains lines that have binary data appended to the end.  How should/could I go about converting from the byte slice to just writing it as text/string to stdout as to avoid that?
Using the chan, how best is it to pass an additional argument from my process function to return both the host of the websocket the message was returned from to the channel so I can log both the host and the message?  Should I be using a struct to define the channel and have the channel contain what I desire: timestamp, host, message?


For the issue of the IOWait errors, I cannot only imagine (a) a connection cannot be established and the routine is holding it open and eventually throwing an error; (b) it is possible I have too many routines running?  I have tried with 10, 20, 50, and all 400+ where even a version specifying 10 works (as long as all 10 are responding) and a version where 10 does not work as there is a host not responding.

I will likely have subsequent questions, but I appreciate the insight and help.  The channel suggestion definitely got me going.  I've used them once before but don't always understand how best to implement them.  My other project leverages channels and wait groups (wg), but I honestly don't understand the point of one over the other..

Thanks again, your thoughts and suggestions have been wonderful!

apologies for the weird syntax in this post, I cannot seem to get the editor to remove some of the empty lines around my code elements
","['I', 'have', 'another', 'binary', 'that', 'attempts', 'to', 'make', 'an', 'initial', 'connection', 'to', 'each', 'web', 'socket', 'address', 'so', 'that', 'I', 'can', 'make', 'sure', 'it', 'is', 'reachable,', 'however', 'that', 'is', 'another', 'issue', 'all', 'together.', 'My', 'outstanding', 'questions', 'are:', 'How', 'to', 'use', ""Gorilla's"", 'websocket', 'implementation', 'to', 'read', 'from', 'the', 'websocket', 'being', 'served', 'by', 'SockJS', 'as', 'I', 'am', 'doing', 'with', ""x/net/websocket's"", 'implementation.', 'What', 'could', 'or', 'is', 'the', 'likely', 'cause', 'for', 'the', 'IOWait', 'issue(s)', 'I', 'am', 'seeing?', 'Because', 'I', 'am', 'using', '[]byte', 'as', 'the', 'response,', 'my', 'log', 'file', '(im', 'just', 'piping', 'stdout', 'to', 'a', 'file)', 'contains', 'lines', 'that', 'have', 'binary', 'data', 'appended', 'to', 'the', 'end.', 'How', 'should/could', 'I', 'go', 'about', 'converting', 'from', 'the', 'byte', 'slice', 'to', 'just', 'writing', 'it', 'as', 'text/string', 'to', 'stdout', 'as', 'to', 'avoid', 'that?', 'Using', 'the', 'chan,', 'how', 'best', 'is', 'it', 'to', 'pass', 'an', 'additional', 'argument', 'from', 'my', 'process', 'function', 'to', 'return', 'both', 'the', 'host', 'of', 'the', 'websocket', 'the', 'message', 'was', 'returned', 'from', 'to', 'the', 'channel', 'so', 'I', 'can', 'log', 'both', 'the', 'host', 'and', 'the', 'message?', 'Should', 'I', 'be', 'using', 'a', 'struct', 'to', 'define', 'the', 'channel', 'and', 'have', 'the', 'channel', 'contain', 'what', 'I', 'desire:', 'timestamp,', 'host,', 'message?', 'For', 'the', 'issue', 'of', 'the', 'IOWait', 'errors,', 'I', 'cannot', 'only', 'imagine', '(a)', 'a', 'connection', 'cannot', 'be', 'established', 'and', 'the', 'routine', 'is', 'holding', 'it', 'open', 'and', 'eventually', 'throwing', 'an', 'error;', '(b)', 'it', 'is', 'possible', 'I', 'have', 'too', 'many', 'routines', 'running?', 'I', 'have', 'tried', 'with', '10,', '20,', '50,', 'and', 'all', '400+', 'where', 'even', 'a', 'version', 'specifying', '10', 'works', '(as', 'long', 'as', 'all', '10', 'are', 'responding)', 'and', 'a', 'version', 'where', '10', 'does', 'not', 'work', 'as', 'there', 'is', 'a', 'host', 'not', 'responding.', 'I', 'will', 'likely', 'have', 'subsequent', 'questions,', 'but', 'I', 'appreciate', 'the', 'insight', 'and', 'help.', 'The', 'channel', 'suggestion', 'definitely', 'got', 'me', 'going.', ""I've"", 'used', 'them', 'once', 'before', 'but', ""don't"", 'always', 'understand', 'how', 'best', 'to', 'implement', 'them.', 'My', 'other', 'project', 'leverages', 'channels', 'and', 'wait', 'groups', '(wg),', 'but', 'I', 'honestly', ""don't"", 'understand', 'the', 'point', 'of', 'one', 'over', 'the', 'other..', 'Thanks', 'again,', 'your', 'thoughts', 'and', 'suggestions', 'have', 'been', 'wonderful!', 'apologies', 'for', 'the', 'weird', 'syntax', 'in', 'this', 'post,', 'I', 'cannot', 'seem', 'to', 'get', 'the', 'editor', 'to', 'remove', 'some', 'of', 'the', 'empty', 'lines', 'around', 'my', 'code', 'elements']","['PRP', 'VBP', 'DT', 'NN', 'WDT', 'VBZ', 'TO', 'VB', 'DT', 'JJ', 'NN', 'TO', 'DT', 'NN', 'NN', 'NN', 'IN', 'IN', 'PRP', 'MD', 'VB', 'JJ', 'PRP', 'VBZ', 'JJ', 'RB', 'DT', 'VBZ', 'DT', 'NN', 'DT', 'VBP', 'NNP', 'JJ', 'NNS', 'VBP', 'WRB', 'TO', 'VB', 'NNP', 'NN', 'NN', 'TO', 'VB', 'IN', 'DT', 'NN', 'VBG', 'VBN', 'IN', 'NNP', 'IN', 'PRP', 'VBP', 'VBG', 'IN', 'NNP', 'VBP', 'WP', 'MD', 'CC', 'VBZ', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NNP', 'NN', 'PRP', 'VBP', 'JJ', 'IN', 'PRP', 'VBP', 'VBG', 'NN', 'IN', 'DT', 'NN', 'PRP$', 'NN', 'NN', 'NN', 'RB', 'VBG', 'NN', 'TO', 'DT', 'NN', 'VBZ', 'NNS', 'WDT', 'VBP', 'VBN', 'NNS', 'VBD', 'TO', 'DT', 'NN', 'NNP', 'NN', 'PRP', 'VBP', 'IN', 'VBG', 'IN', 'DT', 'NN', 'NN', 'TO', 'RB', 'VBG', 'PRP', 'IN', 'VBG', 'TO', 'VB', 'IN', 'TO', 'VB', 'NN', 'VBG', 'DT', 'NN', 'WRB', 'JJS', 'VBZ', 'PRP', 'TO', 'VB', 'DT', 'JJ', 'NN', 'IN', 'PRP$', 'NN', 'NN', 'TO', 'VB', 'DT', 'DT', 'NN', 'IN', 'DT', 'NN', 'DT', 'NN', 'VBD', 'VBN', 'IN', 'TO', 'DT', 'NN', 'IN', 'PRP', 'MD', 'VB', 'DT', 'DT', 'NN', 'CC', 'DT', 'NN', 'MD', 'PRP', 'VB', 'VBG', 'DT', 'NN', 'TO', 'VB', 'DT', 'NN', 'CC', 'VBP', 'DT', 'NN', 'NN', 'WP', 'PRP', 'VBP', 'JJ', 'NN', 'NN', 'IN', 'DT', 'NN', 'IN', 'DT', 'NNP', 'NN', 'PRP', 'VBP', 'RB', 'JJ', 'VBP', 'DT', 'NN', 'NN', 'VB', 'VBN', 'CC', 'DT', 'NN', 'VBZ', 'VBG', 'PRP', 'JJ', 'CC', 'RB', 'VBG', 'DT', 'NN', 'NN', 'PRP', 'VBZ', 'JJ', 'PRP', 'VBP', 'RB', 'JJ', 'NNS', 'VBP', 'PRP', 'VBP', 'VBN', 'IN', 'CD', 'CD', 'CD', 'CC', 'DT', 'CD', 'WRB', 'RB', 'DT', 'NN', 'VBG', 'CD', 'NNS', 'RB', 'RB', 'IN', 'DT', 'CD', 'VBP', 'VBN', 'CC', 'DT', 'NN', 'WRB', 'CD', 'VBZ', 'RB', 'VB', 'IN', 'EX', 'VBZ', 'DT', 'NN', 'RB', 'JJ', 'PRP', 'MD', 'RB', 'VB', 'JJ', 'NN', 'CC', 'PRP', 'VBP', 'DT', 'NN', 'CC', 'VB', 'DT', 'NN', 'NN', 'RB', 'VBD', 'PRP', 'VB', 'NNP', 'VBD', 'PRP', 'RB', 'IN', 'CC', 'JJ', 'RB', 'VBP', 'WRB', 'JJS', 'TO', 'VB', 'JJ', 'NNP', 'JJ', 'NN', 'VBZ', 'NNS', 'CC', 'NN', 'NNS', 'VBP', 'CC', 'PRP', 'RB', 'VBP', 'VB', 'DT', 'NN', 'IN', 'CD', 'IN', 'DT', 'JJ', 'NNP', 'VB', 'PRP$', 'NNS', 'CC', 'NNS', 'VBP', 'VBN', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'PRP', 'VBP', 'VB', 'TO', 'VB', 'DT', 'NN', 'TO', 'VB', 'DT', 'IN', 'DT', 'JJ', 'NNS', 'IN', 'PRP$', 'NN', 'NNS']"
