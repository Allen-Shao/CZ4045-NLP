,text,token,annotation
0,func getLineup() {,"['func', 'getLineup', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
1,    // Open Database,['// Open Database'],"['COMMENT', 'JJ', 'NNP']"
2,"    db, err := sql.Open(""sqlite3"", ""./database.db"")","['db', ',', 'err', ':=', 'sql', '.', 'Open', '(', '""sqlite3"", ""./database.db""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
3,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
4,            fmt.Println(err),"['fmt', '.', 'Println', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
5,            os.Exit(1),"['os', '.', 'Exit', '(', '1', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
6,    },['}'],['OPERATOR']
7,    defer db.Close(),"['defer', 'db', '.', 'Close', '()']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
8,    // Prepare Query,['// Prepare Query'],"['COMMENT', 'NNP', 'NNP']"
9,"    statement, err := db.Prepare(""SELECT team, player FROM lineup ORDER BY team DESC;"")","['statement', ',', 'err', ':=', 'db', '.', 'Prepare', '(', '""SELECT team, player FROM lineup ORDER BY team DESC;""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
10,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
11,            fmt.Println(err),"['fmt', '.', 'Println', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
12,            os.Exit(1),"['os', '.', 'Exit', '(', '1', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
13,    },['}'],['OPERATOR']
14,    // Execute Statement,['// Execute Statement'],"['COMMENT', 'NNP', 'NNP']"
15,"    rows, err := statement.Query()","['rows', ',', 'err', ':=', 'statement', '.', 'Query', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
16,    defer rows.Close(),"['defer', 'rows', '.', 'Close', '()']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
17,"    fmt.Println(""Lineup:"")","['fmt', '.', 'Println', '(', '""Lineup:""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
18,    for rows.Next() {,"['for', 'rows', '.', 'Next', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
19,            var team string,"['var', 'team', 'string']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
20,            var player string,"['var', 'player', 'string']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
21,"            rows.Scan(&team, &player)","['rows', '.', 'Scan', '(&', 'team', ',', '&', 'player', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
22,"            fmt.Printf(""%v %v\n"", team, player)","['fmt', '.', 'Printf', '(', '""%v %v\\n""', ',', 'team', ',', 'player', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
23,    },['}'],['OPERATOR']
24,},['}'],['OPERATOR']
