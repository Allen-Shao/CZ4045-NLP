,text,token,annotation
0,"I'm using goyaml as a YAML beautifier. By loading and dumping a YAML file, I can source-format it. I unmarshal the data from a YAML source file into a struct, marshal those bytes, and write the bytes to an output file. But the process morphs my Unicode strings into the literal version of the quoted strings, and I don't know how to reverse it.

Example input subtitle.yaml:

line: 你好


I've stripped everything down to the smallest reproducible problem. Here's the code, using _ to catch errors which don't pop-up:

","[""I'm"", 'using', 'goyaml', 'as', 'a', 'YAML', 'beautifier.', 'By', 'loading', 'and', 'dumping', 'a', 'YAML', 'file,', 'I', 'can', 'source-format', 'it.', 'I', 'unmarshal', 'the', 'data', 'from', 'a', 'YAML', 'source', 'file', 'into', 'a', 'struct,', 'marshal', 'those', 'bytes,', 'and', 'write', 'the', 'bytes', 'to', 'an', 'output', 'file.', 'But', 'the', 'process', 'morphs', 'my', 'Unicode', 'strings', 'into', 'the', 'literal', 'version', 'of', 'the', 'quoted', 'strings,', 'and', 'I', ""don't"", 'know', 'how', 'to', 'reverse', 'it.', 'Example', 'input', 'subtitle.yaml:', 'line:', '你好', ""I've"", 'stripped', 'everything', 'down', 'to', 'the', 'smallest', 'reproducible', 'problem.', ""Here's"", 'the', 'code,', 'using', '_', 'to', 'catch', 'errors', 'which', ""don't"", 'pop-up:']","['NNP', 'VBG', 'NN', 'IN', 'DT', 'NNP', 'NN', 'IN', 'VBG', 'CC', 'VBG', 'DT', 'NNP', 'NN', 'PRP', 'MD', 'VB', 'NN', 'PRP', 'VBP', 'DT', 'NN', 'IN', 'DT', 'NNP', 'NN', 'NN', 'IN', 'DT', 'JJ', 'NN', 'DT', 'NNS', 'CC', 'VB', 'DT', 'NNS', 'TO', 'DT', 'NN', 'NN', 'CC', 'DT', 'NN', 'NN', 'PRP$', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'DT', 'VBN', 'NN', 'CC', 'PRP', 'VBP', 'VB', 'WRB', 'TO', 'VB', 'JJ', 'NNP', 'NN', 'NN', 'NN', 'NNP', 'NNP', 'VBD', 'NN', 'RP', 'TO', 'DT', 'JJS', 'JJ', 'NN', 'NNP', 'DT', 'NN', 'VBG', 'NN', 'TO', 'VB', 'NNS', 'WDT', 'VBP', 'NN']"
1,package main                                                                                                                                                                                      ,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
2,import (                                                                                                                                                                                          ,"['import', '(']","['KEYWORD', 'OPERATOR']"
3,"    ""io/ioutil""                                                                                                                                                                                   ","['""io/ioutil""']",['STRING_LITERAL']
4,"    //""unicode/utf8""                                                                                                                                                                              ","['//', '""unicode/utf8""']","['COMMENT', 'NN']"
5,"    //""fmt""                                                                                                                                                                                       ","['//', '""fmt""']","['COMMENT', 'NN']"
6,"    ""gopkg.in/yaml.v1""                                                                                                                                                                        ","['""gopkg.in/yaml.v1""']",['STRING_LITERAL']
7,)                                                                                                                                                                                                 ,[')'],['OPERATOR']
8,type Subtitle struct {                                                                                                                                                                            ,"['type', 'Subtitle', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
9,    Line string                                                                                                                                                                                   ,"['Line', 'string']","['IDENTIFIER', 'IDENTIFIER']"
10,}                                                                                                                                                                                                 ,['}'],['OPERATOR']
11,func main() {                                                                                                                                                                                     ,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
12,"    filename := ""subtitle.yaml""                                                                                                                                                                   ","['filename', ':=', '""subtitle.yaml""']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
13,"    in, _ := ioutil.ReadFile(filename)                                                                                                                                                            ","['in', ',', '_', ':=', 'ioutil', '.', 'ReadFile', '(', 'filename', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
14,    var subtitle Subtitle                                                                                                                                                                         ,"['var', 'subtitle', 'Subtitle']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
15,"    _ = goyaml.Unmarshal(in, &subtitle)                                                                                                                                                           ","['_', '=', 'go', 'yaml', '.', 'Unmarshal', '(', 'in', ',', '&', 'subtitle', ')']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
16,"    out, _ := goyaml.Marshal(&subtitle)                                                                                                                                                           ","['out', ',', '_', ':=', 'go', 'yaml', '.', 'Marshal', '(&', 'subtitle', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
17,"    //for len(out) > 0 { // For debugging, see what the runes are                                                                                                                                                                         ","['//', 'for', 'len(out)', '>', '0', '{', 'For', 'debugging,', 'see', 'what', 'the', 'runes', 'are']","['COMMENT', 'IN', 'JJ', 'NNP', 'CD', '(', 'IN', 'NN', 'VBP', 'WP', 'DT', 'NNS', 'VBP']"
18,"    //  r, size := utf8.DecodeRune(out)                                                                                                                                                             ","['//', 'r,', 'size', ':=', 'utf8.DecodeRune(out)']","['COMMENT', 'NN', 'NN', 'NNP', 'NN']"
19,"    //  fmt.Printf(""%c "", r)                                                                                                                                                              ","['//', 'fmt.Printf(""%c', '"",', 'r)']","['COMMENT', 'NN', 'CD', 'NN']"
20,    //  out = out[size:]                                                                                                                                                                            ,"['//', 'out', '=', 'out[size:]']","['COMMENT', 'IN', 'NNP', 'NN']"
21,    //}                                                                                                                                                                                           ,"['//', '}']","['COMMENT', ')']"
22,"    _ = ioutil.WriteFile(filename, out, 0644)                                                                                                                                                     ","['_', '=', 'ioutil', '.', 'WriteFile', '(', 'filename', ',', 'out', ',', '0644', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
23,},['}'],['OPERATOR']
24,"

Actual output subtitle.yaml:

","['Actual', 'output', 'subtitle.yaml:']","['JJ', 'NN', 'NN']"
25,"line: ""\u4F60\u597D""","['line', ':', '""\\u4F60\\u597D""']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
26,"

I want to reverse the weirdness in goyaml after I get the variable out.

The commented-out rune-printing code block, which adds spaces between runes for clarity, outputs the following. It shows that Unicode runes like 你 aren't being decoded, but treated literally:

","['I', 'want', 'to', 'reverse', 'the', 'weirdness', 'in', 'goyaml', 'after', 'I', 'get', 'the', 'variable', 'out.', 'The', 'commented-out', 'rune-printing', 'code', 'block,', 'which', 'adds', 'spaces', 'between', 'runes', 'for', 'clarity,', 'outputs', 'the', 'following.', 'It', 'shows', 'that', 'Unicode', 'runes', 'like', '你', ""aren't"", 'being', 'decoded,', 'but', 'treated', 'literally:']","['PRP', 'VBP', 'TO', 'VB', 'DT', 'NN', 'IN', 'NN', 'IN', 'PRP', 'VBP', 'DT', 'JJ', 'IN', 'DT', 'JJ', 'JJ', 'NN', 'NN', 'WDT', 'VBZ', 'NNS', 'IN', 'NNS', 'IN', 'NN', 'VBZ', 'DT', 'NN', 'PRP', 'VBZ', 'IN', 'NNP', 'NNS', 'IN', 'VBP', 'JJ', 'VBG', 'NN', 'CC', 'VBD', 'NN']"
27,"l i n e :   "" \ u 4 F 6 0 \ u 5 9 7 D ""","['l', 'i', 'n', 'e', ':', '"" \\ u 4 F 6 0 \\ u 5 9 7 D ""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
28,"

How can I unquote out, before writing it to the output file, so that the output looks like  the input (albeit beautified)?

Desired output subtitle.yaml:

line: ""你好""


Temporary Solution

I've filed https://github.com/go-yaml/yaml/issues/11. In the meantime, @bobince's tip on ","['How', 'can', 'I', 'unquote', 'out,', 'before', 'writing', 'it', 'to', 'the', 'output', 'file,', 'so', 'that', 'the', 'output', 'looks', 'like', 'the', 'input', '(albeit', 'beautified)?', 'Desired', 'output', 'subtitle.yaml:', 'line:', '""你好""', 'Temporary', 'Solution', ""I've"", 'filed', 'https://github.com/go-yaml/yaml/issues/11.', 'In', 'the', 'meantime,', ""@bobince's"", 'tip', 'on']","['WRB', 'MD', 'PRP', 'VB', 'PRP', 'IN', 'VBG', 'PRP', 'TO', 'DT', 'NN', 'NNS', 'RB', 'IN', 'DT', 'NN', 'VBZ', 'IN', 'DT', 'NN', 'NNP', 'NN', 'NNP', 'NN', 'NN', 'NN', 'NNP', 'NNP', 'NNP', 'NNP', 'VBD', 'NN', 'IN', 'DT', 'NN', 'NNP', 'NN', 'IN']"
29,yaml_emitter_set_unicode,['yaml_emitter_set_unicode'],['IDENTIFIER']
30, was helpful in unconvering the problem. It was defined as a C binding but never called (or given an option to set it)! I changed encode.go and added ,"['was', 'helpful', 'in', 'unconvering', 'the', 'problem.', 'It', 'was', 'defined', 'as', 'a', 'C', 'binding', 'but', 'never', 'called', '(or', 'given', 'an', 'option', 'to', 'set', 'it)!', 'I', 'changed', 'encode.go', 'and', 'added']","['VBD', 'JJ', 'IN', 'VBG', 'DT', 'NN', 'PRP', 'VBD', 'VBN', 'IN', 'DT', 'NNP', 'NN', 'CC', 'RB', 'VBD', 'NNP', 'VBN', 'DT', 'NN', 'TO', 'VB', 'NN', 'PRP', 'VBD', 'NN', 'CC', 'VBD']"
31,yaml_emitter_set_unicode,['yaml_emitter_set_unicode'],['IDENTIFIER']
32,"(&e.emitter, true) to line 20, and everything works as expected. It would be better to make it optional, but that would require a change in the Marshal API.
","['(&e.emitter,', 'true)', 'to', 'line', '20,', 'and', 'everything', 'works', 'as', 'expected.', 'It', 'would', 'be', 'better', 'to', 'make', 'it', 'optional,', 'but', 'that', 'would', 'require', 'a', 'change', 'in', 'the', 'Marshal', 'API.']","['JJ', 'NN', 'TO', 'NN', 'CD', 'CC', 'NN', 'NNS', 'IN', 'NN', 'PRP', 'MD', 'VB', 'JJR', 'TO', 'VB', 'PRP', 'PRP', 'CC', 'DT', 'MD', 'VB', 'DT', 'NN', 'IN', 'DT', 'NNP', 'NNP']"
