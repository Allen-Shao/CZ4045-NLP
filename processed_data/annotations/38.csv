,text,token,annotation
0,"If you need to import  different packages of the same name in Golang, this is the way(just name it):

","['If', 'you', 'need', 'to', 'import', 'different', 'packages', 'of', 'the', 'same', 'name', 'in', 'Golang,', 'this', 'is', 'the', 'way(just', 'name', 'it):']","['IN', 'PRP', 'VBP', 'TO', 'VB', 'JJ', 'NNS', 'IN', 'DT', 'JJ', 'NN', 'IN', 'NNP', 'DT', 'VBZ', 'DT', 'JJ', 'NN', 'NN']"
1,import (,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
2,"    ""text/template""","['""text/template""']",['STRING_LITERAL']
3,"    ht ""html/template""","['ht', '""html/template""']","['IDENTIFIER', 'STRING_LITERAL']"
4,),[')'],['PUNCTUATION']
5,"

but in case of ""golang.org/x/tools/cmd/oracle""
it is not a package , it has just main.go and you need to build/install it. it   is a command line tool:

","['but', 'in', 'case', 'of', '""golang.org/x/tools/cmd/oracle""', 'it', 'is', 'not', 'a', 'package', ',', 'it', 'has', 'just', 'main.go', 'and', 'you', 'need', 'to', 'build/install', 'it.', 'it', 'is', 'a', 'command', 'line', 'tool:']","['CC', 'IN', 'NN', 'IN', 'NN', 'PRP', 'VBZ', 'RB', 'DT', 'NN', ',', 'PRP', 'VBZ', 'RB', 'VBN', 'CC', 'PRP', 'VBP', 'TO', 'VB', 'NN', 'PRP', 'VBZ', 'DT', 'NN', 'NN', 'NN']"
6,Run 'oracle -help' for more information.,"['Run', ""'oracle -help'"", 'for', 'more', 'information', '.']","['IDENTIFIER', 'STRING_LITERAL', 'KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION']"
7,Go source code oracle.,"['Go', 'source', 'code', 'oracle', '.']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION']"
8,Usage: oracle [ ...]   ...,"['Usage', ':', 'oracle', '[', '...]', '...']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'PUNCTUATION']"
9,The -format flag controls the output format:,"['The', '-', 'for', 'mat', 'flag', 'controls', 'the', 'output', 'for', 'mat', ':']","['IDENTIFIER', 'ARITHMETIC_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
10,        plain   an editor-friendly format in which every line of output,"['plain', 'an', 'editor', '-', 'friendly', 'for', 'mat', 'in', 'which', 'every', 'line', 'of', 'output']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER']"
11,"                is of the form ""pos: text"", where pos is ""-"" if unknown.","['is', 'of', 'the', 'for', 'm', '""pos: text""', ',', 'where', 'pos', 'is', '""-""', 'if', 'unknown', '.']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'STRING_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'STRING_LITERAL', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION']"
12,        json    structured data in JSON syntax.,"['json', 'struct', 'ured', 'data', 'in', 'JSON', 'syntax', '.']","['IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION']"
13,        xml     structured data in XML syntax.,"['xml', 'struct', 'ured', 'data', 'in', 'XML', 'syntax', '.']","['IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION']"
