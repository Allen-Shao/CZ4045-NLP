,text,token,annotation
0,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
1,import (,"['import', '(']","['KEYWORD', 'OPERATOR']"
2,"    ""encoding/json""","['""encoding/json""']",['STRING_LITERAL']
3,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
4,"    ""io/ioutil""","['""io/ioutil""']",['STRING_LITERAL']
5,"    ""log""","['""log""']",['STRING_LITERAL']
6,"    ""net/http""","['""net/http""']",['STRING_LITERAL']
7,"    ""net/url""","['""net/url""']",['STRING_LITERAL']
8,"    ""os""","['""os""']",['STRING_LITERAL']
9,),[')'],['OPERATOR']
10,type SlackResponse struct {,"['type', 'SlackResponse', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
11,    token        string,"['token', 'string']","['IDENTIFIER', 'IDENTIFIER']"
12,    team_id      string,"['team_id', 'string']","['IDENTIFIER', 'IDENTIFIER']"
13,    channel_id   string,"['chan', 'nel_id', 'string']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
14,    channel_name string,"['chan', 'nel_name', 'string']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
15,    timestamp    string,"['timestamp', 'string']","['IDENTIFIER', 'IDENTIFIER']"
16,    user_id      string,"['user_id', 'string']","['IDENTIFIER', 'IDENTIFIER']"
17,    user_name    string,"['user_name', 'string']","['IDENTIFIER', 'IDENTIFIER']"
18,    text         string,"['text', 'string']","['IDENTIFIER', 'IDENTIFIER']"
19,},['}'],['OPERATOR']
20,type service_config struct {,"['type', 'service_config', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
21,    Services []struct {,"['Services', '[]', 'struct', '{']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
22,        Name    string,"['Name', 'string']","['IDENTIFIER', 'IDENTIFIER']"
23,        Command string,"['Command', 'string']","['IDENTIFIER', 'IDENTIFIER']"
24,        Request map[string]interface{},"['Request', 'map', '[', 'string', ']', 'interface', '{}']","['IDENTIFIER', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
25,    },['}'],['OPERATOR']
26,},['}'],['OPERATOR']
27,var ServiceConf = service_config{},"['var', 'ServiceConf', '=', 'service_config', '{}']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
28,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
29,"    content, err_read := ioutil.ReadFile(""config.ini"")","['content', ',', 'err_read', ':=', 'ioutil', '.', 'ReadFile', '(', '""config.ini""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
30,    if err_read != nil {,"['if', 'err_read', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
31,"        log.Println(""Could not read config"")","['log', '.', 'Println', '(', '""Could not read config""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
32,        return,['return'],['KEYWORD']
33,    },['}'],['OPERATOR']
34,    log.Println(string(content)),"['log', '.', 'Println', '(', 'string', '(', 'content', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
35,"    err_json := json.Unmarshal(content, &ServiceConf)","['err_json', ':=', 'json', '.', 'Unmarshal', '(', 'content', ',', '&', 'ServiceConf', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
36,    if err_json != nil {,"['if', 'err_json', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
37,        log.Println(err_json),"['log', '.', 'Println', '(', 'err_json', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
38,    },['}'],['OPERATOR']
39,"    http.HandleFunc(""/"", handler)","['http', '.', 'HandleFunc', '(', '""/""', ',', 'handler', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
40,"    http.ListenAndServe("":""+os.Getenv(""PORT""), nil)","['http', '.', 'ListenAndServe', '(', '"":""+os.Getenv(""PORT""', '),', 'nil', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
41,},['}'],['OPERATOR']
42,"func handler(w http.ResponseWriter, r *http.Request) {","['func', 'handler', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
43,    slack_response := SlackResponse{,"['slack_response', ':=', 'SlackResponse', '{']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
44,"        r.FormValue(""token""),","['r', '.', 'FormValue', '(', '""token""', '),']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
45,"        r.FormValue(""team_id""),","['r', '.', 'FormValue', '(', '""team_id""', '),']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
46,"        r.FormValue(""channel_id""),","['r', '.', 'FormValue', '(', '""channel_id""', '),']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
47,"        r.FormValue(""channel_name""),","['r', '.', 'FormValue', '(', '""channel_name""', '),']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
48,"        r.FormValue(""timestamp""),","['r', '.', 'FormValue', '(', '""timestamp""', '),']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
49,"        r.FormValue(""user_id""),","['r', '.', 'FormValue', '(', '""user_id""', '),']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
50,"        r.FormValue(""user_name""),","['r', '.', 'FormValue', '(', '""user_name""', '),']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
51,"        r.FormValue(""text""),","['r', '.', 'FormValue', '(', '""text""', '),']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
52,    },['}'],['OPERATOR']
53,"    // log.Println(ServiceConf.Services[0].Request[""key""])","['// log.Println(ServiceConf.Services[0].Request[""key""])']","['COMMENT', 'NN', '(', 'NNP', 'RB', 'CD', 'JJ', 'NNP', 'NN', '``', 'JJ', ""''"", 'NN', ')']"
54,    // loop through services to find command phrases,['// loop through services to find command phrases'],"['COMMENT', 'NN', 'IN', 'NNS', 'TO', 'VB', 'NN', 'NNS']"
55,"    for _, s := range ServiceConf.Services {","['for', '_', ',', 's', ':=', 'range', 'ServiceConf', '.', 'Services', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
56,        log.Println(s),"['log', '.', 'Println', '(', 's', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
57,    },['}'],['OPERATOR']
58,"    if slack_response.user_name == ""slackbot"" {","['if', 'slack_response', '.', 'user_name', '==', '""slackbot""', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
59,        return,['return'],['KEYWORD']
60,    },['}'],['OPERATOR']
61,"    // fmt.Fprintf(w, ""{ \""text\"": \""Master %s!  You said: '%s'\"" }"", slack_response.user_name, slack_response.text)","['// fmt.Fprintf(w, ""{ \\""text\\"": \\""Master %s!  You said: \'%s\'\\"" }"", slack_response.user_name, slack_response.text)']","['COMMENT', 'NN', '(', 'NN', ',', '``', '(', 'NN', ""''"", 'NN', ""''"", ':', 'NN', ""''"", 'NNP', 'NN', 'NN', '.', 'PRP', 'VBD', ':', ""''"", 'NN', 'NN', ""''"", ')', ""''"", ',', 'NN', ',', 'NN', ')']"
62,"    content, err := getContent(""https://www.googleapis.com/language/translate/v2?key=&source=en&target=de&q="" + url.QueryEscape(slack_response.text))","['content', ',', 'err', ':=', 'getContent', '(', '""https://www.googleapis.com/language/translate/v2?key=&source=en&target=de&q=""', '+', 'url', '.', 'QueryEscape', '(', 'slack_response', '.', 'text', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
63,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
64,"        fmt.Fprintf(w, ""{ \""text\"": \""Huh?!\"" }"")","['fmt', '.', 'Fprintf', '(', 'w', ',', '""{ \\""text\\"": \\""Huh?!\\"" }""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
65,    } else {,"['}', 'else', '{']","['OPERATOR', 'KEYWORD', 'OPERATOR']"
66,        type trans struct {,"['type', 'trans', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
67,            Data struct {,"['Data', 'struct', '{']","['IDENTIFIER', 'KEYWORD', 'OPERATOR']"
68,                Translations []struct {,"['Translations', '[]', 'struct', '{']","['IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR']"
69,"                    TranslatedText string `json:""translatedText""`","['TranslatedText', 'string', 'json', ':', '""translatedText""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
70,"                } `json:""translations""`","['}', 'json', ':', '""translations""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
71,"            } `json:""data""`","['}', 'json', ':', '""data""']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL']"
72,        },['}'],['OPERATOR']
73,        f := trans{},"['f', ':=', 'trans', '{}']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
74,"        err := json.Unmarshal(content, &f)","['err', ':=', 'json', '.', 'Unmarshal', '(', 'content', ',', '&', 'f', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
75,        if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
76,            log.Println(err),"['log', '.', 'Println', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
77,        },['}'],['OPERATOR']
78,"        fmt.Fprintf(w, ""{ \""text\"": \""Translated to German you said: '%s'\"" }"", f.Data.Translations[0].TranslatedText)","['fmt', '.', 'Fprintf', '(', 'w', ',', '""{ \\""text\\"": \\""Translated to German you said: \'%s\'\\"" }""', ',', 'f', '.', 'Data', '.', 'Translations', '[', '0', '].', 'TranslatedText', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
79,    },['}'],['OPERATOR']
80,},['}'],['OPERATOR']
81,// array of bytes if retrieved successfully.,['// array of bytes if retrieved successfully.'],"['COMMENT', 'NN', 'IN', 'NNS', 'IN', 'VBN', 'RB', '.']"
82,"func getContent(url string) ([]byte, error) {","['func', 'getContent', '(', 'url', 'string', ')', '([]', 'byte', ',', 'error', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
83,    // Build the request,['// Build the request'],"['COMMENT', 'VB', 'DT', 'NN']"
84,"    req, err := http.NewRequest(""GET"", url, nil)","['req', ',', 'err', ':=', 'http', '.', 'NewRequest', '(', '""GET""', ',', 'url', ',', 'nil', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
85,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
86,"        return nil, err","['return', 'nil', ',', 'err']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
87,    },['}'],['OPERATOR']
88,    // Send the request via a client,['// Send the request via a client'],"['COMMENT', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN']"
89,    client := &http.Client{},"['client', ':=', '&', 'http', '.', 'Client', '{}']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
90,"    resp, err := client.Do(req)","['resp', ',', 'err', ':=', 'client', '.', 'Do', '(', 'req', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
91,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
92,"        return nil, err","['return', 'nil', ',', 'err']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
93,    },['}'],['OPERATOR']
94,    // Defer the closing of the body,['// Defer the closing of the body'],"['COMMENT', 'VB', 'DT', 'NN', 'IN', 'DT', 'NN']"
95,    defer resp.Body.Close(),"['defer', 'resp', '.', 'Body', '.', 'Close', '()']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
96,    // Read the content into a byte array,['// Read the content into a byte array'],"['COMMENT', 'VB', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NN']"
97,"    body, err := ioutil.ReadAll(resp.Body)","['body', ',', 'err', ':=', 'ioutil', '.', 'ReadAll', '(', 'resp', '.', 'Body', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
98,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
99,"        return nil, err","['return', 'nil', ',', 'err']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
100,    },['}'],['OPERATOR']
101,    // At this point we're done - simply return the bytes,"[""// At this point we're done - simply return the bytes""]","['COMMENT', 'IN', 'DT', 'NN', 'PRP', 'VBP', 'VBN', ':', 'RB', 'VB', 'DT', 'NNS']"
102,"    return body, nil","['return', 'body', ',', 'nil']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
103,},['}'],['OPERATOR']
