,text,token,annotation
0,"I cannot get value from session this way, it is nil:

","['I', 'cannot', 'get', 'value', 'from', 'session', 'this', 'way,', 'it', 'is', 'nil:']","['PRP', 'VBP', 'VB', 'NN', 'IN', 'NN', 'DT', 'NN', 'PRP', 'VBZ', 'JJ']"
1,session := initSession(r),"['session', ':=', 'initSession', '(', 'r', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
2,valWithOutType := session.Values[key],"['valWithOutType', ':=', 'session', '.', 'Values', '[', 'key', ']']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
3,"

Full code:

","['Full', 'code:']","['NNP', 'NN']"
4,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
5,import (,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
6,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
7,"    ""github.com/gorilla/mux""","['""github.com/gorilla/mux""']",['STRING_LITERAL']
8,"    ""github.com/gorilla/sessions""","['""github.com/gorilla/sessions""']",['STRING_LITERAL']
9,"    ""log""","['""log""']",['STRING_LITERAL']
10,"    ""net/http""","['""net/http""']",['STRING_LITERAL']
11,),[')'],['PUNCTUATION']
12,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
13,    rtr := mux.NewRouter(),"['rtr', ':=', 'mux.NewRouter()']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
14,"    rtr.HandleFunc(""/setSession"", handler1).Methods(""GET"")","['rtr.HandleFunc(""/setSession"", handler1).Methods(""GET"")']",['FUNCTION_CALL']
15,"    rtr.HandleFunc(""/getSession"", handler2).Methods(""GET"")","['rtr.HandleFunc(""/getSession"", handler2).Methods(""GET"")']",['FUNCTION_CALL']
16,"    http.Handle(""/"", rtr)","['http.Handle(""/"", rtr)']",['FUNCTION_CALL']
17,"    log.Println(""Listening..."")","['log.Println(""Listening..."")']",['FUNCTION_CALL']
18,"    http.ListenAndServe("":3000"", http.DefaultServeMux)","['http.ListenAndServe("":3000"", http.DefaultServeMux)']",['FUNCTION_CALL']
19,},['}'],['PUNCTUATION']
20,"func handler1(w http.ResponseWriter, r *http.Request) {","['func', 'handler1', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
21,"    SetSessionValue(w, r, ""key"", ""value"")","['SetSessionValue', '(', 'w', ',', 'r', ',', '""key""', ',', '""value""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
22,"    w.Write([]byte(""setSession""))","['w.Write([]byte(""setSession""))']",['FUNCTION_CALL']
23,},['}'],['PUNCTUATION']
24,"func handler2(w http.ResponseWriter, r *http.Request) {","['func', 'handler2', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
25,"    w.Write([]byte(""getSession""))","['w.Write([]byte(""getSession""))']",['FUNCTION_CALL']
26,"    value := GetSessionValue(w, r, ""key"")","['value', ':=', 'GetSessionValue', '(', 'w', ',', 'r', ',', '""key""', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
27,"    fmt.Println(""value from session"")","['fmt.Println(""value from session"")']",['FUNCTION_CALL']
28,    fmt.Println(value),['fmt.Println(value)'],['FUNCTION_CALL']
29,},['}'],['PUNCTUATION']
30,"var authKey = []byte(""secret"") // Authorization Key","['var', 'authKey', '=', '[]', 'byte', '(', '""secret""', ')', '//', 'Authorization', 'Key']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'COMMENT', 'NNP', 'NNP']"
31,"var encKey = []byte(""encKey"") // Encryption Key","['var', 'encKey', '=', '[]', 'byte', '(', '""encKey""', ')', '//', 'Encryption', 'Key']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'COMMENT', 'NN', 'NNP']"
32,"var store = sessions.NewCookieStore(authKey, encKey)","['var', 'store', '=', 'sessions.NewCookieStore(authKey, encKey)']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
33,func initSession(r *http.Request) *sessions.Session {,"['func', 'initSession', '(', 'r', '*', 'http', '.', 'Request', ')', '*', 'sessions', '.', 'Session', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
34,    store.Options = &sessions.Options{,"['store', '.', 'Options', '=', '&', 'sessions', '.', 'Options', '{']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
35,"        MaxAge:   3600 * 1, // 1 hour","['MaxAge', ':', '3600', '*', '1', ',', '//', '1', 'hour']","['IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION', 'COMMENT', 'CD', 'NN']"
36,"        HttpOnly: true,","['HttpOnly', ':', 'true', ',']","['IDENTIFIER', 'PUNCTUATION', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
37,    },['}'],['PUNCTUATION']
38,"    session, err := store.Get(r, ""golang_cookie"")","['session', ',', 'err', ':=', 'store.Get(r, ""golang_cookie"")']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
39,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
40,        panic(err),"['panic', '(', 'err', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
41,    },['}'],['PUNCTUATION']
42,    return session,"['return', 'session']","['KEYWORD', 'IDENTIFIER']"
43,},['}'],['PUNCTUATION']
44,"func SetSessionValue(w http.ResponseWriter, r *http.Request, key, value string) {","['func', 'SetSessionValue', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ',', 'key', ',', 'value', 'string', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
45,    session := initSession(r),"['session', ':=', 'initSession', '(', 'r', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
46,    session.Values[key] = value,"['session', '.', 'Values', '[', 'key', ']', '=', 'value']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
47,"    fmt.Printf(""set session with key %s and value %s\n"", key, value)","['fmt.Printf(""set session with key %s and value %s\\n"", key, value)']",['FUNCTION_CALL']
48,"    session.Save(r, w)","['session.Save(r, w)']",['FUNCTION_CALL']
49,},['}'],['PUNCTUATION']
50,"func GetSessionValue(w http.ResponseWriter, r *http.Request, key string) string {","['func', 'GetSessionValue', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ',', 'key', 'string', ')', 'string', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
51,    session := initSession(r),"['session', ':=', 'initSession', '(', 'r', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
52,    valWithOutType := session.Values[key],"['valWithOutType', ':=', 'session', '.', 'Values', '[', 'key', ']']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
53,"    fmt.Printf(""valWithOutType: %s\n"", valWithOutType)","['fmt.Printf(""valWithOutType: %s\\n"", valWithOutType)']",['FUNCTION_CALL']
54,"    value, ok := valWithOutType.(string)","['value', ',', 'ok', ':=', 'valWithOutType', '.(', 'string', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
55,    if !ok {,"['if', '!', 'ok', '{']","['KEYWORD', 'LOGICAL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
56,"        fmt.Println(""cannot get session value by key: "" + key)","['fmt.Println(""cannot get session value by key: "" + key)']",['FUNCTION_CALL']
57,    },['}'],['PUNCTUATION']
58,    return value,"['return', 'value']","['KEYWORD', 'IDENTIFIER']"
59,},['}'],['PUNCTUATION']
60,"

Output:

",['Output:'],['NN']
61,myMac ~/forStack/session $ go run ./session.go,"['myMac', '/forStack/session $ go run ./session.go']","['IDENTIFIER', 'DIRECTORY']"
62,2015/01/30 16:47:26 Listening...,"['2015/01/30', '16', ':', '47', ':', '26', 'Listening', '...']","['DIRECTORY', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'PUNCTUATION', 'DECIMAL_LITERAL', 'IDENTIFIER', 'PUNCTUATION']"
63,"

First I open url ","['First', 'I', 'open', 'url']","['RB', 'PRP', 'VBP', 'JJ']"
64,http://localhost:3000/setSession,"['http', '://', 'localhost', ':', '3000/setSession']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DIRECTORY']"
65," and get output:

","['and', 'get', 'output:']","['CC', 'VB', 'JJ']"
66,set session with key key and value value,"['set', 'session', 'with', 'key', 'key', 'and', 'value', 'value']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER']"
67,"

Then I open url ","['Then', 'I', 'open', 'url']","['RB', 'PRP', 'VBP', 'JJ']"
68,http://localhost:3000/getSession,"['http', '://', 'localhost', ':', '3000/getSession']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'DIRECTORY']"
69," and get output:

","['and', 'get', 'output:']","['CC', 'VB', 'JJ']"
70,valWithOutType: %!s(),"['valWithOutType', ':', '%!', 's', '()']","['IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
71,cannot get session value by key: key,"['cannot', 'get', 'session', 'value', 'by', 'key', ':', 'key']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
72,value from session,"['value', 'from', 'session']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER']"
73,"

Why valWithOutType is nil, although I set it requesting /setSession?

Update

I changed code according to @isza answer, but session value is still nil.

","['Why', 'valWithOutType', 'is', 'nil,', 'although', 'I', 'set', 'it', 'requesting', '/setSession?', 'Update', 'I', 'changed', 'code', 'according', 'to', '@isza', 'answer,', 'but', 'session', 'value', 'is', 'still', 'nil.']","['WRB', 'NN', 'VBZ', 'JJ', 'IN', 'PRP', 'VBP', 'PRP', 'VBG', 'JJ', 'NNP', 'PRP', 'VBD', 'NN', 'VBG', 'TO', 'NNP', 'NN', 'CC', 'NN', 'NN', 'VBZ', 'RB', 'JJ']"
74,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
75,import (,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
76,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
77,"    ""github.com/gorilla/mux""","['""github.com/gorilla/mux""']",['STRING_LITERAL']
78,"    ""github.com/gorilla/sessions""","['""github.com/gorilla/sessions""']",['STRING_LITERAL']
79,"    ""log""","['""log""']",['STRING_LITERAL']
80,"    ""net/http""","['""net/http""']",['STRING_LITERAL']
81,),[')'],['PUNCTUATION']
82,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
83,    rtr := mux.NewRouter(),"['rtr', ':=', 'mux.NewRouter()']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
84,"    rtr.HandleFunc(""/setSession"", handler1).Methods(""GET"")","['rtr.HandleFunc(""/setSession"", handler1).Methods(""GET"")']",['FUNCTION_CALL']
85,"    rtr.HandleFunc(""/getSession"", handler2).Methods(""GET"")","['rtr.HandleFunc(""/getSession"", handler2).Methods(""GET"")']",['FUNCTION_CALL']
86,"    http.Handle(""/"", rtr)","['http.Handle(""/"", rtr)']",['FUNCTION_CALL']
87,"    log.Println(""Listening..."")","['log.Println(""Listening..."")']",['FUNCTION_CALL']
88,    store.Options = &sessions.Options{,"['store', '.', 'Options', '=', '&', 'sessions', '.', 'Options', '{']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
89,"        MaxAge:   3600 * 1, // 1 hour","['MaxAge', ':', '3600', '*', '1', ',', '//', '1', 'hour']","['IDENTIFIER', 'PUNCTUATION', 'DECIMAL_LITERAL', 'ARITHMETIC_OPERATOR', 'DECIMAL_LITERAL', 'PUNCTUATION', 'COMMENT', 'CD', 'NN']"
90,"        HttpOnly: true,","['HttpOnly', ':', 'true', ',']","['IDENTIFIER', 'PUNCTUATION', 'BOOLEAN_LITERAL', 'PUNCTUATION']"
91,"        Path:     ""/"", // to match all requests","['Path', ':', '""/""', ',', '//', 'to', 'match', 'all', 'requests']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'COMMENT', 'TO', 'VB', 'DT', 'NNS']"
92,    },['}'],['PUNCTUATION']
93,"    http.ListenAndServe("":3000"", http.DefaultServeMux)","['http.ListenAndServe("":3000"", http.DefaultServeMux)']",['FUNCTION_CALL']
94,},['}'],['PUNCTUATION']
95,"func handler1(w http.ResponseWriter, r *http.Request) {","['func', 'handler1', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
96,"    SetSessionValue(w, r, ""key"", ""value"")","['SetSessionValue', '(', 'w', ',', 'r', ',', '""key""', ',', '""value""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
97,"    w.Write([]byte(""setSession""))","['w.Write([]byte(""setSession""))']",['FUNCTION_CALL']
98,},['}'],['PUNCTUATION']
99,"func handler2(w http.ResponseWriter, r *http.Request) {","['func', 'handler2', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
100,"    w.Write([]byte(""getSession""))","['w.Write([]byte(""getSession""))']",['FUNCTION_CALL']
101,"    value := GetSessionValue(w, r, ""key"")","['value', ':=', 'GetSessionValue', '(', 'w', ',', 'r', ',', '""key""', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
102,"    fmt.Println(""value from session"")","['fmt.Println(""value from session"")']",['FUNCTION_CALL']
103,    fmt.Println(value),['fmt.Println(value)'],['FUNCTION_CALL']
104,},['}'],['PUNCTUATION']
105,"var authKey = []byte(""secret"") // Authorization Key","['var', 'authKey', '=', '[]', 'byte', '(', '""secret""', ')', '//', 'Authorization', 'Key']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'COMMENT', 'NNP', 'NNP']"
106,"var encKey = []byte(""encKey"") // Encryption Key","['var', 'encKey', '=', '[]', 'byte', '(', '""encKey""', ')', '//', 'Encryption', 'Key']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'COMMENT', 'NN', 'NNP']"
107,"var store = sessions.NewCookieStore(authKey, encKey)","['var', 'store', '=', 'sessions.NewCookieStore(authKey, encKey)']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
108,func initSession(r *http.Request) *sessions.Session {,"['func', 'initSession', '(', 'r', '*', 'http', '.', 'Request', ')', '*', 'sessions', '.', 'Session', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
109,"    session, err := store.Get(r, ""golang_cookie"")","['session', ',', 'err', ':=', 'store.Get(r, ""golang_cookie"")']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
110,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
111,        panic(err),"['panic', '(', 'err', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
112,    },['}'],['PUNCTUATION']
113,    return session,"['return', 'session']","['KEYWORD', 'IDENTIFIER']"
114,},['}'],['PUNCTUATION']
115,"func SetSessionValue(w http.ResponseWriter, r *http.Request, key, value string) {","['func', 'SetSessionValue', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ',', 'key', ',', 'value', 'string', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
116,    session := initSession(r),"['session', ':=', 'initSession', '(', 'r', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
117,    session.Values[key] = value,"['session', '.', 'Values', '[', 'key', ']', '=', 'value']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER']"
118,"    fmt.Printf(""set session with key %s and value %s\n"", key, value)","['fmt.Printf(""set session with key %s and value %s\\n"", key, value)']",['FUNCTION_CALL']
119,"    session.Save(r, w)","['session.Save(r, w)']",['FUNCTION_CALL']
120,},['}'],['PUNCTUATION']
121,"func GetSessionValue(w http.ResponseWriter, r *http.Request, key string) string {","['func', 'GetSessionValue', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ',', 'key', 'string', ')', 'string', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
122,    session := initSession(r),"['session', ':=', 'initSession', '(', 'r', ')']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
123,    valWithOutType := session.Values[key],"['valWithOutType', ':=', 'session', '.', 'Values', '[', 'key', ']']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
124,"    fmt.Printf(""valWithOutType: %s\n"", valWithOutType)","['fmt.Printf(""valWithOutType: %s\\n"", valWithOutType)']",['FUNCTION_CALL']
125,"    value, ok := valWithOutType.(string)","['value', ',', 'ok', ':=', 'valWithOutType', '.(', 'string', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
126,    if !ok {,"['if', '!', 'ok', '{']","['KEYWORD', 'LOGICAL_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
127,"        fmt.Println(""cannot get session value by key: "" + key)","['fmt.Println(""cannot get session value by key: "" + key)']",['FUNCTION_CALL']
128,    },['}'],['PUNCTUATION']
129,    return value,"['return', 'value']","['KEYWORD', 'IDENTIFIER']"
130,},['}'],['PUNCTUATION']
