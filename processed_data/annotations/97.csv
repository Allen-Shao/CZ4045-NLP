,text,token,annotation
0,"I've got a function that relies on checking some errors concurrently and I'm trying to use waitgroups to wait until all processes that return possible errors are done before I check all the errors. 

It seems to be skipping some of the wg.Done() cals. Here's a youtube video of the debug (it loops through the 'for' loop 3 times, sorry):
Golang Delve Debug for WaitGroups

Any idea why it'd be skipping some of the waitgroup.Done() calls?

Here's the code:

","[""I've"", 'got', 'a', 'function', 'that', 'relies', 'on', 'checking', 'some', 'errors', 'concurrently', 'and', ""I'm"", 'trying', 'to', 'use', 'waitgroups', 'to', 'wait', 'until', 'all', 'processes', 'that', 'return', 'possible', 'errors', 'are', 'done', 'before', 'I', 'check', 'all', 'the', 'errors.', 'It', 'seems', 'to', 'be', 'skipping', 'some', 'of', 'the', 'wg.Done()', 'cals.', ""Here's"", 'a', 'youtube', 'video', 'of', 'the', 'debug', '(it', 'loops', 'through', 'the', ""'for'"", 'loop', '3', 'times,', 'sorry):', 'Golang', 'Delve', 'Debug', 'for', 'WaitGroups', 'Any', 'idea', 'why', ""it'd"", 'be', 'skipping', 'some', 'of', 'the', 'waitgroup.Done()', 'calls?', ""Here's"", 'the', 'code:']","['NNP', 'VBD', 'DT', 'NN', 'WDT', 'VBZ', 'IN', 'VBG', 'DT', 'NNS', 'RB', 'CC', 'NNP', 'VBG', 'TO', 'VB', 'NNS', 'TO', 'VB', 'IN', 'DT', 'NNS', 'WDT', 'VBP', 'JJ', 'NNS', 'VBP', 'VBN', 'IN', 'PRP', 'VBP', 'PDT', 'DT', 'NN', 'PRP', 'VBZ', 'TO', 'VB', 'VBG', 'DT', 'IN', 'DT', 'NN', 'NN', 'NNP', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN', 'NN', 'VBZ', 'IN', 'DT', 'NNP', 'VBD', 'CD', 'NN', 'NN', 'NNP', 'NNP', 'NNP', 'IN', 'NNP', 'NNP', 'NN', 'WRB', 'NN', 'VB', 'VBG', 'DT', 'IN', 'DT', 'NN', 'NN', 'NNP', 'DT', 'NN']"
1,package controllers,"['package', 'controllers']","['KEYWORD', 'IDENTIFIER']"
2,import (,"['import', '(']","['KEYWORD', 'OPERATOR']"
3,"    ""errors""","['""errors""']",['STRING_LITERAL']
4,"    ""mobilebid/billable""","['""mobilebid/billable""']",['STRING_LITERAL']
5,"    db ""mobilebid/database""","['db', '""mobilebid/database""']","['IDENTIFIER', 'STRING_LITERAL']"
6,"    ""mobilebid/stripe""","['""mobilebid/stripe""']",['STRING_LITERAL']
7,"    ""net/http""","['""net/http""']",['STRING_LITERAL']
8,"    ""os""","['""os""']",['STRING_LITERAL']
9,"    ""strconv""","['""strconv""']",['STRING_LITERAL']
10,"    ""sync""","['""sync""']",['STRING_LITERAL']
11,"    ""time""","['""time""']",['STRING_LITERAL']
12,"    log ""github.com/Sirupsen/logrus""","['log', '""github.com/Sirupsen/logrus""']","['IDENTIFIER', 'STRING_LITERAL']"
13,"    ""github.com/gorilla/mux""","['""github.com/gorilla/mux""']",['STRING_LITERAL']
14,),[')'],['OPERATOR']
15,var (,"['var', '(']","['KEYWORD', 'OPERATOR']"
16,"    errBillableID     = errors.New(""It looks like there was an error while getting your billable ID. Do you have a credit card set up?"")","['errBillableID', '=', 'errors', '.', 'New', '(', '""It looks like there was an error while getting your billable ID. Do you have a credit card set up?""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
17,"    errWinningItems   = errors.New(""It looks like there was an error while gathering your winning items. Please contact an event rep."")","['errWinningItems', '=', 'errors', '.', 'New', '(', '""It looks like there was an error while gathering your winning items. Please contact an event rep.""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
18,"    errAcctInfo       = errors.New(""We had some trouble getting the account information for the event. Please contact an event rep."")","['errAcctInfo', '=', 'errors', '.', 'New', '(', '""We had some trouble getting the account information for the event. Please contact an event rep.""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
19,"    errLoggingTrans   = errors.New(""It looks like we had some sort of issue while logging your transaction. Please contact an event rep."")","['errLoggingTrans', '=', 'errors', '.', 'New', '(', '""It looks like we had some sort of issue while logging your transaction. Please contact an event rep.""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
20,"    errParsingURL     = errors.New(""We had some issue looking at the URL."")","['errParsingURL', '=', 'errors', '.', 'New', '(', '""We had some issue looking at the URL.""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
21,"    errStripeIssue    = errors.New(""It looks like there was some kind of issue while talking with Stripe. If you were in the middle of a transaction, this doesn't mean the transaction was cancelled. Take a look at your transactions and/or contact an event rep."")","['errStripeIssue', '=', 'errors', '.', 'New', '(', '""It looks like there was some kind of issue while talking with Stripe. If you were in the middle of a transaction, this doesn\'t mean the transaction was cancelled. Take a look at your transactions and/or contact an event rep.""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
22,"    errItemsPurchased = errors.New(""One or more of the items you're trying to purchase have already been purchased. If this doesn't sound right, please contact an event rep."")","['errItemsPurchased', '=', 'errors', '.', 'New', '(', '""One or more of the items you\'re trying to purchase have already been purchased. If this doesn\'t sound right, please contact an event rep.""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
23,),[')'],['OPERATOR']
24,"func createLogCtx(bidderID, eventID int) *log.Entry {","['func', 'createLogCtx', '(', 'bidderID', ',', 'eventID', 'int', ')', '*', 'log', '.', 'Entry', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
25,    return log.WithFields(log.Fields{,"['return', 'log', '.', 'WithFields', '(', 'log', '.', 'Fields', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
26,"        ""bidderID"": bidderID,","['""bidderID""', ':', 'bidderID', ',']","['STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
27,"        ""eventID"":  eventID,","['""eventID""', ':', 'eventID', ',']","['STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
28,    }),['})'],['OPERATOR']
29,},['}'],['OPERATOR']
30,var wg sync.WaitGroup,"['var', 'wg', 'sync', '.', 'WaitGroup']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
31,const gorutineCt = 6,"['const', 'go', 'rutineCt', '=', '6']","['KEYWORD', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL']"
32,//PurchaseItems purchases items from the event for the bidder and sends the funds to the customer,"['//', 'PurchaseItems', 'purchases', 'items', 'from', 'the', 'event', 'for', 'the', 'bidder', 'and', 'sends', 'the', 'funds', 'to', 'the', 'customer']","['COMMENT', 'NNP', 'NNS', 'NNS', 'IN', 'DT', 'NN', 'IN', 'DT', 'NN', 'CC', 'VBZ', 'DT', 'NNS', 'TO', 'DT', 'NN']"
33,//  In order for PurchaseItems to work:,"['//', 'In', 'order', 'for', 'PurchaseItems', 'to', 'work:']","['COMMENT', 'IN', 'NN', 'IN', 'NNPS', 'TO', 'VB']"
34,//      1. Bidder must have a customer account set up in Stripe,"['//', '1.', 'Bidder', 'must', 'have', 'a', 'customer', 'account', 'set', 'up', 'in', 'Stripe']","['COMMENT', 'CD', 'NNP', 'MD', 'VB', 'DT', 'NN', 'NN', 'VBN', 'RP', 'IN', 'NNP']"
35,//      2. Event owner needs to have their Stripe registered with the apps Stripe account,"['//', '2.', 'Event', 'owner', 'needs', 'to', 'have', 'their', 'Stripe', 'registered', 'with', 'the', 'apps', 'Stripe', 'account']","['COMMENT', 'CD', 'NNP', 'NN', 'NNS', 'TO', 'VB', 'PRP$', 'NNP', 'VBN', 'IN', 'DT', 'NN', 'NNP', 'NN']"
36,//      3. Item must not have been purchased before (ever),"['//', '3.', 'Item', 'must', 'not', 'have', 'been', 'purchased', 'before', '(ever)']","['COMMENT', 'CD', 'NNP', 'MD', 'RB', 'VB', 'VBN', 'VBN', 'IN', 'NN']"
37,func PurchaseItems(dB db.AppDB) http.HandlerFunc {,"['func', 'PurchaseItems', '(', 'dB', 'db', '.', 'AppDB', ')', 'http', '.', 'HandlerFunc', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
38,"    return http.HandlerFunc(func(res http.ResponseWriter, req *http.Request) {","['return', 'http', '.', 'HandlerFunc', '(', 'func', '(', 'res', 'http', '.', 'ResponseWriter', ',', 'req', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
39,        ps := mux.Vars(req),"['ps', ':=', 'mux', '.', 'Vars', '(', 'req', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
40,"        eventID, err := strconv.Atoi(ps[""eventID""])","['eventID', ',', 'err', ':=', 'strconv', '.', 'Atoi', '(', 'ps', '[', '""eventID""', '])']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
41,        if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
42,            log.Error(err.Error()),"['log', '.', 'Error', '(', 'err', '.', 'Error', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
43,            res.Write(ResErr(errParsingURL.Error())),"['res', '.', 'Write', '(', 'ResErr', '(', 'errParsingURL', '.', 'Error', '()))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
44,            return,['return'],['KEYWORD']
45,        },['}'],['OPERATOR']
46,"        bidderID, err := strconv.Atoi(ps[""bidderID""])","['bidderID', ',', 'err', ':=', 'strconv', '.', 'Atoi', '(', 'ps', '[', '""bidderID""', '])']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
47,        if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
48,            log.Error(err.Error()),"['log', '.', 'Error', '(', 'err', '.', 'Error', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
49,            res.Write(ResErr(errParsingURL.Error())),"['res', '.', 'Write', '(', 'ResErr', '(', 'errParsingURL', '.', 'Error', '()))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
50,            return,['return'],['KEYWORD']
51,        },['}'],['OPERATOR']
52,        itemsChan := make(chan []db.ItemWon),"['itemsChan', ':=', 'make', '(', 'chan', '[]', 'db', '.', 'ItemWon', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
53,        billableBidderIDChan := make(chan string),"['billableBidderIDChan', ':=', 'make', '(', 'chan', 'string', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
54,        creditableAcctChan := make(chan string),"['creditableAcctChan', ':=', 'make', '(', 'chan', 'string', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
55,"        errsChan := make(chan error, gorutineCt)","['errsChan', ':=', 'make', '(', 'chan', 'error', ',', 'go', 'rutineCt', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
56,        wg.Add(gorutineCt),"['wg', '.', 'Add', '(', 'go', 'rutineCt', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
57,"        logCtx := createLogCtx(bidderID, eventID)","['logCtx', ':=', 'createLogCtx', '(', 'bidderID', ',', 'eventID', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
58,"        acct := stripe.New(os.Getenv(""SECRET_KEY""), os.Getenv(""PUBLISHABLE_KEY""))","['acct', ':=', 'stripe', '.', 'New', '(', 'os', '.', 'Getenv', '(', '""SECRET_KEY""), os.Getenv(""PUBLISHABLE_KEY""', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
59,        go func() {,"['go', 'func', '()', '{']","['KEYWORD', 'KEYWORD', 'OPERATOR', 'OPERATOR']"
60,"            id, e := dB.GetBidderBillableID(bidderID)","['id', ',', 'e', ':=', 'dB', '.', 'GetBidderBillableID', '(', 'bidderID', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
61,            if e != nil {,"['if', 'e', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
62,                logCtx.Error(e.Error()),"['logCtx', '.', 'Error', '(', 'e', '.', 'Error', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
63,                errsChan <- errBillableID,"['errsChan', '<-', 'errBillableID']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
64,                billableBidderIDChan <- id,"['billableBidderIDChan', '<-', 'id']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
65,            } else {,"['}', 'else', '{']","['OPERATOR', 'KEYWORD', 'OPERATOR']"
66,                errsChan <- nil,"['errsChan', '<-', 'nil']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
67,                billableBidderIDChan <- id,"['billableBidderIDChan', '<-', 'id']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
68,            },['}'],['OPERATOR']
69,            wg.Done(),"['wg', '.', 'Done', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
70,        }(),['}()'],['OPERATOR']
71,        go func() {,"['go', 'func', '()', '{']","['KEYWORD', 'KEYWORD', 'OPERATOR', 'OPERATOR']"
72,"            i, e := dB.GetWinningItemsForBidder(bidderID, eventID)","['i', ',', 'e', ':=', 'dB', '.', 'GetWinningItemsForBidder', '(', 'bidderID', ',', 'eventID', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
73,            if e != nil {,"['if', 'e', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
74,                logCtx.Error(e.Error()),"['logCtx', '.', 'Error', '(', 'e', '.', 'Error', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
75,                errsChan <- errWinningItems,"['errsChan', '<-', 'errWinningItems']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
76,                itemsChan <- i,"['itemsChan', '<-', 'i']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
77,            } else {,"['}', 'else', '{']","['OPERATOR', 'KEYWORD', 'OPERATOR']"
78,                errsChan <- nil,"['errsChan', '<-', 'nil']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
79,                itemsChan <- i,"['itemsChan', '<-', 'i']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
80,            },['}'],['OPERATOR']
81,            wg.Done(),"['wg', '.', 'Done', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
82,        }(),['}()'],['OPERATOR']
83,        go func() {,"['go', 'func', '()', '{']","['KEYWORD', 'KEYWORD', 'OPERATOR', 'OPERATOR']"
84,"            a, e := dB.GetCreditableAccountFromEvent(eventID)","['a', ',', 'e', ':=', 'dB', '.', 'GetCreditableAccountFromEvent', '(', 'eventID', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
85,            if e != nil {,"['if', 'e', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
86,                logCtx.Error(e.Error()),"['logCtx', '.', 'Error', '(', 'e', '.', 'Error', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
87,                errsChan <- errAcctInfo,"['errsChan', '<-', 'errAcctInfo']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
88,                creditableAcctChan <- a,"['creditableAcctChan', '<-', 'a']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
89,            } else {,"['}', 'else', '{']","['OPERATOR', 'KEYWORD', 'OPERATOR']"
90,                errsChan <- nil,"['errsChan', '<-', 'nil']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
91,                creditableAcctChan <- a,"['creditableAcctChan', '<-', 'a']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
92,            },['}'],['OPERATOR']
93,            wg.Done(),"['wg', '.', 'Done', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
94,        }(),['}()'],['OPERATOR']
95,        go func() {,"['go', 'func', '()', '{']","['KEYWORD', 'KEYWORD', 'OPERATOR', 'OPERATOR']"
96,            items := <-itemsChan,"['items', ':=', '<-', 'itemsChan']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
97,"            for _, val := range items {","['for', '_', ',', 'val', ':=', 'range', 'items', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
98,                e := dB.CheckIfItemPurchased(val.ItemID),"['e', ':=', 'dB', '.', 'CheckIfItemPurchased', '(', 'val', '.', 'ItemID', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
99,                if e != nil {,"['if', 'e', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
100,                    logCtx.WithFields(log.Fields{,"['logCtx', '.', 'WithFields', '(', 'log', '.', 'Fields', '{']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
101,"                        ""itemID"":     val.ItemID,","['""itemID""', ':', 'val', '.', 'ItemID', ',']","['STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
102,"                        ""_timestamp"": time.Now(),","['""_timestamp""', ':', 'time', '.', 'Now', '(),']","['STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
103,                    }).Error(e.Error()),"['}).', 'Error', '(', 'e', '.', 'Error', '())']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
104,                    errsChan <- errItemsPurchased,"['errsChan', '<-', 'errItemsPurchased']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
105,                    itemsChan <- items,"['itemsChan', '<-', 'items']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
106,                    wg.Done(),"['wg', '.', 'Done', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
107,                    return,['return'],['KEYWORD']
108,                },['}'],['OPERATOR']
109,            },['}'],['OPERATOR']
110,            errsChan <- nil,"['errsChan', '<-', 'nil']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
111,            itemsChan <- items,"['itemsChan', '<-', 'items']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
112,            wg.Done() //SKIPPED,"['//', 'SKIPPED']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'COMMENT', 'NN']"
113,        }(),['}()'],['OPERATOR']
114,        go func() {,"['go', 'func', '()', '{']","['KEYWORD', 'KEYWORD', 'OPERATOR', 'OPERATOR']"
115,            billableBidderID := <-billableBidderIDChan,"['billableBidderID', ':=', '<-', 'billableBidderIDChan']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
116,            e := acct.BuyerIsBillable(billableBidderID),"['e', ':=', 'acct', '.', 'BuyerIsBillable', '(', 'billableBidderID', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
117,            if e != nil {,"['if', 'e', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
118,                logCtx.Error(e.Error()),"['logCtx', '.', 'Error', '(', 'e', '.', 'Error', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
119,                errsChan <- errStripeIssue,"['errsChan', '<-', 'errStripeIssue']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
120,                billableBidderIDChan <- billableBidderID,"['billableBidderIDChan', '<-', 'billableBidderID']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
121,            } else {,"['}', 'else', '{']","['OPERATOR', 'KEYWORD', 'OPERATOR']"
122,                errsChan <- nil,"['errsChan', '<-', 'nil']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
123,                billableBidderIDChan <- billableBidderID,"['billableBidderIDChan', '<-', 'billableBidderID']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
124,            },['}'],['OPERATOR']
125,            wg.Done(),"['wg', '.', 'Done', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
126,        }(),['}()'],['OPERATOR']
127,        go func() {,"['go', 'func', '()', '{']","['KEYWORD', 'KEYWORD', 'OPERATOR', 'OPERATOR']"
128,            creditableAcct := <-creditableAcctChan,"['creditableAcct', ':=', '<-', 'creditableAcctChan']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
129,            e := acct.CanReceiveFunds(creditableAcct),"['e', ':=', 'acct', '.', 'CanReceiveFunds', '(', 'creditableAcct', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
130,            if e != nil {,"['if', 'e', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
131,                logCtx.Error(e.Error()),"['logCtx', '.', 'Error', '(', 'e', '.', 'Error', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
132,                errsChan <- errStripeIssue,"['errsChan', '<-', 'errStripeIssue']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
133,                creditableAcctChan <- creditableAcct,"['creditableAcctChan', '<-', 'creditableAcct']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
134,            } else {,"['}', 'else', '{']","['OPERATOR', 'KEYWORD', 'OPERATOR']"
135,                errsChan <- nil,"['errsChan', '<-', 'nil']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
136,                creditableAcctChan <- creditableAcct,"['creditableAcctChan', '<-', 'creditableAcct']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
137,            },['}'],['OPERATOR']
138,            wg.Done(),"['wg', '.', 'Done', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
139,        }(),['}()'],['OPERATOR']
140,        wg.Wait(),"['wg', '.', 'Wait', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
141,        close(errsChan),"['close', '(', 'errsChan', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
142,        if err = checkConcurrentErrs(errsChan); err != nil {,"['if', 'err', '=', 'checkConcurrentErrs', '(', 'errsChan', ');', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
143,            logCtx.Error(err.Error()),"['logCtx', '.', 'Error', '(', 'err', '.', 'Error', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
144,            res.Write(ResErr(err.Error())),"['res', '.', 'Write', '(', 'ResErr', '(', 'err', '.', 'Error', '()))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
145,            return,['return'],['KEYWORD']
146,        },['}'],['OPERATOR']
147,        items := <-itemsChan,"['items', ':=', '<-', 'itemsChan']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
148,        amount := addItems(items),"['amount', ':=', 'addItems', '(', 'items', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
149,"        appFee := calculateFee(amount, .03) //TODO: Store this somewhere where it can be edited without having to restart the app.","['//', 'TODO:', 'Store', 'this', 'somewhere', 'where', 'it', 'can', 'be', 'edited', 'without', 'having', 'to', 'restart', 'the', 'app.']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR', 'COMMENT', 'NNP', 'NNP', 'DT', 'RB', 'WRB', 'PRP', 'MD', 'VB', 'VBN', 'IN', 'VBG', 'TO', 'VB', 'DT', 'NN']"
150,        invoice := billable.BillObject{,"['invoice', ':=', 'billable', '.', 'BillObject', '{']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
151,"            Desc:     ""Test Charge"", //TODO: Generate this description from the event, items and bidder somehow.","['//', 'TODO:', 'Generate', 'this', 'description', 'from', 'the', 'event,', 'items', 'and', 'bidder', 'somehow.']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'COMMENT', 'NNP', 'NNP', 'DT', 'NN', 'IN', 'DT', 'JJ', 'NNS', 'CC', 'NN', 'NN']"
152,"            Amount:   amount,","['Amount', ':', 'amount', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
153,"            Currency: ""usd"",","['Currency', ':', '""usd""', ',']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
154,"            Dest:     <-creditableAcctChan,","['Dest', ':', '<-', 'creditableAcctChan', ',']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
155,"            Fee:      appFee,","['Fee', ':', 'appFee', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
156,"            Meta:     createItemsList(items),","['Meta', ':', 'createItemsList', '(', 'items', '),']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
157,"            Customer: <-billableBidderIDChan,","['Customer', ':', '<-', 'billableBidderIDChan', ',']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
158,        },['}'],['OPERATOR']
159,"        trans, err := acct.ChargeBidder(invoice)","['trans', ',', 'err', ':=', 'acct', '.', 'ChargeBidder', '(', 'invoice', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
160,        if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
161,            logCtx.Error(err.Error()),"['logCtx', '.', 'Error', '(', 'err', '.', 'Error', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
162,            res.Write(ResErr(errStripeIssue.Error())),"['res', '.', 'Write', '(', 'ResErr', '(', 'errStripeIssue', '.', 'Error', '()))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
163,            return,['return'],['KEYWORD']
164,        },['}'],['OPERATOR']
165,        logCtx.WithFields(log.Fields{,"['logCtx', '.', 'WithFields', '(', 'log', '.', 'Fields', '{']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
166,"            ""stripeTransID"": trans.TransID,","['""stripeTransID""', ':', 'trans', '.', 'TransID', ',']","['STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
167,"            ""itemcCount"":    len(items),","['""itemcCount""', ':', 'len', '(', 'items', '),']","['STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
168,"        }).Info(""Transferred funds from bidder to client"")","['}).', 'Info', '(', '""Transferred funds from bidder to client""', ')']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
169,        dbTrans := db.Transaction{,"['dbTrans', ':=', 'db', '.', 'Transaction', '{']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
170,"            TransID:  trans.TransID,","['TransID', ':', 'trans', '.', 'TransID', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
171,"            UserID:   5,","['UserID', ':', '5', ',']","['IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
172,"            BidderID: bidderID,","['BidderID', ':', 'bidderID', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
173,"            EventID:  eventID,","['EventID', ':', 'eventID', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
174,"            Amount:   int64(amount),","['Amount', ':', 'int64', '(', 'amount', '),']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
175,"            AppFee:   int64(appFee),","['AppFee', ':', 'int64', '(', 'appFee', '),']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
176,"            Desc:     ""Some test order"",","['Desc', ':', '""Some test order""', ',']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
177,"            Status:   ""completed"",","['Status', ':', '""completed""', ',']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
178,        },['}'],['OPERATOR']
179,"        orderID, err := dB.InsertTransaction(dbTrans)","['orderID', ',', 'err', ':=', 'dB', '.', 'InsertTransaction', '(', 'dbTrans', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
180,        if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
181,            logCtx.WithFields(log.Fields{,"['logCtx', '.', 'WithFields', '(', 'log', '.', 'Fields', '{']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
182,"                ""stripeTransID"": dbTrans.TransID,","['""stripeTransID""', ':', 'dbTrans', '.', 'TransID', ',']","['STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
183,"                ""_timestamp"":    time.Now(),","['""_timestamp""', ':', 'time', '.', 'Now', '(),']","['STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
184,            }).Error(err.Error()),"['}).', 'Error', '(', 'err', '.', 'Error', '())']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
185,            res.Write(ResErr(errLoggingTrans.Error())),"['res', '.', 'Write', '(', 'ResErr', '(', 'errLoggingTrans', '.', 'Error', '()))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
186,            return,['return'],['KEYWORD']
187,        },['}'],['OPERATOR']
188,"        for it, val := range items {","['for', 'it', ',', 'val', ':=', 'range', 'items', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
189,            i := db.TransactionLine{,"['i', ':=', 'db', '.', 'TransactionLine', '{']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
190,"                OrderID: orderID,","['OrderID', ':', 'orderID', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
191,"                ItemID:  val.ItemID,","['ItemID', ':', 'val', '.', 'ItemID', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
192,"                Amount:  uint64(val.Bid * 100), //Must do this since the bid is in dollars but the amount is pennies","['//', 'Must', 'do', 'this', 'since', 'the', 'bid', 'is', 'in', 'dollars', 'but', 'the', 'amount', 'is', 'pennies']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR', 'COMMENT', 'NNP', 'VB', 'DT', 'IN', 'DT', 'NN', 'VBZ', 'IN', 'NNS', 'CC', 'DT', 'NN', 'VBZ', 'NNS']"
193,"                Line:    it,","['Line', ':', 'it', ',']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
194,            },['}'],['OPERATOR']
195,            err := dB.InsertTransactionLine(i),"['err', ':=', 'dB', '.', 'InsertTransactionLine', '(', 'i', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
196,            if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
197,                logCtx.WithFields(log.Fields{,"['logCtx', '.', 'WithFields', '(', 'log', '.', 'Fields', '{']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
198,"                    ""stripeTransID"": dbTrans.TransID,","['""stripeTransID""', ':', 'dbTrans', '.', 'TransID', ',']","['STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
199,"                    ""lineNumber"":    i,","['""lineNumber""', ':', 'i', ',']","['STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
200,"                    ""_timestamp"":    time.Now(),","['""_timestamp""', ':', 'time', '.', 'Now', '(),']","['STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
201,                }).Error(err.Error()),"['}).', 'Error', '(', 'err', '.', 'Error', '())']","['OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
202,                res.Write(ResErr(errLoggingTrans.Error())),"['res', '.', 'Write', '(', 'ResErr', '(', 'errLoggingTrans', '.', 'Error', '()))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
203,                return,['return'],['KEYWORD']
204,            },['}'],['OPERATOR']
205,        },['}'],['OPERATOR']
206,"        logCtx.WithField(""orderID"", orderID).Info(""Order created"")","['logCtx', '.', 'WithField', '(', '""orderID"", orderID).Info(""Order created""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
207,        //TODO: Send receipt to buyer.,"['//', 'TODO:', 'Send', 'receipt', 'to', 'buyer.']","['COMMENT', 'NNP', 'NNP', 'NN', 'TO', 'VB']"
208,        res.Write(ResOK(trans.TransID)),"['res', '.', 'Write', '(', 'ResOK', '(', 'trans', '.', 'TransID', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
209,    }),['})'],['OPERATOR']
210,},['}'],['OPERATOR']
