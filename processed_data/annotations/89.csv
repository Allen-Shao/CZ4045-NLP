,text,token,annotation
0,"Here is my simple rest service:

","['Here', 'is', 'my', 'simple', 'rest', 'service:']","['RB', 'VBZ', 'PRP$', 'JJ', 'NN', 'NN']"
1,// Package classification User API.,"['//', 'Package', 'classification', 'User', 'API.']","['COMMENT', 'NN', 'NN', 'NNP', 'NNP']"
2,//,['//'],['COMMENT']
3,// the purpose of this application is to provide an application,"['//', 'the', 'purpose', 'of', 'this', 'application', 'is', 'to', 'provide', 'an', 'application']","['COMMENT', 'DT', 'NN', 'IN', 'DT', 'NN', 'VBZ', 'TO', 'VB', 'DT', 'NN']"
4,// that is using plain go code to define an API,"['//', 'that', 'is', 'using', 'plain', 'go', 'code', 'to', 'define', 'an', 'API']","['COMMENT', 'DT', 'VBZ', 'VBG', 'RB', 'VB', 'NN', 'TO', 'VB', 'DT', 'NN']"
5,//,['//'],['COMMENT']
6,// This should demonstrate all the possible comment annotations,"['//', 'This', 'should', 'demonstrate', 'all', 'the', 'possible', 'comment', 'annotations']","['COMMENT', 'DT', 'MD', 'VB', 'PDT', 'DT', 'JJ', 'NN', 'NNS']"
7,// that are available to turn go code into a fully compliant swagger 2.0 spec,"['//', 'that', 'are', 'available', 'to', 'turn', 'go', 'code', 'into', 'a', 'fully', 'compliant', 'swagger', '2.0', 'spec']","['COMMENT', 'DT', 'VBP', 'JJ', 'TO', 'VB', 'VB', 'NN', 'IN', 'DT', 'RB', 'JJ', 'NN', 'CD', 'NN']"
8,//,['//'],['COMMENT']
9,// Terms Of Service:,"['//', 'Terms', 'Of', 'Service:']","['COMMENT', 'NNS', 'IN', 'NNP']"
10,//,['//'],['COMMENT']
11,"// there are no TOS at this moment, use at your own risk we take no responsibility","['//', 'there', 'are', 'no', 'TOS', 'at', 'this', 'moment,', 'use', 'at', 'your', 'own', 'risk', 'we', 'take', 'no', 'responsibility']","['COMMENT', 'EX', 'VBP', 'DT', 'NNP', 'IN', 'DT', 'NN', 'NN', 'IN', 'PRP$', 'JJ', 'NN', 'PRP', 'VBP', 'DT', 'NN']"
12,//,['//'],['COMMENT']
13,"//     Schemes: http, https","['//', 'Schemes:', 'http,', 'https']","['COMMENT', 'NNP', 'NN', 'NN']"
14,//     Host: localhost,"['//', 'Host:', 'localhost']","['COMMENT', 'NNP', 'NN']"
15,//     BasePath: /v2,"['//', 'BasePath:', '/v2']","['COMMENT', 'NNP', 'NN']"
16,//     Version: 0.0.1,"['//', 'Version:', '0.0.1']","['COMMENT', '$', 'CD']"
17,//     License: MIT http://opensource.org/licenses/MIT,"['//', 'License:', 'MIT', 'http:opensource.org/licenses/MIT']","['COMMENT', 'NNP', 'NNP', 'NN']"
18,//     Contact: John Doe http://john.doe.com,"['//', 'Contact:', 'John', 'Doe', 'http:john.doe.com']","['COMMENT', 'NNP', 'NNP', 'NNP', 'NN']"
19,//,['//'],['COMMENT']
20,//     Consumes:,"['//', 'Consumes:']","['COMMENT', 'NN']"
21,//     - application/json,"['//', '-', 'application/json']","['COMMENT', ':', 'NN']"
22,//     - application/xml,"['//', '-', 'application/xml']","['COMMENT', ':', 'NN']"
23,//,['//'],['COMMENT']
24,//     Produces:,"['//', 'Produces:']","['COMMENT', 'NN']"
25,//     - application/json,"['//', '-', 'application/json']","['COMMENT', ':', 'NN']"
26,//     - application/xml,"['//', '-', 'application/xml']","['COMMENT', ':', 'NN']"
27,//,['//'],['COMMENT']
28,//,['//'],['COMMENT']
29,// swagger:meta,"['//', 'swagger:meta']","['COMMENT', 'NN']"
30,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
31,import (,"['import', '(']","['KEYWORD', 'PUNCTUATION']"
32," ""github.com/gin-gonic/gin""","['""github.com/gin-gonic/gin""']",['STRING_LITERAL']
33," ""strconv""","['""strconv""']",['STRING_LITERAL']
34," ""database/sql""","['""database/sql""']",['STRING_LITERAL']
35," _ ""github.com/go-sql-driver/mysql""","['_', '""github.com/go-sql-driver/mysql""']","['IDENTIFIER', 'STRING_LITERAL']"
36," ""gopkg.in/gorp.v1""","['""gopkg.in/gorp.v1""']",['STRING_LITERAL']
37," ""log""","['""log""']",['STRING_LITERAL']
38,),[')'],['PUNCTUATION']
39,// swagger:model,"['//', 'swagger:model']","['COMMENT', 'NN']"
40,// User represents the user for this application,"['//', 'User', 'represents', 'the', 'user', 'for', 'this', 'application']","['COMMENT', 'NNP', 'VBZ', 'DT', 'NN', 'IN', 'DT', 'NN']"
41,//,['//'],['COMMENT']
42,// A user is the security principal for this application.,"['//', 'A', 'user', 'is', 'the', 'security', 'principal', 'for', 'this', 'application.']","['COMMENT', 'DT', 'NN', 'VBZ', 'DT', 'NN', 'NN', 'IN', 'DT', 'NN']"
43,// It's also used as one of main axis for reporting.,"['//', ""It's"", 'also', 'used', 'as', 'one', 'of', 'main', 'axis', 'for', 'reporting.']","['COMMENT', 'NNP', 'RB', 'VBD', 'IN', 'CD', 'IN', 'JJ', 'NN', 'IN', 'NN']"
44,//,['//'],['COMMENT']
45,// A user can have friends with whom they can share what they like.,"['//', 'A', 'user', 'can', 'have', 'friends', 'with', 'whom', 'they', 'can', 'share', 'what', 'they', 'like.']","['COMMENT', 'DT', 'NN', 'MD', 'VB', 'NNS', 'IN', 'WP', 'PRP', 'MD', 'NN', 'WP', 'PRP', 'VBP']"
46,//,['//'],['COMMENT']
47,type User struct {,"['type', 'User', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'PUNCTUATION']"
48,    // the id for this user,"['//', 'the', 'id', 'for', 'this', 'user']","['COMMENT', 'DT', 'NN', 'IN', 'DT', 'NN']"
49,    //,['//'],['COMMENT']
50,    // required: true,"['//', 'required:', 'true']","['COMMENT', 'NN', 'JJ']"
51,    // min: 1,"['//', 'min:', '1']","['COMMENT', 'NN', 'CD']"
52,"    Id int64 `db:""id"" json:""id""`","['Id', 'int64', 'db', ':', '""id""', 'json', ':', '""id""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
53,    // the first name for this user,"['//', 'the', 'first', 'name', 'for', 'this', 'user']","['COMMENT', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN']"
54,    // required: true,"['//', 'required:', 'true']","['COMMENT', 'NN', 'JJ']"
55,    // min length: 3,"['//', 'min', 'length:', '3']","['COMMENT', 'NN', 'VBZ', 'CD']"
56,"    Firstname string `db:""firstname"" json:""firstname""`","['Firstname', 'string', 'db', ':', '""firstname""', 'json', ':', '""firstname""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
57,    // the last name for this user,"['//', 'the', 'last', 'name', 'for', 'this', 'user']","['COMMENT', 'DT', 'JJ', 'NN', 'IN', 'DT', 'NN']"
58,    // required: true,"['//', 'required:', 'true']","['COMMENT', 'NN', 'JJ']"
59,    // min length: 3,"['//', 'min', 'length:', '3']","['COMMENT', 'NN', 'VBZ', 'CD']"
60,"    Lastname string `db:""lastname"" json:""lastname""`","['Lastname', 'string', 'db', ':', '""lastname""', 'json', ':', '""lastname""']","['IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
61,},['}'],['PUNCTUATION']
62,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
63, r := gin.Default(),"['r', ':=', 'gin.Default()']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
64, r.Use(Cors()),['r.Use(Cors())'],['FUNCTION_CALL']
65," v1 := r.Group(""api/v1"")","['v1', ':=', 'r.Group(""api/v1"")']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
66, {,['{'],['PUNCTUATION']
67," v1.GET(""/users"", GetUsers)","['v1.GET(""/users"", GetUsers)']",['FUNCTION_CALL']
68," v1.GET(""/users/:id"", GetUser)","['v1.GET(""/users/:id"", GetUser)']",['FUNCTION_CALL']
69," v1.POST(""/users"", PostUser)","['v1.POST(""/users"", PostUser)']",['FUNCTION_CALL']
70," v1.PUT(""/users/:id"", UpdateUser)","['v1.PUT(""/users/:id"", UpdateUser)']",['FUNCTION_CALL']
71," v1.DELETE(""/users/:id"", DeleteUser)","['v1.DELETE(""/users/:id"", DeleteUser)']",['FUNCTION_CALL']
72," v1.OPTIONS(""/users"", OptionsUser)     // POST","['v1.OPTIONS(""/users"", OptionsUser)', '//', 'POST']","['FUNCTION_CALL', 'COMMENT', 'NN']"
73," v1.OPTIONS(""/users/:id"", OptionsUser) // PUT, DELETE","['v1.OPTIONS(""/users/:id"", OptionsUser)', '//', 'PUT,', 'DELETE']","['FUNCTION_CALL', 'COMMENT', 'NNP', 'NNP']"
74, },['}'],['PUNCTUATION']
75,"r.Run("":8696"")","['r.Run("":8696"")']",['FUNCTION_CALL']
76,},['}'],['PUNCTUATION']
77,func GetUsers(c *gin.Context) {,"['func', 'GetUsers', '(', 'c', '*', 'gin', '.', 'Context', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
78,    // swagger:route GET /user listPets pets users,"['//', 'swagger:route', 'GET', '/user', 'listPets', 'pets', 'users']","['COMMENT', 'NN', 'NNP', 'NNP', 'VBZ', 'VBZ', 'NNS']"
79,    //,['//'],['COMMENT']
80,    // Lists pets filtered by some parameters.,"['//', 'Lists', 'pets', 'filtered', 'by', 'some', 'parameters.']","['COMMENT', 'NNS', 'NNS', 'VBN', 'IN', 'DT', 'NN']"
81,    //,['//'],['COMMENT']
82,    // This will show all available pets by default.,"['//', 'This', 'will', 'show', 'all', 'available', 'pets', 'by', 'default.']","['COMMENT', 'DT', 'MD', 'VB', 'DT', 'JJ', 'NNS', 'IN', 'NN']"
83,    // You can get the pets that are out of stock,"['//', 'You', 'can', 'get', 'the', 'pets', 'that', 'are', 'out', 'of', 'stock']","['COMMENT', 'PRP', 'MD', 'VB', 'DT', 'NNS', 'WDT', 'VBP', 'IN', 'IN', 'NN']"
84,    //,['//'],['COMMENT']
85,    //     Consumes:,"['//', 'Consumes:']","['COMMENT', 'NN']"
86,    //     - application/json,"['//', '-', 'application/json']","['COMMENT', ':', 'NN']"
87,    //     - application/x-protobuf,"['//', '-', 'application/x-protobuf']","['COMMENT', ':', 'NN']"
88,    //,['//'],['COMMENT']
89,    //     Produces:,"['//', 'Produces:']","['COMMENT', 'NN']"
90,    //     - application/json,"['//', '-', 'application/json']","['COMMENT', ':', 'NN']"
91,    //     - application/x-protobuf,"['//', '-', 'application/x-protobuf']","['COMMENT', ':', 'NN']"
92,    //,['//'],['COMMENT']
93,"    //     Schemes: http, https, ws, wss","['//', 'Schemes:', 'http,', 'https,', 'ws,', 'wss']","['COMMENT', 'NNP', 'NN', 'NN', 'NN', 'NN']"
94,    //,['//'],['COMMENT']
95,    //     Security:,"['//', 'Security:']","['COMMENT', 'NN']"
96,    //       api_key:,"['//', 'api_key:']","['COMMENT', 'NN']"
97,"    //       oauth: read, write","['//', 'oauth:', 'read,', 'write']","['COMMENT', 'NN', 'NN', 'NN']"
98,    //,['//'],['COMMENT']
99,    //     Responses:,"['//', 'Responses:']","['COMMENT', 'NN']"
100,    //       default: genericError,"['//', 'default:', 'genericError']","['COMMENT', 'NN', 'NN']"
101,    //       200: someResponse,"['//', '200:', 'someResponse']","['COMMENT', 'CD', 'NN']"
102,    //       422: validationError,"['//', '422:', 'validationError']","['COMMENT', 'CD', 'NN']"
103,     var users []User,"['var', 'users', '[]', 'User']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER']"
104,"     _, err := dbmap.Select(&users, ""SELECT * FROM user"")","['_', ',', 'err', ':=', 'dbmap.Select(&users, ""SELECT * FROM user"")']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
105,    if err == nil {,"['if', 'err', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
106,"     c.JSON(200, users)","['c.JSON(200, users)']",['FUNCTION_CALL']
107,     } else {,"['}', 'else', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
108,"     c.JSON(404, gin.H{""error"": ""no user(s) into the table""})","['c.JSON(404, gin.H{""error"": ""no user(s) into the table""})']",['FUNCTION_CALL']
109, },['}'],['PUNCTUATION']
110,// curl -i http://localhost:8080/api/v1/users,"['//', 'curl', '-i', 'http:localhost:8080/api/v1/users']","['COMMENT', 'NN', 'NN', 'NNS']"
111,},['}'],['PUNCTUATION']
112,func GetUser(c *gin.Context) {,"['func', 'GetUser', '(', 'c', '*', 'gin', '.', 'Context', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
113," id := c.Params.ByName(""id"")","['id', ':=', 'c', '.', 'Params.ByName(""id"")']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL']"
114, var user User,"['var', 'user', 'User']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
115," err := dbmap.SelectOne(&user, ""SELECT * FROM user WHERE id=?"", id)","['err', ':=', 'dbmap.SelectOne(&user, ""SELECT * FROM user WHERE id=?"", id)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
116,if err == nil {,"['if', 'err', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
117," user_id, _ := strconv.ParseInt(id, 0, 64)","['user_id', ',', '_', ':=', 'strconv.ParseInt(id, 0, 64)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
118,content := &User{,"['content', ':=', '&', 'User', '{']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
119," Id: user_id,","['Id', ':', 'user_id', ',']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
120," Firstname: user.Firstname,","['Firstname', ':', 'user', '.', 'Firstname', ',']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
121," Lastname: user.Lastname,","['Lastname', ':', 'user', '.', 'Lastname', ',']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
122, },['}'],['PUNCTUATION']
123," c.JSON(200, content)","['c.JSON(200, content)']",['FUNCTION_CALL']
124, } else {,"['}', 'else', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
125," c.JSON(404, gin.H{""error"": ""user not found""})","['c.JSON(404, gin.H{""error"": ""user not found""})']",['FUNCTION_CALL']
126, },['}'],['PUNCTUATION']
127,// curl -i http://localhost:8080/api/v1/users/1,"['//', 'curl', '-i', 'http:localhost:8080/api/v1/users/1']","['COMMENT', 'NN', 'CD', 'NN']"
128,},['}'],['PUNCTUATION']
129,func PostUser(c *gin.Context) {,"['func', 'PostUser', '(', 'c', '*', 'gin', '.', 'Context', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
130, var user User,"['var', 'user', 'User']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
131, c.Bind(&user),['c.Bind(&user)'],['FUNCTION_CALL']
132,"if user.Firstname != """" && user.Lastname != """" {","['if', 'user', '.', 'Firstname', '!=', '""""', '&&', 'user', '.', 'Lastname', '!=', '""""', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'STRING_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'STRING_LITERAL', 'PUNCTUATION']"
133,"if insert, _ := dbmap.Exec(`INSERT INTO user (firstname, lastname) VALUES (?, ?)`, user.Firstname, user.Lastname); insert != nil {","['if', 'insert', ',', '_', ':=', 'dbmap.Exec(`INSERT INTO user (firstname, lastname) VALUES (?, ?)`, user.Firstname, user.Lastname)', ';', 'insert', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
134," user_id, err := insert.LastInsertId()","['user_id', ',', 'err', ':=', 'insert.LastInsertId()']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
135, if err == nil {,"['if', 'err', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
136, content := &User{,"['content', ':=', '&', 'User', '{']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'POINTER_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
137," Id: user_id,","['Id', ':', 'user_id', ',']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
138," Firstname: user.Firstname,","['Firstname', ':', 'user', '.', 'Firstname', ',']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
139," Lastname: user.Lastname,","['Lastname', ':', 'user', '.', 'Lastname', ',']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
140, },['}'],['PUNCTUATION']
141," c.JSON(201, content)","['c.JSON(201, content)']",['FUNCTION_CALL']
142, } else {,"['}', 'else', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
143," checkErr(err, ""Insert failed"")","['checkErr', '(', 'err', ',', '""Insert failed""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
144, },['}'],['PUNCTUATION']
145, },['}'],['PUNCTUATION']
146,} else {,"['}', 'else', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
147," c.JSON(422, gin.H{""error"": ""fields are empty""})","['c.JSON(422, gin.H{""error"": ""fields are empty""})']",['FUNCTION_CALL']
148, },['}'],['PUNCTUATION']
149,"// curl -i -X POST -H ""Content-Type: application/json"" -d ""{ \""firstname\"": \""Thea\"", \""lastname\"": \""Queen\"" }"" http://localhost:8080/api/v1/users","['//', 'curl', '-i', '-X', 'POST', '-H', '""Content-Type:', 'application/json""', '-d', '""{', '\\""firstname\\"":', '\\""Thea\\"",', '\\""lastname\\"":', '\\""Queen\\""', '}""', 'http:localhost:8080/api/v1/users']","['COMMENT', 'NN', 'NNP', 'NNP', 'NNP', 'NNP', 'JJ', 'NN', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNS']"
150,},['}'],['PUNCTUATION']
151,func UpdateUser(c *gin.Context) {,"['func', 'UpdateUser', '(', 'c', '*', 'gin', '.', 'Context', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
152," id := c.Params.ByName(""id"")","['id', ':=', 'c', '.', 'Params.ByName(""id"")']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL']"
153, var user User,"['var', 'user', 'User']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
154," err := dbmap.SelectOne(&user, ""SELECT * FROM user WHERE id=?"", id)","['err', ':=', 'dbmap.SelectOne(&user, ""SELECT * FROM user WHERE id=?"", id)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
155,if err == nil {,"['if', 'err', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
156, var json User,"['var', 'json', 'User']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
157, c.Bind(&json),['c.Bind(&json)'],['FUNCTION_CALL']
158,"user_id, _ := strconv.ParseInt(id, 0, 64)","['user_id', ',', '_', ':=', 'strconv.ParseInt(id, 0, 64)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
159,user := User{,"['user', ':=', 'User', '{']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
160," Id: user_id,","['Id', ':', 'user_id', ',']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
161," Firstname: json.Firstname,","['Firstname', ':', 'json', '.', 'Firstname', ',']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
162," Lastname: json.Lastname,","['Lastname', ':', 'json', '.', 'Lastname', ',']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
163, },['}'],['PUNCTUATION']
164,"if user.Firstname != """" && user.Lastname != """"{","['if', 'user', '.', 'Firstname', '!=', '""""', '&&', 'user', '.', 'Lastname', '!=', '""""', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'STRING_LITERAL', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'RELATION_OPERATOR', 'STRING_LITERAL', 'PUNCTUATION']"
165," _, err = dbmap.Update(&user)","['_', ',', 'err', '=', 'dbmap.Update(&user)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
166,if err == nil {,"['if', 'err', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
167," c.JSON(200, user)","['c.JSON(200, user)']",['FUNCTION_CALL']
168, } else {,"['}', 'else', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
169," checkErr(err, ""Updated failed"")","['checkErr', '(', 'err', ',', '""Updated failed""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
170, },['}'],['PUNCTUATION']
171,} else {,"['}', 'else', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
172," c.JSON(422, gin.H{""error"": ""fields are empty""})","['c.JSON(422, gin.H{""error"": ""fields are empty""})']",['FUNCTION_CALL']
173, },['}'],['PUNCTUATION']
174,} else {,"['}', 'else', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
175," c.JSON(404, gin.H{""error"": ""user not found""})","['c.JSON(404, gin.H{""error"": ""user not found""})']",['FUNCTION_CALL']
176, },['}'],['PUNCTUATION']
177,"// curl -i -X PUT -H ""Content-Type: application/json"" -d ""{ \""firstname\"": \""Thea\"", \""lastname\"": \""Merlyn\"" }"" http://localhost:8080/api/v1/users/1","['//', 'curl', '-i', '-X', 'PUT', '-H', '""Content-Type:', 'application/json""', '-d', '""{', '\\""firstname\\"":', '\\""Thea\\"",', '\\""lastname\\"":', '\\""Merlyn\\""', '}""', 'http:localhost:8080/api/v1/users/1']","['COMMENT', 'NN', 'VBZ', 'NNP', 'NNP', 'NNP', 'JJ', 'NN', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NNP', 'NN']"
178,},['}'],['PUNCTUATION']
179,func DeleteUser(c *gin.Context) {,"['func', 'DeleteUser', '(', 'c', '*', 'gin', '.', 'Context', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
180," id := c.Params.ByName(""id"")","['id', ':=', 'c', '.', 'Params.ByName(""id"")']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL']"
181,var user User,"['var', 'user', 'User']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
182," err := dbmap.SelectOne(&user, ""SELECT id FROM user WHERE id=?"", id)","['err', ':=', 'dbmap.SelectOne(&user, ""SELECT id FROM user WHERE id=?"", id)']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
183,if err == nil {,"['if', 'err', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
184," _, err = dbmap.Delete(&user)","['_', ',', 'err', '=', 'dbmap.Delete(&user)']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
185,if err == nil {,"['if', 'err', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
186," c.JSON(200, gin.H{""id #"" + id: "" deleted""})","['c.JSON(200, gin.H{""id #"" + id: "" deleted""})']",['FUNCTION_CALL']
187, } else {,"['}', 'else', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
188," checkErr(err, ""Delete failed"")","['checkErr', '(', 'err', ',', '""Delete failed""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
189, },['}'],['PUNCTUATION']
190,} else {,"['}', 'else', '{']","['PUNCTUATION', 'KEYWORD', 'PUNCTUATION']"
191," c.JSON(404, gin.H{""error"": ""user not found""})","['c.JSON(404, gin.H{""error"": ""user not found""})']",['FUNCTION_CALL']
192, },['}'],['PUNCTUATION']
193,// curl -i -X DELETE http://localhost:8080/api/v1/users/1,"['//', 'curl', '-i', '-X', 'DELETE', 'http:localhost:8080/api/v1/users/1']","['COMMENT', 'NN', 'NNP', 'NNP', 'NNP', 'NN']"
194,},['}'],['PUNCTUATION']
195,var dbmap = initDb(),"['var', 'dbmap', '=', 'initDb', '()']","['KEYWORD', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
196,func initDb() *gorp.DbMap {,"['func', 'initDb', '()', '*', 'go', 'rp', '.', 'DbMap', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'POINTER_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
197," db, err := sql.Open(""mysql"",","['db', ',', 'err', ':=', 'sql', '.', 'Open', '(', '""mysql""', ',']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
198,"        ""root:max_123@tcp(127.0.0.1:3306)/gotest"")","['""root:max_123@tcp(127.0.0.1:3306)/gotest""', ')']","['STRING_LITERAL', 'PUNCTUATION']"
199," checkErr(err, ""sql.Open failed"")","['checkErr', '(', 'err', ',', '""sql.Open failed""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
200," dbmap := &gorp.DbMap{Db: db, Dialect:           gorp.MySQLDialect{""InnoDB"", ""UTF8""}}","['dbmap', ':=', '&', 'go', 'rp', '.', 'DbMap', '{', 'Db', ':', 'db', ',', 'Dialect', ':', 'go', 'rp', '.', 'MySQLDialect', '{', '""InnoDB""', ',', '""UTF8""', '}}']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'POINTER_OPERATOR', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
201," dbmap.AddTableWithName(User{}, ""User"").SetKeys(true, ""Id"")","['dbmap.AddTableWithName(User{}, ""User"").SetKeys(true, ""Id"")']",['FUNCTION_CALL']
202, err = dbmap.CreateTablesIfNotExists(),"['err', '=', 'dbmap.CreateTablesIfNotExists()']","['IDENTIFIER', 'ASSIGNMENT_OPERATOR', 'FUNCTION_CALL']"
203," checkErr(err, ""Create table failed"")","['checkErr', '(', 'err', ',', '""Create table failed""', ')']","['IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
204,return dbmap,"['return', 'dbmap']","['KEYWORD', 'IDENTIFIER']"
205,},['}'],['PUNCTUATION']
206,"func checkErr(err error, msg string) {","['func', 'checkErr', '(', 'err', 'error', ',', 'msg', 'string', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
207, if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'RELATION_OPERATOR', 'IDENTIFIER', 'PUNCTUATION']"
208," log.Fatalln(msg, err)","['log.Fatalln(msg, err)']",['FUNCTION_CALL']
209, },['}'],['PUNCTUATION']
210,},['}'],['PUNCTUATION']
211,func Cors() gin.HandlerFunc {,"['func', 'Cors', '()', 'gin', '.', 'HandlerFunc', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION']"
212, return func(c *gin.Context) {,"['return', 'func', '(', 'c', '*', 'gin', '.', 'Context', ')', '{']","['KEYWORD', 'KEYWORD', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
213," c.Writer.Header().Add(""Access-Control-Allow-Origin"", ""*"")","['c', '.', 'Writer.Header().Add(""Access-Control-Allow-Origin"", ""*"")']","['IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL']"
214, c.Next(),['c.Next()'],['FUNCTION_CALL']
215, },['}'],['PUNCTUATION']
216,},['}'],['PUNCTUATION']
217,func OptionsUser(c *gin.Context) {,"['func', 'OptionsUser', '(', 'c', '*', 'gin', '.', 'Context', ')', '{']","['KEYWORD', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'ARITHMETIC_OPERATOR', 'IDENTIFIER', 'PUNCTUATION', 'IDENTIFIER', 'PUNCTUATION', 'PUNCTUATION']"
218," c.Writer.Header().Add(""Access-Control-Allow-Origin"", ""*"")","['c', '.', 'Writer.Header().Add(""Access-Control-Allow-Origin"", ""*"")']","['IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL']"
219," c.Writer.Header().Set(""Access-Control-Allow-Methods"", ""DELETE,POST, PUT"")","['c', '.', 'Writer.Header().Set(""Access-Control-Allow-Methods"", ""DELETE,POST, PUT"")']","['IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL']"
220," c.Writer.Header().Set(""Access-Control-Allow-Headers"", ""Content-Type"")","['c', '.', 'Writer.Header().Set(""Access-Control-Allow-Headers"", ""Content-Type"")']","['IDENTIFIER', 'PUNCTUATION', 'FUNCTION_CALL']"
221, c.Next(),['c.Next()'],['FUNCTION_CALL']
222,},['}'],['PUNCTUATION']
223,"

Now when I'm executing :
swagger generate spec -o ./swagger.json
to generate the json spec I'm getting:

","['Now', 'when', ""I'm"", 'executing', ':', 'swagger', 'generate', 'spec', '-o', './swagger.json', 'to', 'generate', 'the', 'json', 'spec', ""I'm"", 'getting:']","['RB', 'WRB', 'NNP', 'NN', ':', 'NN', 'NN', 'NN', 'NNP', 'NNP', 'TO', 'VB', 'DT', 'NN', 'NN', 'NNP', 'NN']"
224,{,['{'],['PUNCTUATION']
225,"    ""consumes"": [""application/json"", ""application/xml""],","['""consumes""', ':', '[""application/json"",', '""application/xml""', '],']","['STRING_LITERAL', 'PUNCTUATION', 'DIRECTORY', 'STRING_LITERAL', 'PUNCTUATION']"
226,"    ""produces"": [""application/json"", ""application/xml""],","['""produces""', ':', '[""application/json"",', '""application/xml""', '],']","['STRING_LITERAL', 'PUNCTUATION', 'DIRECTORY', 'STRING_LITERAL', 'PUNCTUATION']"
227,"    ""schemes"": [""http"", ""https""],","['""schemes""', ':', '[', '""http""', ',', '""https""', '],']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
228,"    ""swagger"": ""2.0"",","['""swagger""', ':', '""2.0""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
229,"    ""info"": {","['""info""', ':', '{']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION']"
230,"        ""description"": ""the purpose of this application is to provide an application\nthat is using plain go code to define an API\n\nThis should demonstrate all the possible comment annotations\nthat are available to turn go code into a fully compliant swagger 2.0 spec"",","['""description""', ':', '""the purpose of this application is to provide an application\\nthat is using plain go code to define an API\\n\\nThis should demonstrate all the possible comment annotations\\nthat are available to turn go code into a fully compliant swagger 2.0 spec""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
231,"        ""title"": ""User API."",","['""title""', ':', '""User API.""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
232,"        ""termsOfService"": ""there are no TOS at this moment, use at your own risk we take no responsibility"",","['""termsOfService""', ':', '""there are no TOS at this moment, use at your own risk we take no responsibility""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
233,"        ""contact"": {","['""contact""', ':', '{']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION']"
234,"            ""name"": ""John Doe"",","['""name""', ':', '""John Doe""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
235,"            ""url"": ""http://john.doe.com"",","['""url""', ':', '""http://john.doe.com""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
236,"            ""email"": ""john.doe@example.com""","['""email""', ':', '""john.doe@example.com""']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL']"
237,"        },","['},']",['PUNCTUATION']
238,"        ""license"": {","['""license""', ':', '{']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION']"
239,"            ""name"": ""MIT"",","['""name""', ':', '""MIT""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
240,"            ""url"": ""http://opensource.org/licenses/MIT""","['""url""', ':', '""http://opensource.org/licenses/MIT""']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL']"
241,"        },","['},']",['PUNCTUATION']
242,"        ""version"": ""0.0.1""","['""version""', ':', '""0.0.1""']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL']"
243,"    },","['},']",['PUNCTUATION']
244,"    ""host"": ""localhost"",","['""host""', ':', '""localhost""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
245,"    ""basePath"": ""/v2"",","['""basePath""', ':', '""/v2""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
246,"    ""paths"": {","['""paths""', ':', '{']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION']"
247,"        ""/user"": {","['""/user""', ':', '{']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION']"
248,"            ""get"": {","['""get""', ':', '{']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION']"
249,"                ""description"": ""This will show all available pets by default.\nYou can get the pets that are out of stock"",","['""description""', ':', '""This will show all available pets by default.\\nYou can get the pets that are out of stock""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
250,"                ""consumes"": [""application/json"", ""application/x-protobuf""],","['""consumes""', ':', '[""application/json"",', '""application/x-protobuf""', '],']","['STRING_LITERAL', 'PUNCTUATION', 'DIRECTORY', 'STRING_LITERAL', 'PUNCTUATION']"
251,"                ""produces"": [""application/json"", ""application/x-protobuf""],","['""produces""', ':', '[""application/json"",', '""application/x-protobuf""', '],']","['STRING_LITERAL', 'PUNCTUATION', 'DIRECTORY', 'STRING_LITERAL', 'PUNCTUATION']"
252,"                ""schemes"": [""http"", ""https"", ""ws"", ""wss""],","['""schemes""', ':', '[', '""http""', ',', '""https""', ',', '""ws""', ',', '""wss""', '],']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
253,"                ""tags"": [""listPets"", ""pets""],","['""tags""', ':', '[', '""listPets""', ',', '""pets""', '],']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
254,"                ""summary"": ""Lists pets filtered by some parameters."",","['""summary""', ':', '""Lists pets filtered by some parameters.""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
255,"                ""operationId"": ""users"",","['""operationId""', ':', '""users""', ',']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
256,"                ""security"": [{","['""security""', ':', '[{']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION']"
257,"                    ""api_key"": null","['""api_key""', ':', 'null']","['STRING_LITERAL', 'PUNCTUATION', 'IDENTIFIER']"
258,"                }, {","['},', '{']","['PUNCTUATION', 'PUNCTUATION']"
259,"                    ""oauth"": [""read"", ""write""]","['""oauth""', ':', '[', '""read""', ',', '""write""', ']']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL', 'PUNCTUATION']"
260,"                }],","['}],']",['PUNCTUATION']
261,"                ""responses"": {","['""responses""', ':', '{']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION']"
262,"                    ""200"": {","['""200""', ':', '{']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION']"
263,"                        ""$ref"": ""#/responses/someResponse""","['""$ref""', ':', '""#/responses/someResponse""']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL']"
264,"                    },","['},']",['PUNCTUATION']
265,"                    ""422"": {","['""422""', ':', '{']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION']"
266,"                        ""$ref"": ""#/responses/validationError""","['""$ref""', ':', '""#/responses/validationError""']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL']"
267,"                    },","['},']",['PUNCTUATION']
268,"                    ""default"": {","['""default""', ':', '{']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION']"
269,"                        ""$ref"": ""#/responses/genericError""","['""$ref""', ':', '""#/responses/genericError""']","['STRING_LITERAL', 'PUNCTUATION', 'STRING_LITERAL']"
270,                    },['}'],['PUNCTUATION']
271,                },['}'],['PUNCTUATION']
272,            },['}'],['PUNCTUATION']
273,        },['}'],['PUNCTUATION']
274,"    },","['},']",['PUNCTUATION']
275,"    ""definitions"": {}","['""definitions""', ':', '{}']","['STRING_LITERAL', 'PUNCTUATION', 'PUNCTUATION']"
276,},['}'],['PUNCTUATION']
277,"

Note that my definitions are empty, not sure why.
If I paste the same json spec in http://editor.swagger.io/#/
It says 

","['Note', 'that', 'my', 'definitions', 'are', 'empty,', 'not', 'sure', 'why.', 'If', 'I', 'paste', 'the', 'same', 'json', 'spec', 'in', 'http://editor.swagger.io/#/', 'It', 'says']","['NN', 'IN', 'PRP$', 'NNS', 'VBP', 'JJ', 'RB', 'JJ', 'IN', 'IN', 'PRP', 'VBP', 'DT', 'JJ', 'NN', 'NN', 'IN', 'NN', 'PRP', 'VBZ']"
278,Error,['Error'],['IDENTIFIER']
279, Object,['Object'],['IDENTIFIER']
280,"message:  ""options.definition is required""","['message', ':', '""options.definition is required""']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
281,"code:  ""UNCAUGHT_SWAY_WORKER_ERROR""","['code', ':', '""UNCAUGHT_SWAY_WORKER_ERROR""']","['IDENTIFIER', 'PUNCTUATION', 'STRING_LITERAL']"
282,"

Any directions on what is the right way to generate swagger documentation would help
","['Any', 'directions', 'on', 'what', 'is', 'the', 'right', 'way', 'to', 'generate', 'swagger', 'documentation', 'would', 'help']","['DT', 'NNS', 'IN', 'WDT', 'VBZ', 'DT', 'JJ', 'NN', 'TO', 'VB', 'NN', 'NN', 'MD', 'VB']"
