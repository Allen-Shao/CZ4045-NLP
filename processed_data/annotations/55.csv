,text,token,annotation
0,type Data struct {,"['type', 'Data', 'struct', '{']","['keyword', 'identifier', 'keyword', 'operator']"
1,    Next string,"['Next', 'string']","['identifier', 'identifier']"
2,    Results Result,"['Results', 'Result']","['identifier', 'identifier']"
3,},['}'],['operator']
4,type Result struct {,"['type', 'Result', 'struct', '{']","['keyword', 'identifier', 'keyword', 'operator']"
5,    Results []AreaGeometry,"['Results', '[]', 'AreaGeometry']","['identifier', 'operator', 'identifier']"
6,},['}'],['operator']
7,type AreaGeometry struct {,"['type', 'AreaGeometry', 'struct', '{']","['keyword', 'identifier', 'keyword', 'operator']"
8,    AREAGEOMETRY_ID int32,"['AREAGEOMETRY_ID', 'int32']","['identifier', 'identifier']"
9,    AreaManagerId int64,"['AreaManagerId', 'int64']","['identifier', 'identifier']"
10,    AreaId string,"['AreaId', 'string']","['identifier', 'identifier']"
11,    EndDateArea string,"['EndDateArea', 'string']","['identifier', 'identifier']"
12,    StartDateArea string,"['StartDateArea', 'string']","['identifier', 'identifier']"
13,    AreaGeometryTxt string,"['AreaGeometryTxt', 'string']","['identifier', 'identifier']"
14,},['}'],['operator']
15,// Synchronizes the AreaGeometry in our MySQL database with the AreaGeometry in the database from the RDW,['// Synchronizes the AreaGeometry in our MySQL database with the AreaGeometry in the database from the RDW'],"['comment', 'Synchronizes', 'the', 'AreaGeometry', 'in', 'our', 'MySQL', 'database', 'with', 'the', 'AreaGeometry', 'in', 'the', 'database', 'from', 'the', 'RDW']"
16,func retrieveData() {,"['func', 'retrieveData', '()', '{']","['keyword', 'identifier', 'operator', 'operator']"
17,"    resp, err := http.Get(""https://api.datamarket.azure.com/opendata.rdw/StatischParkeren.Open.Data/v1/AREAGEOMETRY?$format=json"")","['resp', ',', 'err', ':=', 'http', '.', 'Get', '(', '""https://api.datamarket.azure.com/opendata.rdw/StatischParkeren.Open.Data/v1/AREAGEOMETRY?$format=json""', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator']"
18,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['keyword', 'identifier', 'operator', 'identifier', 'operator']"
19,        panic(err.Error()) // TODO: proper error handling,"['panic', '(', 'err', '.', 'Error', '())', '// TODO: proper error handling']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'comment', 'TODO', ':', 'proper', 'error', 'handling']"
20,    },['}'],['operator']
21,"    body, err := ioutil.ReadAll(resp.Body)","['body', ',', 'err', ':=', 'ioutil', '.', 'ReadAll', '(', 'resp', '.', 'Body', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
22,    var d Data,"['var', 'd', 'Data']","['keyword', 'identifier', 'identifier']"
23,"    json.Unmarshal(body, &d)","['json', '.', 'Unmarshal', '(', 'body', ',', '&', 'd', ')']","['identifier', 'operator', 'identifier', 'operator', 'identifier', 'operator', 'operator', 'identifier', 'operator']"
24,"    fmt.Println(""Next: "" + d.Next)","['fmt', '.', 'Println', '(', '""Next: ""', '+', 'd', '.', 'Next', ')']","['identifier', 'operator', 'identifier', 'operator', 'string_literal', 'operator', 'identifier', 'operator', 'identifier', 'operator']"
25,},['}'],['operator']
