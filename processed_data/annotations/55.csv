,text,token,annotation
0,type Data struct {,"['type', 'Data', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
1,    Next string,"['Next', 'string']","['IDENTIFIER', 'IDENTIFIER']"
2,    Results Result,"['Results', 'Result']","['IDENTIFIER', 'IDENTIFIER']"
3,},['}'],['OPERATOR']
4,type Result struct {,"['type', 'Result', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
5,    Results []AreaGeometry,"['Results', '[]', 'AreaGeometry']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
6,},['}'],['OPERATOR']
7,type AreaGeometry struct {,"['type', 'AreaGeometry', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
8,    AREAGEOMETRY_ID int32,"['AREAGEOMETRY_ID', 'int32']","['IDENTIFIER', 'IDENTIFIER']"
9,    AreaManagerId int64,"['AreaManagerId', 'int64']","['IDENTIFIER', 'IDENTIFIER']"
10,    AreaId string,"['AreaId', 'string']","['IDENTIFIER', 'IDENTIFIER']"
11,    EndDateArea string,"['EndDateArea', 'string']","['IDENTIFIER', 'IDENTIFIER']"
12,    StartDateArea string,"['StartDateArea', 'string']","['IDENTIFIER', 'IDENTIFIER']"
13,    AreaGeometryTxt string,"['AreaGeometryTxt', 'string']","['IDENTIFIER', 'IDENTIFIER']"
14,},['}'],['OPERATOR']
15,// Synchronizes the AreaGeometry in our MySQL database with the AreaGeometry in the database from the RDW,['// Synchronizes the AreaGeometry in our MySQL database with the AreaGeometry in the database from the RDW'],"['COMMENT', 'VBZ', 'DT', 'NN', 'IN', 'PRP$', 'NNP', 'NN', 'IN', 'DT', 'NNP', 'IN', 'DT', 'NN', 'IN', 'DT', 'NNP']"
16,func retrieveData() {,"['func', 'retrieveData', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
17,"    resp, err := http.Get(""https://api.datamarket.azure.com/opendata.rdw/StatischParkeren.Open.Data/v1/AREAGEOMETRY?$format=json"")","['resp', ',', 'err', ':=', 'http', '.', 'Get', '(', '""https://api.datamarket.azure.com/opendata.rdw/StatischParkeren.Open.Data/v1/AREAGEOMETRY?$format=json""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
18,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
19,        panic(err.Error()) // TODO: proper error handling,"['panic', '(', 'err', '.', 'Error', '())', '// TODO: proper error handling']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'COMMENT', 'NN', ':', 'JJ', 'NN', 'NN']"
20,    },['}'],['OPERATOR']
21,"    body, err := ioutil.ReadAll(resp.Body)","['body', ',', 'err', ':=', 'ioutil', '.', 'ReadAll', '(', 'resp', '.', 'Body', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
22,    var d Data,"['var', 'd', 'Data']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
23,"    json.Unmarshal(body, &d)","['json', '.', 'Unmarshal', '(', 'body', ',', '&', 'd', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
24,"    fmt.Println(""Next: "" + d.Next)","['fmt', '.', 'Println', '(', '""Next: ""', '+', 'd', '.', 'Next', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
25,},['}'],['OPERATOR']
