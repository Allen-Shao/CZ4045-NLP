,text,token,annotation
0,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
1,import (,"['import', '(']","['KEYWORD', 'OPERATOR']"
2,"    ""bytes""","['""bytes""']",['STRING_LITERAL']
3,"    ""compress/zlib""","['""compress/zlib""']",['STRING_LITERAL']
4,"    ""encoding/json""","['""encoding/json""']",['STRING_LITERAL']
5,"    ""flag""","['""flag""']",['STRING_LITERAL']
6,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
7,"    ""gotwcc/mylib""","['""gotwcc/mylib""']",['STRING_LITERAL']
8,"    ""io""","['""io""']",['STRING_LITERAL']
9,"    ""net/http""","['""net/http""']",['STRING_LITERAL']
10,"    ""os""","['""os""']",['STRING_LITERAL']
11,),[')'],['OPERATOR']
12,type Block struct {,"['type', 'Block', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
13,    data []byte,"['data', '[]', 'byte']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
14,},['}'],['OPERATOR']
15,type Row struct {,"['type', 'Row', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
16,"    offset, len uint32","['offset', ',', 'len', 'uint32']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER']"
17,    block       *Block,"['block', '*', 'Block']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
18,},['}'],['OPERATOR']
19,type Cache struct {,"['type', 'Cache', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
20,    blocks          []Block,"['blocks', '[]', 'Block']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
21,    indexes         map[string]*Row,"['indexes', 'map', '[', 'string', ']*', 'Row']","['IDENTIFIER', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
22,    enable_compress bool,"['enable_compress', 'bool']","['IDENTIFIER', 'IDENTIFIER']"
23,    maxRowGroup     uint,"['maxRowGroup', 'uint']","['IDENTIFIER', 'IDENTIFIER']"
24,},['}'],['OPERATOR']
25,func (this *Cache) dump() {,"['func', '(', 'this', '*', 'Cache', ')', 'dump', '()', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
26,"    for key, value := range this.indexes {","['for', 'key', ',', 'value', ':=', 'range', 'this', '.', 'indexes', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
27,"        fmt.Printf(""[%s] = \""%s\""\n"", key, value.block)","['fmt', '.', 'Printf', '(', '""[%s] = \\""%s\\""\\n""', ',', 'key', ',', 'value', '.', 'block', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
28,    },['}'],['OPERATOR']
29,},['}'],['OPERATOR']
30,func (this *Cache) search(item_id string) string {,"['func', '(', 'this', '*', 'Cache', ')', 'search', '(', 'item_id', 'string', ')', 'string', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
31,    row := this.indexes[item_id],"['row', ':=', 'this', '.', 'indexes', '[', 'item_id', ']']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
32,    if row == nil {,"['if', 'row', '==', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
33,"        return ""(Not found)""","['return', '""(Not found)""']","['KEYWORD', 'STRING_LITERAL']"
34,    },['}'],['OPERATOR']
35,    block := this.uncompress(row.block.data),"['block', ':=', 'this', '.', 'uncompress', '(', 'row', '.', 'block', '.', 'data', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
36,    slice := block[row.offset : row.offset+row.len],"['slice', ':=', 'block', '[', 'row', '.', 'offset', ':', 'row', '.', 'offset', '+', 'row', '.', 'len', ']']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
37,    return string(slice),"['return', 'string', '(', 'slice', ')']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
38,},['}'],['OPERATOR']
39,func (this *Cache) compress(data []byte) []byte {,"['func', '(', 'this', '*', 'Cache', ')', 'compress', '(', 'data', '[]', 'byte', ')', '[]', 'byte', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
40,    if !this.enable_compress {,"['if', '!', 'this', '.', 'enable_compress', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
41,        return data,"['return', 'data']","['KEYWORD', 'IDENTIFIER']"
42,    },['}'],['OPERATOR']
43,    var b bytes.Buffer,"['var', 'b', 'bytes', '.', 'Buffer']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
44,    w := zlib.NewWriter(&b),"['w', ':=', 'zlib', '.', 'NewWriter', '(&', 'b', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
45,    w.Write(data),"['w', '.', 'Write', '(', 'data', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
46,    w.Close(),"['w', '.', 'Close', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
47,    return b.Bytes(),"['return', 'b', '.', 'Bytes', '()']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
48,},['}'],['OPERATOR']
49,func (this *Cache) uncompress(data []byte) []byte {,"['func', '(', 'this', '*', 'Cache', ')', 'uncompress', '(', 'data', '[]', 'byte', ')', '[]', 'byte', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
50,    if !this.enable_compress {,"['if', '!', 'this', '.', 'enable_compress', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
51,        return data,"['return', 'data']","['KEYWORD', 'IDENTIFIER']"
52,    },['}'],['OPERATOR']
53,    var res bytes.Buffer,"['var', 'res', 'bytes', '.', 'Buffer']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
54,    b := bytes.NewReader(data),"['b', ':=', 'bytes', '.', 'NewReader', '(', 'data', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
55,"    r, err := zlib.NewReader(b)","['r', ',', 'err', ':=', 'zlib', '.', 'NewReader', '(', 'b', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
56,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
57,        panic(err),"['panic', '(', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
58,    },['}'],['OPERATOR']
59,"    io.Copy(&res, r)","['io', '.', 'Copy', '(&', 'res', ',', 'r', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
60,    r.Close(),"['r', '.', 'Close', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
61,    return res.Bytes(),"['return', 'res', '.', 'Bytes', '()']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
62,},['}'],['OPERATOR']
63,func (this *Cache) loadFile(s string) {,"['func', '(', 'this', '*', 'Cache', ')', 'loadFile', '(', 's', 'string', ')', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
64,    type TempRowBuf struct {,"['type', 'TempRowBuf', 'struct', '{']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR']"
65,        item_id     []byte,"['item_id', '[]', 'byte']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
66,"        offset, len uint32","['offset', ',', 'len', 'uint32']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER']"
67,    },['}'],['OPERATOR']
68,"    file, err := os.Open(s)","['file', ',', 'err', ':=', 'os', '.', 'Open', '(', 's', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
69,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
70,        panic(err.Error()),"['panic', '(', 'err', '.', 'Error', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
71,    },['}'],['OPERATOR']
72,    defer file.Close(),"['defer', 'file', '.', 'Close', '()']","['IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
73,    scanner := mybufio.NewScanner(file),"['scanner', ':=', 'mybufio', '.', 'NewScanner', '(', 'file', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
74,    scanner.Split(mybufio.ScanLines),"['scanner', '.', 'Split', '(', 'mybufio', '.', 'ScanLines', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
75,    var tmp_buf bytes.Buffer,"['var', 'tmp_buf', 'bytes', '.', 'Buffer']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
76,    var buffer bytes.Buffer,"['var', 'buffer', 'bytes', '.', 'Buffer']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
77,    var tmp_list []TempRowBuf,"['var', 'tmp_list', '[]', 'TempRowBuf']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
78,    this.indexes = make(map[string]*Row),"['this', '.', 'indexes', '=', 'make', '(', 'map', '[', 'string', ']*', 'Row', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
79,    var offset uint32 = 0,"['var', 'offset', 'uint32', '=', '0']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL']"
80,    nb := this.maxRowGroup,"['nb', ':=', 'this', '.', 'maxRowGroup']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
81,    for scanner.Scan() {,"['for', 'scanner', '.', 'Scan', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
82,        nb--,"['nb', '--']","['IDENTIFIER', 'OPERATOR']"
83,        tmp_buf.Reset(),"['tmp_buf', '.', 'Reset', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
84,        tmp_buf.Write(scanner.Bytes()),"['tmp_buf', '.', 'Write', '(', 'scanner', '.', 'Bytes', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
85,        line := tmp_buf.Bytes(),"['line', ':=', 'tmp_buf', '.', 'Bytes', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
86,"        item_id, _ := tmp_buf.ReadBytes('\t')","['item_id', ',', '_', ':=', 'tmp_buf', '.', 'ReadBytes', '(', 't', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
87,        item_id = item_id[0 : len(item_id)-1],"['item_id', '=', 'item_id', '[', '0', ':', 'len', '(', 'item_id', ')-', '1', ']']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
88,        size := uint32(len(line)),"['size', ':=', 'uint32', '(', 'len', '(', 'line', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
89,        buffer.Write(line),"['buffer', '.', 'Write', '(', 'line', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
90,"        tmp_list = append(tmp_list, TempRowBuf{item_id, offset, size})","['tmp_list', '=', 'append', '(', 'tmp_list', ',', 'TempRowBuf', '{', 'item_id', ',', 'offset', ',', 'size', '})']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
91,        offset += size,"['offset', '+=', 'size']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
92,        if nb <= 0 {,"['if', 'nb', '<=', '0', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
93,            compressed := this.compress(buffer.Bytes()),"['compressed', ':=', 'this', '.', 'compress', '(', 'buffer', '.', 'Bytes', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
94,"            buff := make([]byte, len(compressed))","['buff', ':=', 'make', '([]', 'byte', ',', 'len', '(', 'compressed', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
95,"            copy(buff, compressed)","['copy', '(', 'buff', ',', 'compressed', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
96,            var block *Block = &Block{buff},"['var', 'block', '*', 'Block', '=', '&', 'Block', '{', 'buff', '}']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
97,"            for _, tmp := range tmp_list {","['for', '_', ',', 'tmp', ':=', 'range', 'tmp_list', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
98,"                this.indexes[string(tmp.item_id)] = &Row{tmp.offset, tmp.len, block}","['this', '.', 'indexes', '[', 'string', '(', 'tmp', '.', 'item_id', ')]', '=', '&', 'Row', '{', 'tmp', '.', 'offset', ',', 'tmp', '.', 'len', ',', 'block', '}']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
99,            },['}'],['OPERATOR']
100,            nb = this.maxRowGroup,"['nb', '=', 'this', '.', 'maxRowGroup']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
101,            offset = 0,"['offset', '=', '0']","['IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL']"
102,            tmp_list = nil,"['tmp_list', '=', 'nil']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
103,            buffer.Reset(),"['buffer', '.', 'Reset', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
104,        },['}'],['OPERATOR']
105,    },['}'],['OPERATOR']
106,    if nb > 0 {,"['if', 'nb', '>', '0', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
107,        compressed := this.compress(buffer.Bytes()),"['compressed', ':=', 'this', '.', 'compress', '(', 'buffer', '.', 'Bytes', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
108,"        buff := make([]byte, len(compressed))","['buff', ':=', 'make', '([]', 'byte', ',', 'len', '(', 'compressed', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
109,"        copy(buff, compressed)","['copy', '(', 'buff', ',', 'compressed', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
110,        var block *Block = &Block{buff},"['var', 'block', '*', 'Block', '=', '&', 'Block', '{', 'buff', '}']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
111,"        for _, tmp := range tmp_list {","['for', '_', ',', 'tmp', ':=', 'range', 'tmp_list', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
112,"            this.indexes[string(tmp.item_id)] = &Row{tmp.offset, tmp.len, block}","['this', '.', 'indexes', '[', 'string', '(', 'tmp', '.', 'item_id', ')]', '=', '&', 'Row', '{', 'tmp', '.', 'offset', ',', 'tmp', '.', 'len', ',', 'block', '}']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
113,        },['}'],['OPERATOR']
114,    },['}'],['OPERATOR']
115,},['}'],['OPERATOR']
116,"func wsCacheHandler(cache *Cache, writer http.ResponseWriter, request *http.Request) {","['func', 'wsCacheHandler', '(', 'cache', '*', 'Cache', ',', 'writer', 'http', '.', 'ResponseWriter', ',', 'request', '*', 'http', '.', 'Request', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
117,    var value map[string]string = make(map[string]string),"['var', 'value', 'map', '[', 'string', ']', 'string', '=', 'make', '(', 'map', '[', 'string', ']', 'string', ')']","['KEYWORD', 'IDENTIFIER', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
118,"    item_id := request.FormValue(""item_id"")","['item_id', ':=', 'request', '.', 'FormValue', '(', '""item_id""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
119,"    value[""item_id""] = item_id","['value', '[', '""item_id""', ']', '=', 'item_id']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
120,"    value[""raw""] = cache.search(item_id)","['value', '[', '""raw""', ']', '=', 'cache', '.', 'search', '(', 'item_id', ')']","['IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
121,"    jsonResp, err := json.Marshal(value)","['jsonResp', ',', 'err', ':=', 'json', '.', 'Marshal', '(', 'value', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
122,    if err != nil {,"['if', 'err', '!=', 'nil', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
123,"        fmt.Println(""error:"", err)","['fmt', '.', 'Println', '(', '""error:""', ',', 'err', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
124,    } else {,"['}', 'else', '{']","['OPERATOR', 'KEYWORD', 'OPERATOR']"
125,"        fmt.Fprintf(writer, ""%s"", string(jsonResp))","['fmt', '.', 'Fprintf', '(', 'writer', ',', '""%s""', ',', 'string', '(', 'jsonResp', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
126,    },['}'],['OPERATOR']
127,},['}'],['OPERATOR']
128,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
129,"    filename := flag.String(""data"", ""default.txt"", ""The data filename"")","['filename', ':=', 'flag', '.', 'String', '(', '""data"", ""default.txt"", ""The data filename""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
130,"    no_http := flag.Bool(""no-http"", false, ""Do not start an http server"")","['no_http', ':=', 'flag', '.', 'Bool', '(', '""no-http"", false, ""Do not start an http server""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
131,"    dumpMap := flag.Bool(""dump"", false, ""If we should dump the map to stdout"")","['dumpMap', ':=', 'flag', '.', 'Bool', '(', '""dump"", false, ""If we should dump the map to stdout""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
132,"    noCompression := flag.Bool(""no-compress"", false, ""Disable compression"")","['noCompression', ':=', 'flag', '.', 'Bool', '(', '""no-compress"", false, ""Disable compression""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
133,"    maxRowGroup := flag.Uint(""max-row-group"", 100, ""How much line to group when doing compression"")","['maxRowGroup', ':=', 'flag', '.', 'Uint', '(', '""max-row-group"", 100, ""How much line to group when doing compression""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
134,    flag.Parse(),"['flag', '.', 'Parse', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
135,    var cache Cache,"['var', 'cache', 'Cache']","['KEYWORD', 'IDENTIFIER', 'IDENTIFIER']"
136,    cache.enable_compress = !*noCompression,"['cache', '.', 'enable_compress', '=', '!*', 'noCompression']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
137,    cache.maxRowGroup = *maxRowGroup,"['cache', '.', 'maxRowGroup', '=', '*', 'maxRowGroup']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
138,    cache.loadFile(*filename),"['cache', '.', 'loadFile', '(*', 'filename', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
139,    if *dumpMap {,"['if', '*', 'dumpMap', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
140,        cache.dump(),"['cache', '.', 'dump', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
141,"        fmt.Println(cache.search(""100001""))","['fmt', '.', 'Println', '(', 'cache', '.', 'search', '(', '""100001""', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
142,"        fmt.Println(cache.search(""100002""))","['fmt', '.', 'Println', '(', 'cache', '.', 'search', '(', '""100002""', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
143,"        fmt.Println(cache.search(""100003""))","['fmt', '.', 'Println', '(', 'cache', '.', 'search', '(', '""100003""', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
144,"        fmt.Println(cache.search(""100004""))","['fmt', '.', 'Println', '(', 'cache', '.', 'search', '(', '""100004""', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
145,"        fmt.Println(cache.search(""100005""))","['fmt', '.', 'Println', '(', 'cache', '.', 'search', '(', '""100005""', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
146,"        fmt.Println(cache.search(""100006""))","['fmt', '.', 'Println', '(', 'cache', '.', 'search', '(', '""100006""', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
147,"        fmt.Println(cache.search(""100007""))","['fmt', '.', 'Println', '(', 'cache', '.', 'search', '(', '""100007""', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
148,"        fmt.Println(cache.search(""100008""))","['fmt', '.', 'Println', '(', 'cache', '.', 'search', '(', '""100008""', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
149,"        fmt.Println(cache.search(""100009""))","['fmt', '.', 'Println', '(', 'cache', '.', 'search', '(', '""100009""', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
150,"        fmt.Println(cache.search(""100010""))","['fmt', '.', 'Println', '(', 'cache', '.', 'search', '(', '""100010""', '))']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
151,    },['}'],['OPERATOR']
152,    if !*no_http {,"['if', '!*', 'no_http', '{']","['KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
153,"        http.HandleFunc(""/"", func(writer http.ResponseWriter, request *http.Request) {","['http', '.', 'HandleFunc', '(', '""/""', ',', 'func', '(', 'writer', 'http', '.', 'ResponseWriter', ',', 'request', '*', 'http', '.', 'Request', ')', '{']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
154,"            wsCacheHandler(&cache, writer, request)","['wsCacheHandler', '(&', 'cache', ',', 'writer', ',', 'request', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
155,        }),['})'],['OPERATOR']
156,"        fmt.Println(""Cache loaded, now listening on port 8585..."")","['fmt', '.', 'Println', '(', '""Cache loaded, now listening on port 8585...""', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR']"
157,"        http.ListenAndServe("":8585"", nil)","['http', '.', 'ListenAndServe', '(', '"":8585""', ',', 'nil', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
158,    },['}'],['OPERATOR']
159,},['}'],['OPERATOR']
