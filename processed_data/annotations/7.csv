,text,token,annotation
0,package main,"['package', 'main']","['KEYWORD', 'IDENTIFIER']"
1,import (,"['import', '(']","['KEYWORD', 'OPERATOR']"
2,"    ""fmt""","['""fmt""']",['STRING_LITERAL']
3,"    ""math/rand""","['""math/rand""']",['STRING_LITERAL']
4,"    ""time""","['""time""']",['STRING_LITERAL']
5,"    ""runtime""","['""runtime""']",['STRING_LITERAL']
6,),[')'],['OPERATOR']
7,const (,"['const', '(']","['KEYWORD', 'OPERATOR']"
8,    NUMBER_OF_SIMULATIONS = 1000,"['NUMBER_OF_SIMULATIONS', '=', '1000']","['IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL']"
9,    NUMBER_OF_INTERACTIONS = 1000000,"['NUMBER_OF_INTERACTIONS', '=', '1000000']","['IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL']"
10,    DROP_RATE = 0.0003,"['DROP_RATE', '=', '0', '.', '0003']","['IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR', 'DECIMAL_LITERAL']"
11,),[')'],['OPERATOR']
12,/**,['**'],['OPERATOR']
13, * Simulates a single interaction with a monster,"['*', 'Simulates', 'a', 'single', 'interaction', 'with', 'a', 'monster']","['OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER']"
14, *,['*'],['OPERATOR']
15, * Returns 1 if the monster dropped an item and 0 otherwise,"['*', 'Returns', '1', 'if', 'the', 'monster', 'dropped', 'an', 'item', 'and', '0', 'otherwise']","['OPERATOR', 'IDENTIFIER', 'DECIMAL_LITERAL', 'KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'DECIMAL_LITERAL', 'IDENTIFIER']"
16, */,['*'],['OPERATOR']
17,func interaction(generator *rand.Rand) int {,"['func', 'interaction', '(', 'generator', '*', 'rand', '.', 'Rand', ')', 'int', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
18,    if generator.Float64() <= DROP_RATE {,"['if', 'generator', '.', 'Float64', '()', '<=', 'DROP_RATE', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
19,        return 1,"['return', '1']","['KEYWORD', 'DECIMAL_LITERAL']"
20,    },['}'],['OPERATOR']
21,    return 0,"['return', '0']","['KEYWORD', 'DECIMAL_LITERAL']"
22,},['}'],['OPERATOR']
23,/**,['**'],['OPERATOR']
24, * Runs several interactions and retuns a slice representing the results,"['*', 'Runs', 'several', 'interactions', 'and', 'retuns', 'a', 'slice', 'representing', 'the', 'results']","['OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER']"
25, */,['*'],['OPERATOR']
26,"func simulation(n int, generator *rand.Rand) []int {","['func', 'simulation', '(', 'n', 'int', ',', 'generator', '*', 'rand', '.', 'Rand', ')', '[]', 'int', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
27,"    interactions := make([]int, n)","['interactions', ':=', 'make', '([]', 'int', ',', 'n', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
28,    for i := range interactions {,"['for', 'i', ':=', 'range', 'interactions', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
29,        interactions[i] = interaction(generator),"['interactions', '[', 'i', ']', '=', 'interaction', '(', 'generator', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
30,    },['}'],['OPERATOR']
31,    return interactions,"['return', 'interactions']","['KEYWORD', 'IDENTIFIER']"
32,},['}'],['OPERATOR']
33,/**,['**'],['OPERATOR']
34, * Runs several simulations and returns the results,"['*', 'Runs', 'several', 'simulations', 'and', 'return', 's', 'the', 'results']","['OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER', 'KEYWORD', 'IDENTIFIER', 'IDENTIFIER', 'IDENTIFIER']"
35, */,['*'],['OPERATOR']
36,"func test(n int, c chan []int) {","['func', 'test', '(', 'n', 'int', ',', 'c', 'chan', '[]', 'int', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
37,    source := rand.NewSource(time.Now().UnixNano()),"['source', ':=', 'rand', '.', 'NewSource', '(', 'time', '.', 'Now', '().', 'UnixNano', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
38,    generator := rand.New(source),"['generator', ':=', 'rand', '.', 'New', '(', 'source', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
39,"    simulations := make([]int, n)","['simulations', ':=', 'make', '([]', 'int', ',', 'n', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
40,    for i := range simulations {,"['for', 'i', ':=', 'range', 'simulations', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
41,"        for _, v := range simulation(NUMBER_OF_INTERACTIONS, generator) {","['for', '_', ',', 'v', ':=', 'range', 'simulation', '(', 'NUMBER_OF_INTERACTIONS', ',', 'generator', ')', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
42,            simulations[i] += v,"['simulations', '[', 'i', ']', '+=', 'v']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
43,        },['}'],['OPERATOR']
44,    },['}'],['OPERATOR']
45,    c <- simulations,"['c', '<-', 'simulations']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER']"
46,},['}'],['OPERATOR']
47,func main() {,"['func', 'main', '()', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'OPERATOR']"
48,    rand.Seed(time.Now().UnixNano()),"['rand', '.', 'Seed', '(', 'time', '.', 'Now', '().', 'UnixNano', '())']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
49,    nCPU := runtime.NumCPU(),"['nCPU', ':=', 'runtime', '.', 'NumCPU', '()']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
50,    runtime.GOMAXPROCS(nCPU),"['runtime', '.', 'GOMAXPROCS', '(', 'nCPU', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
51,"    fmt.Println(""Number of CPUs: "", nCPU)","['fmt', '.', 'Println', '(', '""Number of CPUs: ""', ',', 'nCPU', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
52,"    tests := make([]chan []int, nCPU)","['tests', ':=', 'make', '([]', 'chan', '[]', 'int', ',', 'nCPU', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
53,    for i := range tests {,"['for', 'i', ':=', 'range', 'tests', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
54,        c := make(chan []int),"['c', ':=', 'make', '(', 'chan', '[]', 'int', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
55,"        go test(NUMBER_OF_SIMULATIONS/nCPU, c)","['go', 'test', '(', 'NUMBER_OF_SIMULATIONS', 'nCPU', ',', 'c', ')']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
56,        tests[i] = c,"['tests', '[', 'i', ']', '=', 'c']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
57,    },['}'],['OPERATOR']
58,    // Concatentate the test results,['// Concatentate the test results'],"['COMMENT', 'VB', 'DT', 'NN', 'NNS']"
59,"    results := make([]int, NUMBER_OF_SIMULATIONS)","['results', ':=', 'make', '([]', 'int', ',', 'NUMBER_OF_SIMULATIONS', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
60,"    for i, c := range tests {","['for', 'i', ',', 'c', ':=', 'range', 'tests', '{']","['KEYWORD', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'KEYWORD', 'IDENTIFIER', 'OPERATOR']"
61,        start := (NUMBER_OF_SIMULATIONS/nCPU) * i,"['start', ':=', '(', 'NUMBER_OF_SIMULATIONS', 'nCPU', ')', '*', 'i']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER']"
62,        stop := (NUMBER_OF_SIMULATIONS/nCPU) * (i+1),"['stop', ':=', '(', 'NUMBER_OF_SIMULATIONS', 'nCPU', ')', '*', '(', 'i', '+', '1', ')']","['IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'DECIMAL_LITERAL', 'OPERATOR']"
63,"        copy(results[start:stop], <-c)","['copy', '(', 'results', '[', 'start', ':', 'stop', '],', '<-', 'c', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
64,    },['}'],['OPERATOR']
65,"    fmt.Println(""Successful interactions: "", results)","['fmt', '.', 'Println', '(', '""Successful interactions: ""', ',', 'results', ')']","['IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'OPERATOR', 'STRING_LITERAL', 'OPERATOR', 'IDENTIFIER', 'OPERATOR']"
66,},['}'],['OPERATOR']
