,PostId,Title,Body,AnswerCount,AcceptedAnswerId
0,36094060,reusing the methods of the base type in the derived custom type in golang,"i want to create a ReverseSort method on sort.IntSlice. So i created a custom type of MySlice and added a method of ReverseSort to it.

package main

import (
    ""fmt""
    ""sort""
)

type MySlice sort.IntSlice

func (ms MySlice) ReverseSort() {
    sort.Sort(sort.Reverse(ms))
}
func main() {
    t2 := MySlice{5, 4, 3, 1}
    t2.ReverseSort()
    fmt.Println(t2)
}


But on running this program error is shown that 

cannot use ms (type MySlice) as type sort.Interface in argument to sort.Reverse:
        MySlice does not implement sort.Interface (missing Len method)


Is there a way by which i can implement this without creating my own Len , Swap and Less methods for my custom type.
",1,36094230.0
1,1735993,What build systems work with Go?,"I know that the Go source comes with a Makefile (It's in $GOROOT/doc) which I am using right now, but have other popular build systems added support for Go yet? Has anyone written build scripts for scons, waf etc...

What do you use to build your Go programs?
",4,
2,40142146,Understanding gometalinter unconvert unnecessary conversion warning,"warning: unnecessary conversion (unconvert)

This comes from the following line:

offsetY += 60 + image.Image(*img.Bitmap).Bounds().Max.Y

It took me a while to understand how to convert this interface pointer to an interface yet I do not think that this is the right solution since gometalinter raises a warning.

I want to get the width of the img.
img is of struct Image and has a Bitmap pointer to a real image.Image (image stdlib). If I want to call Bounds on the actual image.Image I need to transform the pointer to the interface into an interface.  

How should that be done in a more go friendly way?

I have the following go code:

import (
    ""image""
    ""image/color""
    ""image/draw""
)
type Image struct {
    Src    string
    Title  string
    Width  int
    Height int
    Index  int
    Bitmap *image.Image
}

type Images []Image

offsetY = 10
func ComposeImage(imgs Images) image.Image {
    masterRGBAImg := image.NewRGBA(image.Rect(0, 0, 300, 300))
    masterBounds := masterRGBAImg.Bounds()

    for _, img := range imgs {
        draw.Draw(masterRGBAImg, masterBounds,
            *img.Bitmap, image.Point{X: -10, Y: -offsetY + 10}, draw.Src)


        addLabel(masterRGBAImg, 10, offsetY-30, img.Title)

        // HERE ======
        offsetY += 60 + image.Image(*img.Bitmap).Bounds().Max.Y
        // END ======

    }
    return masterRGBAImg
}

// Draw label on image.
func addLabel(img *image.RGBA, x int, y int, label string) {
    col := color.RGBA{50, 50, 50, 255}
    point := fixed.Point26_6{X: fixed.Int26_6(x * 64), Y: fixed.Int26_6(y * 64)}

    d := &font.Drawer{
        Dst:  img,
        Src:  image.NewUniform(col),
        Face: inconsolata.Bold8x16,
        Dot:  point,
    }
    d.DrawString(label)
}

",1,40142237.0
3,25025467,Catching panics in Golang,"With the following code, if no file argument is given, a panic is thrown for line 9 panic: runtime error: index out of range as expected.

How can I 'catch' this panic and handle it when directly when passing something to it (os.Args[1]) that causes the panic? Much like try/catch in PHP or try/except in Python.

I've had a search here on StackOverflow but I've not found anything that answers this as such.

package main

import (
    ""fmt""
    ""os""
)

func main() {
    file, err := os.Open(os.Args[1])
    if err != nil {
        fmt.Println(""Could not open file"")
    }
    fmt.Printf(""%s"", file)
}

",6,25025558.0
4,43385437,curl php returning status code 0 for golang api,"I have created a getList api in golang. Now I am trying to call the getList api from my php function using php-curl. 

I am making thousands of request from my php function. However, around 15k requests are served properly but after 15k - 20k (number varies) and further requests,
Curl CURLINFO_HTTP_CODE return 0 and response is """" and curl_error return empty string.Also the curl_errno return 7

My golang getList api is simple. It takes data from db and returns it. It Does not contain anygoroutines. 

I don't understand that why after 15k-20k requests it starts giving me empty response. Don't know if it is curl-php problem or golang api problem. Also It can be that my golang api is denying serving the requests. 

Please help.
",1,
5,42116642,how to read metadata in grpc on the server side? (golang example),"How to read metadata (passed as a header) on the server side in grpc? Any example in golang?

I am writing something like this:

// this should be passed from the client side as a context and needs to accessed on server side to read the metadata
var headers = metadata.New(map[string]string{""authorization"": """", ""space"":  """", ""org"": """", ""limit"": """", ""offset"": """"})


I want to pass the Authorization token to my validation function to validate the received token.

func validate_token(ctx context.Context, md *metadata.MD) (context.Context, error){
    token := headers[""authorization""]
}

",1,
6,39352921,Bosun - Get IP address of host using .GetMeta,"I am trying to create a (golang) struct for handling bosun alerts sent over http. It holds alert details, most importantly, about the eth0 IP address of the corresponding host.

/* This struct is defined as per the notification defined in bosun config */
type BosunAlert struct {
    AckUrl       string   `json:""ack""`
    AlertName    string   `json:""alert_name""`
    LastStatus   string   `json:""last_status""`
    IpMac        []string `json:""ip,omitempty""`
}


The corresponding template looks as follows:

template template.bosun_listener {
    subject = `{
        ""ack"":""{{.Ack}}"",
        ""alert_name"":""{{.Alert.Name}}"",
        ""last_status"":""{{.Last.Status}}"",
        ""ip"":{{ .GetMeta """" ""addresses"" (printf ""host=%s,iface=eth0"" .Group.host) }}
    }`
    body = ``
}


However, I get this error:

info: check.go:305: alert.network{host=147210308125790,ifName=server-1609}:
template: template.bosun_listener:6:12: executing ""template.bosun_listener"" at 
: error calling GetMeta: redigo: nil returned


I am using a []string for IpMac field as I cannot isolate the eth0 IP from  it's ethernet address.

Any way to do this?

EDIT:
This is the output I get:

""ack"":""http://localhost:8070/action?
key=alert.network%7Bhost%3D147210308125790%2CifName%3server-1609%7D&type=ack"",
""alert_name"":""alert.network"", ""last_status"":""critical"", ""ip"":
[""172.31.40.31/20"",""fe80::61:adff:feb1:1f5b/64""] }


This is the alert I have configured:

alert alert.network {
    runEvery = 5
    $ip = """"
    template = template.bosun_listener
    $usage = avg(q(""avg:rate:container.net.bytes{host=*,ifName=server*}"", ""5m"", """"))
    crit = $usage > 100
    critNotification = notification.test
}

",1,39353435.0
7,32396372,Right structure of tests files when used ginkgo/gomega for testing Go app,"My Go app(restfull api service) is growing and i decided to use testing. My choise is Ginkgo/Gomega.

Learning site (http://onsi.github.io/ginkgo/#getting-started-writing-your-first-test) i found that to start test you need


goto the package
ginkgo bootstrap


This will create file [your_package]_suite_test in root of package folder.
It's Ok.

But then if i want to test some feature or file or package i need again
goto the folder and ginkgo generate [test_name] which will create stub test file here.

So, in one moment we will have many messy: files of our app and testing files together in one folder.
For example,
server.go, server_test.go, auth.go, auth_test.go, and so on.

I want to searate app files and test files. For example i want to create a folder tests in root package and place all tests here.
So, when i need to test app i can run go test ./tests

Is it correct pattern to use Ginkgo/Gomega with separate tests folder?

Thanks.
",1,
8,24966675,Channel accepting value only once - golang,"I am just starting out with go. Here is what I am trying to achieve from the following code.

Main function creates 5 threads for searchAndLog(). This function accepts a channel through which it will receive a path to a directory and it will search for a file called "".DS_Store"" and then do something with it.

main function then creates another thread for ""file path.Walk()"". This thread will walk directory passed to it and for each directory which it comes across (in walkFunc()) it will execute select statement passing directory path to one of the 5 threads.

But when I run this program, first five directories which ""filepath.Walk()"" encounters it passes it to five threads, but once it has passed a directory to each of the threads once, it stops. Channels dir[0] to dir[5] in select won't accept value second time around.

What am I doing wrong?

package main

// A simple multithreaded program to calculate how many
// and total disk space occupyed by all "".DS_Store"" files.
// It also logs the location of each file along with its
// size

import (
  ""fmt""
  ""io/ioutil""
  ""os""
  ""flag""
  ""path/filepath""
)

// Returns true if path is a directory otherwise false
func isDirectory(path string) bool {
  file, err := os.Open(path)
  if err != nil {
    fmt.Println(err)
    return false
  }
  defer file.Close()
  fi, err := file.Stat()
  if err != nil {
    fmt.Println(err)
    return false
  }
  return (fi.Mode()).IsDir()
}

func main() {

  // Command line flag to pass in how many threads to swapn
  var numThreads int
  flag.IntVar(&numThreads, ""t"", 5, ""number of threads"")
  flag.Parse()
  fmt.Println(""numThreads: "", numThreads)

  // 5 Channels for 5 threads
  var dir [5]chan string
  for i, _ := range dir {
    dir[i] = make(chan string)
  }

  // This is the function that will be passed to filepath.Walk()
  // ""select"" will be executed only if path points to directory
  walkFunc := func(path string, info os.FileInfo, err error) error {
    fmt.Println(""Visited: "", path)
    if isDirectory(path) {
      select {
        case dir[0] <- path:
          fmt.Println(""Thread: 1"")
        case dir[1] <- path:
          fmt.Println(""Thread: 2"")
        case dir[2] <- path:
          fmt.Println(""Thread: 3"")
        case dir[3] <- path:
          fmt.Println(""Thread: 4"")
        case dir[4] <- path:
          fmt.Println(""Thread: 5"")
        }
    }
    return nil
  }

  // Create 5 threads of searchAndLog()
  for i := 0; i < numThreads; i++ {
    go searchAndLog(dir[i], i)
  }

  go filepath.Walk(""/Users/nikhil/Workspace"", walkFunc)

  var input string
  fmt.Scanln(&input)
}

// id is passed to identify the thread in the println statements
func searchAndLog(dirpath chan string, id int) {
  directory := <- dirpath
  fmt.Println(""Thread # "", id + 1, directory)
  files, _ := ioutil.ReadDir(directory)
  for _, f := range files {
    if f.Name() == "".DS_Store"" {
      fmt.Println(""Thread # "", id + 1, f.Size())
    }
  }
}


EDIT: As Damsham pointed out as threads exits after accepting value once. Replace thread creation loop with code that he suggested to fix the code.
",1,24966872.0
9,28442524,Why can't I read a C constant from Golang properly?,"I am using go-hdf5 to read an hdf5 file into golang. I am on windows7 using a pretty recent copy of mingw and hdf5 1.8.14_x86 and it seems like trying to use any of the predefined types doesn't work, let's focus for example on T_NATIVE_UINT64. I have reduced the issue to the following, which basically leaves go-hdf5 out of the problem and points at something quite fundamental going wrong:

package main

/*
 #cgo CFLAGS: -IC:/HDF_Group/HDF5/1.8.14_x86/include
 #cgo LDFLAGS: -LC:/HDF_Group/HDF5/1.8.14_x86/bin -lhdf5 -lhdf5_hl
 #include ""hdf5.h""

 #include 

 void print_the_value2() { printf(""the value of the constant is %d\n"", H5T_NATIVE_UINT64); }
*/
import ""C""

func main() {
    C.print_the_value2()
}


You obviously need to have hdf5 and point the compiler at the headers/dlls and running go get, then executing prints this on my pc

the value of the constant is -1962924545


Running variations of the above, in how/where the constant is read, will give different answers for the value of H5T_NATIVE_UINT64. However I am pretty sure that is none are the right value and in fact trying to use a type with the id returned doesn't work, unsurprisingly. 

If I write and run a ""real"" C program, I get different results

#include 
#include ""hdf5.h""

hid_t _go_hdf5_H5T_NATIVE_UINT64() { return H5T_NATIVE_UINT64; }

int main()
{
    printf(""the value of the constant is %d"", _go_hdf5_H5T_NATIVE_UINT64());
}


Compiling using

C:\Temp>gcc -IC:/HDF_Group/HDF5/1.8.14_x86/include -LC:/HDF_Group/HDF5/1.8.14_x86/bin -lhdf5 -lhdf5_hl -o stuff.exe stuff.c


and running gives me

the value of the constant is 50331683


And that appears to be the right value as I can use it directly from my go program. Obviously I want to be able to use the constants instead. Any idea why this could be happening? 

Extra info following comments below:

I looked for the definition of H5T_NATIVE_UINT64 in the hdf5 headers and see the following

c:\HDF_Group\HDF5\1.8.14_x86\include>grep H5T_NATIVE_UINT64 *
H5Tpkg.h:H5_DLLVAR size_t H5T_NATIVE_UINT64_ALIGN_g; 
H5Tpublic.h:#define H5T_NATIVE_UINT64 (H5OPEN H5T_NATIVE_UINT64_g)
H5Tpublic.h:H5_DLLVAR hid_t H5T_NATIVE_UINT64_g;


The whole header is here

http://www.hdfgroup.org/ftp/HDF5/prev-releases/hdf5-1.8.14/src/unpacked/src/H5Tpublic.h

Thanks!
",1,29663370.0
10,43321894,Context timeout implementation on every request using golang,"I am trying to handle context timeout for every request. We have following server structures:



Flow overview: 

Go Server: Basically, acts as a [Reverse-proxy].2

Auth Server: Check for requests Authentication.

Application Server: Core request processing logic.

Now if Authorization server can't able to process a request in stipulated time, then I want to close the goroutine from memory.

Here is what I tried:

ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)
defer cancel()
req, _ := http.NewRequest(""GET"", authorizationServer, nil)
req.Header = r.Header
req.WithContext(ctx)
res, error := client.Do(req)
select {
case <-time.After(10 * time.Second):
    fmt.Println(""overslept"")
case <-ctx.Done():
    fmt.Println(ctx.Err()) // prints ""context deadline exceeded""
}


Over here, context returns as ""deadline exceeded"", if request is not processed in stipulated time. But It continues to process that request and return response in  more that specified time. So How can I stop request flow(goroutine), when time exceeded.

Although I've also implemented complete request needs to be processed in 60 seconds with this code:

var netTransport = &http.Transport{
    Dial: (&net.Dialer{
        Timeout: 60 * time.Second,
    }).Dial,
    TLSHandshakeTimeout: 60 * time.Second,
}
client := &http.Client{
    Timeout:   time.Second * 60,
    Transport: netTransport,
    CheckRedirect: func(req *http.Request, via []*http.Request) error {
        return http.ErrUseLastResponse
    },
}


So do I need any seperate context implementations as well? Thanks in advance for help.

Note1: It will be awesome, If we can manage timeout on every requests(goroutine) created by HTTP server, using context.
",1,43322359.0
11,42986325,Database design in BigQuery,"I have a main table called ""Acquisition"" with multiple columns thatwould be referencing other tables (ex: ""Source"", ""Application"", etc. - For example, ""Source"" would have multiple possible values that wouldbe used in multiple rows of the ""Acquisition"" table). What bothers mea bit is that the way is that the rows of the ""Acquisition"" tablewould return datas that would like this:

id > 1 ; value > 23.4 ; source_id > 1 ;  application_id > 3 ;platform_id > 1 ;  country_id > 1 ;  etc.

Do you think there's another way to design it to make it more readable / user-friendly ? 

Here's an extract of the code of the schema:

acquisitionSchema = bigquery.Schema {
    &bigquery.FieldSchema{Name: ""id"", Required: true, Type: bigquery.StringFieldType},
    &bigquery.FieldSchema{Name: ""value"", Required: true, Type: bigquery.FloatFieldType},
    &bigquery.FieldSchema{Name: ""source_id"", Required: true, Type: bigquery.StringFieldType},
    &bigquery.FieldSchema{Name: ""application_id"", Required: true, Type: bigquery.StringFieldType},
    &bigquery.FieldSchema{Name: ""platform_id"", Required: true, Type: bigquery.StringFieldType},
    &bigquery.FieldSchema{Name: ""country_id"", Required: true, Type: bigquery.StringFieldType},
    &bigquery.FieldSchema{Name: ""adtype_id"", Required: true, Type: bigquery.StringFieldType},
    &bigquery.FieldSchema{Name: ""date"", Required: true, Type: bigquery.dateFieldType},
    &bigquery.FieldSchema{Name: ""download"", Required: false, Type: bigquery.IntegerFieldType}   } 

sourceSchema = bigquery.Schema {
    &bigquery.FieldSchema{Name: ""id"", Required: true, Type: bigquery.StringFieldType},
    &bigquery.FieldSchema{Name: ""value"", Required: true, Type: bigquery.StringFieldType},
}


I thought of directly putting the value of the source, platform, etc. but it might get messy as I get my data from multiple sources through APIs unless I make all the necessary controls in my code.

Thanks !
",1,42986840.0
12,33162449,Iterate over multiline string in Go,"In Python I can iterate over a multiline string.

x = """"""\
this is
my multiline
string!""""""

for line in x.splitlines():
    print(line)


Can Go do the same?
",2,33162587.0
13,28671272,vim-go: Can't get autocompletion,"I'm trying to use vim-go, but I can't get autocompletion to work.

My go environment works well, I succesfully ran :GoInstallBinaries, and I can use any :GoXXX command without errors. But I can't get autocompletion to work.


When I hit  after a dot, vim just switches in the status bar between -- INSERTION -- and -- (insertion) -- modes (what's the difference btw ?) and moves my cursor one character to the left.
When I hit , It just shows -- mode ^X (^]^D^E^F^I^K^L^N^O^Ps^U^V^Y) in the status bar.


Sometimes (rarely) after spamming  it shows the vim-go autocompletion tooltip ...

vim-go is the only plugin installed, using pathogen.
",1,28671574.0
14,37330303,Forcing a Specific Import Path in Go,"New Go programmer here -- apologies if this is well worn territory, but my google searching hasn't turned up the answer I'm looking for. 

Short Version: Can I, as a programmer external to the core Go project, force my packages to be imported with a specific name.  If so, how?

Long Version: I recently tried to install the bcrypt package from the following GitHub repository, with the following go get

go get github.com/golang/crypto


The package downloaded correctly into my workspace, but when I tried to import it, I got the following error


  $ go run main.go main.go:10:2: code in directory /path/to/go/src/github.com/golang/crypto/bcrypt expects import ""golang.org/x/crypto/bcrypt""


i.e. something told Go this package was supposed to be imported with golang.org/x/crypto/bcrypt.  This tipped me off that what I actually wanted was

go get golang.org/x/crypto/bcrypt


I'd like to do something similar in my own packages — is this functionality built into Go packaging?  Or are the authors of crypto/bcrypt doing something at runtime to detect and reject invalid package import names?
",1,37330422.0
15,33831454,Unexpected return of anonymous struct,"I am trying to implement a method that returns a modified struct based on the original one, such as:

type Project struct {
    Username string           
    Id       uint      
    Alias    string           
    Data     *json.RawMessage 
    Scheme   Scheme          
}

func (p *Project) OmitUsername() *struct {

    return &struct {
        Id      uint         
        Alias   string   
        Data    *json.RawMessage
        Scheme  Scheme          
    }{
        p.Id,
        p.Alias,
        p.Data,
        p.Scheme
    })
}


And I get the following error:

models/project.go:22: syntax error: unexpected return 
models/project.go:24: non-declaration statement outside function body 
models/project.go:25: non-declaration statement outside function body 
models/project.go:25: syntax error: unexpected string literal, expecting semicolon or newline 
models/project.go:26: non-declaration statement outside function body


Any help would be appreciated.
",2,33831833.0
16,23952886,Revel debugging - How to,"Can some one provide some guidance about how to debug a Revel application. I might be dumb but I can't manage to do it. Some clear steps would be of real help.
",1,23954469.0
17,31684942,Backslashes are removed unless quoted in command line flags,"I'm using the flag package to interpret flags entered at the command line.

I created a variable using

ptrString := flag.String(""string"", """", ""A test string"")
flat.Parse()


Then when I want to print it,

fmt.Println(""You entered "" + *ptrString)


If I enter something like -string=hello! as a command line argument, it prints ""hello!""

If I enter something like -string=hello\Bob as a command line argument, it prints ""helloBob""

Is there a recommended way to convert or interpret the flag argument to a string that doesn't remove the backslash? (This is being tested on Linux and OS X, if the shell is interfering...)
",1,31685550.0
18,40279985,BigQuery - can I run a query on a query?,"Background

I am developing a management system web app.

On one of the pages, the client shows a report of some aggregated values. 
The client report has pagination, sorting and filtering.

The server side is written in Go, and the data is stored in a large dataset in BigQuery (each table is for one day). The server code communicates with BQ using the library ""google.golang.org/api/bigquery/v2"".

Implementation

Since the main query takes a lot of time, I use the Query API to run the query and then cache the JobID for subsequent calls.

query := &bigquery.QueryRequest{
        DefaultDataset: ""myDataSet"",
        Kind:           ""json"",
        Query:          queryStr,
        UseQueryCache:  true,
    }
qr, err := service.Jobs.Query(project, query).Do()

// cache the job id
key := getMD5Hash(queryStr)
item := &memcache.Item{
    Key:        key,
    Value:      []byte(qr.JobReference.JobId),
    Expiration: time.Hour * 24,
}

err := memcache.Set(c.ctx, item)


Then I use the cached jobID and then use getQueryResults to get pages of the data.

qrc := service.Jobs.GetQueryResults(project, jobId)
if maxResults > 0 {
    qrc.MaxResults(int64(maxResults))
}
qrc.StartIndex(uint64(startIndex))
qrslice, err := qrc.Do()


Question

I want to filter and sort the data, but without repeating the underlying (heavy) query. Is the an option to run another query on the temporary table that was created by the original query? 

Meaning that if my original table is A and I ran a query on it, resulting in a temporary table TEMP_JOB; is it possible to execute an SQL query on TEMP_JOB?
",1,40280192.0
19,19472506,How can I get an interface{} argument to point to something else?,"How can I make the following work and make the output ""Result is: [Value from GetFromMemory].""?

Unfortunately I cannot change the method signatures of GetItem and Get.

http://play.golang.org/p/R5me3Q3y4W

package main

import ""fmt""

type Key string

type Item struct {
    Key   Key
    Value string
}

func GetItem(key Key) interface{} {
    return &Item{key, ""Value from GetFromMemory""}
}

// How can I make item point to the one created in GetItem?
func Get(key Key, item interface{}) {
    item = GetItem(key)
}

func main() {
    var item Item
    Get(""Key1"", &item)

    // This should print ""Result is: [Value from GetFromMemory].""
    fmt.Printf(""Result is: [%s]."", item.Value)
}

",1,19472694.0
20,26926488,Avoiding code duplication,"I am trying to write a web application and given the effort to write clean code.

I have a controller for handle incoming request and base controller that all controller will borrow the fields.

This is my base controller

type Controller struct {
    Request  *http.Request
    Response http.ResponseWriter

    // Reqeust language
    lang string

    // HTML parts
    Title   string
    body    string
    head    string
    content string
    view    string
    errors  []string
    success []string
}
// And methods followed here
func (self *Controller) renderHeadView() { .....


and my sign up controller 

type Controller struct {
    base.Controller
    user *account
}

func (self *Controller) ServeHTTP(rw http.ResponseWriter, r *http.Request) {

    self.Title = ""Sign Up""
    self.Request = r
    self.Response = rw

    self.lang = header.Language(self.Request)
    self.user = &account{lang: self.lang}

    switch self.Request.Method {
    case ""GET"":
        self.get()
    case ""POST"":
        if err := self.post(); err != nil {
            self.get()
        } else {
            // If everything was successfully
            return
        }

    }
    self.RenderResponseView()
}


and my activate controller

type Controller struct {
    base.Controller
}

func (self *Controller) ServeHTTP(rw http.ResponseWriter, r *http.Request) {

    self.Title = ""Activate account""
    self.Request = r
    self.Response = rw
    self.lang = header.Language(self.Request)

    self.RenderResponseView()
}


As you can see, the ServeHTTP method looks pretty much the same. I am thinking of to move ServeHTTP into base controller and then provide an method to call for special work. To clarify what I mean look at the following code snippet(base controller)

func (self *Controller) ServeHTTP(rw http.ResponseWriter, r *http.Request) {

    self.Title = ""Activate account""
    self.Request = r
    self.Response = rw
    self.lang = header.Language(self.Request)

    // here would come function for special work
    function()
    self.RenderResponseView()
}


I have no idea how to provide this implementation. I would be very happy, if someone could give me some suggestions. 
",1,26929991.0
21,31193406,Does sync.Once.Do guarantee visibility across goroutines?,"The example here implies that sync.Once.Do guarantees visibility across goroutines for the string var a. Is that also true if for example the function f() called by sync.Once.Do initializes multiple fields of a struct instance? Will all the fields of the struct instance be visible to other goroutines without any additional synchronization?
",1,31194663.0
22,35689930,Passing an inherited struct back as the base object,"I'm sure this is a syntax issue that I've yet to figure out with Go -

The error I'm getting -- 


  cannot use *term (type elastic.AggregationBucketKeyItem) as type elastic.Aggregations in argument to extractBucket


The line that's generating the error is 

""Value"": extractBucket(parts[1:], *term),


The relevant code, for context

// from https://github.com/olivere/elastic/blob/v3.0.22/search_aggs.go

type Aggregations map[string]*json.RawMessage

type AggregationBucketSignificantTerms struct {
    Aggregations

    DocCount int64                               //`json:""doc_count""`
    Buckets  []*AggregationBucketSignificantTerm //`json:""buckets""`
    Meta     map[string]interface{}              // `json:""meta,omitempty""`
}

// my code

func extractBucket(parts []string, aggs elastic.Aggregations) interface{} {
    // bunch of code removed

           terms, found := aggs.Terms(part)
           for _, term := range terms.Buckets {
            if len(parts) == 0 {
                retval[(term.Key).(string)] = map[string]interface{}{
                    ""Count"": term.DocCount,
                }
            } else {
                retval[(term.Key).(string)] = map[string]interface{}{
                    ""Count"": term.DocCount,
                    ""Value"": extractBucket(parts[1:], *term),
                }
            }
        }
}

",2,35690322.0
23,19108421,"""The selected directory is not a valid home for Go Sdk""","I'm using IntelliJ Idea, and the google-go-lang-idea-plugin from:


  https://github.com/mtoader/google-go-lang-idea-plugin/issues/173


When I try to add my APT provided Go installation to the Go SDK list, I get the following error



I have tried adding the following directories as the Go SDK root


/usr/share/go/
/usr/share/src/
/usr/lib/go/
/usr/lib/go/src/
/usr/lib/go/pkg/
/usr/lib/go/pkg/linux_amd64


Does anyone know how to get this working? I've commented on the various issues in the bugtracker, however the maintainer claimed that this was fixed 10 months ago.

Failing that, does anyone know what this plugin is actually looking for that would make a directory look like the SDK directory?
",3,20533130.0
24,34785048,Go HTTP memory use per persistent connection,"I'm writing a Go web server that sends Server-Sent Events to a load of clients. I'd like it to support tens of thousands of simultaneous connections. Here is my code (it just keeps the connection open and sends keep-alive events):

func handleTest(w http.ResponseWriter, r *http.Request) {
    h := w.Header()
    h.Set(""Content-Type"", ""text/event-stream; charset=utf-8"")
    h.Set(""Cache-Control"", ""no-cache, no-store, must-revalidate"")
    h.Set(""Connection"", ""keep-alive"")

    flusher := w.(http.Flusher)
    notifier := w.(http.CloseNotifier)

    flusher.Flush()

    // Just send keep-alives.
    keepAliveTime := 5 * time.Second
    keepAlive := time.NewTimer(keepAliveTime)
    defer keepAlive.Stop()

    for {
        select {
        case <-notifier.CloseNotify():
            // The connection has been closed.
            return

        case <-keepAlive.C:
            if _, err := io.WriteString(w, ""event: keep-alive\ndata: null\n\n""); err != nil {
                log.Println(err)
                return
            }
            flusher.Flush()
            keepAlive.Reset(keepAliveTime)
        }
    }
}


With 1000 connections Windows reports about 70 kB of RAM use per connection. If I add in all the stuff I am actually doing (there's another goroutine, and some minor event encoding functions) it balloons to 300 kB per connection. This seems like lots. With 1000 connections here is what pprof heap says:

14683.25kB of 14683.25kB total (  100%)
Dropped 12 nodes (cum <= 73.42kB)
Showing top 10 nodes out of 23 (cum >= 512.19kB)
      flat  flat%   sum%        cum   cum%
11091.50kB 75.54% 75.54% 11091.50kB 75.54%  io.copyBuffer
    2053kB 13.98% 89.52%     2053kB 13.98%  net/http.newBufioWriterSize
     514kB  3.50% 93.02%      514kB  3.50%  net/http.newBufioReader
  512.56kB  3.49% 96.51%   512.56kB  3.49%  runtime.makeslice
  512.19kB  3.49%   100%   512.19kB  3.49%  net.newFD
         0     0%   100% 11091.50kB 75.54%  io.Copy
         0     0%   100%  1540.19kB 10.49%  main.main
         0     0%   100%   512.19kB  3.49%  net.(*TCPListener).AcceptTCP
         0     0%   100%   512.19kB  3.49%  net.(*netFD).accept
         0     0%   100%   512.19kB  3.49%  net.(*netFD).acceptOne


So I have a few questions:


Why is the memory use so seemingly high. I would have expected something like 10 kB per connection.
Why does pprof think the heap is 14 MB, but Windows says the memory use is 70 MB? Is the rest the stack?
Is there any way I can transfer control of the HTTP response to a central goroutine, and return from handleTest() without closing the connection? Would that save me memory or is the memory use all in the http.ResponseWriter object?


Edit: For 3. it looks like I can use Hijacker

Edit 2: I tried reimplementing it using Hijacker. It reduced memory usage to about 10 kB per connection, which is much more reasonable!
",1,
25,32132064,Go (reflect): How to discover all package types at runtime?,"As far as I'm aware (see here, and here) there is no type discovery mechanism in the reflect package, which expects that you already have an instance of the type or value you want to inspect. 

Is there any other way to discover all exported types (especially the structs) in a running go package?

Here's what I wish I had (but it doesn't exist):

import ""time""
import ""fmt""

func main() {
    var types []reflect.Type
    types = reflect.DiscoverTypes(time)
    fmt.Println(types)
}


The end goal is to be able to discover all the structs of a package that meet certain criteria, then be able to instantiate new instances of those structs.

BTW, a registration function that identifies the types is not a valid approach for my use case.



Whether you think it's a good idea or not, here's why I want this capability (because I know you're going to ask):

I've written a code generation utility that loads go source files and builds an AST to scan for types that embed a specified type. The output of the utility is a set of go test functions based on the discovered types. I invoke this utility using go generate to create the test functions then run go test to execute the generated test functions. Every time the tests change (or a new type is added) I must re-run go generate before re-running go test. This is why a registration function is not a valid option. I'd like to avoid the go generate step but that would require my utility to become a library that is imported by the running package. The library code would need to somehow scan the running namespace during init() for types that embed the expected library type.
",4,
26,25566411,Error in parsing JSON data properly using Go,"I'm a newbie to Go and trying use a library from github to parse JSON to CSV. https://github.com/jehiah/json2csv

But i encountered this issue: https://github.com/jehiah/json2csv/issues/22 to which the author is not replying.

I realized that if we give following JSON as json.input to the file:

{""user"": {""name"":[""jehiah, mike, semo""], ""password"": ""root""}, ""remote_ip"": ""127.0.0.1"", ""dt"" : ""[20/Aug/2010:01:12:44 -0400]""}
{""user"": {""name"":[""jeroenjanssens"", ""jeroen2"", ""jero55""], ""password"": ""123""}, ""remote_ip"": ""192.168.0.1"", ""dt"" : ""[20/Aug/2010:01:12:44 -0400]""}
{""user"": {""name"":""markdata"", ""password"": """"}, ""remote_ip"": ""76.216.210.0"", ""dt"" : ""[20/Aug/2010:01:12:45 -0400]""}


Now if i try using it as command: go run main.go -k user.name -i input.json -o output.json

it returns following output:

""[jehiah, mike, semo]""
[jeroenjanssens jeroen2 jero55]
markdata


but as described in opend issued, i'm expecting the response as:

jehiah, mike, semo
jeroenjanssens, jeroen2, jero55
markdata


i'm guessing it is happening due to line: https://github.com/jehiah/json2csv/blob/master/main.go#L110 which is anyhow removing commas while reading the line.

Can you please advice to how to achieve above desired output?

Regards
",2,25567183.0
27,41992035,Json unmarshal type model in golang,"I have a RESTful service that returns response similar to show below:

""Basket"" : {
  ""Count"": 1,
  ""Fruits"": {[
    {
      ""Name"":""Mango"", 
      ""Season"":""Summer""
    },
    {
      ""Name"":""Fig"", 
      ""Season"":""Winter""}
  ]}
}


I am trying to create Go lang model to unmarshal the contents. Following is the code I have tried:

type Response struct {
    Count   int
    Fruits []Fruit
}

type Fruit struct {
    Name string
    Season string
}


But when I marshal the Response object in my test code I don't see similar json. (https://play.golang.org/p/EGKqfbwFvW)
Marshalled data always appears as :

{
  ""Count"":100,
  ""Fruits"":[
    {""Name"":""Mango"",""Season"":""Summer""},
    {""Name"":""Fig"",""Season"":""Winter""}
  ]
}


Notice the Fruits appearing as array [] and not {[]} in original json. How can I model structs in golang for this response?
",2,42005122.0
28,24069459,json.RawMessage from database/sql json column getting overwritten,"Getting strange behaviour with a struct with embedded json.

package main

import (
    ""database/sql""
    ""encoding/json""
    ""fmt""

    _ ""github.com/lib/pq""
)

type Article struct {
    Id  int
    Doc *json.RawMessage
}

func main() {
    db, err := sql.Open(""postgres"", ""postgres://localhost/json_test?sslmode=disable"")
    if err != nil {
        panic(err)
    }

    _, err = db.Query(`create table if not exists articles (id serial primary key, doc json)`)
    if err != nil {
        panic(err)
    }
    _, err = db.Query(`truncate articles`)
    if err != nil {
        panic(err)
    }
    docs := []string{
        `{""type"":""event1""}`,
        `{""type"":""event2""}`,
    }
    for _, doc := range docs {
        _, err = db.Query(`insert into articles (""doc"") values ($1)`, doc)
        if err != nil {
            panic(err)
        }
    }

    rows, err := db.Query(`select id, doc from articles`)
    if err != nil {
        panic(err)
    }

    articles := make([]Article, 0)

    for rows.Next() {
        var a Article
        err := rows.Scan(
            &a.Id,
            &a.Doc,
        )
        if err != nil {
            panic(err)
        }
        articles = append(articles, a)
        fmt.Println(""scan"", string(*a.Doc), len(*a.Doc))
    }

    fmt.Println()

    for _, a := range articles {
        fmt.Println(""loop"", string(*a.Doc), len(*a.Doc))
    }
}


Output:

scan {""type"":""event1""} 17
scan {""type"":""event2""} 17

loop {""type"":""event2""} 17
loop {""type"":""event2""} 17


So the articles end up pointing to the same json.

Am I doing something wrong?

UPDATE

Edited to a runnable example. I'm using Postgres and lib/pq.
",2,24393816.0
29,44784676,Custom Time Marshall Unmarshall,"I have a MysqlTime struct with it's own marshall and unmarshall.

type MysqlTime struct {
    time.Time
}

const MYSQL_TIME_FORMAT = ""2006-01-02 15:04:05""

func (t *MysqlTime) UnmarshalJSON(b []byte) (err error) {
    s := strings.Trim(string(b), `\`)
    if s == ""null"" {
        t.Time = time.Time{}
        return
    }
    t.Time, err = time.Parse(MYSQL_TIME_FORMAT, s)
    return
}

func (t *MysqlTime) MarshalJSON() ([]byte, error) {
    if t.Time.UnixNano() == nilTime {
        return []byte(""null""), nil
    }
    return []byte(fmt.Sprintf(`""%s""`, t.Time.Format(MYSQL_TIME_FORMAT))), nil
}

var nilTime = (time.Time{}).UnixNano()

func (t *MysqlTime) IsSet() bool {
    return t.UnixNano() != nilTime
}


Now I wish to use it...

type Foo struct {
    Time *MysqlTime
}

func main() {

    now := MysqlTime(time.Now())

    foo := Foo{}
    foo.Time = &now
}


Error:

cannot convert now (type time.Time) to type helpers.MysqlTime
cannot take the address of helpers.MysqlTime(now)

",1,44784809.0
30,34929803,What does a golang for { ..block.. } without conditions do?,"I'm a golang neophyte and I've come across a rather interesting control structure which doesn't follow the classical imperative for-loop construct.  I've been unable to locate on documentation on the structure either. The following is the code in question:

  for {
    // read each incoming message
    m, err := getMessage(ws)
    if err != nil {
      log.Fatal(err)
    }   

    // see if we're mentioned
    if m.Type == ""message"" && strings.HasPrefix(m.Text, """") {
      // if so try to parse if
      ans := lookup(session, m.Text)
      if len(ans)>0 {
        // looks good, get the quote and reply with the result
        go func(m Message) {
          for _, def := range ans {
            if len(def[1]) > 0 { 
              m.Text = ""*"" + def[0] + "" "" + def[1] + ""*: "" + def[2]
            } else {
              m.Text = ""*"" + def[0] + ""*: "" + def[2]
            }   
            postMessage(ws, m)
            }   
        }(m)
        // NOTE: the Message object is copied, this is intentional
      } else {
        // huh?
        m.Text = fmt.Sprintf(""sorry, that does not compute\n"")
        postMessage(ws, m)
      }   
    }   
  }


Does the loop construct just loop forever or is there an eventing system binding behind the scenes?
",2,34930016.0
31,17564335,"Golang, math/big: what is the max value of *big.Int","What is the max value of *big.Int and max precision of *big.Rat?
",1,17564467.0
32,11321668,How to compile a package of Golang on Windows platform?,"The document is all for Mac OS X and Linux, and I wish to know how to compile a package of Golang on Windows platform. On windows, I do not know how to write the make file and which tool to use to make it.

It seems that there is no a tool named make or go make to use with the installation file of Go   development tools.

Thanks.
",3,
33,36744360,Capture my Go application logs into fluentd,"Currently I have a go web application containing over 50 .go files. Each file writes logs on STDOUT for now. 
I want to use fluentd to capture these logs and then send them to elasticsearch/kibana.

I search on internet for solution to this. There is one package https://github.com/fluent/fluent-logger-golang . 
 To use this I would need to change my whole logging related code in each go file. 
And there would be many data structures that I would need to Post to fluentd.
Shortly speaking I dont want to use this approach.

Please let me know if there are any other ways to do this.

Thank you
",1,
34,15102643,Require help in understanding buffered channels,"I'm having a hard time understanding how buffered channels work. Based on the following example, i'm trying to utilize 2 threads at a time to print out the current time, with approximately 2 second delays between every 2 go calls:

package main
import ""fmt""
import ""time""

func main() {
    returnCurrentTime := func() string  {
        return time.Now().String()
    }

    c := make(chan string, 2)

    asyncReturnCurrentTime := func(c chan string) {
        time.Sleep(2001 * time.Millisecond)
        c <- returnCurrentTime()
    }

    for i := 1; i != 7; i++ {
        go asyncReturnCurrentTime(c)
        if(i % 3 == 0) {
            fmt.Println(<- c)
            fmt.Println(<- c)
            fmt.Println(<- c)
            fmt.Println()
        }
    }
}


This produces

2013-02-27 03:17:50
2013-02-27 03:17:50
2013-02-27 03:17:50

2013-02-27 03:17:52
2013-02-27 03:17:52
2013-02-27 03:17:52


What i'm expecting regarding the seconds is 2 second delays between ever 2 go calls and in this case the following result

2013-02-27 03:17:50
2013-02-27 03:17:50
2013-02-27 03:17:52 <- 3rd call with 2 buffer slots

2013-02-27 03:17:54
2013-02-27 03:17:54
2013-02-27 03:17:56 <- 3rd call with 2 buffer slots


Obviously i misunderstood the concept of buffered channels, would somebody please be kind enough to explain the fault in my logic and how to achieve the expected result?

Thank you
",1,15103151.0
35,37813173,golang scan in string or int,"I'm trying to write a function to input either a string or int something like the below, but can't find a way to do it...
Not sure what I'm doing though, quite new to go....

func getUserInput(input interface{}) (int, error) {

    var err error

    switch t := input.(type) {
    default:
        fmt.Printf(""unexpected type %T"", t)
    case int:
        _, err = fmt.Scanf(""%d"", input)
    case string:
        _, err = fmt.Scanf(""%s"", input)
    }

    if err != nil {
        return 0, err
    }

    return 0, nil
}


and then use it something like (this doesn't work though!):

var firstName string
getUserInput(firstName)

var age int
getUserInput(age)

",1,37813566.0
36,28353111,JSON2CSV install/setup issue (via Go),"I'm attempting to install https://github.com/jehiah/json2csv. The problem is apparently tied to my noob status w.r.t. Bash.

System: Ubuntu 14.04 LTS

Load instruction:

$ go get github.com/jehiah/json2csv


Go is installed:

$ which go ==> /usr/bin/go


~/.bashrc setup:

export GOROOT=/usr/bin/go
export GOPATH=$HOME/projects/go


The package seems to download correctly: 

$ cd projects/go
$ tree
$ > bin > json2csv
  > src > github.com
        ...
$ ls bin -l
$ > -rwxrwxr-x 1   55400 Feb  5 13:57 json2csv


But $json2csv isn't recognized, even from the same directory. I'm sure this is a noob problem, but I haven't cracked it yet. Suggestions?
",1,
37,10498547,Ensure a type implements an interface at compile time in Go,"How can I ensure that a type implements an interface at compile time? The typical way to do this is by failure to assign to support interfaces from that type, however I have several types that are only converted dynamically. At runtime this generates very gruff error messages, without the better diagnostics given for compile time errors. It's also very inconvenient to find at run time that types I expected to support interfaces, do in fact not.
",5,10499051.0
38,39821084,Websocket waiting for message with Timeout,"I want to create a Websocket connection via GO. This connection follows a clearly defined pattern: The client should ""authenticate"" (enter data) themself immediately after creating the connection. If the client does not do it, the connection will be closed after a short period.

My current code contains this initial timeout (initTimeout) and the maximum timeout for all connections. While those timers can easily be checked, i am not sure how i can combine the timers with waiting for a message which blocks the execution.

ws, err := upgrader.Upgrade(w, r, nil)
initTimeout := time.NewTicker(time.Duration(30) * time.Second)
maxTimeout := time.NewTicker(time.Duration(45) * time.Minute)

for {
    select {
        case <- initTimeout.C:
            ws.WriteMessage(websocket.TextMessage, []byte(""No input received""))
            ws.Close()
        case <- maxTimeout.C:
            ws.WriteMessage(websocket.TextMessage, []byte(""Maximum timeout""))
            ws.Close()
        default:
            mt, message, err := c.ReadMessage()
            // will this block the timers?
    }
}

",1,39822180.0
39,19683612,Partition a string in Go,"How do I get the slices before and after a separator from a string? In Python, I can simply write

user, _, domain = ""foo@example.com"".partition(""@"")
assert user == ""foo""
assert domain == ""example.com""


Notably, this also works if multiple occurrences of the separator are present in the input, or none at all. How can I split a string that easily in Go?
",2,19683613.0
40,44272125,Why can I not read the strings I write to stdin,"I have a dummy program where I'm messing around with stdin. I want to be able to write to stdin programmatically as well as read from it. For some reason I cannot read what I write to stdin. It'll simply block until it receives input from the user via terminal/console

func main() {
    writer := bufio.NewWriter(os.Stdin)
    reader := bufio.NewReader(os.Stdin)

    fmt.Println(""Writing to stdin"")
    _, err := writer.WriteString(""Hello, world\n"")
    writer.Flush()
    checkErr(err)
    fmt.Println(""Reading from it"")
    line, err := reader.ReadString('\n')
    checkErr(err)
    fmt.Println(""Line from stdin: "", line)

}

func checkErr(err error) {
    if err!= nil {
        fmt.Println(""Error: "", err.Error())
    }
}


The output is as follows: 

Writing to stdin
Reading from it //blocks here until I input some string from console and hit 

",1,
41,39789273,"How to send a http response with ""Transfer-Encoding: trunked"" in GO","I want to send my response data to to client with ""Transfer-Encoding:trunked"".
But I do not find the way to do it with Golang.
Is there any example for this?
",1,39789420.0
42,33751451,How can I use mongodb projections with Go and mgo?,"I am currently trying to extract a single object within a document array inside of mongodb. 
This is a sample dataset:

""_id"" : ObjectId(""564aae61e0c4e5dddb07343b""),
""name"" : ""The Races"",
""description"" : ""Horse races"",
""capacity"" : 0,
""open"" : true,
""type"" : 0,
""races"" : [
    {
        ""_id"" : ObjectId(""564ab9097628ba2c6ec54423""),
        ""race"" : {
            ""distance"" : 3000,
            ""user"" : {
                ""_id"" : ObjectId(""5648bdbe7628ba189e011b18""),
                ""status"" : 1,
                ""lastName"" : ""Miranda"",
                ""firstName"" : ""Aramys""
            }
        }
    },
    {
        ""_id"" : ObjectId(""564ab9847628ba2c81f2f34a""),
        ""bet"" : {
            ""distance"" : 3000,
            ""user"" : {
                ""_id"" : ObjectId(""5648bdbe7628ba189e011b18""),
                ""status"" : 1,
                ""lastName"" : ""Miranda"",
                ""firstName"" : ""Aramys""
            }
        }
    },{...}
]


I can successfully query using the following in mongo:

db.tracks.find({""_id"": ObjectId(""564aae61e0c4e5dddb07343b"")}, {""races"": { $elemMatch: {""_id"": ObjectId(""564ab9847628ba2c81f2f34a"")}}}).pretty()


I am unable to do the same using mgo and have tried the following:

Using nesting (Throws: missing type in composite literal, missing key in map literal)

// Using nesting (Throws: missing type in composite literal, missing key in map literal)
c.Find(bson.M{{""_id"": bson.ObjectIdHex(p.ByName(""id""))}, bson.M{""races"": bson.M{""$elemMatch"": bson.M{""_id"": bson.ObjectIdHex(p.ByName(""raceId""))}}}}).One(&result)

// Using select (Returns empty)
c.Find(bson.M{""_id"": bson.ObjectIdHex(p.ByName(""id""))}).Select(bson.M{""races._id"": bson.ObjectIdHex(p.ByName(""raceId""))}).One(&result)

//As an array (Returns empty)
c.Find([]bson.M{{""_id"": bson.ObjectIdHex(p.ByName(""id""))}, bson.M{""races"": bson.M{""$elemMatch"": bson.M{""_id"": bson.ObjectIdHex(p.ByName(""raceId""))}}}}).One(&result)


I am using httprouter and p.ByName(""..."") invocations are parameters passed to the handler.

Thanks in advance.
",1,33755152.0
43,27242652,colorizing golang test run output,"I like it when terminal/console test runs actually show their output in either red or green text.  It seems like a lot of the testing libraries available for Go have this.  However, I'd like to just use the default testing package that comes with Go.  Is there a way to colorize it's output with red and green?
",5,27245610.0
44,21621547,map of integer -> 2d slice in Go,"I want to have a map of integers to slices with different dimensions.

var SIZE_TO_PERM = make(map[int][][]uint32, 3)

var THREE_C_THREE = [...][3]int {
    {0, 1, 2},
}

var FOUR_C_THREE = [...][3]int {
    {0, 1, 2}, {0, 1, 3}, {0, 3, 2}, {3, 1, 2},
}

var FIVE_C_THREE = [...][3]int {
    // ... etc
}

func init() {
    SIZE_TO_PERM = map[int][][]uint32 {
        3 : THREE_C_THREE,
        4 : FOUR_C_THREE,
        5 : FIVE_C_THREE,
    }
}


But this doesn't work, as Go throws errors:

# command-line-arguments
./test.go:96: cannot use THREE_C_THREE (type [1][5]int) as type [][]uint32 in map value
./test.go:97: cannot use FOUR_C_THREE (type [4][5]int) as type [][]uint32 in map value
./test.go:98: cannot use FIVE_C_THREE (type [20][5]int) as type [][]uint32 in map value


How can I get around this? Perhaps I could somehow have Go map an int to a pointer/reference to a map? Then all the types would be the same, I'd just have to follow the address to get the map there. The problem is I wouldn't know apriori which type I'd find there...

All new to Go, so any tips appreciated. 
",1,21622188.0
45,42739268,how to put data in struct with Golang,"here is my code

package main

import ""fmt""

type Species struct {
        Human  []Info
        Animal []Info
}

type Info struct {
        Name   string
        Number string
}

func main() {

        var data Species
        data = ????
        fmt.Println(data)

}


i want to see json like this

{
""human"":[
{""name"":""dave"",""number"":""00001""},
{""name"":""jack"",""number"":""00002""},
{""name"":""nate"",""number"":""00003""}
],
""animal"":[
{""name"":""ko"",""number"":""00004""},
{""name"":""na"",""number"":""00005""}
]
}


i don't know how to put in data that struct
what do i write on '???' in code

help me 
thank you
",1,42739715.0
46,37691028,Go: command line app install,"I'm not sure how this would work but I'm basically trying to write a command line app that I can run commands and subcommands from.  I'm using this popular third party library for parsing command line parameters: 

https://github.com/urfave/cli

My problem is I have a project folder where my .go files will live:

MyProject


so even if in the code in my main.go file, using their example, I have:

package main

import (
  ""fmt""
  ""os""

  ""github.com/urfave/cli""
)

func main() {
  app := cli.NewApp()
  app.Name = ""greet""
  app.Usage = ""fight the loneliness!""
  app.Action = func(c *cli.Context) error {
    fmt.Println(""Hello friend!"")
    return nil
  }

  app.Run(os.Args)
}


when I run go install, 

in my $GOPATH/bin directory, I actually get MyProject built.  And then when I run MyProject from the terminal, I get 

USAGE:
myproject [global options] command [command options] [arguments...]


But in reality, I don't need the myproject command first.  Is there a way this is normally done with command line apps or third party packages to create command line apps so that I can run greet from the command line instead of myproject as the first command?  Thanks.
",1,37691095.0
47,18938138,"What is the motivation behind this ""pattern""?","I'm a bit confused when I see code such as:

bigBox := &BigBox{}
bigBox.BubbleGumsCount = 4          // correct...
bigBox.SmallBox.AnyMagicItem = true // also correct


Why, or when, would I want to do bigBox := &BigBox{} instead of bigBox := BigBox{} ? Is it more efficient in some way? 

Code sample was taken from here.

Sample no.2:

package main

import ""fmt""

type Ints struct {
  x int
  y int
}

func build_struct() Ints {
  return Ints{0,0}
}

func build_pstruct() *Ints {
  return &Ints{0,0}
}

func main() {
  fmt.Println(build_struct())
  fmt.Println(build_pstruct())
}


Sample no. 3: ( why would I go with &BigBox in this example, and not with BigBox as a struct directly ? )

func main() {
  bigBox := &BigBox{}
  bigBox.BubbleGumsCount = 4 
  fmt.Println(bigBox.BubbleGumsCount)
}


Is there ever a reason to call build_pstruct instead of the the build_struct variant? Isn't that why we have the GC?
",5,19002191.0
48,37362131,Interface fulfilled by struct embedding,"I'm confused by my experiments with the following program, related to fulfilling interface with struct embedding, with named types and pointer receivers, respectively:

package main

import ""fmt""

type MyInt interface {
    mytest()
}

type Base struct {
}

func (b *Base) mytest() {
    fmt.Println(""From base"")
}

type Derived struct {
    Base
}

type Derived2 struct {
    *Base
}

func main() {
    // Only this one has problem
    // However, if we change mytest's receiver from *Base to Base, all the four assignments are OK
    var _ MyInt = Derived{}

    // OK
    var _ MyInt = &Derived{}
    var _ MyInt = Derived2{}
    var _ MyInt = &Derived2{}
}


See the comments in the code for my confusions. Are there any principal ways to explain them?
",2,37363643.0
49,35997995,Golang Mac OSX build for Docker machine,"I need to run Golang application on Docker machine.

I'm working on Mac OSX and Docker is working on top of Linux virtual machine, so binaries builded on Mac are not runnable on Docker. 

I see two ways here:


cross-compile binaries on Mac for linux OS
copy project sources to docker, run 'go get' and 'go build' on it


First one is hard because of CGO (it is used in some imported libraries). 

Second is very slow because of 'go get' operation.

Can you please tell me, which way is the most common in that situation? Or maybe I'm doing something wrong?
",3,44757772.0
50,35320357,interface{} variable to []interface{},"I have an interface{} variable and I know it's a pointer to slice:

func isPointerToSlice(val interface{}) bool {
    value := reflect.ValueOf(val)
    return value.Kind() == reflect.Ptr && value.Elem().Kind() == reflect.Slice
}


But I'm finding difficult to type cast it into an []interface{} variable:

if isPointerToSlice(val) {
  slice, worked := reflect.ValueOf(val).Elem().Interface().([]interface{})
  // 'worked' is false :(
}


This doesn't work. Any idea how can I solve this?
",3,
51,37602726,What's wrong with my Postgres query inside of golang (LIKE matching),"I've seen a very similar problem here, but I'm not certain what the pipes do in the command, and it didn't work for me anyway.  

So, here's the code I've tried.

rows, err := db.Query(fmt.Sprintf(""SELECT * FROM mytable WHERE mycolumn LIKE 'camel.%'""))


And even though, I have no idea what it's for, I also tried with the pipes.

rows, err := db.Query(fmt.Sprintf(""SELECT * FROM mytable WHERE mycolumn LIKE 'camel. || %'""))


So, what it should be doing, is matching anything in that column that starts with camel., so camel.*

The error I'm getting for both examples is 

pq: syntax error at or near ""(""


So i'm guessing for some reason it's passing in more of that line as the command than I would like....maybe a quote problem?  I've tried a few other things, but nothing has worked.  Any help is appreciated.
",1,37602873.0
52,29316958,Go - Inconsistent Evaluation of Deferred Functions,"I am experimenting with Go and am seeing some unexpected behaviour with deferred functions.  Consider the following program that increments a global variable by a given amount.

package main

import ""fmt""

var z = 1

func main() {

    defer increaseZ(10)
    defer fmt.Println(""z ="", increaseZ(20), ""Deferred Value 1"")
    defer fmt.Println(""z ="", increaseZ(30), ""Deferred Value 2"")

    fmt.Println(""z ="", z, ""Main Value"")
}

func increaseZ(y int) int {
    z += y
    println(""z ="", z, ""Inside Increase Function"")
    return z
}


When run in the go playground, this outputs:

z = 21 Inside Increase Function
z = 51 Inside Increase Function
z = 61 Inside Increase Function
z = 51 Main Value
z = 51 Deferred Value 2
z = 21 Deferred Value 1


If I switch the order of the deferred functions, it has another effect:

defer fmt.Println(""z ="", increaseZ(20), ""Deferred Value 1"")
defer fmt.Println(""z ="", increaseZ(30), ""Deferred Value 2"")
defer increaseZ(10)


Outputs:

z = 21 Inside Increase Function
z = 51 Inside Increase Function
z = 51 Main Value
z = 61 Inside Increase Function
z = 51 Deferred Value 2
z = 21 Deferred Value 1


The Go documentation states:


  The deferred call's arguments are evaluated immediately, but the
  function call is not executed until the surrounding function returns.


So arguments being evaluated, may explain why the Main Value returned is 51 and not 61, since the fmt.Println statements are taking increaseZ as an argument, but defer increaseZ(10) would not be called until after the main function returns.  

However, this does not explain why in the first example the increaseZ(10) is outputting before main has completed, and after main has completed in the second example.

I would be grateful if anyone could help me understand what is happening here, since this looks like fertile ground for difficult to diagnose bugs further down the line.
",3,29318406.0
53,15773969,Why is struct creation in an if statement illegal in Go?,"Go complains about instantiating a struct in an if-statement.  Why?  Is there correct syntax for this that doesn't involve temporary variables or new functions?

type Auth struct {
    Username    string
    Password    string
}

func main() {
    auth := Auth { Username : ""abc"", Password : ""123"" }

    if auth == Auth {Username: ""abc"", Password: ""123""} {
        fmt.Println(auth)
    }
}


Error (on the if-statement line): syntax error: unexpected :, expecting := or = or comma

This yields the same error:

if auth2 := Auth {Username: ""abc"", Password: ""123""}; auth == auth2 {
            fmt.Println(auth)
}


This works as expected:

auth2 := Auth {Username: ""abc"", Password: ""123""};
if  auth == auth2 {
        fmt.Println(auth)
}

",1,15774060.0
54,31926976,How to resolve changing pointer value in function call? Is this a cgo bug?,"I'm calling a C function via cgo thusly:

var _outptr_7 C.double 
var _outptr_8 C.double  
var kk uintptr = uintptr(unsafe.Pointer(&_outptr_7))
gogsl.InitializeGslFunction(f)
_result := int32(C.gsl_integration_qags((*C.gsl_function)(unsafe.Pointer(f.CPtr())), C.double(a), C.double(b), C.double(epsabs), C.double(epsrel), C.size_t(limit), (*C.gsl_integration_workspace)(unsafe.Pointer(workspace.Ptr())), (*C.double)(&_outptr_7), (*C.double)(&_outptr_8)))
fmt.Printf(""%10.10X\n"",kk)
return _result, *(*float64)(unsafe.Pointer(&_outptr_7)), *(*float64)(unsafe.Pointer(&_outptr_8))


Now, the kk is here for debugging purposes.  I've modified the C function gsl_integration_qags to output the 8th argument it receives (that's &_outptr_7, the _ count from 0!)  

(The InitializeGslFunction can be ignored for the purpose here...)

The two values - kk and the C function output - match exactly.

However, I get a different number out than the C function returns - it sets the 8th argument via indirection.   I'm sure this is correct, I've watched it work in gdb.

It looks like this: (omitting lines that just read (gdb) where I hit enter to repeat command)

Breakpoint 3, qags (f=0xc20800a260, a=0, b=1, epsabs=0, epsrel=9.9999999999999995e-08, limit=1000, workspace=0x782ec0, result=0xc208031e28, abserr=0xc208031e20, q=0x7ffff79ad12c )
 at qags.c:479
479   *result = res_ext;
(gdb) n
480   *abserr = err_ext;
(gdb) p *result
$1 = -4.0000000000000853
(gdb) p result
$2 = (double *) 0xc208031e28
(gdb) n
482   if (err_ext == GSL_DBL_MAX)
485   if (error_type || error_type2)
513     double max_area = GSL_MAX_DBL (fabs (res_ext), fabs (area)); 
515     if (!positive_integrand && max_area < 0.01 * resabs0)
520     double ratio = res_ext / area;
522     if (ratio  100.0 || errsum > fabs (area))
526   goto return_error;
535   if (error_type > 2) 
540   if (error_type == 0) 
542       return GSL_SUCCESS;
573 }
gsl_integration_qags (f=0xc20800a260, a=0, b=1, epsabs=0, epsrel=9.9999999999999995e-08, limit=1000, workspace=0x782ec0, result=0xc208031e28, abserr=0xc208031e20) at qags.c:53
53    return status ;
54  }


// Correct value (-4.0) is being returned from C function.

_cgo_3ce45c051e63_Cfunc_gsl_integration_qags (v=0xc208031db8) at /home/dtrombley/go/src/github.com/dtromb/gogsl/numint/numint.go:241
asmcgocall () at /usr/lib/golang/src/runtime/asm_amd64.s:669
669     MOVQ    48(SP), DI
670     MOVQ    (g_stack+stack_hi)(DI), SI
671     SUBQ    40(SP), SI
672     MOVQ    DI, g(CX)
673     MOVQ    SI, SP
asmcgocall () at /usr/lib/golang/src/runtime/asm_amd64.s:674
674     RET
runtime.asmcgocall_errno () at /usr/lib/golang/src/runtime/asm_amd64.s:627
627     MOVL    AX, ret+16(FP)
runtime.asmcgocall_errno () at /usr/lib/golang/src/runtime/asm_amd64.s:628
628     RET
runtime.cgocall_errno (fn=0x405210 , arg=0xc20805fdb8, ~r2=0) at /usr/lib/golang/src/runtime/cgocall.go:132
132     exitsyscall()
134     return errno


//  cgo C glue is about to return from call into Go caller

github.com/dtromb/gogsl/numint._Cfunc_gsl_integration_qags (p0=0xc20800a260, p1=0, p2=1, p3=0, p4=9.9999999999999995e-08, p5=1000, p6=0x782ec0, p7=0xc20805fe28, p8=0xc20805fe20, r1=0)
at /home/dtrombley/go/src/github.com/dtromb/gogsl/numint/:92
92  /home/dtrombley/go/src/github.com/dtromb/gogsl/numint/: No such file or directory.


// Bang, it's broken.  p7 value in return val struct is /different than the value that went in/... the location of _outptr_7 has changed.

(gdb) p p7
$3 = (github.com/dtromb/gogsl/numint._Ctype_double *) 0xc20805fe28
(gdb) p *p7
$4 = 0
(gdb) n
github.com/dtromb/gogsl/numint.Qags (f=0xc20805ff58, a=0, b=1, epsabs=0, epsrel=9.9999999999999995e-08, limit=1000, workspace=0xc20800a1d0, ~r7=7753968, ~r8=0, ~r9=0)
at /home/dtrombley/go/src/github.com/dtromb/gogsl/numint/numint.go:75
75     fmt.Printf(""%10.10X\n"",kk)
C208031E28
76     return _result, *(*float64)(unsafe.Pointer(&_outptr_7)), *(*float64)(unsafe.Pointer(&_outptr_8))
(gdb) p _outptr_7
$5 = 0
(gdb) p &_outptr_7
$6 = (float64 *) 0xc20805fe28


// But the correct value is still hanging out there.

 (gdb) p $1
 $7 = -4.0000000000000853


So, what gives?   What is going on here?  How to fix/workaround?

Here is the cgo binding showing the struct mapping, for completeness:

void
_cgo_a9ebceabba03_Cfunc_gsl_integration_qags(void *v)
{
    struct {
            gsl_function* p0;
            double p1;
            double p2;
            double p3;
            double p4;
            size_t p5;
            gsl_integration_workspace* p6;
            double* p7;
            double* p8;
            int r;
            char __pad76[4];
    } __attribute__((__packed__, __gcc_struct__)) *a = v;
    char *stktop = _cgo_topofstack();
    __typeof__(a->r) r = gsl_integration_qags((void*)a->p0, a->p1, a->p2, a->p3, a->p4, a->p5, (void*)a->p6, (void*)a->p7, (void*)a->p8);
    a = (void*)((char*)a + (_cgo_topofstack() - stktop));
    a->r = r;
}


The bug occurs or does not occur randomly depending on some details of the compilation which should not affect semantics - adding a line which prints out &_outptr_7 before calling the C function causes it to return correctly, for example.   Making other changes to the code reverts it back, etc etc. 

Something I'm doing wrong?  Or bug in cgo?
",1,33373720.0
55,34462118,Embedding model structs with same attribute names in golang,"Using go 1.5, and gorm.

Say I want to make an events table that has a created_by_id and an updated_by_id columns.

I write my models like

type By struct {
    ByID sql.NullInt64
    By *User
}

type CreatedBy struct {
    By
}

type UpdatedBy struct {
    By
}

type Event struct {
    CreatedBy
    UpdatedBy
}


When I try to save an event object, the value for the column by_id will try to be saved rather than the values for created_by_id and updated_by_id.  What do I need to do to make sure the column names of ByID attribute are different for CreatedBy and UpdatedBy? 
",1,
56,45872441,How to batch items in golang pipeline stages using channels?,"I'm reading the pipelines tutorial online and trying to construct a stage that operates like this --


Batches up incoming events in batches of 10 each before sending them to the out chan
If we haven't seen 10 events in 5 seconds, combine as many as we received and send them, closing the out chan and returning.


However, I have no idea what would the first select case would look like.Tried multiple things but couldn't get past this.
Any pointers much appreciated!

func BatchEvents(inChan <- chan *Event) <- chan *Event {
    batchSize := 10
    comboEvent := Event{}
    go func() {
        defer close(out)
        i = 0
        for event := range inChan {
            select {
            case -WHAT GOES HERE?-:
                if i < batchSize {
                    comboEvent.data = append(comboEvent.data, event.data)
                    i++;
                } else {
                    out <- &comboEvent
                    // reset for next batch
                    comboEvent = Event{}
                    i=0;
                }
            case <-time.After(5 * time.Second):
                // process whatever we have seen so far if the batch size isn't filled in 5 secs
                out <- &comboEvent
                // stop after
                return
            }
        }
    }()
    return out
}

",1,
57,19757462,How see stack trace of test code of Go program?,"I use Go's native test facility (go test) to write a test. But when the test fails due to a bug in test code, I really can't debug it due to lack of stack trace or any other contextual informations.

And even, the test code needs one contextual object t, so it is not simple work running the test code in normal mode.

What is the best practice to debug test code?
",2,19757754.0
58,39260088,Why doesn't LiteIDE build the go file that is selected/highlighted?,"In LiteIDE, when I select a file, then choose ""install"" from the ""build"" menu, a different file is built than the one selected. Why?
",1,
59,35931691,"What does golang's func (c *IPConn) Write(b []byte) (int, error)) return?","I guess that the int is the number of bytes written.

I think the function blocks until the buffer is fully written to the socket or the socket is closed so I think there's nothing to do be done with this number (unlike in a c socket where I would need to retry the write with the unwritten bytes).

I guess the only error that can be returned is in the event that the write fails because the socket is closed?

None of this seems to be in the documentation at https://golang.org/pkg/net/#IPConn.Write or am I looking in the wrong place?
",2,
60,29997234,GO: Date and Time Parsing in GO,"I have format string ""day/month/year, hour:minute:second""

How do I parse into a time object?

I tried:

const longForm = ""5/01/2015, 12:00:00""

t1, _ := time.Parse(longForm, ""5/01/2015, 12:00:00"") 

0001-01-01 00:00:00 +0000 UTC


I get some UTC time, but this is not helpful if I want to compare times because I get the same UTC time for them all. Any help?
",1,29997262.0
61,27165692,How to get all element from mongoDB array using go?,"I am very new to mongodb and golang. I have a collection named ""myplace"" inside that, one field named region which is an array of values how we can retrieve the whole array.

my collection look likes

{
""_id"" : ObjectId(""5474227309d76eb732acd134""),
""City"" : ""some city"",
""region"" : [ 
    {
        ""regionid"" : ""31"",
        ""historical_place"" : ""temple""

    }, 
    {
        ""regionid"" : ""32"",
        ""historical_place"" : ""temple""
    }, 
    {
         ""regionid"" : ""33"",
        ""historical_place"" : ""temple""

    }
]
}


Expecting output

 [
  {
    ""City"": ""Some CIty"",
    ""region"":[ 
     {
        ""regionid"" : ""31"",
        ""historical_place"" : ""temple""

     }, 
    {
        ""regionid"" : ""32"",
        ""historical_place"" : ""temple""
    }, 
    {
         ""regionid"" : ""33"",
        ""historical_place"" : ""temple""

    }
   ]
  }
]


Any solution?
",1,
62,40104463,Does exist any BoltDB Ruby gem binding?,"Bolt is an amazing embedded key/value database for Go:


https://www.progville.com/go/bolt-embedded-db-golang/
https://github.com/boltdb/bolt


There is any binding (gem) for Ruby language ?
",1,
63,8596084,Modeling N to N associations in GO on the App Engine,"I'm attempting to write a webapp in Go using the Google App Engine, and I have a question about modeling relationships using the datastore.

I know in Python I would be able to model a relationship using a db.referenceProperty().  What I can't seem to figure out is how to make a similar association using the Go APIs.

Has anyone had any luck with this?
",2,
64,23067500,go large memory garbage collection performance,"I am considering implementing a memory caching daemon in Go.  It has potential of getting some serious memory utilization (say, Terabyte).  Fragmenting into separate heaps is not a good option, I want it all in one memory space.  Does anyone have experience running Go with such huge memory sizes?  Is GC going to perform acceptably?
",1,
65,25945538,Go Golang to serve a specific html file,"http.Handle(""/"", http.FileServer(http.Dir(""static"")))


Serves the html file in static directory.

Is there any way in Go that we can specify the html file to serve?

Something like render_template in Flask

I want to do something like:

http.Handle(""/hello"", http.FileServer(http.Dir(""static/hello.html"")))

",3,25945832.0
66,30213739,Detecting if struct exists for key in map,"According to the Golang documentation on maps,


  If the requested key doesn't exist, we get the value type's zero value. In this case the value type is int, so the zero value is 0:

j := m[""root""] // j == 0



So I'm trying to determine if a struct exists with a given string, how would I determine this? Would I just check for an empty struct with zerod values? What would the comparison here look like?

type Hello struct{}
structMap := map[string]Hello{}
j := structMap[""example""]
if(j==?) {
 ...
}

",1,30213864.0
67,28262376,Parse cookie string in golang,"If I get the cookie by typing document.cookie in the browser, is there any way to parse the raw string and save it as a http.Cookie?
",2,28262843.0
68,12334697,Go — variadic functions parameters pass-through,"I'm trying to write simple fmt.Fprintf wrapper which takes variable number of arguments, here is the code:

func Die(format string, args ...interface{}) {
    str := fmt.Sprintf(format, args)
    fmt.Fprintf(os.Stderr, ""%v\n"", str)
    os.Exit(1)
}


But when I'm calling it:

Die(""foo"")

I get:

foo%!(EXTRA []interface {}=[])

Can't figure why I'm getting this text after the ""foo"" & what is the correct way to create wrappers around fmt.Fprintf?
",1,12334902.0
69,25083235,Go: Assign multiple return value function to new and old variable,"In go there are functions which return two values or more values, commonly one is an error. Suppose that I want to store the first return value into an already initialized variable, but I would like to initialize the variable to contain the error inline. Is there a way to do this?

For example, say I had this code

var a int
//This code doesn't compile because err doesn't exist
a, err = SomeFuncWithTwoReturnValues()
//This code doesn't compile either
a, err := SomeFuncWithTwoReturnValues()


I know you could do this, but I was hoping there was a way to do it all inline

var a int
var err error
a, err = SomeFuncWithTwoReturnValues()


or

a, err := SomeFuncWithTwoReturnValues()


EDIT: The code above actually compiles, so I looked back at my code to drill down more and have created a quick sample that actually replicates the problem (not just in my mind...).

package main

func myfunc() (int, int) {
    return 1, 1
}

func main() {
    a := make([]int, 1)
    a[0], b := myfunc()
    a[0] = b
}


Compiler says main.go|9| non-name a[0] on left side of :=. If I make it = instead of := though then b is never created. I get the feeling that there is not shorthand way to do it though.
",1,
70,42946855,Setting up servers with fault tolerance using Go and MySQL (failover),"I am working in a project where we are using Go as a web server and MySQL.
We have been told to implement fault tolerance to handle a hardware crash. We were given 2 servers which have MySQL and the Go-server on them. 

We have succesfully set up replication in MySQL, but we are struggling with the failover part. Our thought was to get an extra server with HAProxy to have a primary server and then being able to failover to the backup server.
We also considered using MySQL failover, but did not see how we could redirect the traffic using it.

Is this a reasonable plan? Or what would you recommend that we do instead? 
",1,
71,39655389,How to render struct to html template?,"i going to render html with data,when render,i don't know how to render struct of other file return for render on controller ,

code :

packages controller

type Index struct {
Title string
Body  string
}

func IndexController(w http.ResponseWriter , r *http.Request){

if r.Method == ""POST""{

    data := &Index{
        Title: ""Hello"",
        Body:  ""Welcome to the WebGo."",
    }

    ff := renders.Sample{Temppath:""templates/index.tmpl"",Data:data}
    ff.Render(w)


my render package:

package renders

import (
   ""html/template""
   ""log""
   ""net/http""
 )

type Sample struct {
  Temppath string
  Data struct{}   ## i don't know how to use pass value of package controller to renders package ?
}

func (obj Sample) Render(w http.ResponseWriter) error {

 var indexTemplate = template.Must(template.ParseFiles(obj.Temppath))
 if err := indexTemplate.Execute(w, obj.Data); err != nil {
    log.Println(err)
    return err
 }
 return nil
}


html code :




    
    
    {{.Title}}
    
        body {
            font-family: sans-serif;
        }
        h1 {
            background: #ddd;
        }
        #sidebar {
            float: right;
        }
    


    {{.Title}}
    
        {{block ""sidebar"" .}}

        

        
        {{end}}
    

    {{block ""content"" .}}
    
        {{.Body}}
    
    {{end}}





how to pass type Index struct to renders package for use indexTemplate.Execute(w, obj.Data) 
",1,39659996.0
72,18949564,"Get a value of an attribute in XML, but of what element is determined by a value of another attribute in Go","In the following example:

package main

import (
    ""fmt""
    ""encoding/xml""
)

var data = `

    
    
    
    

`

type Result struct {
    XMLName xml.Name `xml:""data""`
    Action string //this is the part I want to solve
}


func main() {
    res := Result{}
    xml.Unmarshal(data, &res)
    fmt.Printf(""%#v"", res)
}


I want to get is the following struct:

{XMLName: xml.Name{Space:"""", Local:""data""}, Action:""eat""}


So can I get the value of action attribute on the fourth text element only? In other words, I want to get the value of an attribute of any arbitrary elements, but that element is decided by another attribute within that element (id=3 in this case).

One thing to solve the issue is to embed another struct which holds each text element as slices, and iterate over that slice and if the id field is 3, then I get that inner struct's action field... but it's too daunting and ineffective to process.

Thanks.
",1,
73,37498781,"Restore type information after passing through function as ""interface {}""?","I'm running into a slight architectural problem with Golang right now that's causing me to copy/paste a bit more code than I'd prefer. I feel like there must be a solution, so please let me know if this is perhaps possible:

When I pass things through an interface {}-typed function parameter, I start getting errors such as ""expected struct or slice"", etc. ... even though what I passed was previously a struct or a slice. I realize that I could manually convert these to another type after receiving them in that function, but then that become tedious in instances such as this:


  local interface type *interface {} can only be decoded from remote
  interface type; received concrete type


... In this case, the receiving function seems like it'd need to be hard-coded to convert all interface {} items back to their respective original types in order to work properly, because the receiving function needs to know the exact type in order to process the item correctly.

Is there a way to dynamically re-type Golang interface {} typed variables back to their original type? Something like this, How to I convert reflect.New's return value back to the original type ... maybe?



EDIT: To clarify, basically,  I'm passing &out to a function and it needs to be its original type by the time it reaches another inner function call.

Example code:

// NOTE: This is sort of pseudo-Golang code, not meant to be compiled or taken too seriously.

func PrepareTwoDifferentThings(keyA string, keyB string) {
    var somethingA TypeA;
    var somethingB TypeB;

    loadFromCache(keyA, &somethingA, nil);
    loadFromCache(keyB, &somethingB, nil);

    fmt.Printf(""Somethings: %v, %v"", somethingA, somethingB);

}

func loadFromCache(key string, isNew, out interface {}, saveNewData interface {}) {
    if err := cache.load(key, &out); err!=nil { // NOTE: Current issue is that this expects ""&out"" to be `TypeA`/`TypeB` not ""interface {}"", but I don't want to copy and paste this whole function's worth of code or whatever.
        panic(""oh no!"");

    }

    if (saveNewData!=nil) {
        cache.save(key, saveNewData); // This doesn't seem to care if ""saveNewData"" is ""interface {}"" when saving, but later cache fetches above using the ""load()"" method to an ""interface {}""-typed `&out` parameter throw an exception that the ""interface {}"" type on `&out` does not match the original when it was saved here (`TypeA`/`TypeB`).

    }

}

",2,37500585.0
74,16455200,How to use Close() method in StreamWriter,"In Go crypto\cipher package, type StreamWriter has a Close() method. From the implementation, it looks like just calling the underlying io.Writer's Close() method. My question is: is there any scenario that I should call this method instead of calling the Close() method of the underlying Writer directly?
",1,16455320.0
75,26706258,Extra Info being injected into an email over SMTP,"I've been having a really strange problem. I have a golang server, and I'm using net/smtp to send out emails. It was going well until we realized some extra information was being injected into emails, and that yahoo started ignoring our emails. Anyways, the information that gets sent out for the body of our info is:

From: test@withheld.com
To: me@gmail.com
Subject: Testing
MIME-version: 1.0;
Content-Type: text/html; charset=""UTF-8"";

      Testing 



That then gets sent to Amazon SES, the account we used to send emails is hosted on godaddy.
When the email arrives, and I show the original message body using gmail, I get this:

From: test@withheld.com
To: me@gmail.com
Subject: Testing
MIME-version: 1.0;
Content-Type: text/html; charset=""UTF-8"";


     Testing 

Date: Wed, 29 Oct 2014 11:00:56 +0000
Message-ID: 
X-SES-Outgoing: [Some Numbers]
Feedback-ID: us-east-1.[numbers]=:AmazonSES


So those 4 additional fields get tacked on to our message bodies, which I presume would lead to us getting mark as spam or worse (yahoo is brutal.) Does anyone know where these 4 lines could have been added on? Definitely seems like SES, but I trust Godaddy a whole lot less.

(There were points where we had different spacing in our bodies, and the information would then inject into random locations in the message bodies)
",2,26709592.0
76,38238764,No such file or directory error in golang,"I want to specify an html template in one of my golang controller
My directory structure is like this

 Project
 -com
  -src
   - controller
     -contoller.go
 -view
  - html
   -first.html


I want to load first.html for request /new .I have used NewHandler for url /new and the NewHandler func is executing when /new request comes and is in controller.go. Here is my code

func NewHandler(w http.ResponseWriter, r *http.Request) {
    t, err := template.ParseFiles(""view/html/first.html"")
    if err == nil {
        log.Println(""Template parsed successfully...."")
    }
 err := templates.ExecuteTemplate(w, ""view/html/first.html"", nil)
if err != nil {
    log.Println(""Not Found template"")
}
//  t.Execute(w, """")
}


But I am getting an error

     panic: open first.html: no such file or directory


Please help me to remove this error. Thanks in advance
",2,38240913.0
77,18688578,Go String after variable declaration,"Take a look at this snip found at here


import (
    ""encoding/xml""
    ""fmt""
    ""os""
)

func main() {
    type Address struct {
        City, State string
    }
    type Person struct {
        XMLName   xml.Name `xml:""person""`
        Id        int      `xml:""id,attr""`
        FirstName string   `xml:""name>first""`
        LastName  string   `xml:""name>last""`
        Age       int      `xml:""age""`
        Height    float32  `xml:""height,omitempty""`
        Married   bool
        Address
        Comment string `xml:"",comment""`
    }

    v := &Person{Id: 13, FirstName: ""John"", LastName: ""Doe"", Age: 42}
    v.Comment = "" Need more details. ""
    v.Address = Address{""Hanga Roa"", ""Easter Island""}

    enc := xml.NewEncoder(os.Stdout)
    enc.Indent(""  "", ""    "")
    if err := enc.Encode(v); err != nil {
        fmt.Printf(""error: %v\n"", err)
    }

}



I can understand in the struct Person, It has a var called Id, which is of type int, but what about the stuff xml:""person"" after int? What does it mean? Thanks.
",1,18688962.0
78,18340411,What is err.(*os.PathError) in Go?,"When I was reading: http://golang.org/doc/effective_go.html#errors

I found such line: err.(*os.PathError) in this context:

for try := 0; try < 2; try++ {
    file, err = os.Create(filename)
    if err == nil {
        return
    }
    if e, ok := err.(*os.PathError); ok && e.Err == syscall.ENOSPC {
        deleteTempFiles()  // Recover some space.
        continue
    }
    return }


What exactly is err.(*os.PathError) in Go?
",2,18341047.0
79,33848258,Similar Go functions appending strings and arrays do not behave as expected,"I have two Go functions:

func permutation(prefix, str []int) {
    n := len(str)
    if n == 0 {
        fmt.Println(prefix)
    } else {
        for i := 0; i < n; i++ {
            permutation(
                append(prefix, str[i]),
                append(str[0:i], str[i+1:]...),
            )
        }
    }
}

func perms(prefix, str string) {
    n := len(str)
    if n == 0 {
        fmt.Println(prefix)
    } else {
        for i := 0; i < n; i++ {
            perms(
                prefix+string(str[i]),
                string(str[0:i])+string(str[i+1:]),
            )
        }
    }
}


The first takes an array of ints, the second takes a string. They both then calculate all permutations of the array, or the string.

I can run them like so:

permutation([]int{}, []int{1, 2, 3})
perms("""", ""123"")


Their output is not the same:

$ go run main.go
[1 2 3]
[1 3 3]
[3 3 3]
[3 3 3]
[3 3 3]
[3 3 3]
123
132
213
231
312
321


I guess there is some nuance to appending arrays that I am missing. I can't seem to figure it out. Any idea what's going on?
",1,33848513.0
80,1757090,Shared library in Go?,"Is it possible to create a Shared Library (.so) using Go?

UPDATED: created an ""issue"" for it.
",4,35060357.0
81,33551110,XML encoding: inject XML into output,"I have a string with an XML fragment and I'd like to inject it into the encoding stream:

package main

import (
    ""encoding/xml""
    ""os""
)

func main() {
    myxml := `foo`
    enc := xml.NewEncoder(os.Stdout)
    root := xml.StartElement{Name: xml.Name{Local: ""root""}}
    enc.EncodeToken(root)
    enc.EncodeToken(xml.CharData(myxml))
    enc.EncodeToken(root.End())
    enc.Flush()
}


I get &lt;mytag&gt;foo&lt;/mytag&gt; but I'd like to have foo

Is there any way I can do this using enc.EncodeToken() or something similiar?
",1,33552288.0
82,43087315,How to fix NodeJS underutilizing CPU Cores?,"According to this page Go vs Node.js, Node.js is not showing to be taking full advantage of CPU cores when running cpu-intensive code.

If I use virtualization and simply add more Node.js instances, will I achieve the same performance as Go? I suppose there still will be overheads and one won't be able to achieve the same performance.
",3,
83,20788732,"How can I make ""go get"" get transitive dependencies?","I have a go project in github at github.com/usmanismail/gpns which people can pull in using:

go get github.com/usmanismail/gpns


However, my project depends on a few other projects such as goconfig. How can I setup my project such that when people go get my project they will also get the required dependencies. 
",1,20789057.0
84,21719484,Go and interface{} equality,"I have the following code:

package main

import ""fmt""

func main() {
    fmt.Println(interface{}(1) == interface{}(1))

    var a *int
    fmt.Println(a == nil)
    fmt.Println(interface{}(a) == interface{}(nil))
}


and it outputs:

true
true
false


I'm wondering why. In the first case it can be seen that wrapping a value in an interface{} doesn't stop equality from being determined, and yet a nil pointer (which is equal to nil) wrapped in an interface{} is not the same as interface{}(nil). Why is this?
",1,21719744.0
85,13417095,How do I stop a Listening server in Go,"I've been trying to find a way to stop a listening server in Go gracefully.  Because listen.Accept blocks it is necessary to close the listening socket to signal the end, but I can't tell that error apart from any other errors as the relevant error isn't exported.

Can I do better than this? See FIXME in the code below in serve()

package main

import (
    ""io""
    ""log""
    ""net""
    ""time""
)

// Echo server struct
type EchoServer struct {
    listen net.Listener
    done   chan bool
}

// Respond to incoming connection
//
// Write the address connected to then echo
func (es *EchoServer) respond(remote *net.TCPConn) {
    defer remote.Close()
    _, err := io.Copy(remote, remote)
    if err != nil {
        log.Printf(""Error: %s"", err)
    }
}

// Listen for incoming connections
func (es *EchoServer) serve() {
    for {
        conn, err := es.listen.Accept()
        // FIXME I'd like to detect ""use of closed network connection"" here
        // FIXME but it isn't exported from net
        if err != nil {
            log.Printf(""Accept failed: %v"", err)
            break
        }
        go es.respond(conn.(*net.TCPConn))
    }
    es.done <- true
}

// Stop the server by closing the listening listen
func (es *EchoServer) stop() {
    es.listen.Close()
    <-es.done
}

// Make a new echo server
func NewEchoServer(address string) *EchoServer {
    listen, err := net.Listen(""tcp"", address)
    if err != nil {
        log.Fatalf(""Failed to open listening socket: %s"", err)
    }
    es := &EchoServer{
        listen: listen,
        done:   make(chan bool),
    }
    go es.serve()
    return es
}

// Main
func main() {
    log.Println(""Starting echo server"")
    es := NewEchoServer(""127.0.0.1:18081"")
    // Run the server for 1 second
    time.Sleep(1 * time.Second)
    // Close the server
    log.Println(""Stopping echo server"")
    es.stop()
}


This prints

2012/11/16 12:53:35 Starting echo server
2012/11/16 12:53:36 Stopping echo server
2012/11/16 12:53:36 Accept failed: accept tcp 127.0.0.1:18081: use of closed network connection


I'd like to hide the Accept failed message, but obviously I don't want to mask other errors Accept can report.  I could of course look in the error test for use of closed network connection but that would be really ugly.  I could set a flag saying I'm about to close and ignore errors if that was set I suppose - Is there a better way?
",4,13417405.0
86,26079892,Underlying pointer type from interface value,"How do I get the underlying pointer type from an interface?

package main

import (
    ""fmt""
)

type Car interface  {
    Drive() string
}
type MyCar struct   {
    name string
}
func (MyCar) Drive (  ) string  {
    return ""rum rum""
}


func main() {
    var car Car
    mycar := &MyCar{name:""mycar""}
    car = mycar
    mycarptr, err :=  car.(*MyCar)
    mycarvalue, err2 :=  car.(MyCar)
    fmt.Printf( ""as ptr failed: %t, as value failed: %t\n"", err, err2 )
    fmt.Printf( ""as ptr: %+v, as value: %+v"", mycarptr, mycarvalue)
}

",2,26080002.0
87,37442010,Testing handlers that use Gorilla/context,"I'm using gorilla/context in a web app. The example in the docs looks like:

func MyHandler(w http.ResponseWriter, r *http.Request) {
    //...

    val := context.Get(r, foo.MyKey)

    //...
}


How can I unit test a handler that works like this? The only way I've managed so far is to use the context package inside my tests. I'm thinking at the moment that I could inject a context parameter into the handler but then I'm not conforming to the HandlerFunc interface.
",3,37442619.0
88,37330211,GO: Execute a Command with Pipe,"I wonder whether there's a way to run top -b | grep --line-buffered [some_pid] >> out.log in Go for a certain amount of time and then kill it after receiving a value from the channel.  The os.exec doesn't seem to support piping in command.  Thanks.
",1,37334984.0
89,17065465,Replace a regular expression submatch using a function,"Let's say I have strings like 

input := `bla bla b:foo=""hop"" blablabla b:bar=""hu?""`


and I want to replace the parts between quotes in b:foo=""hop"" or b:bar=""hu?"" using a function.

It's easy to build a regular expression to get the match and submatch, for example

r := regexp.MustCompile(`\bb:\w+=""([^""]+)""`)


and then to call ReplaceAllStringFunc but the problem is that the callback receives the whole match and not the submatch :

fmt.Println(r.ReplaceAllStringFunc(input, func(m string) string {
    // m is the whole match here. Damn.
}))


How can I replace the submatch ?

Right now, I haven't found a better solution than to decompose myself m inside the callback with a regex, and to rebuild the string after having processed the submatch. 

I would have used an alternate approach with a positive look behind were they available in Go but that's not the case (and they shouldn't be necessary anyway).

What can I do here?



EDIT : here's my current solution that I would like to simplify :

func complexFunc(s string) string {
   return ""dbvalue(""+s+"")"" // this could be more complex
}
func main() {
        input := `bla bla b:foo=""hop"" blablabla b:bar=""hu?""`
        r := regexp.MustCompile(`(\bb:\w+="")([^""]+)`)
        fmt.Println(r.ReplaceAllStringFunc(input, func(m string) string {
                parts := r.FindStringSubmatch(m)
                return parts[1] + complexFunc(parts[2])
        }))
}


(playground link)

What bothers me is that I have to apply the regex twice. This doesn't sound right.
",1,
90,33465099,How to cleanup the development datastore?,"In Google App Engine Go SDK sometimes we can fill the local datastore with a bunch of test data. It's tiring to delete thousands of records 20 at a time using the web interface. Is there a command the erases the local datastore?
",2,33465590.0
91,24774833,SSL with GoLang using reverse proxy Nginx,"I am currently writing a GoLang website and would like to add SSL soon. My question is what are the advantages/disadvantages of using the built-in Golang SSL packages or should/can I just do SSL with the nginx when I use it for the reverse proxy?
",1,24775103.0
92,33059420,Is this a reasonable and idiomatic GoLang circular shift implementation?,"Can anyone comment on whether this is a reasonable and idiomatic way of implementing circular shift of integer arrays in Go? (I deliberately chose not to use bitwise operations.)

How could it be improved?

package main

import ""fmt""

func main() {
    a := []int{1,2,3,4,5,6,7,8,9,10}
    fmt.Println(a)
    rotateR(a, 5)
    fmt.Println(a)
    rotateL(a, 5)
    fmt.Println(a)
}

func rotateL(a []int, i int) {
    for count := 1; count <= i; count++ {
        tmp := a[0]
        for n := 1;n < len(a);n++ {
            a[n-1] = a[n]
        }
        a[len(a)-1] = tmp
    }
}

func rotateR(a []int, i int) {
    for count := 1; count <= i; count++ {
        tmp := a[len(a)-1]
        for n := len(a)-2;n >=0 ;n-- {
            a[n+1] = a[n]
        }
        a[0] = tmp
    }
}

",2,
93,28949063,Golang: Read buffered input as signed 16bit ints,"I am trying to read a buffered stream of signed 16 bit integers (wav format), but the bufio.Read method only accepts an array of bytes. My question is a 2-parter:


Can I preformat the byte stream into a buffered int16 array?
If I can't, whats the best way of post-processing the byte array into int16 array? My initial thought is to use tmp arrays and keep pushing/processing them, but I was curious if there was a more idiomatic way of doing this?

package main

import (
     ""bufio""
     ""io""
     ""log""
     ""os/exec""
)

func main() {

    app := ""someapp""

    cmd := exec.Command(app)
    stdout, err := cmd.StdoutPipe()
    r := bufio.NewReader(stdout)
    if err != nil {
        log.Fatal(err)
    }
    if err := cmd.Start(); err != nil {
        log.Fatal(err)
    }

    //""someapp"" outputs signed 16bit integers (little endian))
    buf := make([]byte, 0, 4*1024)

    for {
        n, err := r.Read(buf[:cap(buf)])    //r.Read only accepts type []byte
        buf = buf[:n]
        if n == 0 {
            if err == nil {
                continue
            }
            if err == io.EOF {
                break
            }
            log.Fatal(err)
        }

        log.Printf(""%x\n"", buf)
        //process buf here

        if err != nil && err != io.EOF {
            log.Fatal(err)
        }
    }
}


",2,
94,29901728,Go lang: how to install libxml2/gokogiri on windows,"If there a relatively simple way to make go + libxml2 + gokogiri work on windows?

I mean that I may be can install it (but at the moment I can not, stuck with Package libxml-2.0 was not found in the pkg-config search path), but then I need to provide my utilite to other people, who will never be able (or would wish ) to install lall libxml2 dependencies, modify PATH etc on windows... 

It work flawless on Ubuntu... 

I found this https://github.com/moovweb/gokogiri/issues/49 thats funny with installation of Gimp 2 (what?!), but I still cannot make it run with such error, I guess might be issue with PATH, but all PATH are set

$ go get github.com/moovweb/gokogiri
# github.com/moovweb/gokogiri/help
Documents\go\src\github.com\moovweb\gokogiri\help\help.go:6:25: fatal error: lib
xml/tree.h: No such file or directory
 #include 
                         ^
compilation terminated.
# github.com/moovweb/gokogiri/xpath
Documents\go\src\github.com\moovweb\gokogiri\xpath\expression.go:4:26: fatal err
or: libxml/xpath.h: No such file or directory
 #include 
                          ^
compilation terminated.

",2,30967521.0
95,41247206,How to test code using the Go logging package glog ?,"I have implemented a type wrapping glog so that I can add a prefix to log message identifying the emitter of the log in my program and I can change the log level per emitter.

How could I implement the unit tests ? The problem is that glog outputs text to stdErr. 

The code is trivial but I would like the have the unit test and 100% coverage like the rest of the code. This programming effort already payed.
",2,41310246.0
96,42201804,Different sizes of arrays using make or default initialization,"I'm new to Go and try to understand the language in order to write efficient code. In the following code, sizes of the two arrays differ by 140%, can someone explain this?

package main

import (
    ""fmt""
    ""unsafe""
)

func main() {
    ind1 := make([]bool, 10)
    var ind2 [10]bool
    fmt.Println(unsafe.Sizeof(ind1)) // 24
    fmt.Println(len(ind1)) // 10
    fmt.Println(unsafe.Sizeof(ind2)) // 10
    fmt.Println(len(ind2)) // 10
}


The size of the first array remains 10, even in case the capacity is set explicitly:

    ind1 := make([]bool, 10, 10)


Can someone explain this? Is there any additional overhead in using make? If yes, why is it recommended to use make over default initialization?
",2,42202087.0
97,22394264,image.ServingURL and Google Storage BlobKey not working on Development Server,"Im running a local dev server and using image.ServingURL to create a url from a BlobKey that is stored in Google Storage.  Should this url return the image on a dev server?  

I'm getting an error like such: Could not find blob with key encoded_gs_file:

Im using blobstore.BlobKeyForFile(c, storageKey) where storageKey is ""/gs/"" + 

Not sure if this is supposed to serve images with the serving url on dev?  How to best diagnose?
",1,
98,31328213,Check if a process is a Go application (in Linux/Unix),"I am using ps (specifically the psutil python library) to see a list of running processes on my linux machine. I want to deterimine which processes are running Go applications (that is, they are running Go code).

Below is the ps output for a process that is written in Go. Is there anything that indicates that it is running Go code?

{'cmdline': ['./SampleMePlz'],
 'connections': [connection(fd=3, family=10, type=1, laddr=('::', 8080), raddr=(), status='LISTEN')],
 'cpu_affinity': [0, 1, 2, 3],
 'cpu_percent': 0.0,
 'cpu_times': cputimes(user=0.0, system=0.0),
 'create_time': 1436474176.89,
 'cwd': '/home/ben/gocode/src/SampleMePlz',
 'exe': '/home/ben/gocode/src/SampleMePlz/SampleMePlz',
 'ext_memory_info': meminfo(rss=4071424, vms=192684032, shared=3092480, text=3096576, lib=0, data=179523584, dirty=0),
 'gids': group(real=5000, effective=5000, saved=5000),
 'io_counters': io(read_count=12, write_count=0, read_bytes=4096, write_bytes=0),
 'ionice': ionice(ioclass=0, value=4),
 'memory_info': meminfo(rss=4071424, vms=192684032),
 'memory_maps': [mmap(path='/lib/x86_64-linux-gnu/libpthread-2.15.so', rss=65536, size=2199552, pss=8192, shared_clean=57344, shared_dirty=0, private_clean=0, private_dirty=8192, referenced=65536, anonymous=8192, swap=0),
                 mmap(path='/lib/x86_64-linux-gnu/libc-2.15.so', rss=311296, size=3903488, pss=26624, shared_clean=286720, shared_dirty=0, private_clean=0, private_dirty=24576, referenced=311296, anonymous=24576, swap=0),
                 mmap(path='[stack]', rss=8192, size=139264, pss=8192, shared_clean=0, shared_dirty=0, private_clean=0, private_dirty=8192, referenced=8192, anonymous=8192, swap=0),
                 mmap(path='[anon]', rss=946176, size=179245056, pss=946176, shared_clean=0, shared_dirty=0, private_clean=0, private_dirty=946176, referenced=946176, anonymous=946176, swap=0),
                 mmap(path='/lib/x86_64-linux-gnu/ld-2.15.so', rss=122880, size=151552, pss=13312, shared_clean=110592, shared_dirty=0, private_clean=0, private_dirty=12288, referenced=122880, anonymous=12288, swap=0),
                 mmap(path='[vsyscall]', rss=0, size=4096, pss=0, shared_clean=0, shared_dirty=0, private_clean=0, private_dirty=0, referenced=0, anonymous=0, swap=0),
                 mmap(path='[heap]', rss=4096, size=135168, pss=4096, shared_clean=0, shared_dirty=0, private_clean=0, private_dirty=4096, referenced=4096, anonymous=4096, swap=0),
                 mmap(path='[vdso]', rss=4096, size=4096, pss=0, shared_clean=4096, shared_dirty=0, private_clean=0, private_dirty=0, referenced=4096, anonymous=0, swap=0),
                 mmap(path='/home/ben/gocode/src/SampleMePlz/SampleMePlz', rss=2908160, size=6905856, pss=2908160, shared_clean=0, shared_dirty=0, private_clean=2879488, private_dirty=28672, referenced=2908160, anonymous=28672, swap=0)],
 'memory_percent': 0.025919821179310142,
 'name': 'SampleMePlz',
 'nice': 0,
 'num_ctx_switches': amount(voluntary=15, involuntary=18),
 'num_fds': 5,
 'num_threads': 6,
 'open_files': [],
 'pid': 111252,
 'ppid': 42061,
 'status': 'sleeping',
 'terminal': '/dev/pts/9',
 'threads': [thread(id=111252, user_time=0.0, system_time=0.0),
             thread(id=111253, user_time=0.0, system_time=0.0),
             thread(id=111254, user_time=0.0, system_time=0.0),
             thread(id=113972, user_time=0.0, system_time=0.0),
             thread(id=113973, user_time=0.0, system_time=0.0),
             thread(id=113974, user_time=0.0, system_time=0.0)],
 'uids': user(real=3008, effective=3008, saved=3008),
 'username': 'ben'}

",2,31328676.0
99,42691705,What does ./... mean in Go?,"I usually see    ./...  in golang
for example    go test ./...or    go fmt ./...

only know the meaning of  one  or two dots
",2,42691737.0
100,30468532,How can I execute native instructions in GoLang?,"I was wondering how can I execute bytes (shellcode, basically) in GoLang. Anyway I found something that helped me getting started, check the code below:

package main

import (
    ""fmt""
    ""log""
    ""syscall""
    ""unsafe""
)

const (
    MEM_COMMIT  = 0x1000
    MEM_RESERVE = 0x2000

    PAGE_EXECUTE_READWRITE = 0x40
)

var (
    kernel32     = syscall.MustLoadDLL(""kernel32.dll"")
    VirtualAlloc = kernel32.MustFindProc(""VirtualAlloc"")
)

func SysAlloc(n uintptr) (uintptr, error) {
    addr, _, err := VirtualAlloc.Call(0, n, MEM_RESERVE|MEM_COMMIT, PAGE_EXECUTE_READWRITE)
    if addr == 0 {
        return 0, err
    }
    return addr, nil
}

func mkprog() error {
    const size = 64 * 1024
    addr, err := SysAlloc(size)
    if err != nil {
        return err
    }
    b := (*[size]byte)(unsafe.Pointer(addr))
    b[0] = 0xc3 // RET 
    b[1] = 0x90 // NOP
    syscall.Syscall(addr, 0, 0, 0, 0)
    return nil
}

func main() {
    err := mkprog()
    if err != nil {
        log.Fatal(err)
    }
    fmt.Printf(""HELLO\n"")
}


It works, it executes the NOP and the RET and the program exits sucessfully.
The thing is: if I replace b[] with a shellcode (WinExec calc.exe) like this

b[0] = 0x33
b[1] = 0xc0                          
b[2] = 0x50                              
b[3] = 0x68
b[4] = 0x2E
b[5] = 0x65
b[6] = 0x78
b[7] = 0x65              
b[8] = 0x68
b[9] = 0x63
b[10] = 0x61
b[11] = 0x6C
b[12] = 0x63              
b[13] = 0x8B
b[14] = 0xC4                          
b[15] = 0x6A
b[16] = 0x01                          
b[17] = 0x50                              
b[18] = 0xBB
b[19] = 0xED
b[20] = 0x2A
b[21] = 0x86
b[22] = 0x7C              
b[23] = 0xFF
b[24] = 0xD3


It does not run anymore. Shouldnt it run properly or am I missing something here? 

This is the shellcode in C/Python, for reference:

""\x33\xc0""                          # XOR EAX,EAX
""\x50""                              # PUSH EAX      => padding for lpCmdLine
""\x68\x2E\x65\x78\x65""              # PUSH "".exe""
""\x68\x63\x61\x6C\x63""              # PUSH ""calc""
""\x8B\xC4""                          # MOV EAX,ESP
""\x6A\x01""                          # PUSH 1
""\x50""                              # PUSH EAX
""\xBB\xED\x2A\x86\x7C""              # MOV EBX,kernel32.WinExec
""\xFF\xD3""                          # CALL EBX


And the error

Exception 0xc0000005 0x8 0x7c862aed 0x7c862aed
PC=0x7c862aed
signal arrived during cgo execution

main.mkprog(0x0, 0x0)
    C:/Users/guitmz/Documents/Go_test4/test_4.go:64 +0xfe
main.main()
    C:/Users/guitmz/Documents/Go_test4/test_4.go:69 +0x2e

goroutine 2 [runnable]:
runtime.forcegchelper()
    c:/go/src/runtime/proc.go:90
runtime.goexit()
    c:/go/src/runtime/asm_amd64.s:2232 +0x1

goroutine 3 [runnable]:
runtime.bgsweep()
    c:/go/src/runtime/mgc0.go:82
runtime.goexit()
    c:/go/src/runtime/asm_amd64.s:2232 +0x1

goroutine 4 [runnable]:
runtime.runfinq()
    c:/go/src/runtime/malloc.go:712
runtime.goexit()
    c:/go/src/runtime/asm_amd64.s:2232 +0x1
rax     0x7fe10
rbx     0x7c862aed
rcx     0x0
rdx     0x0
rdi     0x7ff5ffffd000
rsi     0xc082021ec0
rbp     0x569ae0
rsp     0x7fdf8
r8      0x0
r9      0x50
r10     0x8
r11     0x4d5520
r12     0x3d
r13     0x0
r14     0x0
r15     0x0
rip     0x7c862aed
rflags  0x10246
cs      0x33
fs      0x53
gs      0x2b
Error: process exited with code 2.


Thanks
",1,30488660.0
101,36798854,goRPC newdispatcher imported and not used,"I'm working with the valyala goRPC package. I'm trying to implement this example:

package main

import (
""errors""
""fmt""
""log""
)

type ExampleDispatcherService struct {
state int
}

func (s *ExampleDispatcherService) Get() int { return s.state }

func (s *ExampleDispatcherService) Set(x int) { s.state = x }

func (s *ExampleDispatcherService) GetError42() (int, error) {
    if s.state == 42 {
    return 0, errors.New(""error42"")
    }
return s.state, nil
}

func (s *ExampleDispatcherService) privateFunc(string) { s.state = 0 }

func main() {
d := NewDispatcher()

service := &ExampleDispatcherService{
    state: 123,
}

// Register exported service functions
d.AddService(""MyService"", service)

// Start rpc server serving registered service.
addr := ""127.0.0.1:7892""
s := NewTCPServer(addr, d.NewHandlerFunc())
if err := s.Start(); err != nil {
    log.Fatalf(""Cannot start rpc server: [%s]"", err)
}
defer s.Stop()

// Start rpc client connected to the server.
c := NewTCPClient(addr)
c.Start()
defer c.Stop()

// Create client wrapper for calling service functions.
dc := d.NewServiceClient(""MyService"", c)

res, err := dc.Call(""Get"", nil)
fmt.Printf(""Get=%+v, %+v\n"", res, err)

service.state = 456
res, err = dc.Call(""Get"", nil)
fmt.Printf(""Get=%+v, %+v\n"", res, err)

res, err = dc.Call(""Set"", 78)
fmt.Printf(""Set=%+v, %+v, %+v\n"", res, err, service.state)

res, err = dc.Call(""GetError42"", nil)
fmt.Printf(""GetError42=%+v, %+v\n"", res, err)

service.state = 42
res, err = dc.Call(""GetError42"", nil)
fmt.Printf(""GetError42=%+v, %+v\n"", res, err)

}


But when I try to build this I got this error:

PS C:\Work\goRPC> go build .\prueba1.go
# command-line-arguments
.\prueba1.go:27: undefined: NewDispatcher
.\prueba1.go:38: undefined: NewTCPServer
.\prueba1.go:45: undefined: NewTCPClient


I added the package import ""github.com/valyala/gorpc"" but now I get this error:

# command-line-arguments
.\prueba1.go:7: imported and not used: ""git
.\prueba1.go:29: undefined: NewDispatcher
.\prueba1.go:40: undefined: NewTCPServer
.\prueba1.go:47: undefined: NewTCPClient


I know this is a noobie doubt about golang, but I'm clueless about what to do.

Thanks for your time.
",1,36799526.0
102,42852429,Loop in goroutine hangs program,"Why does the following program hang when the time.Sleep(time.Nanosecond) is commented out?

package main

import ""fmt""
import ""time""
import ""sync/atomic""

func main() {
    var ops uint64 = 0
    for i := 0; i < 50; i++ {
        go func() {
            for {
                atomic.AddUint64(&ops, 1)
                time.Sleep(time.Nanosecond)
            }
        }()
    }

    time.Sleep(time.Millisecond)
    opsFinal := atomic.LoadUint64(&ops)
    fmt.Println(""ops:"", opsFinal)
}


Second question, why does running this program in the sandbox result in ""process took too long""?
",1,
103,23255456,What's the proper way to convert a json.RawMessage to a struct?,"I have this struct

type SyncInfo struct {
    Target string
}


Now I query some json data from ElasticSearch. Source is of type json.RawMessage.
All I want is to map source to my SyncInfo which I created the variable mySyncInfo for.

I even figured out how to do that...but it seems weird. I first call MarshalJSON() to get a []byte and then feed that to json.Unmarshal() which takes an []byte and a pointer to my struct. 

This works fine but it feels as if I'm doing an extra hop. Am I missing something or is that the intended way to get from a json.RawMessage to a struct?

var mySyncInfo SyncInfo

jsonStr, _ := out.Hits.Hits[0].Source.MarshalJSON()
json.Unmarshal(jsonStr, &mySyncInfo)

fmt.Print(mySyncInfo.Target)

",2,23256630.0
104,44774514,How to generate a variable length random number in Go,"I'm trying to generate a random integer with variable length in Go but I always get the number filling the total length. Here's my code:

package main

import (
    ""fmt""
    ""math/big""
    ""crypto/rand""
)

const ResultsPerPage = 30

var (
        total = new(big.Int).SetBytes([]byte{
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE,
                0xBA, 0xAE, 0xDC, 0xE6, 0xAF, 0x48, 0xA0, 0x3B, 0xBF, 0xD2, 0x5E, 0x8C, 0xD0, 0x36, 0x41, 0x40,
        })
        pages = new(big.Int).Div(total, big.NewInt(ResultsPerPage))
        random *big.Int
        err error
)

func main() {

fmt.Println(pages)
fmt.Println(randomString(pages))
}

func randomString(l *big.Int) string {
  random, err = rand.Int(rand.Reader, l)
  fmtrandom := fmt.Sprint(random)
  return string(fmtrandom)
}


Outputs

3859736307910539847452366166956263595094585475969163479420172104717272049811
3479662380009045046388212253547512051795238437604387552617121977169155584415


Code sample: https://play.golang.org/p/HxAb6Rs_Uj

Any help is appreciated. Thank you. 
",1,44774651.0
105,29683047,Why the field section does not get embedded,"I have the following struct

package router

import (
    ""io""
    ""net/http""
    ""townspeech/components/i18n""
    ""townspeech/components/policy""
    ""townspeech/components/session""
    ""townspeech/controllers/base""
    ""townspeech/types""
)

type sidHandler struct {
    req     *http.Request
    res     http.ResponseWriter
    handler sidFuncHandler
    section string
    err     *types.ErrorJSON
    sess    *session.Sid
}


And I want to embed in another struct like:

package router

import (
    ""net/http""
    ""townspeech/types""
    ""townspeech/components/session""
    ""townspeech/controllers/base""
)

type authHandler struct {
    sidHandler
    handler authFuncHandler
    auth    *session.Auth
}


And the function, that use the authHandler struct:

func registerAuthHandler(handler authFuncHandler, section string) http.Handler {
    return &authHandler{handler: handler, section: section}
}


The compiler complain:

# app/router
../../../router/funcs.go:9: unknown authHandler field 'section' in struct literal
FAIL    app/test/account/validation [build failed]


As you can see, the two structs are in the same package, field section should not appear as private.
What am I doing wrong?
",2,29683330.0
106,39474715,Slice of slices with different types in golang,"Context: I want to use the slice data structure in golang to make a 2-D feature vector. This feature vector should be a slice that consists of slices of different types, sometimes strings, int, float64 etc.

As of yet, I can acheive this with a map (below), is there a way to implement this with a slice?

map := make(map[int]interface{}}


What should be more like:

featureVector := []interface{[]int, []float64, []string ...}

",1,39474991.0
107,27244663,cannot use temp (type interface {}) as type []string in argument to equalStringArray: need type assertion,"I'm trying to pass a string array to a method. Although it passes the assertion, I'm getting this error 

cannot use temp (type interface {}) as type []string in argument to equalStringArray: need type assertion


Code:

if str, ok := temp.([]string); ok {
    if !equalStringArray(temp, someotherStringArray) {
        // do something
    } else {
        // do something else
    }
}


I've also tried checking the type with reflect.TypeOf(temp) and that's also printing []string
",1,27244777.0
108,41759296,go - Load image using Gin,"I develop web application, But I can't load image. .css and .js file can be loaded by Static() method. Image is also same? How to load Image to web application using Gin?

router.Static(""/css"", ""./css"") // this is loading css file
router.Static(""/js"", ""./js"") // this is loading js file
// How to load Image?

",1,41761798.0
109,42758054,Read multipart-form data as []byte in GO,"I'm using GIN as GO framework,  im having an issue when uploading file and directly convert image as byte so i can store it in my BLOB field inside db table, so i have my piece of code like this :

func (a *AppHandler) Upload(ctx *gin.Context) {

form := &struct {
    Name    string `form:""name"" validate:""required""`
    Token   string `form:""token"" validate:""required""`
    AppCode string `form:""app_code"" validate:""required""`
}{}
ctx.Bind(form)
if validationErrors := a.ValidationService.ValidateForm(form); validationErrors != nil {
    httpValidationErrorResponse(ctx, validationErrors)
    return
}

file, header, err := ctx.Request.FormFile(""file"")


and im trying to store it in db like this

app.SetFile(file)
a.AppStore.Save(app)


and it returns this kind of error:

cannot use file (type multipart.File) as type []byte 


so how to fix this? im pretty new with Go language
 NOTE: i'm using GORM as well for my db ORM
",1,42758241.0
110,10095698,Android App from Go programming language,"I am hearing buzzes about Go programming language from google. Wikipedia describes it like this: ""Go aims to provide the efficiency of a statically-typed compiled language with the ease of programming of a dynamic language"". I was thinking that since it is a language from the maker of android, they should have some support for creating android Apps. Is there any tool to create android App from Go? Is Go worthy language to learn with an assumption that ""SOMEDAY"" android might be based on GO.
",1,10095809.0
111,26560723,Debugging Go via GDB with Vim (not gvim),"I am starting to get into Go, as it seems like an interesting language for web service development. I have historically created a new Ubuntu Server 14.04 instance for each of my language groups, and have kept the same principle for Go.

I have installed all the usual tools (Syntastic, YCM, NERDTree, ctags, you get the idea) and have got a great writing environment set up with some help from vim-go.

Now, I want to be able to get debugging set up in a similar way, using GDB, and am getting stuck on what the best tooling to use here is.

It seems as if Clewn is a great tool, but as I am using SSH to the development environment, I can't necessarily use gvim.

I basically just need a GDB tie-in to vim (not gvim). I am using vim 7.4 as per apt-get via ubuntu universe, and will be more than happy to build from source if some compatibility has not included.
",1,
112,22135486,golang: evaluate variable in callback declaration,"I am trying to define a callback in golang:

package main

func main() {
    x, y := ""old x "", ""old y""
    callback         := func() { print(""callback: ""        , x        , y       , ""\n"") }
    callback_bound   := func() { print(""callback_bound: ""  , x        , y       , ""\n"") }
    callback_hacked  := func() { print(""callback_hacked: "" , ""old x "" , ""old y"" , ""\n"") } 

    x, y = ""new x "", ""new y""

    callback()
    callback_bound()
    callback_hacked()
}


The output is:

callback: new x new y
callback_bound: new x new y
callback_hacked: old x old y


The basic case works, but it leaves the variables unbound, i.e. the values at call-time are used. No doubt, this is useful in some cases, but how do I declare callback_bound so that the values at declaration-time are used and the output becomes:

callback: new x new y
callback_bound: old x old y
callback_hacked: old x old y

",2,22137690.0
113,25386761,Golang Gokogiri recursive xpath anomaly,"I was trying to perform xpath operations on a html document. I wanted to do a two-level xpath query. The html document ""index.html"" is as follows:




    
    Document


    
        
            10
        
        
            20
        
        
            30
        
    




I wanted to get all divs with class=""area"" first, then recursively get divs inside it with class=""value"" in golang using Gokogiri.

My go code is as follows:
    package main

import (
    ""fmt""
    ""io/ioutil""

    ""github.com/moovweb/gokogiri""
    ""github.com/moovweb/gokogiri/xpath""
)

func main() {
    content, _ := ioutil.ReadFile(""index.html"")

    doc, _ := gokogiri.ParseHtml(content)
    defer doc.Free()

    xps := xpath.Compile(""//div[@class='head']/div[@class='area']"")
    xpw := xpath.Compile(""//div[@class='value']"")
    ss, _ := doc.Root().Search(xps)
    for _, s := range ss {
        ww, _ := s.Search(xpw)
        for _, w := range ww {
            fmt.Println(w.InnerHtml())
        }
    }
}


However, the output I get is odd:

10
20
30
10
20
30
10
20
30


I intend to get:

10
20
30


I want to recursively search for xpath patterns. I think there is something wrong with my second level xpath pattern. It appears, my second level xpath is again search in the whole document instead of individual divs with class=""area"". What do I do for recursive xpath patterns search? I'd appreciate any help.
",2,25387687.0
114,31113299,Golang append string in string slice,"How to append string in a string sclice?
I tried

s := make([]string, 1, 4)
s[0] = ""filename""
s[0] := append(s[0], ""dd"")


But it is not correct. Then I tried

s[:1] := append(s[:1], ""dd"")


But it is not correct either.

How can I append a string to s[0]?
",1,31113429.0
115,26280024,Should I write a cross-platform service in Go?,"I'm looking into writing a cross-platform (Windows/Debian/Darwin/Red Hat) service and am comparing language options. I really appreciate Go's cross-platform threading abilities and easy cross-compiling, but I want to make sure I'll be able to easily reach any native (eg. Windows Service) APIs when needed.

What sort of things should I be considering to drive my language decision?
",1,26281943.0
116,24051325,How to initialize inherited object's fields,"I must be missing something.  I cannot initialize an object's inherited fields without directly accessing them.

My goal is trying to keep it simple.

package main

type Page struct {
  Title string
}

type Article struct {
  Page
  Id int
}

func main() {

  // this generates a build error: 
  // ""invalid field name Title in struct initializer""
  //
  p := &Article{
    Title: ""Welcome!"",
    Id:    2,
  }

  // this generates a build error: 
  // ""invalid field name Page.Title in struct initializer""
  //
  p := &Article{
    Page.Title: ""Welcome!"",
    Id:         2,
  }

  // this works, but is verbose...  trying to avoid this
  //
  p := &Article{
    Id:    2,
  }
  p.Title = ""Welcome!""

  // as well as this, since the above was just a shortcut
  //
  p := &Article{
    Id:    2,
  }
  p.Page.Title = ""Welcome!""

}


Thanks in advance.
",2,24051370.0
117,21204318,Golang Fprint* what does the f stand for,"The fmt package has some functions for string formatting.
Sprint* I am pretty sure stands for string print.
Print* writes to STDOUT
What does the F stand for with the Fprint* functions?
",1,21204391.0
118,27366196,How can I see all characters in a unicode category?,"I've read the documentation and can't find any examples.

http://golang.org/pkg/unicode/#IsPunct

Is there a place in the documentation that explicitly lists all characters in these categories? I'd like to see what characters are contained in category P or category M.
",2,27366319.0
119,25056227,How to detect time in Go?,"I need to parse the  date_id field from emails headers. However these seem to have slightly different layouts so I've started to build a switch case/block . I'm wondering if that's really the way to fix this issue.  

        case strings.Contains(h.Headers[bk].Date, ""(CEST)""):
            layout = ""Mon, 02 Jan 2006 15:04:05 -0700 (MST)""
        case strings.Contains(h.Headers[bk].Date, ""(EDT)""):
            layout = ""Mon, 02 Jan 2006 15:04:05 -0700 (MST)""
        default:
            layout = ""Mon, 02 Jan 2006 15:04:05 -0700""
        }

",1,25056378.0
120,8344210,strconv.Itoa(time.Nanoseconds()) - Error,"I write one go code like this, strconv.Itoa(time.Nanoseconds()). But, it is giving me this error ""cannot use time.Nanoseconds() (type int64) as type int in function argument"". How can I solve this ?
",2,8344775.0
121,26553554,Regexp in Golang not matching,"I'm currently writing tests for SQL using the package sqlmock, however, I've been unable to find a regular expression that seems to match what I would have thought was a relatively simple expression.

I've included a play url with the code below. However, I'm unsure as to why these strings don't match?

http://play.golang.org/p/I6QZkjkLmj

package main

import (
    ""fmt""
    ""regexp""
)

var myExp = regexp.MustCompile(`SELECT count(\*) FROM video_resource WHERE key = $1`)

func main() {
    fmt.Println(myExp)
    fmt.Println(""SELECT count(\\*) FROM video_resource WHERE key = $1"")
    matched := myExp.MatchString(""SELECT count(\\*) FROM video_resource WHERE key = $1"")
    fmt.Println(matched)
    fmt.Printf(""%+v"", myExp.MatchString(""SELECT count(*) FROM video_resource WHERE key = $1""))
}

",2,26553750.0
122,30576874,Go reflect field index - single index vs. slice,"reflect.StructField has an Index field that is typed []int.   The documentation on this is slightly confounding:

    Index     []int     // index sequence for Type.FieldByIndex


And of course Type.FieldByIndex follows suit as expected, with the somewhat clearer explanation of its behavior:

    // FieldByIndex returns the nested field corresponding
    // to the index sequence.  It is equivalent to calling Field
    // successively for each index i.
    // It panics if the type's Kind is not Struct.
    FieldByIndex(index []int) StructField


But, there is also Type.Field():

    // Field returns a struct type's i'th field.
    // It panics if the type's Kind is not Struct.
    // It panics if i is not in the range [0, NumField()).
    Field(i int) StructFiel


So the behavior of those respectively is very clear.

My question:   Exactly for which fields / what circumstances will a reflect.StructField have an Index with len(field.Index) > 1?  Is this there to support enumerating embedded fields (reachable through an anonymous field in the parent)?  Does it happen in other cases?  (ie. is it  safe to assume if !field.Anonymous, then we can just use field.Index[0] as an argument to Field(i int)?)
",1,
123,26548066,Golang - Pipe to external exec,"I'm trying to use Go to pipe an email message to the sendmail binary.  The following code works providing I don't uncomment the call to Wait().  If it's uncommented, the program hangs.  Reading the documentation for wait, I get the impression that it should be called so I'm concluding there's an error in my example code.  Any suggestions for what it might be?

package main

import (
        ""io""
        ""os""
        ""os/exec""
        ""fmt""
)

func main() {
        msg := ""From: source@email.address\n""
        msg += ""To: recipient@email.address\n""
        msg += ""Subject: Testing\n\n""
        msg += ""Hello World!\n""
        sendmail := exec.Command(""/usr/sbin/sendmail"", ""-t"")
        stdin, err := sendmail.StdinPipe()
        if err != nil {
                panic(err)
        }
        sendmail.Stdout = os.Stdout
        sendmail.Stderr = os.Stderr
        err = sendmail.Start()
        if err != nil {
                panic(err)
        }
        io.WriteString(stdin, msg)
        //err = sendmail.Wait()
        //if err != nil {
        //      panic(err)
        //}
}

",2,26548256.0
124,35790935,using reflection in Go to get the name of a struct,"I found this question with this great answers:

How to find a type of a object in Golang?

I played around with the answer and tried to get the name of a struct in the same way:

package main

import (
        ""fmt""
        ""reflect""
)

type Ab struct {

}

func getType(myvar interface{}) string {
        return reflect.TypeOf(myvar).Name()
}

func main() {
        fmt.Println(""Hello, playground"")

        tst := ""string""
        tst2 := 10
        tst3 := 1.2
        tst4 := new(Ab)

        fmt.Println(getType(tst))
        fmt.Println(getType(tst2))
        fmt.Println(getType(tst3))
        fmt.Println(getType(tst4))

}


Go playground: http://play.golang.org/p/tD8mygvETH

But the output is:

Hello, playground
string
int
float64


Program exited.


Expected output would be:

Hello, playground
string
int
float64
Ab

Program exited.


I tried to figure out by reading the documentation but didn't find the issue about that. So, sorry for the very general question, but:

What's the reason, reflect.TypeOf().Name() does not work with (this) struct(s)?
",3,35791105.0
125,31050656,Can not replace the content of a csv file in Go,"I have created a csv file (assume ""output.csv"") using os.OpenFile with flags, os.Create and os.RDWR. I'm doing a series of operations on this file. In every Iteration, I need to rewrite the contents of the csv file (""output.csv""). But My code appends to the csv file.
",2,
126,29721449,How can I print to Stderr in Go without using log,"How can I write a message to Stderr without using log?

A comment in this SO post shows how to do it with log: log.Println(""Message""), but what if I don't want a timestamp?

Is the following good Go?

os.Stderr.WriteString(""Message"")
",4,29721505.0
127,33260236,Run a Go Server on Codenvy Environment,"I'm trying to use Codenvy to develop Go server apps, but I don't know how to run. 
I have already created the project and choose the Web Go runner environment. 
But when I run it, the project run in a different URL port that I have defined.

Have some way to not use an http port an use a dynamic port?

http.ListenAndServe(""{get_url_port}"", nil)



  instead


http.ListenAndServe("":8080"", nil)

",1,33261484.0
128,43367802,no remote repository when installing dbweb,"I want to install dbweb to manage a MySQL database server but I get this error in cmd.
I tried to to install that on my go project and get same error.

C:\Users\NakhodaSokoot>go get github.com/go-xorm/dbweb
# cd C:\Users\NakhodaSokoot\go\src\github.com\lunny\nodb; git pull --ff-only
fatal: No remote repository specified.  Please, specify either a URL or a
remote name from which new revisions should be fetched.
package github.com/lunny/nodb/config: exit status 1
# cd C:\Users\NakhodaSokoot\go\src\golang.org\x\crypto; git pull --ff-only
fatal: No remote repository specified.  Please, specify either a URL or a
remote name from which new revisions should be fetched.
package golang.org/x/crypto/scrypt: exit status 1

",1,43370261.0
129,36988681,Golang: time.Time Round to Day,"I have a timestamp coming in, I wonder if there's a way to round it down to the start of a day in PST. For example, ts: 1305861602 corresponds to 2016-04-14, 21:10:27 -0700, but I want to round it to a timestamp that maps to 2016-04-14 00:00:00 -0700. I read through the time.Time doc but didn't find a way to do it.
",2,36988882.0
130,39192373,How to reflect.New a slice and reflect.AppendSlice it to a source slice,"I want to reflect.New an []interface{} like []int and append it into another slice.

My code must have an error, but I don't know how to make it right and how to understand deeply the reflect.New and reflect.AppendSlice usage.

package main

import (
    ""fmt""
    ""reflect""
)

func main() {
    var a []int
    var value reflect.Value = reflect.ValueOf(&a)


    if !value.CanSet() {
        fmt.Println(""go here"", value.CanSet())
        value = value.Elem() 
        fmt.Println(""go here"", value.CanSet())  
    }
    fmt.Println(""go here"", value.Type())    
    s := reflect.New(value.Type())
    fmt.Println(""go here"", s.Elem())
    value = reflect.AppendSlice(value, reflect.ValueOf(s.Elem()))
    value = reflect.AppendSlice(value, reflect.ValueOf([]int{1, 2}))                
    value = reflect.AppendSlice(value, reflect.ValueOf([]int{3, 4, 5, 6, 7, 8, 9})) 

    fmt.Println(value.Kind(), value.Slice(0, value.Len()).Interface())
    //>>slice [1 2 3 4 5 6 7 8 9]
}


But it gives an error:

panic: reflect: call of reflect.AppendSlice on struct Value

goroutine 1 [running]:
panic(0x100a60, 0x1040e1a0)
    /usr/local/go/src/runtime/panic.go:500 +0x720
reflect.flag.mustBe(0x99, 0x17)
    /usr/local/go/src/reflect/value.go:201 +0xe0
reflect.AppendSlice(0xfa7e0, 0x1040e130, 0x197, 0x1116a0, 0x1040e190, 0x99, 0x0, 0x0, 0x0, 0x2)
    /usr/local/go/src/reflect/value.go:1825 +0x60
main.main()
    /tmp/sandbox476529744/main.go:21 +0x800


golang playground
",3,39193188.0
131,38820997,Deadlock when spawning goroutine in a for loop,"Consider the following go playground

package main

import ""fmt""

func main() {

    var chan_array [2]chan int

    chan1 := make(chan int)
    chan2 := make(chan int)

    chan_array[0] = chan1
    chan_array[1] = chan2


    for i := 0; i < 2; i++ {
        go func() {

            select {
                case x := <- chan_array[i]:
                    if (x == 0) {
                        return
                    }       
                    fmt.Println(x)
            }
        }()
    }

    chan1<- 1
    chan2<- 2
    chan1<- 0
    chan2<- 0
}


The code above is trying to create 2 running goroutines with that listens to the channel to signal print or close.

But the above code run into dead lock.

I am not exactly sure why

Can someone point out my mistake?

Thanks
",2,38821129.0
132,36446675,Go: Passing a return value via an interface{} pointer,"I have a function that looks like this:

func Foo(result interface{}) error {
     ...
     json.Unmarshal([]byte(some_string), result)
     ...
}


Which is called like this:

var bar Bar
Foo(&bar)


Generally, Foo fetches a string that is then unmarshalled into the result. However, now I need to update it so that Foo sometimes loads data from another source and returns that instead. 

type Loader func() (interface{})

func Foo(result interface{}, Loader load) error {
     ...
     data := load()
     // result = data ???
     ...
}


Is there any way for me to assign this new value to result? I found that I can marshal the data into a string and then unmarshal it into result which works, but I can't imagine that's the best way.
",1,36448282.0
133,40985556,What does syscall.Stat_t.Dev map to?,"Golang's syscall.Stat_t has a Dev field, which I assume identifies the disk/device, see https://golang.org/src/syscall/ztypes_linux_amd64.go?s=1392:1688#L91

For example, for a syscall.Stat_t structure mapping to a file on my disk, Dev has value 51713; my question is: is that ID purely internal to Go? Or does it map to some OS ID (in which case, which one, and how can I see it with standard Unix CLI tools?)
",1,40986705.0
134,42701207,Golang program closes file before writing is finished,"I have implemented a custom Write interface for my cloud program.
My problem so far is that after i am done copying files to my writer and closed the Writer, the writer still has a few Writes to do(usually maybe 4 writes about 4096 bytes each). The last Write is usually less than 4096.

This has not happened yet but i know it is a probability of 1/4096 that the last Write is 4096 bytes and my program won't terminate.

I am using this for a zipping program and io.EOF is not effective as every write chunk has one, also checking if writer is closed comes too early while there are still some writes to do.

What is the best way to handle this situation?

***EDIT*****
I ended up implementing a more Robust Write(), Flush() and Close() method.Now everything is good if i use defer Close() but i still get the same problem if i manually call Close() at the end
",2,
135,26972615,A use case for importing with blank identifier in golang,"The Go programming language specification states: ""To import a package solely for its side-effects (initialization), use the blank identifier as explicit package name.""

For example:

import _ ""foo/bar""


I am having difficulty imagining a use case for this construct. The accepted answer for Usage of the `import` statement mentions a use case where a database driver may be loaded without the need for the importing program to use any of the exported functions of that package, but it leaves out the details to reader's imagination.

Are there real life examples (with code snippets and explanation) that illustrate this use case?
",3,26972898.0
136,39318255,Get nth return value from function in Go,"I have started learning Go yesterday and so far I am fascinated. But I bumped to a problem. 

Lets assume that function returns multiple vars (awesome feature).  How should I use only nth value and not first n-1 values? In example I just want to check whether key exists in hash map but do nothing with value. 

var value, hasElement = myMap[key]


The error I get is 

main.go:15: value declared and not used


If I just print value it will all be fine but that is not good. 
",1,39318297.0
137,43283349,Golang persistent channel accepting input from multiple function calls,"I have a function a:

func a(input *some_type) {
    // do sth.
    b(input)
    }


This function gets called multiple times.
I want a function b to wait indefinitely for input from function a and perform an action when it has collected n inputs.

func b(input *some_type) {
    // wait until received n inputs then do sth. with all inputs
    }


How would I go about doing this? My first thought was to use a sync.WaitGroup with a channel between a and b.
",1,43283541.0
138,31728656,"Why is ""err != nil""?","I have a situation where the value of a variable ""err error"" value can only be ""nil"" but asserts ""( err == nil ) == false"" once it has been reassigned.

Example code below:

package main

import (
    ""fmt""
    ""log""
)

type TestError struct {
    Message string
}

func (e *TestError) Error() string {
    return e.Message
}

func NewTestError(err error) *TestError {
    if err == nil {
            return nil
    }
    log.Printf(""NewTestError( ... ): creating new NewTestError err = %s"", err)
    return &TestError{Message: err.Error()}
}

func main() {
    var err error
    _, err = fmt.Printf(""excuse.\n"")
    err = NewTestError(err)
    log.Printf(""main( ... ): err == nil. %v"", (err == nil))
    log.Printf(""main( ... ): err = %#v"", err)
}


I get the following output from the above code:

excuse.
2015/07/30 08:28:28 main( ... ): err == nil. false
2015/07/30 08:28:28 main( ... ): err = (*main.TestError)(nil)


How can those last two lines be output?
",2,
139,29838185,How to detect additional mime type in Golang,"There are http.DetectContentType([]byte) function in net/http package. But only limited number of types are supported. How to add support of docx, doc, xls, xlsx, ppt, pps, odt, ods, odp files not by extension, but by the content.
As far as I know, there are some problems, because docx/xlsx/pptx/odp/odt files has the same signature as the zip file (50 4B 03 04).
",3,
140,42647857,Converting C# SHA1 code to Golang,"I need to convert some old C# code to Golang and I stuck somewhere. C# code looks like this 
`

 byte[] bytes = Encoding.Unicode.GetBytes(password);
 byte[] src = Encoding.Unicode.GetBytes(salt);
 byte[] dst = new byte[src.Length + bytes.Length];
 Buffer.BlockCopy(src, 0, dst, 0, src.Length);
 Buffer.BlockCopy(bytes, 0, dst, src.Length, bytes.Length);
 HashAlgorithm algorithm = HashAlgorithm.Create(""SHA1"");
 byte[] inArray = algorithm.ComputeHash(dst);
 return Convert.ToBase64String(inArray);


so I examined the code line by line and as I understand he used convert the salt and password byte array then he copied these arrays to 'dst' array. Then he used SHA1 algorithm and convert this array to base64string. 

My Golang code looks like this but It doesn't create the same string which stores on database.

s := ""fish123""
salt := ""227EA7ABD26E40608A6EDEB209058D93A632D1D1A52246D0A27F6E447B16AEBF""

h1 := sha1.New()
h1.Write([]byte(salt))
h1.Write([]byte(s))

hashedPassword := base64.StdEncoding.EncodeToString(h1.Sum(nil))


Can anyone find my fault? Thanks
",1,42648911.0
141,13214029,"Go build: ""Cannot find package"" (even though GOPATH is set)","Even though I have GOPATH properly set, I still can't get ""go build"" or ""go run"" to find my own packages. What am I doing wrong? Thank you so much!

$ echo $GOROOT
/usr/local/go

$ echo $GOPATH
/home/mitchell/go

$ cat ~/main.go
package main
import ""foobar""
func main() { }

$ cat /home/mitchell/go/src/foobar.go
package foobar

$ go build main.go
main.go:3:8: import ""foobar"": cannot find package

",3,13223578.0
142,31753282,Go - how to explicitly state that a structure is implementing an interface?,"Since Go puts a heavy emphasis on interfaces, I'm wondering how can I explicitly state that a structure is implementing an interface for clarity and errors checking in case some method is missing? I have seen two approaches so far, and I'm wondering which is correct and in accordance to Go specification.

Method 1 - anonymous field

type Foo interface{
    Foo()
}

type Bar struct {
    Foo
}
func (b *Bar)Foo() {
}


Method 2 - Explicit conversion

type Foo interface{
    Foo()
}

type Bar struct {
}
func (b *Bar)Foo() {
}
var _ Foo = (*Bar)(nil)


Are those methods correct, or is there some other way to do something like this?
",3,31753338.0
143,15825007,How to ignore fields with sscanf (%* is rejected),"I wish to ignore a particular field whilst processing a string with sscanf.

Man page for sscanf says

An optional '*' assignment-suppression character: scanf() reads input as directed by the conversion specification, but discards the input.  No corresponding pointer argument is required, and this specification is not included in the count of successful assignments returned by scanf().

Attempting to use this in Golang, to ignore the 3rd field:

if c, err := fmt.Sscanf(str, "" %s %d %*d %d "", &iface.Name, &iface.BTx, &iface.BytesRx); err != nil || c != 3 {


compiles OK, but at runtime err is set to:

bad verb %* for integer

Golang doco doesn't specifically mention the %* conversion specification, but it does say,

Package fmt implements formatted I/O with functions analogous to C's printf and scanf.

It doesn't indicate that %* is not implemented, so... Am I doing it wrong? Or has it just been quietly omitted? ...but then, why does it compile?
",1,15825149.0
144,12363030,Read from initial stdin in GO?,"I would like to read from the original stdin of a go program. For example, if I did echo test stdin | go run test.go, I would want to have access to ""test stdin"". I've tried reading from os.Stdin, but if there's nothing in it, then it will wait for input. I also tried checking the size first, but the os.Stdin.Stat().Size() is 0 even when input is passed in.

What can I do? 
",3,12384207.0
145,37979111,Golang Keeps File Serve Socket Open After Close,"I created a file server in golang and call the Close() method on the Listener.

When I try to access the Port on a new Web connection it appears the Socket is closed and I am unable to access the website. 

How ever if I referesh the page with a connection that has already been established.... the page reloads fine as if the socket was never closed? I am even able to still browse around the file system.

I noticed after 30 or so minutes the socket seems to force close.

Is there something I am missing to force the socket to drop all existing connections to prevent people from accessing the file server?

var fileListener net.Listener
host_string = ""127.0.0.1:8080""
fileListener, _ = net.Listen(""tcp"", host_string)
server := &http.Server{Addr: host_string, Handler:     
http.FileServer(http.Dir(""/""))}
go func() { server.Serve(fileListener) }()
fileListener.Close()

",1,37980397.0
146,37500810,Attribute system similar to HTTP Headers for local files,"I am in the process of writing a program and need some guidance. Essentially, I am trying to determine if a file has some marker or flag attached to it. Sort of like the attributes for a HTTP Header. 

If such a marker exists, that file will be manipulated in some way (moved to another directory).

My question is: Where exactly should I be storing this flag/marker? Do files have a system similar to HTTP Headers? I don't want to access or manipulate the contents of the file, just some kind of property of the file that can be edited without corrupting the actual file--and it must be rather universal among file types as my potential domain of file types is unbound. I have some experience with Web APIs so I am familiar with HTTP Headers and json. Does any similar system exist for local files in windows? I am especially interested in anyone who has professional/industry knowledge of common techniques that programmers use when trying to store 'meta data' in files in order to access them later. Or if anyone knows of where to point me, as I am unsure to what I should be researching. 

For the record, I am going to write a program for Windows probably using Golang or Python. And the files I am going to manipulate will be potentially all common ones (.docx, .txt, .pdf, etc.)

Thanks in advanced!
",2,37502101.0
147,34684265,Is this a block argument?,"I started learning Gin recently and in the README file comes the following code:

v1 := router.Group(""/v1"")
{
    v1.POST(""/login"", loginEndpoint)
    v1.POST(""/submit"", submitEndpoint)
    v1.POST(""/read"", readEndpoint)
}


I readed the source code for the method Group and is like this:

IRouter interface {
    IRoutes
    Group(string, ...HandlerFunc) *RouterGroup
}


Maybe I'm misunderstanding the syntaxis or missing something in the code (Im pretty new in Go) but it looks like it is passing a block as the second argument, is this possible in Go?
",2,34684432.0
148,38477567,How to create a map[string] [2]int in Go?,"I want to create a map[string][2]int in Go. I tried this at go playground but I got errors. How can I solve this?

fmt.Println(""Hello, playground"")
m:= make(map [string][2]int)
m[""hi""]={2,3}
m[""heello""][1]=1
m[""hi""][0]=m[""hi""][0]+1
m[""h""][1]=m[""h""][1]+1
fmt.Println(m)

",3,
149,23466497,How to truncate a string in a Golang template,"In golang, is there a way to truncate text in an html template?

For example, I have the following in my template:

{{ range .SomeContent }}
 ....
    {{ .Content }}
 ....

{{ end }


{{ .Content }} produces: Interdum et malesuada fames ac ante ipsum primis in faucibus. Aliquam tempus sem ipsum, vel accumsan felis vulputate id. Donec ultricies sem purus, non aliquam orci dignissim et. Integer vitae mi arcu. Pellentesque a ipsum quis velit venenatis vulputate vulputate ut enim.

I would like to reduce that to 25 characters.
",4,
150,33681662,How to route http Get via tunnel in Go?,"I have a ssh tunnel to my server (via port: 9998). I want my http GET/POST requests to be routed through this port in Go. In java I would specify the DsocksProxyHost and DsocksProxyPort. I am looking for a similar option in Go. Thank you for the help in advance.
",1,33691694.0
151,38601959,Router Not Finding Controller Beego,"I had a beego application that was working, and then my router stopped finding the controller, and I have no idea why. No matter what url I type, the router does not direct to the controller complaining nomatch 


  2016/07/26 17:24:50 [router.go:829][D] | GET        | /                                        | 478.352µs        | notmatch   | 


app.conf

appname = exampleapp 
httpport = 8080 
runmode = dev


router.go

package routers

import (
    ""github.com/astaxie/beego""
    ""example/controllers""


)

func init() {
     beego.Router(""/"", &controllers.MainController{})
}


default.go (controller)

package controllers

import (
        ""github.com/astaxie/beego""
)

type MainController struct {
        beego.Controller
}

 func (c *MainController) Get() {
        c.Data[""Website""] = ""http://localhost:8080""
        c.TplName = ""index.tpl""
 }


main.go

package main

import (
        ""fmt""
        ""github.com/astaxie/beego""
)

func main() {
        fmt.Pritnln(""Starting Beego App"")
        beego.Run()
        fmt.Println(""Finished Running Beego App"")
}


I believe this is following the specifications of  http://beego.me/docs/mvc/controller/router.md so I would like to understand why it does not find the controller.       
",1,38610258.0
152,38045375,go1.6 File method WriteStringfrequent calls led to a large system cache,"go1.6 File method WriteStringfrequent calls led to a large system cache.  

How to solve this problem.

go env: linux  amd64.

Is this a problem of Linux system?

code:

package main

import (
    ""fmt""
    ""net/http""
    ""os""
    ""time""
)

var logCtxCh chan *http.Request
var accessLogFile *os.File

type HandlerHttp struct{}

func (this *HandlerHttp) ServeHTTP(w http.ResponseWriter, req *http.Request) {
    sendAccessLog(req) 
    w.Write([]byte(""Hello Word""))
}

func main() {
    s := &http.Server{
        Addr:    "":8012"",
        Handler: &HandlerHttp{},
    }
    logCtxCh = make(chan *http.Request, 500)
    go startAcessLog()

   err:= s.ListenAndServe()
   fmt.Println(err.Error())
}

func startAcessLog() {
    for {
        select {
        case ctx := <-logCtxCh:
            handleAccessLog(ctx)
        }
    }
}

func sendAccessLog(req *http.Request) {
    logCtxCh <- req
}

func handleAccessLog(req *http.Request) {
    uri := req.RequestURI
    ip := req.RemoteAddr
    agent := req.UserAgent()
    refer := req.Referer()
    method := req.Method
    now := time.Now().Format(""2006-01-02 15:04:05"")

    logText := fmt.Sprintf(""%s %s %s %s %s %s\n"",
        now,
        ip,
        method,
        uri,
        agent,
        refer,
    )

    fileName := fmt.Sprintf(""/data/logs/zyapi/access_zyapi%s.log"",
        time.Now().Format(""2006010215""),
    )
    writeLog(fileName, logText)
}

func writeLog(fileName, logText string) {
    var err error
    var exist = true

    if _, err = os.Stat(fileName); os.IsNotExist(err) {
        exist = false
    }

    if exist == false {
        if accessLogFile != nil {
            accessLogFile.Sync()
            accessLogFile.Close()
        }

        accessLogFile, err = os.OpenFile(fileName, os.O_WRONLY|os.O_CREATE|os.O_TRUNC, 0644)
        if err == nil {
            _, err = accessLogFile.WriteString(logText)
        }
        if err != nil {
            fmt.Errorf(err.Error())
        }
    } else {
        if accessLogFile == nil {
            accessLogFile, err = os.OpenFile(fileName, os.O_WRONLY|os.O_APPEND, 0666)
            if err != nil {
                fmt.Errorf(err.Error())
                return
            }
        }
        _, err = accessLogFile.WriteString(logText)
        if err != nil {
            fmt.Errorf(err.Error())
        }
    }
}


test:

ab -n100000 -c10 -k ""http://127.0.0.1:8012/""
ab -n100000 -c10 -k ""http://127.0.0.1:8012/""
ab -n100000 -c10 -k ""http://127.0.0.1:8012/""
ab -n100000 -c10 -k ""http://127.0.0.1:8012/""
ab -n100000 -c10 -k ""http://127.0.0.1:8012/""


After running several times the system file cache becomes very large

CONTAINER    CPU %   MEM USAGE/LIMIT   MEM %     NET I/O   BLOCK I/O

api_8011  38.47%    6.442GB/6.442GB   100.00%    0B/0B     0B/115.4MB 

api_8012  36.90%    6.442GB/6.442GB   99.99%     0B/0B     0B/115.6 MB

",1,
153,32705948,N-ary tree in Go,"I am evaluating Go to replace Node.js infrastructure and I am not sure how to create a structure to represent a N-ary tree.

In JavaScript, I parse a file to build up a hierarchy of geographic locations of arbitrary depth. Here is an example:

{
  'country1': {
    'area1': {
      'town1': {}, 
      'town2': {}
    },
    'area2': {
      'town3': {}
    }
  }
}


Towns could expand into specific roads and so on. The hierarchy doesn't have a fixed depth.

How can I create an equivalent structure in Go?
",2,32706212.0
154,11003692,Filter out broken pipe errors,"I'm getting an error returned from an io.Copy call, to which I've passed a socket (TCPConn) as the destination. It's expected that the remote host will simply drop the connection when they've had enough, and I'm not receiving anything from them.

When the drop occurs, I get this error:

write tcp 192.168.26.5:21277: broken pipe


But all I have is an error interface. How can I differentiate broken pipe errors from other kinds of error?

if err.Errno == EPIPE...

",2,11004221.0
155,34548039,how to organize gorilla mux routes?,"i am using Gorilla Mux for writing a REST API and i am having trouble organizing my routes, currently all of my routes are defined in the main.go file like this

//main.go
package main

import (
    ""NovAPI/routes""
    ""fmt""
    ""github.com/gorilla/mux""
    ""net/http""
)

func main() {

    router := mux.NewRouter().StrictSlash(true)

    router.HandleFunc(""/hello"", func(res http.ResponseWriter, req *http.Request) {
        fmt.Fprintln(res, ""Hello"")
    })

    router.HandleFunc(""/user"", func(res http.ResponseWriter, req *http.Request) {
        fmt.Fprintln(res, ""User"")
    })

    router.HandleFunc(""/route2"", func(res http.ResponseWriter, req *http.Request) {
        fmt.Fprintln(res, ""Route2"")
    })

    router.HandleFunc(""/route3"", func(res http.ResponseWriter, req *http.Request) {
        fmt.Fprintln(res, ""Route3"")
    })

    // route declarations continue like this

    http.ListenAndServe("":1128"", router)

}


so what i want to do is take out and split this route declaration into multiple files, how would i go about doing that? thanks in advance.
",2,
156,44256484,Unmarshall json reference types,"I'm trying to write a working example to test ""Reference Types"" section of this link.

But I'm unable to understand how this should work. The example I'm trying to write without success is provided below, just for reference:

package main

import (
    ""fmt""
    ""log""
    ""encoding/json""
)

type Foo1 struct {
    Val     int
}

type Foo2 struct {
    Name    string
}

type IncomingMsg struct {
    F1 *Foo1
    F2 *Foo2
}

func main() {
    b := []byte(`{""F1"" : {""Val"":13}}`)
//  b := []byte(`{""F2"" : {""Name"":""Hello""}}`)

    var msg IncomingMsg

    err := json.Unmarshal(b, &msg)
    if err != nil {
        log.Fatal(err)
    }

    if msg.F1 != nil {
        fmt.Println(msg.F1.Val)
    }

    if msg.F2 != nil {
        fmt.Println(msg.F2.Name)
    }
}


Can some of you with more experience with Go help with this issue?

EDIT: The provided test has been updated, now is working as expected. Thank you Mr Adam for the answer provided, it helped me a lot to understand this issue! :)
",1,44256618.0
157,19605076,Go Auto-Recompile and Reload Server on file change,"I know AppEngine does this, but I'm not coding for it. 

I tried using Guard from Ruby world, to listen on changes on .go files, and execute the following commands:

killall foo
go build -race
./foo &


But it never sends foo into background, it just hangs indefinitely.

How are you guys solving this problem? Solution has to be cross-platform too (GNU/Linux and Mac).
",2,
158,35906405,Why don't Go slices just switch the underlying array on reallocation?,"A slice contains three components: length, capacity and a pointer to the underlying array.

When we try to append to a slice that is full (len(s) == cap(s)), a larger array will be allocated.

I read in a book that we have to assign the return value of append back to the slice, because a different slice may be returned due to reallocation of the underlying array.

runes = append(runes, r)

But I don't know why this is necessary. Can't we just reallocate a new array and update the pointer of the original slice instance?
",1,
159,18939631,Making SQL INSERT statement easier to read,"I'm working on a program in Go, that makes heavy usage of MySQL. For sake of readability, is it possible to include the value of a column after each column name in an INSERT statement? Like:

INSERT INTO `table` (`column1` = 'value1', `column2` = 'value2'...);


instead of

INSERT INTO `table` (`column`, `column2`,...) VALUES('value1', 'value2'...);


so that it's easier to see which value is associated with which column, considering the SQL strings can often get fairly long
",2,18939646.0
160,27280158,If - Else condition,"I am interested in adding content to a GO template based on some conditions. I have a struct defined like this - 

{

    ""resourceActions"": {
    ""update"": {
    ""input"": null,
    ""output"": ""instance"",
    },
    ""stop"": {
    ""input"": ""instanceStop"",
    ""output"": ""instance"",
    },
    ""console"": {
    ""input"": ""instanceConsoleInput"",
    ""output"": ""instanceConsole"",
    },
    ""restart"": {
    ""input"": null,
    ""output"": ""instance"",
    },
    ""remove"": {
    ""input"": null,
    ""output"": ""instance"",
    },

}


I need to iterate over ""resourceActions"" and if the action defined within that like update, restart etc has input as null then generate ""A()"" else generate A(input *{inputVAL})

Example - 

{

    for Update -  A()
    for stop -  A(input *instanceStop)
    for console - A(input *instanceConsoleInput)
    for restart - A()

}


How can I do this in GO-tempaltes
",1,27281673.0
161,38892197,"How to convert a number to string, of the form 1=A1, 2=A2, ... 9=B1, ... 64=H8 in Golang?","This code is giving A1..A9, B0..B9, C0..C9, ....

But I only want A1..A8, B1..B8, C1..C8, D1..D8, E1..E8, F1..F8, G1..G8, H1..H8 (1-64).

package main

import (
    ""fmt""
)

func ToString(n int8) string {

    return string((n/10)+65) + string(((n%10)+49)-1)

}

func main() {
    var i int8
    for i = 1; i < 11; i++ {
        fmt.Println(ToString(i))
    }
}

",2,38892450.0
162,31385487,"GOLANG, HTTP having ""use of closed network connection"" error","I am getting a lot of error like below mentioned, 

read tcp xx.xx.xx.xx:80: use of closed network connection

read tcp xx.xx.xx.xx:80: connection reset by peer

//function for HTTP connection

func GetResponseBytesByURL_raw(restUrl, connectionTimeOutStr, readTimeOutStr string) ([]byte, error) {
    connectionTimeOut, _ /*err*/ := time.ParseDuration(connectionTimeOutStr)
    readTimeOut, _ /*err*/ := time.ParseDuration(readTimeOutStr)
    timeout := connectionTimeOut + readTimeOut // time.Duration((strconv.Atoi(connectionTimeOutStr) + strconv.Atoi(readTimeOutStr)))
    //timeout = 200 * time.Millisecond
    client := http.Client{
        Timeout: timeout,
    }
    resp, err := client.Get(restUrl)
    if nil != err {
        logger.SetLog(""Error GetResponseBytesByURL_raw |err: "", logs.LevelError, err)
        return make([]byte, 0), err
    }
    defer resp.Body.Close()
    body, err := ioutil.ReadAll(resp.Body)
    return body, err
}


Update (July 14):

Server : NumCPU=8, RAM=24GB, GO=go1.4.2.linux-amd64

I am getting such error during some high traffic.
20000-30000 request per minutes, and I have a time frame of 500ms to fetch response from third party api. 

netstat status from my server (using : netstat -nat | awk '{print $6}' | sort | uniq -c | sort -n) to get frequency

      1 established)
      1 Foreign
      9 LISTEN
     33 FIN_WAIT1
    338 ESTABLISHED
   5530 SYN_SENT
  32202 TIME_WAIT


sysctl -p

**sysctl -p**
fs.file-max = 2097152
vm.swappiness = 10
vm.dirty_ratio = 60
vm.dirty_background_ratio = 2
net.ipv4.tcp_synack_retries = 2
net.ipv4.ip_local_port_range = 2000 65535
net.ipv4.tcp_rfc1337 = 1
net.ipv4.tcp_fin_timeout = 5
net.ipv4.tcp_keepalive_time = 300
net.ipv4.tcp_keepalive_probes = 5
net.ipv4.tcp_keepalive_intvl = 15
net.core.rmem_default = 31457280
net.core.rmem_max = 12582912
net.core.wmem_default = 31457280
net.core.wmem_max = 12582912
net.core.somaxconn = 65536
net.core.netdev_max_backlog = 65536
net.core.optmem_max = 25165824
net.ipv4.tcp_mem = 65536 131072 262144
net.ipv4.udp_mem = 65536 131072 262144
net.ipv4.tcp_rmem = 8192 87380 16777216
net.ipv4.udp_rmem_min = 16384
net.ipv4.tcp_wmem = 8192 65536 16777216
net.ipv4.udp_wmem_min = 16384
net.ipv4.tcp_max_tw_buckets = 1440000
net.ipv4.tcp_tw_recycle = 0
net.ipv4.tcp_tw_reuse = 1
net.ipv6.bindv6only = 1
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.icmp_echo_ignore_broadcasts = 1
error: ""net.ipv4.icmp_ignore_bogus_error_messages"" is an unknown key
kernel.exec-shield = 1
kernel.randomize_va_space = 1
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1
net.ipv4.icmp_ignore_bogus_error_responses = 1
net.ipv4.ip_forward = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

",2,
163,42378878,map[string] struct inside struct,"I have a JSON file that looks like this:

{
  ""jailbreaks"": [
    {
      ""jailbroken"": false,
      ""name"": """",
      ""version"": """",
      ""url"": """",
      ""anleitung"": [],
      ""ios"": {
        ""start"": ""10.2.1""
      },
      ""caveats"": """",
      ""platforms"": []
    },
    {
      ""jailbroken"": true,
      ""name"": ""Yalu102"",
      ""version"": ""beta 6"",
      ""url"": ""https://domain-dl.tld"",
      ""anleitung"": [
        { ""blog"": ""title"", ""link"": ""http://domain.tld/"" },
        { ""blog"": ""Test"", ""link"": ""http://google.at"" }
      ],
      ""ios"": {
        ""start"": ""10.2""
      },
      ""caveats"": ""some text here"",
      ""platforms"": [
        ""Windows"",
        ""OS X"",
        ""Linux""
      ]
    },


And I create the object to work with like this:

type Jailbreak struct {
    Jailbroken bool   `json:""jailbroken""`
    Name       string `json:""name""`
    Version    string `json:""version""`
    URL        string `json:""url""`
    Anleitung  map[string]struct {
        Name string `json:""blog""`
        Link string `json:""link""`
    } `json:""anleitung""`

    Firmwares struct {
        Start string `json:""start""`
        End   string `json:""end""`
    } `json:""ios""`

    Platforms []string `json:""platforms""`
    Caveats   string   `json:""caveats""`
}


When I want to build my go program I get an error, that the JSON file cannot be read. But as soon as I delete the map[string]struct I can compile and run the program without any error and everything works fine. 
Am I messing around with something or is there an error in my JSON file?
",2,
164,23956929,Generic Go function to save bytes into a fixed-size byte array buffer,"How do I to write a generic Go function to push bytes into a byte array?

I suppose appending to a slice is not a perfect fit, because the array should not grow.
However the function should handle any array size.
I am considering to slice the array just to make the function accept any array size.
See my sketch below.

Is there a cleaner way?

Play: http://play.golang.org/p/Gii9-JM33E

func push(buf []byte, size int, b byte) (int, error) {
    max := len(buf)

    if max < 1 {
        return size, fmt.Errorf(""buffer underflow: max=%d char=%d"", max, b)
    }

    if size >= max {
        return size, fmt.Errorf(""buffer overflow: size=%d max=%d char=%d"", size, max, b)
    }

    buf[size] = b

    return size + 1, nil
}


Usage:

buf := [3]byte{}
size := 0
var err error
size, err = push(buf[:], size, 'a')

",2,23957533.0
165,44188272,GOlang / PostgreSQL / GORM - Auto Migration: Issues with columns\,"Issues with auto migration (i think). I can conclude the column does not exist via psql console. I can insert the column manually via terminal/console/SQL but prefer to resolve this with auto migration.

Thank you for your read and/or action.

TERMINAL OUTPUT:


Start Web Server: ""(pq: column ""password_hash"" contains null
values)""
Submit POST: ""(pq: column ""password_hash"" of relation ""accounts"" does not exist)""

",1,
166,24728805,What does UDPConn Close really do?,"If UDP is a connectionless protocol, then why does UDPConn have a Close method? The documentation says ""Close closes the connection"", but UDP is connectionless. Is it good practice to call Close on a UDPConn object? Is there any benefit?

http://golang.org/pkg/net/#UDPConn.Close
",1,24729087.0
167,42355485,How to decompress/deflate PDF Stream,"Working with the 2016-W4 pdf, which has 2 large streams (page 1 & 2), along with a bunch of other objects and smaller streams. I'm trying to deflate the stream(s), to work with the source data, but am struggling. I'm only able to get corrupt inputs and invalid checksums errors.  

I've written a test script to help debug, and have pulled out smaller streams from the file to test with.

Here are 2 streams from the original pdf, along with their length objects:

stream 1:

149 0 obj
<< /Length 150 0 R /Filter /FlateDecode /Type /XObject /Subtype /Form /FormType
1 /BBox [0 0 8 8] /Resources 151 0 R >>
stream
x+TT(T0B ,JUWÈS0Ð37±402V(NFJSþ¶
«
endstream
endobj
150 0 obj
42
endobj


stream 2

142 0 obj
<< /Length 143 0 R /Filter /FlateDecode /Type /XObject /Subtype /Form /FormType
1 /BBox [0 0 0 0] /Resources 144 0 R >>
stream
x+Tçã
endstream
endobj
143 0 obj
11
endobj


I copied just the stream contents into new files within Vim (excluding the carriage returns after stream and before endstream).

I've tried both:


compress/flate (rfc-1951) – (removing the first 2 bytes (CMF, FLG))
compress/zlib (rfc-1950)


I've converted the streams to []byte for the below:

package main

import (
    ""bytes""
    ""compress/flate""
    ""compress/gzip""
    ""compress/zlib""
    ""fmt""
    ""io""
    ""os""
)

var (
    flateReaderFn = func(r io.Reader) (io.ReadCloser, error) { return flate.NewReader(r), nil }
    zlibReaderFn  = func(r io.Reader) (io.ReadCloser, error) { return zlib.NewReader(r) }
)

func deflate(b []byte, skip, length int, newReader func(io.Reader) (io.ReadCloser, error)) {
    // rfc-1950
    // --------
    //   First 2 bytes
    //   [120, 1] - CMF, FLG
    //
    //   CMF: 120
    //     0111 1000
    //     ↑    ↑
    //     |    CM(8) = deflate compression method
    //     CINFO(7)   = 32k LZ77 window size
    //
    //   FLG: 1
    //     0001 ← FCHECK
    //            (CMF*256 + FLG) % 31 == 0
    //             120 * 256 + 1 = 30721
    //                             30721 % 31 == 0

    stream := bytes.NewReader(b[skip:length])
    r, err := newReader(stream)
    if err != nil {
        fmt.Println(""\nfailed to create reader,"", err)
        return
    }

    n, err := io.Copy(os.Stdout, r)
    if err != nil {
        if n > 0 {
            fmt.Print(""\n"")
        }
        fmt.Println(""\nfailed to write contents from reader,"", err)
        return
    }
    fmt.Printf(""%d bytes written\n"", n)
    r.Close()
}

func main() {
    //readerFn, skip := flateReaderFn, 2 // compress/flate RFC-1951, ignore first 2 bytes
    readerFn, skip := zlibReaderFn, 0 // compress/zlib RFC-1950, ignore nothing

    //                                                                                                ⤹ This is where the error occurs: `flate: corrupt input before offset 19`.
    stream1 := []byte{120, 1, 43, 84, 8, 84, 40, 84, 48, 0, 66, 11, 32, 44, 74, 85, 8, 87, 195, 136, 83, 48, 195, 144, 51, 55, 194, 177, 52, 48, 50, 86, 40, 78, 70, 194, 150, 74, 83, 8, 4, 0, 195, 190, 194, 182, 10, 194, 171, 10}
    stream2 := []byte{120, 1, 43, 84, 8, 4, 0, 1, 195, 167, 0, 195, 163, 10}

    fmt.Println(""----------------------------------------\nStream 1:"")
    deflate(stream1, skip, 42, readerFn) // flate: corrupt input before offset 19

    fmt.Println(""----------------------------------------\nStream 2:"")
    deflate(stream2, skip, 11, readerFn) // invalid checksum
}


I'm sure I'm doing something wrong somewhere, I just can't quite see it.

(The pdf does open in a viewer)
",2,42377224.0
168,23192262,How would you set and clear a single bit in Go?,"In Golang, how do you set and clear individual bits of an integer? For example, functions that behave like this:

 clearBit(129, 7) // returns 1
 setBit(1, 7)     // returns 129

",2,23192263.0
169,23872323,How to use Jar file in Golang?,"Is it possible to use jar file class methods in Go code. If so than please forward me the link for the same. I have searched the same in 


  GoDoc/github.com/code.google


But there was no such package build.
",1,23872527.0
170,30992532,Go Anaconda twitter media upload with tweet,"I can tweet, and upload media, but I cannot figure out how to tweet with the media using anaconda(""github.com/ChimeraCoder/anaconda""). The media_id in the example was from a sucessfull media upload call. 

mediaResponse, err := api.UploadMedia(""R0lGODlhEAALALMMAOXp8a2503CHtOrt9L3G2+Dl7vL0+J6sy4yew1Jvp/T2+e/y9v///wAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEAAAAh+QQFCwAMACwAAAAAEAALAAAEK5DJSau91KxlpObepinKIi2kyaAlq7pnCq9p3NZ0aW/47H4dBjAEwhiPlAgAIfkECQsADAAsAAAAAAQACwAABA9QpCQRmhbflPnu4HdJVAQAIfkECQsADAAsAAAAABAACwAABDKQySlSEnOGc4JMCJJk0kEQxxeOpImqIsm4KQPG7VnfbEbDvcnPtpINebJNByiTVS6yCAAh+QQJCwAMACwAAAAAEAALAAAEPpDJSaVISVQWzglSgiAJUBSAdBDEEY5JMQyFyrqMSMq03b67WY2x+uVgvGERp4sJfUyYCQUFJjadj3WzuWQiACH5BAkLAAwALAAAAAAQAAsAAAQ9kMlJq73hnGDWMhJQFIB0EMSxKMoiFcNQmKjKugws0+navrEZ49S7AXfDmg+nExIPnU9oVEqmLpXMBouNAAAh+QQFCwAMACwAAAAAEAALAAAEM5DJSau91KxlpOYSUBTAoiiLZKJSMQzFmjJy+8bnXDMuvO89HIuWs8E+HQYyNAJgntBKBAAh+QQFFAAMACwMAAIABAAHAAAEDNCsJZWaFt+V+ZVUBAA7"")
if err != nil {
    fmt.Println(err)
}

//v := url.Values{}
//v.Set(""media_ids"", string(mediaResponse.MediaID))
fmt.Println(mediaResponse)
tweet := `
""media_ids"": 612877656984416256,
""status"": ""hello""
`

result, err := api.PostTweet(tweet, nil)
if err != nil {
    fmt.Println(err)
} else {
    fmt.Println(result)
}


Can someone assist in telling me how to parse the json or call the PostTweet with the media id? I've also tried adding the media to url.Values without sucess.
",2,
171,33926629,How to create a three-dimensional array in Golang,"I'm trying to create a three-dimensional array which contains blocks (like a rubiks-cube).

I tried many things but I can't get it to work.

func generateTiles(x int, y int, z int) [][][]*tile{
  var tiles [][][]*tile

  // Something here
  // resulting in a x by y by z array
  // filled with *tile

  return tiles
}


Any suggestions?
",4,33926716.0
172,23713146,"GoLang, ""hash.Write"" , where did the ""write()"" function come from?","func hash(s string) uint32 {
    h := fnv.New32a()
    h.Write([]byte(s))
    return h.Sum32()
}


For this code piece. I understand what type is h. It is hash.
But for Hash type, I didn't see any Write() method. http://golang.org/pkg/hash/  what is this Write()?

thanks
",1,23713214.0
173,38178920,How to redefine/mock a method in Go for test purposes?,"I am creating tests for a Go library. And I'm catching an error:


  cannot assign to


I have the following code (https://play.golang.org/p/kf0gANb-p-):

package main

import (
    ""bytes""
    ""fmt""

    ""os/exec""
    ""strconv""
    ""strings""

)
const (
    CONSOLE         = ""dialog""
    KDE             = ""kdialog""
    GTK             = ""gtkdialog""
    X               = ""Xdialog""
    DIALOG_TEST_ENV = ""test_env""
    AUTO            = ""auto""
)

const (
    DIALOG_ERR_CANCEL = ""exit status 1""
    DIALOG_ERR_HELP   = ""exit status 2""
    DIALOG_ERR_EXTRA  = ""exit status 3""
)
type Dialog struct {
    environment string
    parentId    int
    title       string
    backtitle   string
    label       string
    height      int
    width       int
    left        int
    top         int
    shadow      bool
    helpButton  bool
    helpLabel   string
    extraLabel  string
    cancelLabel string
    okLabel     string
    beforeDtype []string
    beforeSize  []string
    afterSize   []string
    lastCmd     []string
}

func (d *Dialog) Yesno() bool {
    if _, err := d.exec(""yesno"", true); err != nil {
        if err.Error() == DIALOG_ERR_CANCEL {
            return false
        }
    }
    return true
}

func NewTestDialogRAW(environment string, parentId int) Dialog {
    var res = new(Dialog)
    LastCMD = []string{}
    return *res
}
func (d *Dialog) exec(dType string, allowLabel bool) (string, error) {
    var arg string
    cmd := exec.Command(d.environment)

    if d.okLabel != """" {
        cmd.Args = append(cmd.Args, ""--ok-label"", d.okLabel)
    }
    if d.extraLabel != """" {
        cmd.Args = append(cmd.Args, ""--extra-button"")
        cmd.Args = append(cmd.Args, ""--extra-label"", d.extraLabel)
    }
    if d.helpButton {
        cmd.Args = append(cmd.Args, ""--help-button"")
        if d.helpLabel != """" {
            cmd.Args = append(cmd.Args, ""--help-label"", d.helpLabel)
        }
    }
    if d.shadow == false {
        cmd.Args = append(cmd.Args, ""--no-shadow"")
    }
    if d.backtitle != """" {
        cmd.Args = append(cmd.Args, ""--backtitle"", d.backtitle)
    }
    if d.cancelLabel != """" {
        cmd.Args = append(cmd.Args, ""--cancel-label"", d.cancelLabel)
    }
    if d.title != """" {
        cmd.Args = append(cmd.Args, ""--title"", d.title)
    }
    for _, arg := range d.beforeDtype {
        cmd.Args = append(cmd.Args, arg)
    }
    cmd.Args = append(cmd.Args, ""--""+dType)

    if allowLabel == true {
        cmd.Args = append(cmd.Args, d.label)
    }
    for _, arg = range d.beforeSize {
        cmd.Args = append(cmd.Args, arg)
    }
    if d.environment != KDE {
        cmd.Args = append(cmd.Args, strconv.Itoa(d.height))
        cmd.Args = append(cmd.Args, strconv.Itoa(d.width))
    }
    for _, arg = range d.afterSize {
        cmd.Args = append(cmd.Args, arg)
    }
    if d.environment == CONSOLE {
        cmd.Args = append(cmd.Args, ""--stdout"")
    } else {
        cmd.Args = append(cmd.Args, ""--attach"")
        cmd.Args = append(cmd.Args, strconv.Itoa(d.parentId))
    }

    var out bytes.Buffer
    cmd.Stdout = &out
    var err error
    if d.environment != DIALOG_TEST_ENV {
        err = cmd.Run()
    }
    d.lastCmd = cmd.Args

    //d.reset()
    return strings.Trim(out.String(), ""\r\n ""), err
}



func main() {
var tests = []bool{true, false}
for _,expected_val := range tests {
    fmt.Println(""Hello, playground "",expected_val )
    }
}


I tried to test it but I don't know how to redefine the method?

main_test.go:

import (
    ""fmt""
    ""testing""
)
func TestYesNo(t *testing.T) {
    d := NewTestDialogRAW(DIALOG_TEST_ENV, 0)
    d.Yesno()
    x := LastCMD
    expected_str := ""[ --no-shadow --yesno  0 0 --attach 0]""
    if fmt.Sprintf(""%v"", x) != expected_str {
        t.Errorf(""Expected %v, actual %v "", expected_str, x)
    }
    f := func(dType string, allowLabel bool) (string, error) {
        return """", fmt.Errorf(DIALOG_ERR_CANCEL)
    }
    d.exec = f    
}


go test ./... -v

# _/root/Development/git-repos/go-dialog
./dialog_test.go cannot assign to d.exec
FAIL    _/root/Development/git-repos/go-dialog [build failed]

",1,38179313.0
174,8032170,How to assign string to bytes array,"I want to assign string to bytes array:

var arr [20]byte
str := ""abc""
for k, v := range []byte(str) {
  arr[k] = byte(v)
}


Have another method?
",8,
175,29213429,Checking if a file is in a given directory,"I've got a situation where I'd like to check whether a particular path lands inside of a particular directory. My first instinct was to do something like

filepath.HasPrefix(filepath.Clean(path), dir)


but the procedure filepath.HasPrefix is documented as existing for historic reasons only. Am I going to get the same effect by using strings.HasPrefix, or is there something I'm missing?
",2,29213654.0
176,41480543,How to make Go print enum fields as string?,"You print an enum that implements Stringer using ""%v"", it will print its string value. If you declare the same enum inside a struct and print the struct using ""%v"", it will print enum's numeric value. Is there a way to print the string value of a enum field?

Sample (https://play.golang.org/p/AP_tzzAZMI):

package main

import (
    ""fmt""
)

type MyEnum int

const (
    Foo MyEnum = 1
    Bar MyEnum = 2
)

func (e MyEnum) String() string {
    switch e {
    case Foo:
        return ""Foo""
    case Bar:
        return ""Bar""
    default:
        return fmt.Sprintf(""%d"", int(e))
    }
}

type MyStruct struct {
    field MyEnum
}

func main() {
    info := &MyStruct{
        field: MyEnum(1),
    }
    fmt.Printf(""%v\n"", MyEnum(1))
    fmt.Printf(""%v\n"", info)
    fmt.Printf(""%+v\n"", info)
    fmt.Printf(""%#v\n"", info)
}


Prints:

Foo
&{1}
&{field:1}
&main.MyStruct{field:1}

",1,41480652.0
177,43462908,Unable to declare Kind type for Kubernetes API Type Declarations,"I'm relatively new to golang and need some help pointing to the right direction.

I'm trying to declare a new Deployment type.

My imports look like:

import (
  ""encoding/json""
  ""fmt""
  yaml ""gopkg.in/yaml.v2""
  ""io/ioutil""
  metav1 ""k8s.io/apimachinery/pkg/apis/meta/v1""
  ""k8s.io/kubernetes/pkg/api/v1""
  ""k8s.io/kubernetes/pkg/apis/extensions/v1beta1""
)


When I try to create a Deployment Object like:

  test := v1beta1.Deployment{
    Spec: v1beta1.DeploymentSpec{
      Template: v1.PodTemplateSpec{
        Spec: v1.PodSpec{
          Containers: []v1.Container{{
            Name:  ""test"",
            Image: ""image_url"",
          },
          },
        },
      },
    },
  }


It works, but the Deployment Object that returns doesn't have a Kind which is necessary to identify the object.

According to https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/extensions/types.go#L162

There's an embedded metav1.TypeMeta which has the Kind object that I need. (For reference: https://github.com/kubernetes/apimachinery/blob/master/pkg/apis/meta/v1/types.go#L38)

I tried declaring metav1.TypeMeta in the struct literal like:

  test := v1beta1.Deployment{
    metav1.TypeMeta: metav1.TypeMeta{Kind: ""Deployment""}
    Spec: v1beta1.DeploymentSpec{
      Template: v1.PodTemplateSpec{
        Spec: v1.PodSpec{
          Containers: []v1.Container{{
            Name:  ""test"",
            Image: ""image_url"",
          },
          },
        },
      },
    },
  } 


But I get a 

unknown field '""k8s.io/apimachinery/pkg/apis/meta/v1"".TypeMeta' in struct literal of type v1beta1.Deployment

I suspect it is due to metav1.TypeMeta declaration in the Deployment struct is an unexported field.

How should I declare Kind?
",1,
178,30171693,Execute test cases in a pre-defined order,"Is there a way to execute test cases in GoLang in a pre-defined order.  

P.S: I am writing test cases for life cycle of a event. So I have different api's for all the CURD operations. I want to run these test cases in a particular order as only if an event is created it can be destroyed.

Also can I get some value from one test case and pass it as input to another. (example:- To test the delete event api, I need a event_id which i get when I call create_event test case)

I am new to GoLang, can someone please guide me through.

Thanks in advance
",1,30171872.0
179,33557401,Unmarshal Nested xml with Go,"I have the following snippet of code that I have been banging my head on the wall trying to make it work.  I have searched everywhere for a solution, but none of the ones that I have found seem to work.  

It seems that I have an issue with my mapping for the xml.Unmarshal command as it pertains to nested fields.  The code below works for retrieving the first value which is called unit, and is on the top level of the xml code.  

The other two fields come up as zero, and they are nested two level deep.  That implies that the structure isn't set up correctly.  Here is the code.

package main

import (
    ""encoding/xml""
    ""fmt""
)

type datevalue struct {
    Date  int     `xml:""date""`
    Value float32 `xml:""value""`
}

type pv struct {
    XMLName    xml.Name  `xml:""series""`
    Unit       string    `xml:""unit""`
    datevalues datevalue `xml:""values>dateValue""`
}

func main() {
    contents := `
                   DAY
                   WhINVERTER
                   
                        2015-11-04 00:00:00
                        5935.405
                   
                `

    m := &pv{}
    xml.Unmarshal([]byte(contents), &m)
    fmt.Printf(""%s %f %d\n"", m.Unit, m.datevalues.Value, m.datevalues.Date)
}


And here is the output:

Wh 0.000000 0

",1,
180,36734721,How to rename result field in golang rethinkdb driver gorethink?,"r.table('customers')
  .map(function(purchase) {
      return {zip:customer('address')('zip'), product:purchase('name')};
    })      
 .run(...)


How can i represent map({""new_column_name"":Row.Field(""original_column_name"")}) in 
gorethink

Any help is appreciated...
",1,36826936.0
181,42086547,golang type array containing structs,"I am trying to create a pseudo queue structure and insert jobs structs inside it. What am I doing wrong ?

import ""fmt""

type Job struct {
    Type string
    Url string
}

type Queue [] Job

func main() {
    var queue []Queue
    job   := Job{""test"", ""http://google.com""}

    queue[0] = job
    fmt.Println(queue)
}


The code above is throwing:


  cannot use job (type Job) as type Queue in assignment

",3,42086642.0
182,31175233,How do I get the values of arguments passed inside a func() argument in GO?,"I am trying to create middleware inside routes and wondering how one can get the values of arguments passed inside a func() argument.

For example:

func (c appContainer) Get(path string, fn func(rw http.ResponseWriter, req *http.Request)) {

    // HOW DO I GET THE VALUES OF rw AND req PASSED IN fn func()?

    c.providers[ROUTER].(Routable).Get(path, fn)
}


I looked through the reflection docs but it's not clear to me or perhaps there is a simpler way? 

EDITED (SOLUTION)

It turns out reflection is not needed, as suggested by Adam in his response to this post, as well as Jason on his golang-nuts reply to my question. 

The idea is to create a new anonymous function which then intercepts the parameters passed to it for modification/enhancement before calling the original function.

This is what I ended up doing and it worked like a charm, which I am posting in case it helps someone else:

type handlerFn func(rw http.ResponseWriter, req *http.Request)

func (c appContainer) Get(path string, fn handlerFn) {
    nfn := func(rw http.ResponseWriter, req *http.Request) {
        c.providers[LOGGER].(Loggable).Info(""[%s] %s"", req.Method, req.URL.Path)
        fn(rw, req)
    }
    c.providers[ROUTER].(Routable).Get(path, nfn)
}

",1,31176148.0
183,30129206,golang return multiple values issue,"I was wondering why this is valid go code:

func FindUserInfo(id string) (Info, bool) {
    it, present := all[id]
    return it, present
}


but this isn't

func FindUserInfo(id string) (Info, bool) {
    return all[id]
}


is there a way to avoid the temporary variables?
",5,
184,41939080,Anonymous structs return empty field value,"type (

    Id struct {
        // I previously forgot to add the `ID` field in my question, it is present in my code but not on this question as @icza pointed it out to me
        ID bson.ObjectId `json:""id"" bson:""_id""`
    }

    User struct {
        // When using anonymous struct, upon returning the collection, each of the document will have an empty `id` field, `id: """"`
        Id
        Email string `json:""email"" bson:""email""`
        ...
    }

    // This works
    User2 struct {
        ID bson.ObjectId `json:""id"" bson:""_id""`
        Email string `json:""email"" bson:""email""`
    }
)


I might not have fully understood the concept of anonymous structs yet. In the example above, when querying all users from a collection, the id field is going to be an empty string """". However, if I directly define the ID field in the User struct, the id shows up fine. Is this not what anonymous structs are for? Basically extending struct so you won't have to type them again and again?

More example:

type SoftDelete struct {
    CreatedAt time.Time `json:""created_at"" bson:""created_at""`
    UpdatedAt time.Time `json:""updated_at"" bson:""updated_at""`
    DeletedAt time.Time `json:""deleted_at"" bson:""deleted_at""`
}

type UserModel struct {
    SoftDelete
}

type BlogPost struct {
    SoftDelete
}

",1,41941085.0
185,28032648,Casting conversion of int to int32,"I am working on pulling in rows from the Db and storing the results in a Slice/Array

I need to calculate the totalRecords & totalPages. 

pseudoCode :: 
perPage int32 := ( some number ) 
totalRecords := len(array)
totalPages := perPage/totalRecords


I keep getting this error. 

terminal::
`invalid operation: perPage / totalRecords (mismatched types int32 and int)`

",1,28032713.0
186,24375671,Background Fetch in an API Library,"I'm writing an API client (library) that hits a JSON end-point and populates an in-memory cache.

Thus far:


I kick off a time.Ticker loop in the library's init() function that hits the API every minute, which refreshes the cache (a struct that embeds the JSON struct and a timestamp).
The public facing function calls in the library just fetch from the catch and therefore don't need to worry about rate-limiting on their own part, but can check the timestamp if they want to confirm the freshness of the data


However, starting a time.Ticker in init() does not feel quite right: I haven't seen any other libs do this. I do however want to avoid the package user having to do a ton of work just to get data back from few JSON endpoints.

My public API looks like this:

// Example usage:
// rt := api.NewRT()
// err := rt.GetLatest
// tmpl.ExecuteTemplate(w, ""my_page.tmpl"", M{""results"": rt.Data})

func (rt *RealTime) GetLatest() error {
    rt = realtimeCache.Cached
    if rt == nil {
        return errors.New(""No cached response is available."")
    }

    return nil
}


And the internal fetcher is as below:

func fetchLatest() error {
    log.Println(""Fetching latest RT results."")
    resp, err := http.Get(realtimeEndpoint)
    if err != nil {
        return err
    }
    defer resp.Body.Close()

    body, err := ioutil.ReadAll(resp.Body)
    if err != nil {
        return err
    }

    // Lock our cache from writes
    realtimeCache.Lock()
    defer realtimeCache.Unlock()

    var rt *RealTime
    err = json.Unmarshal(body, &rt)
    if err != nil {
        return err
    }

    // Update the cache
    realtimeCache.Cached = rt

    return nil
}

func init() {
    // Populate the cache on start-up
    fetchLatest()
    fetchHistorical()

    // Refresh the cache every minute (default)
    ticker := time.NewTicker(time.Second * interval)
    go func() {
        for _ = range ticker.C {
            fetchLatest()
            fetchHistorical()
        }
    }()
}


There are similar functions for other parts of the API (which I'm modularising, but I've kept it simple to start with), but this is the gist of it.

Is there a better way to have a background worker fetch results that's still user-friendly?
",2,24482742.0
187,33090833,Is there a shortcut for assigning a variable to a pointer without creating the variable in a separate line first?,"If I have a struct like this:

type Message struct {
    Id      int64
    Message string
    ReplyTo *int64
}


And then if I did create an instance of this struct like this:

var m Message
m.Id = 1
m.Message = ""foo bar yo""

var replyTo = int64(64)
m.ReplyTo = &replyTo


Then it would work.

But I was wondering if there was a shortcut for the last step?

I tried doing something like:

m.ReplyTo = &int64{64}


But it did not work.
",1,33090986.0
188,31555672,golang: index efficiency of array,"It's a simple program.
test environment: debian 8, go 1.4.2

union.go:

package main

import ""fmt""

type A struct {
    t int32
    u int64
}

func test() (total int64) {
    a := [...]A{{1, 100}, {2, 3}}

    for i := 0; i < 5000000000; i++ {
        p := &a[i%2]
        total += p.u
    }
    return
}
func main() {
    total := test()
    fmt.Println(total)
}


union.c:

#include 

struct A {
    int t;
    long u;
};

long test()
{
    struct A a[2];
    a[0].t = 1;
    a[0].u = 100;
    a[1].t = 2;
    a[1].u = 3;

    long total = 0;
    long i;
    for (i = 0; i < 5000000000; i++) {
        struct A* p = &a[i % 2];
        total += p->u;
    }
    return total;
}
int main()
{
    long total = test();
    printf(""%ld\n"", total);
}


result compare:

go:

257500000000

real    0m9.167s
user    0m9.196s
sys 0m0.012s


C:

257500000000

real    0m3.585s
user    0m3.560s
sys 0m0.008s


It seems that the go compiles lot of weird assembly codes (you could use objdump -D to check it).

For example, why movabs $0x12a05f200,%rbp appears twice?

  400c60:       31 c0                   xor    %eax,%eax
  400c62:       48 bd 00 f2 05 2a 01    movabs $0x12a05f200,%rbp
  400c69:       00 00 00 
  400c6c:       48 39 e8                cmp    %rbp,%rax
  400c6f:       7d 46                   jge    400cb7 
  400c71:       48 89 c1                mov    %rax,%rcx
  400c74:       48 c1 f9 3f             sar    $0x3f,%rcx
  400c78:       48 89 c3                mov    %rax,%rbx
  400c7b:       48 29 cb                sub    %rcx,%rbx
  400c7e:       48 83 e3 01             and    $0x1,%rbx
  400c82:       48 01 cb                add    %rcx,%rbx
  400c85:       48 8d 2c 24             lea    (%rsp),%rbp
  400c89:       48 83 fb 02             cmp    $0x2,%rbx
  400c8d:       73 2d                   jae    400cbc 
  400c8f:       48 6b db 10             imul   $0x10,%rbx,%rbx
  400c93:       48 01 dd                add    %rbx,%rbp
  400c96:       48 8b 5d 08             mov    0x8(%rbp),%rbx
  400c9a:       48 01 f3                add    %rsi,%rbx
  400c9d:       48 89 de                mov    %rbx,%rsi
  400ca0:       48 89 5c 24 28          mov    %rbx,0x28(%rsp)
  400ca5:       48 ff c0                inc    %rax
  400ca8:       48 bd 00 f2 05 2a 01    movabs $0x12a05f200,%rbp
  400caf:       00 00 00 
  400cb2:       48 39 e8                cmp    %rbp,%rax
  400cb5:       7c ba                   jl     400c71 
  400cb7:       48 83 c4 20             add    $0x20,%rsp
  400cbb:       c3                      retq   
  400cbc:       e8 6f e0 00 00          callq  40ed30 
  400cc1:       0f 0b                   ud2    
        ...


while the C assembly is more clean:

0000000000400570 :
  400570:       48 c7 44 24 e0 64 00    movq   $0x64,-0x20(%rsp)
  400577:       00 00 
  400579:       48 c7 44 24 f0 03 00    movq   $0x3,-0x10(%rsp)
  400580:       00 00 
  400582:       b9 64 00 00 00          mov    $0x64,%ecx
  400587:       31 d2                   xor    %edx,%edx
  400589:       31 c0                   xor    %eax,%eax
  40058b:       48 be 00 f2 05 2a 01    movabs $0x12a05f200,%rsi
  400592:       00 00 00 
  400595:       eb 18                   jmp    4005af 
  400597:       66 0f 1f 84 00 00 00    nopw   0x0(%rax,%rax,1)
  40059e:       00 00 
  4005a0:       48 89 d1                mov    %rdx,%rcx
  4005a3:       83 e1 01                and    $0x1,%ecx
  4005a6:       48 c1 e1 04             shl    $0x4,%rcx
  4005aa:       48 8b 4c 0c e0          mov    -0x20(%rsp,%rcx,1),%rcx
  4005af:       48 83 c2 01             add    $0x1,%rdx
  4005b3:       48 01 c8                add    %rcx,%rax
  4005b6:       48 39 f2                cmp    %rsi,%rdx
  4005b9:       75 e5                   jne    4005a0 
  4005bb:       f3 c3                   repz retq 
  4005bd:       0f 1f 00                nopl   (%rax)


Could somebody explain it? Thanks!
",1,
189,40259171,mongo aggregation query in golang with mgo driver,"I have the following query in mongodb -

db.devices.aggregate({
$match: {userId: ""v73TuQqZykbxFXsWo"", state: true}},
{
  $project: {
    userId: 1,
    categorySlug: 1,
    weight: { 
      $cond: [ 
        {""$or"": [  
          {$eq: [""$categorySlug"", ""air_fryer""] }, 
          {$eq: [""$categorySlug"", ""iron""] } 
        ] }, 
      0, 1] } 
    } },  
    {$sort: {weight: 1}},
    { $limit : 10 }
);


I'm trying to write this in golang using the mgo driver but not able to wrap my head around this at all!

How do I translate this to a golang mgo query?
",1,40373000.0
190,43339181,DEADLINE_EXCEEDED on Go Bigquery,"Our application sometimes see DEADLINE_EXCEEDED when accessing to Big Query.

import (
    ""cloud.google.com/go/bigquery""
    ""golang.org/x/net/context""
    ""google.golang.org/api/option""
)

func MyFunc(ctx context.Context) {
            :
    client, err := bigquery.NewClient(ctx, PROJECT_ID, option.WithServiceAccountFile(SERVICE_ACCOUNT_JSON_FILE_PATH))
    query := client.Query(""SELECT * FROM ...."")
    it, err := query.Read(ctx)
    var list []MyStruct
    for {
        var m MyStruct
        err := it.Next(&m)
        if err == iterator.Done {
            break
        }
        if err != nil {
           
        }
        list = append(list, m)
    }
            :
}


Sometimes we see this error.

Get https://www.googleapis.com/bigquery/v2/projects/myproject/queries/job_zandIeLwH0s8f3FAQ_ORC0zau14?alt=json\u0026startIndex=0\u0026timeoutMs=60000: API error 5 (urlfetch: DEADLINE_EXCEEDED): ('The read operation timed out',)""


It looks timeout is 5 second, but I can' find how can I change timeout seconds.

I read this post, and I modified my source code as below.

ctx_with_deadline, _ := context.WithTimeout(ctx, 1*time.Minute)
httpClient := &http.Client{
    Transport: &oauth2.Transport{
        Base: &urlfetch.Transport{Context: ctx_with_deadline},
    },
}

client, err := bigquery.NewClient(ctx, PROJECT_ID, option.WithServiceAccountFile(SERVICE_ACCOUNT_JSON_FILE_PATH), option.WithHTTPClient(httpClient))


Then I met this error.

Post https://www.googleapis.com/bigquery/v2/projects/myproject/jobs?alt=json: oauth2: Transport's Source is nil


How can I change timeout in Go Bigquery?
",1,43347179.0
191,8415000,GAE Go size of datastore,"Is there some function one can call to get the amount of entries in the GAE Go Datastore of an app, without querying it for the whole database and counting the output?
",2,8454969.0
192,43746853,Go-Redis HMSet with string fields gives WRONGTYPE Operation,"I'm trying to use HMSET to set a new hash containing two string fields, id and content.

I'm able to make this via redis-cli pretty easily using SET i 0 to initialize a counter for ids, then creating a new hash using HMSET test id hey content herro and getting both of these fields with HMGET test id content resulting in 1) hey 2) herro.

Unfortunately I'm not able to achieve such result with Go-Redis and in particular with HMSet.

So far I tried

var uid = ""0""
err = c.Get(""i"").Err()
if(err != nil) {
    //If the counter is not set, set it to 0
    err := c.Set(""i"", ""0"", 0).Err()
    if(err != nil){
        panic(err)
    }
} else {
    //Else, increment it
    counter, err := c.Incr(""i"").Result()
    //Cast it to string
    uid = strconv.FormatInt(index, 10)
    if(err != nil){
        panic(err)
    }
    //Set new counter
    err = c.Set(""i"", counter, 0).Err()
    if( err!= nil ){
        panic(err)
    }
}

//Init a map[string]interface{}
var m = make(map[string]interface{})
m[""id""] = uid
m[""content""] = ""herro""

hash, err := c.HMSet(""i"", m).Result()
if(err != nil){
    panic(err)
}

fmt.Println(hash)


Everything works fine but c.HMSet(""i"", m).Result(). I get:


  WRONGTYPE Operation against a key holding the wrong kind of value


And I cannot really get why since I managed to make it work on the very same way in redis-cli.

HMSet is defined as func (c *Client) HMSet(key string, fields map[string]interface{}) *StatusCmd.

I wasn't able to find any example online using Go-Redis illustrating this use case.

What Am I doing Wrong?
",1,43746955.0
193,31071382,How can I get the top path of glob path?,"e.g.

a/b/c* -> a/b
a/b/c*/*/*b -> a/b


Why I need this is because I want to get the abs path of globed filename.
Code example:

files, _ := filepath.Glob(p)
top := __magic here__
for _, f := range files {
    abs, _ := filepath.Abs(path.Join(top, f))
    fmt.Println(abs)
}


Is there any exists method for this purpose? otherwise I have to implement by myself.

EDIT

The magic is make glob path abs first, then the glob return abs path.
",1,31072203.0
194,35211363,Create custom type that will seem like the another when checking types Golang,"I am a experienced python programmer but I am still new to Golang so my apologies if this is an obvious or silly question. But I am trying to create my own type that I want to act exactly like the base type with the exception of several methods being overridden. The reason for this is because several libraries I am using are checking the type against time.Time and I want it to match. 

type PythonTime struct {
    time.Time
}

var pythonTimeFormatStr = ""2006-01-02 15:04:05-0700""

func (self *PythonTime) UnmarshalJSON(b []byte) (err error) {
    // removes prepending/trailing "" in the string
    if b[0] == '""' && b[len(b)-1] == '""' {
        b = b[1 : len(b)-1]
    }
    self.Time, err = time.Parse(pythonTimeFormatStr, string(b))
    return
}

func (self *PythonTime) MarshalJSON() ([]byte, error) {
    return []byte(self.Time.Format(pythonTimeFormatStr)), nil
}

type OtherType struct {
    Uuid     string     `json:""uuid`
    Second   PythonTime `json:""second""`
    Location string     `json:""location""`
    Action   string     `json:""action""`
    Duration int        `json:""duration""`
    Value    string     `json:""value""`
}


So the the above works fine for marshalling and unmarshalling JSON. However, for my library that I am using (gocql and cqlr) they are checking if the type is a time.Time type so they can make some other modifications before putting it in C*. How do  I get my PythonTime type to equate to either show as time.Time  or override the default marshalling/unmarshalling for a time.Time object just for the use of my OtherType objects?

My temporary solution has been to modify their code and add a special case for the PythonTime type that does the same thing as the time.Time type. However, this is causing me circular imports and is not the best solution. Here is their code with my modifications.

func marshalTimestamp(info TypeInfo, value interface{}) ([]byte, error) {
    switch v := value.(type) {
    case Marshaler:
        return v.MarshalCQL(info)
    case int64:
        return encBigInt(v), nil
    case time.Time:
        if v.IsZero() {
            return []byte{}, nil
        }
        x := int64(v.UTC().Unix()*1e3) + int64(v.UTC().Nanosecond()/1e6)
        return encBigInt(x), nil
    case models.PythonTime:
        x := int64(v.UTC().Unix()*1e3) + int64(v.UTC().Nanosecond()/1e6)
        return encBigInt(x), nil
    }

    if value == nil {
        return nil, nil
    }

    rv := reflect.ValueOf(value)
    switch rv.Type().Kind() {
    case reflect.Int64:
        return encBigInt(rv.Int()), nil
    }
    return nil, marshalErrorf(""can not marshal %T into %s"", value, info)
}

",3,35228113.0
195,43739732,What's the difference between these two variants?,"I tried to make my own code for learning how to return multiple values in main function:

package main

import ""fmt""

func main() {
    fmt.Println(""Enter a integer:"")
    var I int
    fmt.Scanf(""%d"", &I)
    fmt.Println(""Accepted:"", I)

    O := half(I)
    fmt.Println(""Returned:"", O)
}

func half(N int) (int, bool) {
    var NA int
    NA = N / 2
    if NA%2 == 0 {
        fmt.Println(""even"")
        return NA, true
    } else {
        fmt.Println(""odd"")
        return NA, false
    }
}


And given error: half.go|11| multiple-value half() in single-value context.
However another variant are working:

package main

import (
    ""fmt""
)

func half(number int) (int, bool) {
    if x := int(number % 2); x == 0 {
        return x, true
    } else {
        return x, false
    }
}

func main() {
    fmt.Println(half(1))
    fmt.Println(half(2))
}


What am I doing wrong? How to overcome my error?
",2,
196,17371244,How do I model a many-to-many relationship in AppEngine's Datastore in Go?,"I'm trying to wrap my head around how I can represent a many-to-many relationship inside of AppEngine's Datastore in the Go Programming Language. I'm more used to traditional relational databases.

I have two types of entities in my system. Let's call them A and B. Every A entity is related to some number of B entities. Similarly, every B entity is related to some other number of A entities. I'd like to be able to efficiently query for all B entities given an A entity, and for all A entities given a Bentity.

In the Python SDK, there seems to be a way to note fields in an entity can be ReferencePropertys which reference some other entity. However, I can't find something similar in Go's AppEngine SDK. Go seems to just use basic structs to represent entities.

What's the best practice for dealing with this?
",2,
197,28636235,What is the purpose of capacity in make() of go language?,"I'm learning golang, and confused about the capacity in slice.
For example  arr := make([]float64, 5, 10)
I have an array of 5 values, and its capacity is 10. If I assign a value to 8th position, the compiler would throw an error index is out of range. If I grow a slice, but it creates a new slice (see the doc that I copied from the official go language). 

Here's the slice doc:

""Slicing does not copy the slice's data. It creates a new slice value that points to the original array."" 
""To increase the capacity of a slice one must create a new, larger slice and copy the contents of the original slice into it. ""

So what's the purpose of capacity?

Thanks
",1,28636712.0
198,29249900,Extra escape character in go URL,"I have the following snippet of code :

    u := *baseURL
    u.User = nil 
    if q := strings.Index(path, ""?""); q > 0 { 
            u.Path = path[:q]
            u.RawQuery = path[q+1:]
    } else {
            u.Path = path
    }   

    log.Printf("" url %v, u.String())


I see that when the baseurl is set to something like this http://localhost:9000/buckets/test%?bucket_uuid=7864b0dcdf0a578bd0012c70aef58aca the url package seems to add an extra escape character near the % sign. For e.g. the output of the above print statement is the following :

2015/03/25 12:02:49  url http://localhost:9000/pools/default/buckets/test%2525?bucket_uuid=7864b0dcdf0a578bd0012c70aef58aca


This seems to only happen when the RawQuery field of the URL is set. Any idea why this is happening ?  I'm using go version 1.3.3 

Cheers,
Manik
",1,29251811.0
199,45397625,How to Handle dynamic URL in Golang,"I am creating a Go web app in which I need to handle a URL like /person/(any_name). As a newbie in Golang, I don't know how to do so. Please help me.
",2,
200,28542330,Instance an array from a type in go,"How can I instance an array with a given type?

I get the type this way:

type := reflect.ValueOf(obj)


But I don't know how to get an instance of an array with this type
",1,28542464.0
201,45044434,go: filter events in select and break,"This is the code I have so far:

for {
    select {
    case event := <-events:
        if event.Msg != nil && len(activeFilters) > 0 {
            //filter for messages
            matches := false
            for k, v := range activeFilters {
                if k == event.Msg.Namepace {                        
                  for _, code := range v {
                    if code != event.Msg.Code {
                        matches = true    
                        break //BREAK1
                    }
                  }
                  if matches {
                    break //BREAK2
                  }
                }
            }
            if !matches {
              break //BREAK3
            }
        }
        if err := sendEvent(event); err != nil {
            sendErr(err)
            return
        }
    case <-closed:
        return
    }
}


First, I am a beginner in Go. The above code generally looks too complex for me, I guess it can be optimized.

What I want to do: when an event arrives, I want to check if a given Code is inside a list of filters. The filters have two ""dimensions"": a namespace and a list of codes. activeFilters is a map[string][]uint64.
(Note: I am allowed to redesign activeFilters to some other structure).

So I just want to prevent the code to execute sendEvent if the filter doesn't match, while sendEvent should be executed if the protocol matches any key in activeFilters AND the message code is contained in the value array for that key.

So can the above code be simplified? Is the usage of break (BREAK1 and BREAK2) correct? BREAK2 seems to be needed for me because the inner for loop may already find a match, in which case there's no need to continue iterating on activeFilters.

And finally, am I correct in using BREAK3? My thinking there is that if there is no match, I do not want to execute sendEvent, so I want to jump out of the case. In my limited Go understanding, using return there would close the channel or something like that....

:blush
",1,
202,31832852,Rewrite regex without negation,"I have wrote this regex to help me extract some links from some text files:

https?:\/\/(?:.(?!https?:\/\/))+$

Because I am using golang/regexp lib, I'm not able to use it, due to my negation (?!..

What I would like to do with it, is to select all the text from the last occurance of http/https till the end.

sometextsometexhttp://websites.com/path/subpath/#query1sometexthttp://websites.com/path/subpath/#query2


=> Output: http://websites.com/path/subpath/#query2

Can anyone help me with a solution, I've spent several hours trying different ways of reproducing the same result with no success.
",2,31832899.0
203,34915873,Do I copy resp.Body?,"I am learning go and I have the following code which works fine:

resp, err := http.Get(url)  // get the html
   ...
doc, err := html.Parse(resp.Body)  // parse the html page


Now I want to print out the html first then do the parsing:

resp, err := http.Get(url)
   ...
b, err := ioutil.ReadAll(resp.Body)  // this line is added, not working now...
doc, err := html.Parse(resp.Body)


I guess the reason is resp.Body is a reader, I can not call the read twice? Any idea how can I do this correctly? Copy the resp.Body? 
",1,34915947.0
204,7707178,What's the appropriate Go shebang line?,"I like using shebangs to run my Perl scripts directly:

#!/usr/bin/env perl


What's the shebang for Go programs?
",4,
205,18502203,Forked ptraced process hangs,"I am trying to intercept syscalls when calling a program from Go, however I'm running into two issues.

The child seems to hang, which hangs the parent process as well. It seems wait4(2) is blocking which seems weird, wouldn't the child finally call exit(2) to exit?

The syscalls I get to stdout are not consistent, sometimes the last syscall is 3, other times it's 6 or 192. Do I have a race condition in my code? Why does this happen?

I tried listening for signals on the parent, but I don't receive anything..

I've substituted the program I usually run with /bin/ls.

package main

import (
  ""syscall""
  ""fmt""
  ""os/signal""
  ""os""
)

func main() {
  c := make(chan os.Signal, 1)
  signal.Notify(c, os.Interrupt, os.Kill)
  go SignalListener(c)

  attr := new(syscall.ProcAttr)
  attr.Sys = new(syscall.SysProcAttr)
  attr.Sys.Ptrace = true

  pid, err := syscall.ForkExec(""/bin/ls"", nil, attr)

  if err != nil {
    panic(err)
  }

  var wstat syscall.WaitStatus
  var regs syscall.PtraceRegs

  for {
    fmt.Println(""Waiting.."")
    _, err := syscall.Wait4(pid, &wstat, 0, nil)
    fmt.Printf(""Exited: %d\n"", wstat.Exited())

    if err != nil {
      fmt.Println(err)
      break
    }

    syscall.PtraceGetRegs(pid, &regs);
    fmt.Printf(""syscall: %d\n"", regs.Orig_eax)

    syscall.PtraceSyscall(pid, 0)
  }
}

func SignalListener(c <-chan os.Signal) {
  s := <-c

  fmt.Printf(""Got signal %d\n"", s)
}

",1,
206,8070205,cast from float32 to int in Go,"I have tried several ways to cast a float to an int, what I want is to truncate a float so I only get the integer part.
I'm using

x := float32(3.1)
y,_ := strconv.Atoi((strconv.Ftoa32(x,'f',0))) //y becomes 3


But if x is 3.9, y will become 4 because this function will round the float32 instead of truncating.
Is there a way of truncating instead of rounding? and if so, is it possible to do it without involving strings? (like casting a float to int in C)
",1,8070330.0
207,27756856,Error with JSON encoding in Martini,"When I'm trying to get JSON data from my database, I get this:
{""time"":""13:42:21 11.12.14"","":"":""Привет""}
{""time"":""13:42:25 11.12.14"","":"":""Эй!""}

var time string 
var text string

type chatbetweenusers struct {
    Time string `json:""time""`
    Text string `json:"":""text""`
    }

var buffer bytes.Buffer
    db, err := sql.Open(""sqlite3"", ""./database.db""); if err != nil {
        log.Fatal(err)
    }; defer db.Close()

rows, err := db.Query(""select time, text from messages;"")
    if err != nil {
        log.Fatal(err) 
    } 
    defer rows.Close()


    for rows.Next() {
        // give a names for every column from query result
        err := rows.Scan(&time, &text)
        if err != nil {
            log.Fatal(err)
        }
        // add strings to struct
        chatitem := &chatbetweenusers{time, text}
        log.Println(chatitem)

        // format it to JSON!
        b, err := json.Marshal(chatitem)
        // conver JSON into string to return from Martini
        s := string(b[:])
        buffer.WriteString(s)
    }

return buffer.String()
})


And when I'm trying to get other data from database, I get this:
{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}

var text string
var user1 string

type chatbetweenusers struct {
    Text string `json:"":""text""`
    User1 string `json:"":""user1""`
    }

var buffer bytes.Buffer
    db, err := sql.Open(""sqlite3"", ""./database.db""); if err != nil {
        log.Fatal(err)
    }; defer db.Close()

rows, err := db.Query(""select text, user1 from messages;"")
    if err != nil {
        log.Fatal(err) 
    } 
    defer rows.Close()


    for rows.Next() {
        // give a names for every column from query result
        err := rows.Scan(&text, &user1)
        if err != nil {
            log.Fatal(err)
        }
        // add strings to struct
        chatitem := &chatbetweenusers{text, user1}
        log.Println(chatitem)

        // format it to JSON!
        b, err := json.Marshal(chatitem)
        // conver JSON into string to return from Martini
        s := string(b[:])
        buffer.WriteString(s)
    }

return buffer.String()
})


What happens when I composite other data in JSON? 
I tried all that is possible, but this is doesn't work properly.
",1,27758235.0
208,36242589,Appending a new trace fails,"I'm attempting to use the patchTraces method to submit tracing information to Google CloudTrace. The patch request I'm making returns a opaque error message. Any idea what I'm doing wrong?

Go code

package main

import (
    ""io/ioutil""
    ""log""
    ""os""
    ""time""

    ""github.com/twinj/uuid""
    ""golang.org/x/oauth2""
    goog ""golang.org/x/oauth2/google""
    cloudtrace ""google.golang.org/api/cloudtrace/v1""
)

func run() error {
    blob, err := ioutil.ReadFile(""jwt.json"")
    if err != nil {
        return err
    }
    conf, err := goog.JWTConfigFromJSON(blob, cloudtrace.CloudPlatformScope)
    if err != nil {
        return err
    }

    client := conf.Client(oauth2.NoContext)

    srv, err := cloudtrace.New(client)
    if err != nil {
        return err
    }

    tracer := cloudtrace.NewProjectsService(srv)
    now := time.Now()
    format := ""2006-01-02T15:04:05.999999999Z""

    call := tracer.PatchTraces(""foo-1262"", &cloudtrace.Traces{
        Traces: []*cloudtrace.Trace{
            {
                TraceId:   uuid.NewV4().String(),
                ProjectId: ""foo-1262"",
                Spans: []*cloudtrace.TraceSpan{
                    {
                        StartTime: now.Format(format),
                        EndTime:   now.Add(5 * time.Second).Format(format),
                        Kind:      ""RPC_SERVER"",
                        Name:      ""bar"",
                        SpanId:    100,
                    },
                },
            },
        },
    })

    _, err = call.Do()
    return err
}

func main() {
    if err := run(); err != nil {
        log.Fatal(err)
    }
}


Here's the request that gets sent

https://cloudtrace.googleapis.com/v1/projects/foo-1262/traces?alt=json
{
    ""traces"": [{
        ""projectId"": ""foo-1262"",
        ""spans"": [{
            ""endTime"": ""2016-03-26T17:23:19.705253417Z"",
            ""kind"": ""RPC_SERVER"",
            ""name"": ""foo"",
            ""spanId"": ""100"",
            ""startTime"": ""2016-03-26T17:23:14.705253417Z""
        }],
        ""traceId"": ""4d86ec85-419d-40cf-ae95-d49c2d066cd6""
    }]
}


Response

{
    ""error"": {
        ""code"": 400,
        ""message"": ""Request contains an invalid argument."",
        ""errors"": [{
            ""message"": ""Request contains an invalid argument."",
            ""domain"": ""global"",
            ""reason"": ""badRequest""
        }],
        ""status"": ""INVALID_ARGUMENT""
    }
}


Everything looks correct, but I'm getting back a useless error message. Please help!
",1,
209,21125602,"Generally, how do I ""go to definition"" in VIM? Then how do I with golang?","Two part question:

First, when using VIM what process do I take and what keys do I type to ""go to definition"" or ""go to declaration"" etc.? This document might be the answer to my question, but I can't get it to work, so I'm unsure. It looks like its merely text matching the string rather than finding the true definition. If I can get this to work, then will I be able to jump outside of the current document to a definition/declaration? Or does this only work within a single document?

Second, how do I make this work specifically with the Go programming language? It sure would be nice to ""click"" the Client in


clnt := &http.Client{Transport: tr}


And be taken to the actual code that defines an http.Client.

Possible? How?
",2,21127615.0
210,33979399,Golang tour #18 For continued,"This may be a simple thing I can't see for some reason but I am going through the golang tour and in the ""For continued"" section and I was wondering if someone could explain to me how the logic executes and delivers the statement to be 1024. https://tour.golang.org/flowcontrol/2

package main

import ""fmt""

func main() {
    sum := 1
    for ; sum < 1000; {
        sum += sum
    }
    fmt.Println(sum)
}

",1,33979484.0
211,30611086,Replacing ObjectId with embedded json when marshaling struct,"I'm building a RESTful API with Go and MongoDB, and I'm running into some difficulty with embedding the JSON for one document inside the JSON for another. Here's a toy example of what I'm trying to accomplish. I have the following schemas:

type Post struct {
    ID    bson.ObjectId `json:""id,omitempty""`
    Title string        `json:""title,omitempty""`
    Owner bson.ObjectId `json:""owner,omitempty""` // references a User
}

type User struct {
    ID   bson.ObjectId `json:""id,omitempty""`
    Name string        `json:""name,omitempty""`
}


When creating the JSON for a post, I'd like to first look up the owner of the post in MongoDB and embed the resulting user inside said post's JSON (in-place of the original ObjectId), like so:

{
    ""id"": ""..."",
    ""title"": ""My awesome post"",
    ""owner"": {
        ""id"": ""..."",
        ""name"": ""Cody""
    }
}


I'm not quite sure how to accomplish this, other than manually constructing the JSON using map[string]interface{}, like so:

post := LookupPost(...)
user := LookupUser(post.Owner)

m := map[string]interface{}{
    ""id"": post.ID,
    ""title"": post.Title,
    ""owner"": map[string]interface{}{
        ""id"": user.ID,
        ""name"": user.Name,
    },
}

b, _ := json.Marshal(m)


Obviously this doesn't scale very well isn't very DRY -- ideally, I'd be able to utilize the json tags in each struct definition and have the fields inserted automatically.

Am I missing something, or is what I'm trying to do impossible? Or am I simply not approaching MongoDB/JSON in Go correctly? To put things in perspective, I'm coming from a Node.js background, where this sort of functionality is trivial.

Edit

To clarify things, here's some incorrect Go code that shows what I'd like to do

func getPostJSON() []byte {
    p := LookupPost(...)
    u := LookupUser(p.Owner, ...)

    uj, _ := json.Marshal(u)
    p.Owner = uj // can't do this in Go

    pj, _ := json.Marshal(p)

    return pj
}

",2,30655945.0
212,34861479,How to detect when bytes can't be converted to string in Go?,"There are invalid byte sequences that can't be converted to Unicode strings. How do I detect that when converting []byte to string in Go?
",1,34863211.0
213,22622355,is it possible to connect to cloudsql in golang?,"the google documentation seems to hint that the app engine go SDK should support using cloudsql, but from this snippet of code, it looks like it's not yet supported.

is there a newer version of the SDK that does allow you to interface with cloudsql?
",1,
214,40259551,Create variable of type Map[string]interface{} in gRPC protoc buffer golang,"I'm using grpc golang to communicate between client and server application.
Below is the code for protoc buffer.

syntax = ""proto3"";
package Trail;

service TrailFunc {
  rpc HelloWorld (Request) returns (Reply) {}
}

// The request message containing the user's name.
message Request {
  map inputVar = 1;
}
// The response message containing the greetings
message Reply {
  string outputVar = 1;
}


I need to create a field inputVar of type map[string]interface{} inside message data structure instead of map[string]string.
How can I achieve it?
Thanks in advance.
",2,40265197.0
215,12755575,Optimize Go file reading program,"I'm trying to process a log file, each line of which looks something like this:

flow_stats: 0.30062869162666672 gid 0 fid 1 pkts 5.0 fldur 0.30001386666666674 avgfldur 0.30001386666666674 actfl 3142 avgpps 16.665896331902879 finfl 1


I'm interested in the pkts field and the fldur field.  I've got a Python script that can read in a million-line log file, create a list for each number of packets of all the different durations, sort those lists and figure out the median in about 3 seconds.

I'm playing around with the Go programming language and thought I'd rewrite this, in the hope that it would run faster.  

So far, I've been disappointed.  Just reading the file in to the data structure takes about 5.5 seconds.  So I'm wondering if some of you wonderful people can help me make this go (hehe) faster.

Here's my loop:

data := make(map[int][]float32)
infile, err := os.Open(""tmp/flow.tr"")
defer infile.Close()
if err != nil {
  panic(err)
}
reader := bufio.NewReader(infile)

line, err := reader.ReadString('\n')
for {
  if len(line) == 0 {
    break
  }
  if err != nil && err != io.EOF {
    panic(err)
  }
  split_line := strings.Fields(line)
  num_packets, err := strconv.ParseFloat(split_line[7], 32)
  duration, err := strconv.ParseFloat(split_line[9], 32)
  data[int(num_packets)] = append(data[int(num_packets)], float32(duration))

  line, err = reader.ReadString('\n')
}


Note that I do actually check the errs in the loop -- I've omitted that for brevity.  google-pprof indicates that a majority of the time is being spent in strings.Fields by strings.FieldsFunc, unicode.IsSpace, and runtime.stringiter2.

How can I make this run faster?
",1,12756420.0
216,33666158,GitHub failing to parse key correctly GoLang API Request,"So the following code recieves a public key that is created then passed into an object that is then marshalled into json. This json is then passed into an http request. Github is parsing the json correctly but returns that the ssh key is invalid. If I copy the contents and go online to paste the key it works fine.

I did edit the key to remove the user@hostname part of the key (I always do even though I know it is unsafe) to see if that was the problem.

func addKeyToGitHub(token string, comment string, publickey []byte) (*http.Response, error) {
    if token == """" {
        fmt.Println(""Please create a token that has 'write:public_key' scope"")
        open.Run(githubAPPURL)
        ir := bufio.NewReader(os.Stdin)
        fmt.Print(""Enter Token: "")
        token, _ = ir.ReadString('\n')
    }
    k := string(publickey)
    //Removes unwanted host at end of file
    array := strings.Split(k, "" "")
    array = array[:len(array)-1]
    k = strings.Join(array, "" "")
    fmt.Println(k)
    b := &githubBody{Title: comment, Key: k}
    body, err := json.Marshal(b)
    if err != nil {
        return nil, err
    }
    req, err := http.NewRequest(""POST"", githubAPIURL+""user/keys"", bytes.NewBuffer(body))
    if err != nil {
        return nil, err
    }
    req.Header.Set(""Authorization"", ""token ""+token)
    req.Header.Set(""Content-Type"", ""application/json"")
    fmt.Println(req)
    client := http.Client{}
    return client.Do(req)
}


Here is what it outputs

Please create a token that has 'write:public_key' scope
Enter Token: 3310b4ef5d0dbbb8687b992e6f78e02cd34e4d6d
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7zwo/h3mVL2RwOyMeUyGZblLT+nZy9pS6akUMSiOaVkphCdQzoHH/6xbDPiTKNlXC+1JYmQq4DaeglFdVc+FQHp3ZlbhZp6YPemXHnGtKamtQrJHS+HA7zE+F3xPzLQlVTgUdlE4ckU0THRK7WdwXa1sSMO2UNBrn7MGZ4wskU4PO8QFBjFHN0e5SIv2mlF/Oi1FoSRHIEohHAY6JSE8lnxkYFA5XeVkygLFQbZ7dKpVaZg4Y1LvrZUnThmI+e1QxP9ttUj5Ike6wFewBTvTjtPb8hkEHp3GuwjmwN9SKIW4d5bmrJtGxQjYmY4PHhW5DnySBQWBeOnQxhqVQFqlN
&{POST http://github.com/api/v3/user/keys HTTP/1.1 1 1 map[Authorization:[token 3310b4ef5d0dbbb8687b992e6f78e02cd34e4d6d] Content-Type:[application/json]] {{""Key"":""ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7zwo/h3mVL2RwOyMeUyGZblLT+nZy9pS6akUMSiOaVkphCdQzoHH/6xbDPiTKNlXC+1JYmQq4DaeglFdVc+FQHp3ZlbhZp6YPemXHnGtKamtQrJHS+HA7zE+F3xPzLQlVTgUdlE4ckU0THRK7WdwXa1sSMO2UNBrn7MGZ4wskU4PO8QFBjFHN0e5SIv2mlF/Oi1FoSRHIEohHAY6JSE8lnxkYFA5XeVkygLFQbZ7dKpVaZg4Y1LvrZUnThmI+e1QxP9ttUj5Ike6wFewBTvTjtPb8hkEHp3GuwjmwN9SKIW4d5bmrJtGxQjYmY4PHhW5DnySBQWBeOnQxhqVQFqlN"",""Title"":""dixon@homedesktop""}} 418 [] false github.com map[] map[]  map[]    }
Status 422
Body: {""message"":""Validation Failed"",""documentation_url"":""https://developer.github.com/v3/users/keys/#create-a-public-key"",""errors"":[{""resource"":""PublicKey"",""code"":""custom"",""field"":""key"",""message"":""key is invalid. It must begin with 'ssh-rsa', 'ssh-dss', 'ecdsa-sha2-nistp256', 'ecdsa-sha2-nistp384', or 'ecdsa-sha2-nistp521'. Check that you're copying the public half of the key""}]}


I have deleted the ssh key and token so please no comments on why I should not post those.

I know everything is authorized and parsed correctly before the request (I have tested with wrong token and wrong json format both return a different error) but I do not know why this is not working. I have tried to just build the json string turn it into a byte array and pass that with the same out come. 

I don't know if this matters but I am doing this through a VPN (I changed the address to show github and not the actual address). I have tested this call through PostMan (not using VPN) and it worked, so I know the server has these api calls. 
",2,
217,34480387,can only receive one message on a channel,"I've created a global channel, and am sending messages to it whenever a new event occurs inside of ExampleNewWatcher. The first time an event occurs, the message is getting received in the receiving end of the channel. However, the second time an event occurs, I am not receiving a message in the receiving end of the channel.

var messages = make(chan string)
func ExampleNewWatcher(){
  watcher, err := fsnotify.NewWatcher()
  if err != nil{
    log.Fatal(err)
  }
  defer watcher.Close(0
  done := make(chan bool)
  go func(){
     for {
        select{
           case event := <- watcher.Events:
              if event.Op&fsnotify.Write == fsnotify.Write{
                 log.Println(""this logs twice if I create two write events"")
                 messages <- ""this message only gets sent once even if I create two events""
              }
           case err := <- watcher.Errors:
               log.Println(""error"", err)
        }

     }
  }()
  err = watcher.Add(""/tmp/watchedfile"")
  <-done
}
func Websock(ws *websocket.Conn){
   msg := <-messages
   log.Println(""only one message arrives, even if I create for two events"", msg)
   err := websocket.Message.Send(ws, msg)

}
func main(){
 go ExampleNewWatcher() //for some reason, the server doesn't run unless I prefix a go routine to this watcher function, but that's another issue ...

  http.Handle(""/websock"", websocket.Handler(Websock))
 log.Fatal(http.ListenAndServe("":8000"", nil))

}

",2,
218,19373586,"Go - html/template, template.ParseGlob() and code re-use","I'm trying to get my head around embedding templates using html/template in Go. I very much like the logic-less template design and I have confidence in its ability to safely escape things as expected (sometimes other template libs get this wrong).

I am, however, having a bit of a problem trying to implement a little helper to render my templates in my HTTP handlers based on the ""final"" template name. My base.tmpl is effectively ""standard"" across all of my pages, and in cases where it isn't I can set {{ template checkoutJS }} in base.tmpl and add some per-page JS by setting {{ define checkoutJS }}https://path.to/extra.js {{ end }}.

I want to be able to say renderTemplate(w, ""template_name.tmpl"", data) in my HTTP handlers, where data is a map[string]interface{} containing strings or structs with whatever I wish to fill in.

Here's the code so far:

base.tmpl

{{ define ""base"" }}



{{ template ""title"" . }}



...


{{ template ""content"" }}


...





create_listing.tmpl

{{ define ""title"" }}Create a New Listing{{ end }}

{{ define ""content"" }}


  ...


{{ end }}


login_form.tmpl

{{ define ""title"" }}Login{{ end }}

{{ define ""content"" }}


  ...


{{ end }}


main.go

package main

import (
  ""fmt""
    ""github.com/gorilla/mux""
    ""html/template""
    ""log""
    ""net/http""
)

// Template handling shortcuts
var t = template.New(""base"")

func renderTemplate(w http.ResponseWriter, tmpl string, data map[string]interface{}) {

    err := t.ExecuteTemplate(w, tmpl, data)

  // Things will be more elegant than this: just a placeholder for now!
    if err != nil {
        http.Error(w, ""error 500:""+"" ""+err.Error(), http.StatusInternalServerError)
    }
}

func monitorLoginForm(w http.ResponseWriter, r *http.Request) {

    // Capture forms, etc.

    renderTemplate(w, ""login_form.tmpl"", nil)
}

func createListingForm(w http.ResponseWriter, r *http.Request) {

    // Grab session, re-populate form if need be, generate CSRF token, etc

    renderTemplate(w, ""create_listing.tmpl"", nil)
}

func main() {

    r := mux.NewRouter()

    r.HandleFunc(""/monitor/login"", monitorLoginForm)

    http.Handle(""/"", r)
    log.Fatal(http.ListenAndServe("":8000"", nil))

}

func init() {

    fmt.Println(""Starting up."")
    _, err := t.ParseGlob(""templates/*.tmpl"")
    if err != nil {
        log.Fatal(""Error loading templates:"" + err.Error())
    }
}


This compiles, but I get back an empty response from my handler. Note that I don't have a route for the second handler: that code is there just to show how I want to call renderTemplate() from handlers.
",2,19374103.0
219,45802492,How can I customize Golang http 400 responses for parse errors?,"I've written an REST API service that requires that all responses be JSON. However, when the Go http request parser encounters an error, it returns 400 as a plain text response without ever calling my handlers. Example:

> curl -i -H 'Authorization: Basic hi    
there' 'http://localhost:8080/test' -v
*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 8080 (#0)
> GET /test HTTP/1.1
> Host: localhost:8080
> User-Agent: curl/7.54.0
> Accept: */*
> Authorization: Basic hi
> there
> 
< HTTP/1.1 400 Bad Request
HTTP/1.1 400 Bad Request
< Content-Type: text/plain; charset=utf-8
Content-Type: text/plain; charset=utf-8
< Connection: close
Connection: close

< 
* Closing connection 0


Note the invalid Authorization header. Of course 400 is the proper response, but it's text/plain, of course. Is there some way to configure the Go http parser to use custom error response media types and bodies?
",2,45802962.0
220,26617774,Access a field containing a space in a template,"I am trying to figure out how I can access a map field in a template that contains a space in Go. But I can't seem to figure this out..

I have decoded a JSON array from another source that I don't control like so:

var f []interface{}
json.Unmarshal(externalData, &f)


Then I pass it to ExecuteTemplate as follows:

templates.ExecuteTemplate(w, ""templates/data.html"", map[string]interface{} { ""Data"": f })


In my template I use this:


{{range $element := .Data}}
{{$element.Name}}{{$element.**Some Field With Spaces**}}
{{end}}



And that is where it goes wrong. I guess I can solve this by renaming the ""Some Field With Spaces"" key manually before sending the data to the template but I'd like to keep it as is. I figure I could probably also make a template function that returns the right key name but that doesn't seem like a very good solution.
",1,26618297.0
221,17667803,go install always uses GOROOT/bin instead of GOPATH,"I'm having annoying issue with go install command. 

Every time I try to run it within the src directory of my GOPATH the resulted file is getting created in GOROOT/bin directory for some reason.

I verified my environmental variables in .bashrc and also run 'go env' (see below) and couldn't find any issues:

.bashrc

export GOBIN=$HOME/dev/src/go/bin
export GOPATH=$HOME/dev/go-dev
export PATH=$PATH:$GOBIN:$GOPATH/bin


go env

GOARCH=""amd64""
GOBIN=""/home/user/dev/src/go/bin""
GOCHAR=""6""
GOEXE=""""
GOHOSTARCH=""amd64""
GOHOSTOS=""linux""
GOOS=""linux""
GOPATH=""/home/user/dev/go-dev""
GORACE=""""
GOROOT=""/home/user/dev/src/go""
GOTOOLDIR=""/home/user/dev/src/go/pkg/tool/linux_amd64""
CC=""gcc""
GOGCCFLAGS=""-g -O2 -fPIC -m64 -pthread""
CGO_ENABLED=""1""


This post has a similar problem except I have GOPATH in my env (I tried the solution but it didn't help).

When I tried to create the test library using official GoLang site and run go install I've got a proper file created in $GOPATH/pgk/linux_amd64 but not in the bin directory.

Am I missing something in my configuration?
",1,17667911.0
222,28301402,A lot of data race web application,"I am writing a web application. Incoming requests will pass through middlewares first. At the moment, I've added two middlwares session and security.
After walked through middlwares, it will execute the handler for the request.
Session and security middlwares will execute in their own goroutine.

When I am testing I've got a lot of data race, specially in middlware section

WARNING: DATA RACE
Write by goroutine 18:
  runtime.mapassign1()
      c:/go/src/runtime/hashmap.go:383 +0x0
  net/textproto.MIMEHeader.Set()
      c:/go/src/net/textproto/header.go:22 +0xf4
  net/http.Header.Set()
      c:/go/src/net/http/header.go:31 +0x64
  project/middlewares/session.(*ctrl).setHttpHeader()
      D:/gocode/src/project/middlewares/session/ctrl.go:76 +0x9d
  project/middlewares/session.(*ctrl).evaluateJwt()
      D:/gocode/src/project/middlewares/session/ctrl.go:56 +0x31a
  project/middlewares/session.(*ctrl).serveHttp()
      D:/gocode/src/project/middlewares/session/ctrl.go:94 +0x8a
  project/middlewares/session.func┬À006()
      D:/gocode/src/project/middlewares/session/serve_http.go:23 +0x

Previous write by goroutine 17:
  runtime.mapassign1()
      c:/go/src/runtime/hashmap.go:383 +0x0
  net/textproto.MIMEHeader.Add()
      c:/go/src/net/textproto/header.go:15 +0x212
  net/http.Header.Add()
      c:/go/src/net/http/header.go:24 +0x64
  github.com/unrolled/secure.(*Secure).Process()
      D:/gocode/src/github.com/unrolled/secure/secure.go:177 +0xe5b
  project/middlewares/security.func┬À001()
      D:/gocode/src/project/middlewares/security/serve_http.go:33 +0

Goroutine 18 (running) created at:
  project/middlewares/session.ServeHttp()
      D:/gocode/src/project/middlewares/session/serve_http.go:29 +0x
  project/middlewares.New()
      D:/gocode/src/project/middlewares/ctrl.go:12 +0x99
  github.com/codegangsta/negroni.HandlerFunc.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:24 +0x5f
  github.com/codegangsta/negroni.middleware.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x114
  github.com/codegangsta/negroni.middleware.ServeHTTP┬Àfm()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x84
  github.com/codegangsta/negroni.(*Static).ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/static.go:30 +0xb71
  github.com/codegangsta/negroni.middleware.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x114
  github.com/codegangsta/negroni.middleware.ServeHTTP┬Àfm()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x84
  github.com/codegangsta/negroni.(*Logger).ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/logger.go:25 +0x249
  github.com/codegangsta/negroni.middleware.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x114
  github.com/codegangsta/negroni.middleware.ServeHTTP┬Àfm()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x84
  github.com/codegangsta/negroni.(*Recovery).ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/recovery.go:45 +0xd9
  github.com/codegangsta/negroni.middleware.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x114
  github.com/codegangsta/negroni.(*Negroni).ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:73 +0x1c7
  net/http/httptest.(*waitGroupHandler).ServeHTTP()
      c:/go/src/net/http/httptest/server.go:200 +0xfe
  net/http.serverHandler.ServeHTTP()
      c:/go/src/net/http/server.go:1703 +0x1fd
  net/http.(*conn).serve()
      c:/go/src/net/http/server.go:1204 +0x108e

Goroutine 17 (finished) created at:
  project/middlewares/security.ServeHttp()
      D:/gocode/src/project/middlewares/security/serve_http.go:37 +0
  project/middlewares.New()
      D:/gocode/src/project/middlewares/ctrl.go:12 +0x64
  github.com/codegangsta/negroni.HandlerFunc.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:24 +0x5f
  github.com/codegangsta/negroni.middleware.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x114
  github.com/codegangsta/negroni.middleware.ServeHTTP┬Àfm()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x84
  github.com/codegangsta/negroni.(*Static).ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/static.go:30 +0xb71
  github.com/codegangsta/negroni.middleware.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x114
  github.com/codegangsta/negroni.middleware.ServeHTTP┬Àfm()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x84
  github.com/codegangsta/negroni.(*Logger).ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/logger.go:25 +0x249
  github.com/codegangsta/negroni.middleware.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x114
  github.com/codegangsta/negroni.middleware.ServeHTTP┬Àfm()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x84
  github.com/codegangsta/negroni.(*Recovery).ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/recovery.go:45 +0xd9
  github.com/codegangsta/negroni.middleware.ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:33 +0x114
  github.com/codegangsta/negroni.(*Negroni).ServeHTTP()
      D:/gocode/src/github.com/codegangsta/negroni/negroni.go:73 +0x1c7
  net/http/httptest.(*waitGroupHandler).ServeHTTP()
      c:/go/src/net/http/httptest/server.go:200 +0xfe
  net/http.serverHandler.ServeHTTP()
      c:/go/src/net/http/server.go:1703 +0x1fd
  net/http.(*conn).serve()
      c:/go/src/net/http/server.go:1204 +0x108e
==================
2015/02/03 15:05:31 ctrl.go:17: End of process middlewares
2015/02/03 15:05:31 funcs.go:10: Create new user
2015/02/03 15:05:31 validate.go:14: Validate email thompson@example.com
2015/02/03 15:05:31 validate.go:100: Validate password Test!1234
2015/02/03 15:05:31 validate.go:52: Validate name:  ValidName
2015/02/03 15:05:31 create.go:120: Done
[negroni] Completed 0  in 197ms
PASS
ok      project/testing/account_test 0.664s
PS D:\gocode\src\project\testing\account_test> go test -race
2015/02/03 15:08:10 vs.go:50: Connect to neo4j db.
[negroni] Started POST /user
==================
WARNING: DATA RACE
Write by goroutine 18:
  net/http.(*response).Header()
      c:/go/src/net/http/server.go:615 +0x11a
  github.com/codegangsta/negroni.(*responseWriter).Header()
      :42 +0x78
  project/middlewares/session.(*ctrl).setHttpHeader()
      D:/gocode/src/project/middlewares/session/ctrl.go:76 +0x68
  project/middlewares/session.(*ctrl).evaluateJwt()
      D:/gocode/src/project/middlewares/session/ctrl.go:56 +0x31a
  project/middlewares/session.(*ctrl).serveHttp()
      D:/gocode/src/project/middlewares/session/ctrl.go:94 +0x8a
  project/middlewares/session.func┬À006()
      D:/gocode/src/project/middlewares/session/serve_http.go:23 +0x

Previous write by goroutine 17:
  net/http.(*response).Header()
      c:/go/src/net/http/server.go:615 +0x11a
  github.com/codegangsta/negroni.(*responseWriter).Header()
      :42 +0x78
  github.com/unrolled/secure.(*Secure).Process()
      D:/gocode/src/github.com/unrolled/secure/secure.go:177 +0xe24
  project/middlewares/security.func┬À001()
      D:/gocode/src/project/middlewares/security/serve_http.go:33 +0


I use negroni to process middlwares works. 

The way, how I process middlwares

func New(res http.ResponseWriter, req *http.Request, next http.HandlerFunc) {

    if err := process(security.ServeHttp(res, req), session.ServeHttp(res, req)); err != nil {
        res.WriteHeader(http.StatusInternalServerError)
        return
    }

    log.Println(""End of process middlewares"")
    next(res, req)

}

// Process all middlewares
func process(chErrs ...<-chan error) error {

    for _, chErr := range chErrs {

        // Will abort the loop, when error occurs
        if err := <-chErr; err != nil {
            return err
        }

    }
    return nil
}


As you can see, every middlware have they own channel. The for statement will loop until the error channel is closed or error send.

The server configuration

func Config() *negroni.Negroni {
    n := negroni.Classic()
    n.Use(negroni.HandlerFunc(middlewares.New))
    n.UseHandler(routes.Set())
    return n

}


My question is, are the middlewares the reason, why I've got the data race?
",1,28301847.0
223,44305170,nil slices vs non-nil slices vs empty slices in Go language,"I am a newbee to Go programming. I have read in go programming book that slice consists of three things: a pointer to an array, length and capacity.

I am getting confused between nil slices(slice has no underlying array to point to, len = 0,cap=0), non-nil slices where only len = 0,cap = 0 and empty slices.

Can anyone please tell whether nil and empty slices are same things? 
If they both are different, then please tell what is the difference between those two?

How to test whether a slice is empty or not?

Also, what value does the pointer holds in non-nil slices, whose length and capacity are zero?
",2,44305910.0
224,12867031,OpenPGP Public Key Authentication in Go,"I'm working on a Go peer-to-peer chat service to be used in Hyperboria, which operates as a meshnet. That is relatively unimportant compared to my problem:

I need to use OpenPGP keys existent in user's GPG keyrings in order to encrypt and decrypt messages. I need to be able to discover public and private keys, check that given key IDs are present, and use them to either encrypt or decrypt []byte, (either before or after it goes across a TCP connection)

Is there a package that I could look into to do this?
",1,12869641.0
225,26692327,Golang multiple-value function composition,"Short question to which I haven't found an answer on SO: how do I write composite function calls when an inner function has multiple return values?

Sub-question: can you cast just one of the returns from a multiple-value function without using a temp variable?

Example: http://play.golang.org/p/intnxkzSO1

package main

import ""fmt""

func multiReturn() (int, int) {
    return 0, 1
}

func noOp(a int) int {
    return a
}

func main() {

    // Too many arguments
    fmt.Print(noOp(multiReturn()))

    // multiple-value in single-value context
    fmt.Print(string(multiReturn()))
}

",3,
226,29196323,How do I pass a sort interface implementation type as a function parameter?,"I am writing different scheduling algorithm and would like to compare various ways of ordering jobs. I have a function on a struct that I would like to pass the type of a sort interface type to be used by the sort within the function.

type Schedule struct {
    Jobs []Job
}

type ByDifference []Job
// ByDifference implements sort.Interface

type ByRatio []Job
// ByRatio implements sort.Interface

func (s *Schedule) Schedule(OrderBy sort.Interface) {
    // Summation variables omitted

    // This fails as there is no function OrderBy()
    sort.(OrderBy(q.Jobs))

    for _, v := range q.Jobs {
        // Compute weighted sum omitted
    }

    // Output code omitted

}


Naturally, I would like to to call the Schedule function and pass some representation of ByDifference or ByRatio and have the sort use that type. My initial reading seems to lead to type reflection. Is it possible to use this design to pass a type that implements an interface to be used by sort within a function?
",1,29199611.0
227,37125537,Go Language - Insert data to Mysql database without prepared statements,"I have a script that needs to insert a huge amount of data to the database (270k rows) and I'm using prepared statements (with for loops). 
And when I execute   (res, err := stmt.Exec) I can retrieve the last ID that was inserted to the database (id, err  = res.LastInsertId()).
But since I'm making a-lot of requests to the database, after 16k rows I get max_prepared_statements(16,382) error (which I then tried to set the max value to 1 million instead of 16,382 but the problem still remains). 

My question is if there's another way to insert to DB and retrieve the last inserted ID without using prepared statements?

my insert code as for now is:

stmt, err := db.Prepare(`INSERT info SET title=?,minimage=?,downloadfile=?,rating=?,peoplewatched=?,likes=?`)
checkErr(err)
res, err := stmt.Exec(title,minimage,downloadfile,rating,peoplewatched,likes)
checkErr(err)
id, err  = res.LastInsertId()
checkErr(err)
fmt.Println(id)


Thanks
",1,37133267.0
228,1726130,Go code contribution: license and patent implications?,"I've been reviewing the contributions documentation for Google new language, and was curious about the idea of contributing a new package.  It states that this should be included at the top of contributed source code:

// Copyright 2009 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.


My understanding of a BSD-style license is that it essentially means that the user needs to attribute the code to you, but can do whatever else they want.

Further down it says: 


  If you are the copyright holder, you will need to agree to the individual contributor license agreement...


In the ""individual contributor license agreement"", it says that Google has patentable rights to the contributed code:


  You hereby grant to Google and to recipients of software distributed by Google a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by You that are necessarily infringed by Your Contribution(s) alone or by combination of Your Contribution(s) with the Work to which such Contribution(s) was submitted.


To what extent does Google own any Go contributions?  Do they have full rights to profit from these contributions?
",4,1726262.0
229,31212974,Not receiving back a delivery_receipt_notification from GCM CCS,"I'm trying to get a receipt from CCS, but I'm just not able to.

Here is what I'm doing:

I have a go script:

package main

import (
    ""fmt""
    ""github.com/brunohenrique/go-gcm/ccs""
)

var (
    user = struct {
        gcmToken string
    }{""mg0xe56LfjE:APA91bFHtHVQt85iNgyzTeDowovIGPAD_NbBjURppy1LgV9_oaM2R_9zn1fDXNuEeOoALTj7F8e8JmNPI3Md-CbbgTxdvxVrONFVfGz2dOujsaGkZjEhJcBH8sWvRNYZNIp2j2QliAEX""}
)


func main() {
    con := connect()


    // Sends a message
    con.Send(&ccs.OutMsg{
        To: user.gcmToken,
        ID: ""m-1366082849205"",
        Notification: map[string]interface{}{
            ""title"": ""Hey!"",
            ""body"": ""There"",
            ""sound"": ""default"",
        },
        TimeToLive: 600,
        DeliveryReceiptRequested: true,
        DelayWhileIdle: true,
    })


    // Listen to messages
    for {
        m, err := con.Receive()

        if err != nil {
            fmt.Printf("">>> Err: %+v \n"", err)
        }

        go func(m *ccs.InMsg) {
            fmt.Printf("">>> InMsg: %+v \n"", m)
        }(m)
    }
}


Everything seems alright when I run the script, but no receipt message back:



And this is what I'm doing when I get the notification:



Am I doing something wrong or missing something?
",2,
230,29778778,Idiomatic Go Code Organization,"Note: I've seen other questions related to this topic but none that address the issue at hand.

I'm struggling to organize my Go code.  I'm writing a daemon and I would like to split the code logically between files.

Say I have 3 files, main.go:

package main

func main() {
    GlobalFunc()

    commonFunc()

    var svr server.Server
    server.OtherFunc()
}


server.go:

package main

type Server struct {
    name string
    ip string
}

func GlobalFunc() {

}

func (s *Server) OtherFunc() {
    commonFunc()
}


and common.go:

package main

func commonFunc() {

}


I would like to be able to call GlobalFunc() as server.GlobalFunc() to show it's part of the ""server module"".  That doesn't seem possible with the above example.

I could make a subdir server, put server.go in there, and change it to package server.  The problem here is that I can't seem to shared common.go between the main and the server package.  I understand why, it doesn't seem like a good idea either.

So I am missing something simple here and making this more complicated?

Thanks!
",1,29779605.0
231,37352080,Type assertion falling on reference / pointer,"I am trying to get a map out of the reference and the assertion seems to be failing:

session.AddFlash(gin.H{
    ""username"": username,
    ""password"": password,
}, ""_post"")


...

flashes := session.Flashes(""_post"")
if flashes != nil {
    flash = flashes[0]
    fmt.Printf(""%T\n"", flash)
    if post_data, ok := flash.(gin.H); ok {
        fmt.Println(""post_data:"", post_data)
        data = post_data
    } else {
        fmt.Println(""post_data(failed):"", post_data)
    }
}


However I always get the following output, which the assert fails:

*gin.H
post_data(failed): map[]


I assume its due to the assertion I am doing so I've tried:

if post_data, ok := (*flash).(gin.H); ok {


But then I get invalid indirect of flash (type interface {})

I have also tried:

if post_data, ok := *flash.(gin.H); ok {


But that gives me invalid indirect of flash.(gin.H) (type gin.H)
",2,37353431.0
232,25099525,My datastore PropertyLoadSaver does not work in golang,"The documentation I used (https://developers.google.com/appengine/docs/go/datastore/reference#hdr-The_PropertyLoadSaver_Interface)

Just using this struct without using the propertyLoadSaver everything works.

type Trick struct {
    Name string `json:""name"" datastore:""-""`
    Difficulty int `json:""difficulty""`
}


When only using a load property it also works.

func (s *Trick) Load(c <-chan datastore.Property) error {
    return datastore.LoadStruct(s, c)
}


The save property results into a appengine panic at the return line?

func (s *Trick) Save(c chan<- datastore.Property) error {
    defer close(c)
    return datastore.SaveStruct(s, c)
}


When I try this instead it will not result into a panic but does not save anything?

func (s *Trick) Save(c chan<- datastore.Property) error {
    defer close(c)
    c <- datastore.Property{
        Name:  ""Difficulty"",
        Value: s.Difficulty,
    }
    return nil
}


(Using sdk v1.9.8)
",1,25099952.0
233,1718173,Differences between Coroutines and GoTo?,"I always read about the horrible thing that ""goto"" is. But today, reading about the Google programming language Go, I see that it suports Coroutines (Goroutines).

The question is:

Coroutine == GoTo 


Or

Coroutine != GoTo?


Why?
",2,1718262.0
234,39799684,Limit the number of times a ping a hostname every second,"I am writing a web crawler to learn go

My current implementation uses 10 go routines to get websites, I want to limit the number of times I can hit a hostname every second.

What is the best (thread-safe) approach to do this.
",1,
235,28975841,Are the grpc examples intended to speak across languages?,"Are the gRPC examples intended to interoperate? I can run the Java client-server examples entirely with Java. I can Go examples entirely with Go. But Go's hello world client won't talk with Java's hello world server.

In one terminal, from grpc-java:

$ ./gradlew :grpc-examples:helloWorldServer
:grpc-core:compileJava UP-TO-DATE
...
:grpc-examples:helloWorldServer
Mar 10, 2015 7:01:50 PM io.grpc.examples.helloworld.HelloWorldServer start
INFO: Server started, listening on 50051
> Building 96% > :grpc-examples:helloWorldServer


In another terminal, from grpc-common/go

$ go run greeter_client/main.go
2015/03/10 19:02:47 could not greet: rpc error: code = 12 desc = ""Method not found: /helloworld.Greeter/SayHello""
exit status 1


Not the cross-language example I was expecting. SayHello is there, but is the problem with path or case sensitivity? Am I missing something, or is this cross-language cooperation an intent not yet realized?

(Caveat--I don't know Go, and I've been unable to build grpc for C++).
",1,
236,43947072,How do I check the type of an error?,"I want to check the error type from a function I call to see if it was caused by a deadlineExceededError but I don't see a way to reference it. I suppose I can always check against the .Error() string but I've been told that's frowned upon. 

Also it's set to 2 microseconds for debugging purposes, I realize it should be changed to time.Minute

Godoc for the function in question: https://godoc.org/github.com/moby/moby/client#Client.ContainerStart

//if the container fails to start after 2 minutes then we should timeout
ctx, cancel := context.WithTimeout(ctx, 2*time.Microsecond)

defer cancel()
// Do the actual start
if err := myClient.ContainerStart(ctx, containerName, types.ContainerStartOptions{}); err != nil {
    fmt.Printf(""%v\n"", err) //prints: 'context deadline exceeded'
    fmt.Printf(""%T\n"", err) //prints: 'context.deadlineExceededError'
    switch e := err.(type) {
    case //how do I check for deadlineExceededError:
         //print that it timed out here
    }
    return err
}

",1,43947140.0
237,17882533,Custom log processing/parsing,"I have such log format:

[26830431.7966868][4][0.013590574264526367][30398][api][1374829886.320353][init] 
  GET /foo
  {""controller""=>""foo"", ""action""=>""index""}

[26830431.7966868][666][2.1876697540283203][30398][api][1374829888.4944339][request_end] 
  200 OK


The entry is constracted using such pattern:

[request_id][user_id][time_from_request_started][process_id][app][timestamp][tagline]
  payload


Durring request I have many point where I log something - app basically has complex behaviour. This helps me debug a lot the user behaviour.

The way I would like to parse it is that I would like to make have directory structure like this:

req_id
  |
  |----[time_from_request_started][process_id][timestamp][tagline]
  |
  etc


Basically each directory will have name based on req_id, with files wchich names are rest of  tagline. These files will include payload.

And also I will have other directory, with users ids, which will contain symlinks to request done by this user.

First question: Is this structure correct? In my opinion it will make easy fast log access. The reason I want to use directories and files is that I like unix approach, and try it (feel by myself its drawbacks and advantages)

Second question: I will have no problem to use ruby for creating this. But I would like to learn some new tool, which is better suited for this. I am thinking about using just unix tools (pipe, awk etc) to achieve this, or write parser in golang which I am learning right now (even have time to implement simple map reduce). What tool is best suited for this?
",2,
238,29963881,Appengine cron.yaml definitions not showing in developer console,"I have a basic appengine project with multiple modules and a dispatch.yaml:


my-project/boxes/app.yaml  (default module)
my-project/users/app.yaml  (users module)
my-project/dispatch.yaml


I'm trying to configure a single hourly cronjob with the following definition:

cron:
- description: hourly box purging
  url: /api/boxes.purge
  schedule: every 1 hours
  target: default


I've tried adding it to the module it concerns, so put the above definition in file: 'my-project/boxes/cron.yaml' and running appcfg.py cron_info boxes/. My terminal seems to indicate all went well: 

hourly box purging:
URL: /api/boxes.purge
Schedule: every 1 hours (UTC)
2015-04-30 10:08:00Z, 0:59:55 from now
2015-04-30 11:08:00Z, 1:59:55 from now
2015-04-30 12:08:00Z, 2:59:55 from now
2015-04-30 13:08:00Z, 3:59:55 from now
2015-04-30 14:08:00Z, 4:59:55 from now


Ye the Appengine Developer console fails to reflect this and cron jobs are not run. It does show on the local development panel.

Putting the definition in the root of the projects (besides dispatch.yaml) yields the same results. Other things i've tried (in vain): Redeploying all code, appcfg.py update_dispatch, waiting a while before refreshing the developer console.

Hopefull someone is able to help me find the obvious mistake, or confirm that their is some bug.
",1,29975311.0
239,37405162,Serialization performance in golang json/gob/xml,"Go standard lib, Json serialization performance question...JSON is slower than XML and GOB, while json size less than xml file size?

please help point out anything mistake?

docker@dockhost:~/go/projects/wiki$ go run encoding.go 
2016/05/24 00:52:16 Serialization by JSON elapsed: 2152195 us
2016/05/24 00:52:16 students.json 19177782
2016/05/24 00:52:17 Serialization by GOB elapsed: 748867 us
2016/05/24 00:52:17 students.gob 9305166
2016/05/24 00:52:18 Serialization by XML elapsed: 1507397 us
2016/05/24 00:52:18 students.xml 26177780

docker@dockhost:~/go/projects/wiki$ go run encoding.go 
2016/05/24 00:52:32 Serialization by JSON elapsed: 1388153 us
2016/05/24 00:52:32 students.json 19177782
2016/05/24 00:52:33 Serialization by GOB elapsed: 502814 us
2016/05/24 00:52:33 students.gob 9305166
2016/05/24 00:52:34 Serialization by XML elapsed: 897859 us
2016/05/24 00:52:34 students.xml 26177780

docker@dockhost:~/go/projects/wiki$ go run encoding.go 
2016/05/24 00:52:41 Serialization by JSON elapsed: 1290359 us
2016/05/24 00:52:41 students.json 19177782
2016/05/24 00:52:42 Serialization by GOB elapsed: 434203 us
2016/05/24 00:52:42 students.gob 9305166
2016/05/24 00:52:42 Serialization by XML elapsed: 862379 us
2016/05/24 00:52:42 students.xml 26177780


Code:

package main


import (
        ""log""
        ""encoding/json""
        ""encoding/gob""
        ""encoding/xml""
        ""math/rand""
        ""strconv""
        ""os""
        ""time""
)



const (
        Male=iota
        Female
        Unknown

        ALL=100000
)

type Person struct {
        Name string
        Id      string
        Age     int
        Gender  int
}
type Student struct {
        Person Person
        Grade int
        Class   string
        Teacher Person
}

func (s  Student) String() string{
        v,err:=json.Marshal(s)
        if err!=nil {
                log.Fatal(""Marshal failed"",s)
        }
        return string(v)

}

var students []Student
func init(){
        students=make([]Student,ALL)
        for i:=0;i<ALL;i++ {
                students[i].Grade=rand.Intn(5)
                students[i].Class=strconv.Itoa(students[i].Grade)+"",class""+strconv.Itoa(rand.Intn(10))
                students[i].Person.Name=""Student ""+strconv.Itoa(i)
                students[i].Person.Id=""11001234512345551""+strconv.Itoa(rand.Intn(10))
                students[i].Person.Age=10+rand.Intn(10)
                students[i].Person.Gender=rand.Intn(3)
                students[i].Teacher.Id=""22001154365151344""+strconv.Itoa(rand.Intn(10))
                students[i].Teacher.Name=""Teacher ""+strconv.Itoa(i)
                students[i].Teacher.Age=40+rand.Intn(10)
                students[i].Teacher.Gender=rand.Intn(3)
        }

}

func toJsonFile(){
        f,err:=os.OpenFile(""students.json"",os.O_RDWR ,0600)
        if err!=nil {
                log.Fatal(""Can't open students.json ""+ err.Error())
        }
        defer f.Close()
        en:=json.NewEncoder(f)
        err=en.Encode(students)
        if err!=nil {

                log.Fatal(err)
        }

}

func loadJsonFile(){
        f,err:=os.Open(""students.json"")
        if err!=nil {
                log.Fatal(err)
        }
        defer f.Close()
        dec:=json.NewDecoder(f)
        ss:=make([]Student,ALL)
        err=dec.Decode(&ss)
        if err!=nil {

                log.Fatal(err)
        }
//      log.Println(ss)
}



func toGobFile(){
        f,err:=os.OpenFile(""students.gob"",os.O_RDWR ,0600)
        if err!=nil {
                log.Fatal(""Can't open students.gob ""+ err.Error())
        }
        defer f.Close()
        en:=gob.NewEncoder(f)
        err=en.Encode(students)
        if err!=nil {

                log.Fatal(err)
        }

}

func loadGobFile(){
        f,err:=os.Open(""students.gob"")
        if err!=nil {
                log.Fatal(err)
        }
        defer f.Close()
        dec:=gob.NewDecoder(f)
        ss:=make([]Student,ALL)
        err=dec.Decode(&ss)
        if err!=nil {

                log.Fatal(err)
        }
//      log.Println(ss)
}



func toXmlFile(){
        f,err:=os.OpenFile(""students.xml"",os.O_RDWR ,0600)
        if err!=nil {
                log.Fatal( err.Error())
        }
        defer f.Close()
        en:=xml.NewEncoder(f)
        err=en.Encode(students)
        if err!=nil {

                log.Fatal(err)
        }

}
func loadXmlFile(){
        f,err:=os.Open(""students.xml"")
        if err!=nil {
                log.Fatal(err)
        }
        defer f.Close()
        dec:=xml.NewDecoder(f)
        ss:=make([]Student,ALL)
        err=dec.Decode(&ss)
        if err!=nil {

                log.Fatal(err)
        }
//      log.Println(ss)
}




func main(){
        start:=time.Now()
        toJsonFile()
        loadJsonFile()
        end:=time.Now()

        log.Printf(""Serialization by JSON elapsed: %d us"",end.Sub(start)/1000)

        fi,err:=os.Stat(""students.json"")
        if err!=nil {
                log.Fatal(err)
        }
        log.Println(fi.Name(), fi.Size())



        start=time.Now()
        toGobFile()
        loadGobFile()
        end=time.Now()


        log.Printf(""Serialization by GOB elapsed: %d us"",end.Sub(start)/1000)

        fi,err=os.Stat(""students.gob"")
        if err!=nil {
                log.Fatal(err)
        }
        log.Println(fi.Name(), fi.Size())

        start=time.Now()
        toXmlFile()
        loadXmlFile()
        end=time.Now()


        log.Printf(""Serialization by XML elapsed: %d us"",end.Sub(start)/1000)

        fi,err=os.Stat(""students.xml"")
        if err!=nil {
                log.Fatal(err)
        }
        log.Println(fi.Name(), fi.Size())

}

",2,
240,41592892,How to set up debugging in Gogland?,"I am trying out Gogland and hear that the debugger is supposedly awesome, but I can’t find any documentation explaining how to set it up (Gogland is in preview stage, so that’s not really surprising). My use case: I am writing a REST API to which I send requests using curl. Could someone please tell me, step by step, how to get started with the debugger ?

[edit 1] (moved from comment) When I click Run/Debug (or Run/Run), a window is displayed, asking me to edit configurations. I am given a choice of several kinds of configurations, I try to choose ""Go application"" but the Debug button never is grayed and I can't get it to become clickable. I am very new to Gogland, I may be missing something obvious, but I can’t find whatever settings are missing.

[edit 2] It turns out that my workspace did not conform to the Go specifications : my code was not in a directory named src. Now that it is the case, I can click Run/Debug and Gogland seems to be doing the right thing, except it doesn’t stop at breakpoints or otherwise behave like a debugger, my code just runs.

[edit 3] Tried again, and it works. Sort of. I have no idea why it works now, even though it didn’t previously and I didn’t change anything. Now breakpoints work at some lines, and not at others. Or the debugger stops at the breakpoint, but I wait forever for the list of variables to be loaded. Well, it is a preview, after all...

[edit 4] I was notified just today that a new version of Gogland was available. I upgraded, and debugging is working well for me now.
",5,
241,33818187,Golang: Android apps with gomobile crash when connect in UDP,"I wrote Android apps in go with mobile package, the apps crash after reaching the following code:

ServerAddr,_ := net.ResolveUDPAddr(""udp"",SERVER_IP_AND_PORT)
LocalAddr, _ := net.ResolveUDPAddr(""udp"", "":0"")
Conn, err := net.DialUDP(""udp"", LocalAddr, ServerAddr)
buf := []byte(""lalala"")
_,err := Conn.Write(buf) //apps crash on this line


Where (actual ip is represented by ""x""):

const SERVER_IP_AND_PORT string = ""xxx.xx.xx.xxx:10001"" 


I tested the code on my laptop and they work perfectly fine. I use mobile package only for creating apk files to do the UDP tests. 

I tried to use ""log"" package to trace errors but it doesn't work. I downloaded many logcat apps but none can catch the error logs (or even log.Print(""AAA"")). I also tried to write logs in files but don't work either, please check out this question.

Anyway, does anyone have any idea about what the problem is, or any ways to locate the bug? (And please avoid using Android Studio which I have a thousand more problems to even install it correctly)

Thank you very much!
",1,33835327.0
242,38058320,Goroutine only works when fmt.Println is executed,"For some reason, when I remove the fmt.Printlns then the code is blocking.
I've got no idea why it happens. All I want to do is to implement a simple concurrency limiter...

I've never experienced such a weird thing. It's like that fmt flushes the variables or something and makes it work.

Also, when I use a regular function instead of a goroutine then it works too.

Here's the following code - 

package main

import ""fmt""

type ConcurrencyLimit struct {
    active int
    Limit  int
}

func (c *ConcurrencyLimit) Block() {
    for {
        fmt.Println(c.active, c.Limit)
        // If should block
        if c.active == c.Limit {
            continue
        }
        c.active++
        break
    }
}

func (c *ConcurrencyLimit) Decrease() int {
    fmt.Println(""decrease"")
    if c.active > 0 {
        c.active--
    }
    return c.active
}

func main() {
    c := ConcurrencyLimit{Limit: 1}
    c.Block()
    go func() {
        c.Decrease()
    }()
    c.Block()
}


Clarification: Even though I've accepted @kaedys 's answer(here) a solution was answered by @Kaveh Shahbazian (here)
",4,38058704.0
243,38892436,"Query with an array as parameter, how to convert to GoLang mgo?","I have the following query:

db.getCollection('spawnlocations').find({
    'location': {
        '$geoWithin': {
            '$center': [[-73.94075, 40.789138], 5000]
        }
    }, 
    ""expirationtimems"": { ""$gte"": 1234567890 }, 
    ""_id"": { ""$gte"": ""2a920240836c40d8b374203a798a27fa.16"" }
}).sort({""_id"":1}).limit(50)


I am trying to convert the query to mgo using bson.M but I'm having a hard time with the array part of it. 

I thought this would work, but of course it doesn't

    q = bson.M{
        ""location"": bson.M{
            ""$geoWithin"": bson.M{
                ""$center"": [
                    j.Location.Coordinates,
                    5000
                ],
            },
        },
        ""expirationtimems"": bson.M{
            ""$gte"": time.Now().Unix() * 1000,
        },
        ""_id"": bson.M{
            ""$gt"": p,
        },
    }

",1,38898596.0
244,32021400,How come I cannot parse an already RFC3339 string back to a RFC3339 string?,"I'm storing a variable into a MySQL database with the field type of VARCHAR(255) like this:

ts, err := time.Parse(time.RFC3339, nonce[0:20])

which works great and shows up like this: 



Then when I need to get it from the database I do this:

rows, err := db.Query(""SELECT nonce, time FROM noncestore WHERE endpoint=?"", endpoint)

        var sTimeStamp, nonceHolder string
        for rows.Next() {
                err = rows.Scan(&nonceHolder, &sTimeStamp)
                errCheck(err)

Gives error//>> timeStamp, err := time.Parse(time.RFC3339, sTimeStamp)
                errCheck(err)

                if timeStamp == ts && nonceHolder == s {
                        return errors.New(""Nonce already used"")
                }

                if now.Sub(timeStamp) < *maxNonceAge {
                        _, err := db.Query(""INSERT INTO noncestore SET nonce=?, time=?, endpoint=?"", nonceHolder, sTimeStamp, endpoint)
                        errCheck(err)
                }
        }


The line noted above gives me this error:

2015/08/14 21:56:18 http: panic serving [::1]:49663: Failed: parsing time ""2015-08-15 03:56:00"" as ""2006-01-02T15:04:05Z07:00"": cannot parse "" 03:56:00"" as ""T""


How come it is able to convert it to RFC3339 and store it in the database, but when it comes time to get it and format it back to RFC3339 so that I can use in my if statement I get an error?
",1,32021907.0
245,44065511,golang no /debug/pprof/profile endpoint for cpu while having everything else,"I'm quite puzzled by a problem that I can't profile my golang program, I have all other endpoints under /debug/pprof but not /debug/pprof/profile for CPU profiling
Have anyone ever stumbled across such issue?

go tool pprof http://localhost:7778/debug/pprof/profile
Fetching profile from http://localhost:7778/debug/pprof/profile
Please wait... (30s)
server response: 404 Not Found


while 

/debug/pprof/

profiles:
19  block
31  goroutine
10  heap
0   mutex
11  threadcreate

full goroutine stack dump


I setup profiling in this way

r := http.NewServeMux()
r.Handle(""/debug/pprof/"", http.HandlerFunc(pprof.Index))


What can be the cause?

Updated: running 

http.ListenAndServe(""localhost:4444"", nil)


(i.e. starting default http server) fixes the problem for my custom endpoint
",1,
246,30325483,Golang + CORS. Global setting somehow?,"I'm trying out this small Go example https://github.com/jakecoffman/golang-rest-bootstrap, and so far so good.

I'm trying to add CORS to allow my front-end app access.

Here is my Main.go

func main() {

    var err error

    session, err = r.Connect(r.ConnectOpts{
        Address:  ""localhost:28015"",
        Database: ""demo"",
        MaxOpen:  40,
    })
    if err != nil {
        log.Fatalln(err.Error())
    }

    r := mux.NewRouter()
    users.Init(r, session)
    accounts.Init(r, session)

    r.HandleFunc(""/"", func(w http.ResponseWriter, r *http.Request) {
        w.Header().Set(""Access-Control-Allow-Origin"", ""*"")
    })

    port := ""9999"" // os.Getenv(""PORT"")
    log.Println(""Serving on"", "":""+port)
    http.ListenAndServe("":""+port, context.ClearHandler(r))
}


It allows CORS at the root url, but since the other routes are handled in the controllers I just can't seem to get CORS to work there as well.

Here is part of the AccountController

func NewAccountController(r *mux.Router, s AccountService) *AccountController {
    cont := AccountController{s}
    r.Handle(""/accounts"", cont)
    r.Handle(""/accounts/{id}"", cont)

    return &cont
}


And

func (a AccountController) ServeHTTP(w http.ResponseWriter, r *http.Request) {
    code := http.StatusMethodNotAllowed
    var data interface{}

    defer func(c int) {
        log.Println(r.URL, ""-"", r.Method, ""-"", code, r.RemoteAddr)
    }(code)

    if r.URL.Path == ""/accounts"" {
        switch r.Method {
        case ""GET"":
            code, data = a.List(w, r)
        case ""POST"":
            code, data = a.Add(w, r)
        default:
            return
        }
    } else {
        switch r.Method {
        case ""GET"":
            code, data = a.Get(w, r)
        case ""PUT"":
            code, data = a.Update(w, r)
        case ""DELETE"":
            code, data = a.Delete(w, r)
        default:
            return
        }
    }

    w.WriteHeader(code)
    w.Header().Set(""Content-Type"", ""application/json"")

    err := json.NewEncoder(w).Encode(data)
    if err != nil {
        log.Println(""Failed to write data: "", err)
        code = http.StatusInternalServerError
    }
}


Any ideas or pointers would be great.

Thanks,

JB
",1,30325711.0
247,30062128,Stuck with Go concurrency,"I can't seem to figure out what to do next. My goal is to create an array of all the sub images from the original image using the SubImage function from the image package. I am able to partition an image in the imageSplit() function and pass to imageReceiver() function via a channel.

I actually receive the data in function imageReceiver(), but I don't know how to append to an array and use it after receiving all the images from imageSplit() function.

// Partitions Image
func Partition(src image.Image) []image.Image {

    newImg := image.NewNRGBA64(src.Bounds())

    r := newImg.Rect
    dx, dy := r.Dx(), r.Dy()

   // partitionNum
   pNum := 3

    // partition x
    px, py := (dx / pNum), (dy / pNum)

    imgChan := make(chan image.Image)
    imgStorage := make([]image.Image, 0)

    for i := 1; i < pNum; i++ {
        for j := 1; j < pNum; j++ {
            startX, startY := ((px * i) - px), ((py * j) - py)
            endX, endY := (px * i), (py * j)

            go imageSplit(imgChan, newImg, startX, startY, endX, endY)
            go imageReceiver(imgChan)
        }
    }

    return imgStorage

}

// Creates sub-images of img
func imageSplit(imgChan chan image.Image, img *image.NRGBA64, startX, startY, endX, endY int) {
    r := image.Rect(startX, startY, endX, endY)
    subImg := img.SubImage(r)

    imgChan <- subImg
}

// Receive sub-image from channel
func imageReceiver(imgChan chan image.Image) {
    img := <-imgChan
    spew.Dump(img.Bounds())
}


I thought of creating a global array of image.Image but I'm unsure if this is the correct way to ""save"" all the sub images.

I guess the reason this is a bit confusing is because this is the first time I'm working with concurrency in Go.
Thanks for any help :) 
",1,30062694.0
248,32518539,make http request with a specified ethernet ip,"I have several public ip addresses on my machine. I want to specify which one to use for a request.

I can do it using curl:

curl --interface 111.222.333.444 https://www.iplocation.net/find-ip-address | grep ""Your IP address""


where 111.222.333.444 is one of my local ip addresses which I am using to make requests to the internet.

How to do the same using golang?

This method...

package main

import (
    ""bytes""
    ""fmt""
    ""github.com/PuerkitoBio/goquery""
    ""io/ioutil""
    ""net""
    ""net/http""
    ""os""
    ""time""
)

func main() {
    var localAddr = ""111.222.333.444""
    localAddress, _ := net.ResolveTCPAddr(""tcp"", localAddr)

    // Create a transport like http.DefaultTransport, but with a specified localAddr
    transport := &http.Transport{
        Proxy: http.ProxyFromEnvironment,
        Dial: (&net.Dialer{
            Timeout:   30 * time.Second,
            KeepAlive: 30 * time.Second,
            LocalAddr: localAddress,
        }).Dial,
        TLSHandshakeTimeout: 10 * time.Second,
    }

    client := &http.Client{
        Transport: transport,
    }

    response, err := client.Get(""https://www.whatismyip.com/"")

    if err != nil {
        fmt.Printf(""%s"", err)
        os.Exit(1)
    } else {
        defer response.Body.Close()
        contents, err := ioutil.ReadAll(response.Body)
        if err != nil {
            fmt.Printf(""%s"", err)
            os.Exit(1)
        }
        var contentsStr = string(contents)
        fmt.Printf(""%s\n"", contentsStr)
        var doc = DocByHtmlString(contentsStr)

        doc.Find(""div"").Each(func(i int, s *goquery.Selection) {
            attr, exists := s.Attr(""class"")
            if exists {
                if attr == ""ip"" {
                    fmt.Println(s.Text())
                    fmt.Println(""expected ip is "" + localAddr)
                }
            }
        })
    }
}

func DocByHtmlString(html string) *goquery.Document {
    doc, err := goquery.NewDocumentFromReader(bytes.NewBufferString(html))
    if err != nil {
        panic(err)
    }
    return doc
}


... gives me always the following result:

Your IP Address Is: 555.666.777.888 // main IP address on my machine
expected ip is 111.222.333.444


Another method

package main

import (
    ""fmt""
    ""io/ioutil""
    ""log""
    ""net""
)

func main() {
    ief, err := net.InterfaceByName(""eth0"")
    if err != nil {
        log.Fatal(err)
    }
    addrs, err := ief.Addrs()
    if err != nil {
        log.Fatal(err)
    }
    tcpAddr := &net.TCPAddr{
        IP: addrs[3].(*net.IPNet).IP,
        // Port: 8080,
    }
    d := net.Dialer{LocalAddr: tcpAddr}
    conn, err2 := d.Dial(""tcp"", ""www.whatismyip.com:80"")
    if err2 != nil {
        log.Fatal(err2)
    }
    fmt.Println(`conn.LocalAddr()`)
    fmt.Println(conn.LocalAddr())
    fmt.Println(`conn.RemoteAddr()`)
    fmt.Println(conn.RemoteAddr())
    defer conn.Close()
    bytesResult, err3 := ioutil.ReadAll(conn)
    if err3 != nil {
        log.Fatal(err3)
    }
    fmt.Println(`string(bytesResult)`)
    fmt.Println(string(bytesResult))
}


gives output

conn.LocalAddr()
111.222.333.213:37036 
conn.RemoteAddr()
141.101.120.15:80
                     // 15 seconds pause
string(bytesResult)
                     // empty string


ifcongif

Ubuntu 14.04.3 LTS (GNU/Linux 3.13.0-63-generic x86_64)

$ ifconfig
eth0      Link encap:Ethernet  HWaddr 00:18:3c:96:69:8c  
          inet addr:111.222.333.208  Bcast:111.222.333.255  Mask:255.255.255.0
          inet6 addr: de90::216:3cff:fe56:698c/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:942000 errors:0 dropped:0 overruns:0 frame:0
          TX packets:336708 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:133860794 (133.8 MB)  TX bytes:84577381 (84.5 MB)

eth0:0    Link encap:Ethernet  HWaddr 00:18:3c:96:69:8c  
          inet addr:111.222.333.209  Bcast:111.222.333.255  Mask:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1

eth0:1    Link encap:Ethernet  HWaddr 00:18:3c:96:69:8c  
          inet addr:111.222.333.212  Bcast:111.222.333.255  Mask:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1

eth0:2    Link encap:Ethernet  HWaddr 00:18:3c:96:69:8c  
          inet addr:111.222.333.213  Bcast:111.222.333.255  Mask:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1

eth0:3    Link encap:Ethernet  HWaddr 00:18:3c:96:69:8c  
          inet addr:111.222.333.216  Bcast:111.222.333.255  Mask:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1

eth0:4    Link encap:Ethernet  HWaddr 00:18:3c:96:69:8c  
          inet addr:111.222.333.217  Bcast:111.222.333.255  Mask:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1

eth0:5    Link encap:Ethernet  HWaddr 00:18:3c:96:69:8c  
          inet addr:111.222.333.220  Bcast:111.222.333.255  Mask:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1

eth0:6    Link encap:Ethernet  HWaddr 00:18:3c:96:69:8c  
          inet addr:111.222.333.221  Bcast:111.222.333.255  Mask:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1

eth0:7    Link encap:Ethernet  HWaddr 00:18:3c:96:69:8c  
          inet addr:111.222.333.224  Bcast:111.222.333.255  Mask:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1

eth0:8    Link encap:Ethernet  HWaddr 00:18:3c:96:69:8c  
          inet addr:111.222.333.225  Bcast:111.222.333.255  Mask:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

",1,32527460.0
249,16634582,sending JSON with go,"I'm trying to send a JSON message with Go.
This is the server code:

func (network *Network) Join(
    w http.ResponseWriter,
    r *http.Request) {
    //the request is not interesting
    //the response will be a message with just the clientId value set
    log.Println(""client wants to join"")
    message := Message{-1, -1, -1, ClientId(len(network.Clients)), -1, -1}
    var buffer bytes.Buffer
    enc := json.NewEncoder(&buffer)

    err := enc.Encode(message)
    if err != nil {
        fmt.Println(""error encoding the response to a join request"")
        log.Fatal(err)
    }

    fmt.Printf(""the json: %s\n"", buffer.Bytes())
    fmt.Fprint(w, buffer.Bytes())
}


Network is a custom struct. In the main function, I'm creating a network object and registering it's methods as callbacks to http.HandleFunc(...)

func main() {
    runtime.GOMAXPROCS(2)
    var network = new(Network)
    var clients = make([]Client, 0, 10)
    network.Clients = clients

    log.Println(""starting the server"")
    http.HandleFunc(""/request"", network.Request)
    http.HandleFunc(""/update"", network.GetNews)
    http.HandleFunc(""/join"", network.Join)
    log.Fatal(http.ListenAndServe(""localhost:5000"", nil))
}


Message is a struct, too. It has six fields all of a type alias for int.
When a client sends an http GET request to the url ""localhost:5000/join"", this should happen


The method Join on the network object is called
A new Message object with an Id for the client is created
This Message is encoded as JSON
To check if the encoding is correct, the encoded message is printed on the cmd
The message is written to the ResponseWriter


The client is rather simple. It has the exact same code for the Message struct. In the main function it just sends a GET request to ""localhost:5000/join"" and tries to decode the response. Here's the code

func main() {

    // try to join
    var clientId ClientId
    start := time.Now()
    var message Message
    resp, err := http.Get(""http://localhost:5000/join"")
    if err != nil {
        log.Fatal(err)
    }

    fmt.Println(resp.Status)
    dec := json.NewDecoder(resp.Body)
    err = dec.Decode(&message)
    if err != nil {
        fmt.Println(""error decoding the response to the join request"")
        log.Fatal(err)
    }

    fmt.Println(message)
    duration := time.Since(start)
    fmt.Println(""connected after: "", duration)
    fmt.Println(""with clientId"", message.ClientId)
}


I've started the server, waited a few seconds and then ran the client. This is the result


The server prints ""client wants to join""
The server prints ""the json: {""What"":-1,""Tag"":-1,""Id"":-1,""ClientId"":0,""X"":-1,""Y"":-1}""
The client prints ""200 OK""
The client crashes ""error decoding the response to the join request""
The error is ""invalid character ""3"" after array element""


This error message really confused me. After all, nowhere in my json, there's the number 3. So I imported io/ioutil on the client and just printed the response with this code

b, _ := ioutil.ReadAll(resp.Body)
fmt.Printf(""the json: %s\n"", b)


Please note that the print statement is the same as on the server. I expected to see my encoded JSON. Instead I got this


""200 OK""
""the json: [123 34 87 104 97 116 ....]""  the list went on for a long time


I'm new to go and don't know if i did this correctly. But it seems as if the above code just printed the slice of bytes. Strange, on the server the output was converted to a string.

My guess is that somehow I'm reading the wrong data or that the message was corrupted on the way between server and client. But honestly these are just wild guesses.
",2,16636116.0
250,28162577,Go path and setup,"I installed go binary for windows 64 and set up Go Paths like 



I also downloaded it from git. Why wont it find the go command?
",2,
251,23666085,golang populate struct field from file,"I'm pretty new to developing in golang, so if this is an elementary question I apologize. I didn't see a comparable question already asked; if there is one, please point me to it (thanks).

The full code (at the time of my asking this question, since it's not immutable) is at http://play.golang.org/p/idDp1E-vZo

I've declared a struct with four primitive fields, and I'm reading the values destined for Node.ipaddr from a file on the local filesystem (I'm getting the value of fileName as a flag at runtime; that code is trimmed out here but is in the link provided above.)

type Node struct {
    hostname string
    ipaddr   string
    pstatus  string
    ppid     int
}

file, err := os.Open(fileName)
if err != nil {
    panic(fmt.Sprintf(""error opening %s: %v"", fileName, err))
}


Because the file is line-delimited, I thought a bufio.Scanner would be ideal for reading the data from the file.  Where I am struggling is finding an elegant way to actually pass the data into the struct elements.

I created an array of Node elements, and have considered a map, but I am not sure how I'd make practical use of it (yet).  

var nodes []*Node
var nodemap = make(map[string]*Node) //do I even need this?

scanner := bufio.NewScanner(file)
for scanner.Scan() {
    if err := scanner.Err(); err != nil {
        fmt.Fprintln(os.Stderr, ""error reading from file:"", err)
        os.Exit(3)
    }

    //pass scanner.Text() into Node.ipaddr

}


Short of wrapping scanner.Scan() in an indexed for loop, I'm not at all sure how to proceed.  If I do wrap scanner.Scan() in an indexed for loop, will the for loop be able to handle EOF elegantly -- I guess I'm not sure what the index limit/max comparison value should be in that case.

As always, thanks for any advice that you're willing to offer.

edit:  The format of the input file is like this:

10.1.1.1
10.1.1.2
10.1.1.3


I anticipate approx 150 entries in the file, one IPv4 address per line.
",2,23667119.0
252,40307373,Golang Carret before int what does it mean,"I'm aware the carret symbol ^ means bitwise XOR
but I'm looking at a pice of go code and I see things like

input[0] = ^output[3]
or
input[3] = input[3] &^ (input[3] &^ input[3])


when I try for example:

^1 gives -2
^2 gives -3
etc..

",2,40307602.0
253,35409157,Simple list of applicants webapp,"I am creating a web application that lists applicants and their position on a waiting list.

We need to be able to add new applicants to this list and remove applicants from the list. There will be under 10k applicants in the list.

Specifics:


I plan to write the app in Golang.
The list needs to be safe, I the program shuts down, it should be recoverable.
The app should contain this data for every applicant: Name, Student ID, position.


Questions:


How do I secure the list (lock?) so it is updated correctly for both if two updates to it is made at the same time?
Should I save the data in a database or use a file?


I need your help!

UPDATE:

Mockup code:

package main

import (
    ""log""
    ""sync""
    ""time""

    ""github.com/boltdb/bolt""
)

type applicant struct {
    FirstName string
    LastName  string
    StudentID string
    Position  int
}

type priorityList struct {
    sync.Mutex
    applicants []applicant
}

func (l *priorityList) newApplicant(fn string, ln string, sid string) error {

    // add applicant to priorityList
    return nil
}

func (l *priorityList) removeApplicant(sid string) error {
    // remove applicant from priorityList
    return nil
}

func (l *priorityList) editApplicant(sid string) error {
    // edit applicant in priorityList
    return nil
}

func main() {
    // Database
    db, err := bolt.Open(""priorityList.db"", 0600, &bolt.Options{Timeout: 1 * time.Second})
    if err != nil {
        log.Fatal(err)
    }
    defer db.Close()
}

",2,35409260.0
254,38004099,Go compile error?,"I'm trying to compile a fork of cuttle that merges this pull request 

by running 

# GOPATH=`pwd` /usr/local/go/bin/go get github.com/andresdouglas/cuttle
# github.com/andresdouglas/cuttle
src/github.com/andresdouglas/cuttle/main.go:103: zone.GetController(r.URL.Host, r.URL.Path).Acquire() used as value


Here is the offending line

I have no experience with Go. Is that an error? It doesn't seem to update the compiled binary.
",1,38004501.0
255,21496093,Extending HTTP Handlers,"I have a fairly quick-and-dirty error handler in my Go web app that raises a HTTP error, logs the important parts of the response and serves an error template. I'd like to remove the repetition where I'm writing something like this a few too many times in a handler:

err := doSomething()
if err != nil {
    serverError(w, r, err, code)
}


I've had a good read of the Error Handling and Go article which covers defining a custom HTTP handler type that returns a error type/struct like this (or even returning int, err instead):

type appHandler func(http.ResponseWriter, *http.Request) *appError

type appError struct {
        code int
        Err error
}

// Ensures appHandler satisfies the http.Handler interface
func (fn appHandler) ServeHTTP(w http.ResponseWriter, r *http.Request) {
    if err := fn(w, r); err != nil {
        switch err.Code {

        case http.StatusNotFound:
            http.NotFound(w, r)

        case http.StatusInternalServerError:
            http.Error(w, ""message"", http.StatusInternalServerError)

        default:
            http.Error(w, ""message"", err.Code)

        }
    }
}


But I'm not sure how to retain my existing middleware functionality/wrapper that allows me to chain middleware like this: r.HandleFunc(""/route"", use(myHandler, middleware1, middleware2)) where use and my middleware look like this:

func use(h http.HandlerFunc, middleware ...func(http.HandlerFunc) http.HandlerFunc) http.HandlerFunc {
    for _, m := range middleware {
        h = m(h)
    }

    return h
}

 func AntiCSRF(h http.HandlerFunc) http.HandlerFunc {
        return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
                // do something
                // h.ServeHTTP(w,r)
            }
     }


From what I can figure, it'd be something like the below (which doesn't work). I'm getting an error saying cannot use m(h) (type http.Handler) as type appHandler in assignment: need type assertion. How do I resolve this whilst still keeping the middleware itself ""as is""?

You can find a (simplified) playground example here: http://play.golang.org/p/Cmmo-wK2Af

r.Handle(""/route"", use(myHandler, middleware.NoCache)) // Contrived example!

func use(h myHandlerType?, middleware ...func(http.Handler) http.Handler) http.Handler {
    for _, m := range middleware {
        h = m(h)
    }

    return h
}

func myHandler(w http.ResponseWriter, r *http.Request) *appError {

    // Extremely contrived example
    name := ""Matt""
    _, err := fmt.Fprintf(w, ""Hi %s"", name)
    if err != nil {
        return &appError{500, err}
    }

    return nil
}

func contrivedMiddleware(h http.Handler) http.Handler {
    return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {

        w.Header().Set(""Cache-Control"", ""max-age=0, private, must-revalidate"")
        w.Header().Set(""X-Accel-Expires"", ""0"")

        h.ServeHTTP(w, r)
    })
}


What am I missing and is there a better way to do this?
",1,21511199.0
256,29959506,Is there a Go analog of Python's bisect module?,"I am looking for an out-of-the-box implementation of Python's bisect module in Go. All that I need is to find a position for inserting an item in a sorted array from the left and from the right.

I know the logic behind the implementation, but I do not want to reinvent the wheel with all of its edge cases.
",1,29959644.0
257,9464516,"How does one avoid ""invalid memory address or null pointer dereference"" errors?","I'm wondering how I can structure this example code to help avoid null pointer dereference panics:

package main

import ""fmt""

type Astruct struct {
    Number int
    Letter string
}

type Bstruct struct {
    foo int
    AStructList *[]Astruct
}

type Cstruct struct {
    Bstruct
}

func (a *Astruct) String() string {
    return fmt.Sprintf(""Number = %d, Letter = %s"", a.Number, a.Letter)
}

func main() {
    astructlist := make([]Astruct, 3)      // line 1
    for i := range astructlist {           // line 2
        astructlist[i] = Astruct{i, ""a""}   // line 3
    }                                      // line 4
    c := new(Cstruct)
    c.Bstruct = Bstruct{100, &astructlist} // line 6

    for _, x := range(*c.Bstruct.AStructList) {
        fmt.Printf(""%s\n"", &x)
    }
}


If I omit lines 1-4 and 6 of main(), I get a null pointer dereference panic. Short of checking if c != nil, is there a way to avoid these panics?

Thanks in advance for any help!
",1,9466278.0
258,26371965,"When generating an XML file with Go, how do you create a doctype declaration?","Go's xml package is excellent and makes dealing with XML very easy.  There's one thing I'm not sure how to do: when creating an XML document from a native struct, how do you specify the doctype?

For example, these structs:

type Person struct {
    XMLName    xml.Name `xml:""person""`
    FirstName  string   `xml:""firstName""`
    MiddleName string   `xml:""middleName""`
    LastName   string   `xml:""lastName""`
    Age        int64    `xml:""age""`
    Skills     []Skill  `xml:""skills""`
}

type Skill struct {
    XMLName        xml.Name `xml:""skill""`
    Name           string   `xml:""skillName""`
    YearsPracticed int64    `xml:""practice""`
}


Will generate something like this XML:


    Bob
    
    Jones
    23
    
        
            Cooking
            3
        
        
            Basketball
            4
        
    



Which is great, but what do I do to get this:



    Bob
    
    ...


It almost seems too simple, but is this a matter of doing a string append?

And, on the reverse, how would Go's XML parser handle a doctype in a block of text that you wanted to unmarshal into a set of structs?  Ignore it?
",1,26374000.0
259,27628548,"bytes.Reader, replacing underlying []byte array","I've been trying to find a nice way to hand off a Reader interface{} without recreating the methods associated with a io.Reader.

This is what I'm using:

type EZReader struct {
    data *bytes.Reader
}

func (self *EZReader) Replace(input []byte) {
    self.data = bytes.NewReader(input)
}

func (self *EZReader) Read(p []byte) (n int, err error) {
    return self.data.Read(p)
}


It feels, not right, is there a better way to do this?

The idea is I can then hand off this io.Reader to a function and change out the underlying array as 

I need it without having to reallocating the object that wants to use it, in this case the json decoder.
",1,27628616.0
260,13817467,Go-Sublime-build configuration,"Im having issues trying to set up go to run the current file from Sublime text 2. 
Here's what I have in my go.sublime-build file

{
    ""cmd"": [ ""go"", ""run"", ""${file}"" ]
}


When I try to run build on a go source file, I get the error 

[Error 6] The handle is invalid
[cmd:  [u'go run', u'C:\\Users\\gprasant\\Documents\\GitHub\\programming_pearls\\src\\go\\quicksort.go']]
[dir:  C:\Users\gprasant\Documents\GitHub\programming_pearls\src\go]


Is there any way to get this fixed ? Or is there another plugin in Sublime text for Go development? 
",6,13818754.0
