[('I', 'PRP'), ("'d", 'MD'), ('recommend', 'VB'), ('defining', 'VBG'), ('setter', 'NN'), ('and', 'CC'), ('getter', 'NN'), ('methods', 'NNS'), ('on', 'IN'), ('the', 'DT'), ('type', 'NN'), (',', ','), ('and', 'CC'), ('store', 'VBD'), ('the', 'DT'), ('values', 'NNS'), ('in', 'IN'), ('a', 'DT'), ('slice', 'NN'), ('in', 'IN'), ('the', 'DT'), ('struct', 'NN'), ('.', '.'), ('For', 'IN'), ('example', 'NN'), (':', ':'), ('package', 'NN'), ('main', 'JJ'), ('import', 'NN'), ('"fmt"', 'NNP'), ('type', 'NN'), ('kv', 'NN'), ('struct', 'NN'), ('{', '('), ('k', 'NN'), (',', ','), ('v', 'NN'), ('string', 'NN'), ('}', ')'), ('type', 'NN'), ('mybasket', 'NN'), ('struct', 'NN'), ('{', '('), ('Coupons', 'NNPS'), ('string', 'VBG'), ('Amount', 'NNP'), ('int', 'NN'), ('Contents', 'NNP'), ('[]', 'NNP'), ('kv', 'NN'), ('}', ')'), ('func', 'NN'), ('(', '('), ('t', 'JJ'), ('*', 'NNP'), ('mybasket', 'NN'), (')', ')'), ('SetContents', 'NNP'), ('(', '('), ('c', 'NN'), ('...', ':'), ('kv', 'NN'), (')', ')'), ('{', '('), ('t', 'NN'), ('.', '.'), ('Contents', 'NNS'), ('=', 'JJ'), ('c', 'JJ'), ('return', 'NN'), ('}', ')'), ('func', 'NN'), ('(', '('), ('t', 'JJ'), ('*', 'NNP'), ('mybasket', 'NN'), (')', ')'), ('GetContents', 'VBZ'), ('()', 'JJ'), ('[]', 'NNP'), ('kv', 'NN'), ('{', '('), ('return', 'NN'), ('t', 'NN'), ('.', '.'), ('Contents', 'NNS'), ('}', ')'), ('func', 'VBP'), ('main', 'JJ'), ('()', 'NNP'), ('{', '('), ('T', 'NNP'), (':=', 'NNP'), ('&', 'CC'), ('mybasket', 'NN'), ('{', '('), ('"couponlist"', 'NN'), (',', ','), ('100', 'CD'), (',', ','), ('[]', 'NNP'), ('kv', 'NNP'), ('{}}', 'NNP'), ('T', 'NNP'), (':=', 'NNP'), ('&', 'CC'), ('mybasket', 'NN'), ('{', '('), ('"couponlist"', 'NN'), (',', ','), ('100', 'CD'), (',', ','), ('[]', 'NNP'), ('kv', 'NNP'), ('{}}', 'NNP'), ('//', 'NNP'), ('New', 'NNP'), ('Basket', 'NNP'), ('kvs', 'VBD'), (':=', 'NNP'), ('[]', 'NNP'), ('kv', 'NNP'), ('{{', 'NNP'), ('"foo"', 'NNP'), (',', ','), ('"bar"', 'NNP'), ('},', 'NNP'), ('{', '('), ('"baz"', 'NN'), (',', ','), ('"bat"', 'NNP'), ('}}', 'NNP'), ('kvs', 'NNP'), (':=', 'NNP'), ('[]', 'NNP'), ('kv', 'NNP'), ('{{', 'NNP'), ('"foo"', 'NNP'), (',', ','), ('"bar"', 'NNP'), ('},', 'NNP'), ('{', '('), ('"baz"', 'NN'), (',', ','), ('"bat"', 'NNP'), ('}}', 'NNP'), ('//', 'NNP'), ('Contents', 'NNP'), ('T.SetContents(kvs...)', 'NNP'), ('T.SetContents(kvs...)', 'NNP'), ('//', 'NNP'), ('Set', 'NNP'), ('Contents', 'NNP'), ('fmt.Printf("%v", T.GetContents())', 'JJ'), ('fmt.Printf("%v", T.GetContents())', 'NN'), ('//', 'NNP'), ('Get', 'NNP'), ('Contents', 'NNP'), ('}', ')'), ('Prints', 'NNS'), (':', ':'), ('[{', 'NN'), ('foo', 'NN'), ('bar', 'NN'), ('}', ')'), ('{', '('), ('baz', 'JJ'), ('bat', 'NN'), ('}]', 'NN'), ('Playground', 'NNP')]
[('Poor', 'NNP'), ('title', 'NN'), (',', ','), ('but', 'CC'), ('I', 'PRP'), ('did', 'VBD'), ("n't", 'RB'), ('know', 'VB'), ('how', 'WRB'), ('else', 'JJ'), ('to', 'TO'), ('describe', 'VB'), ('it', 'PRP'), ('within', 'IN'), ('the', 'DT'), ('character', 'NN'), ('limit', 'NN'), ('.', '.'), ('As', 'IN'), ('a', 'DT'), ('learning', 'NN'), ('exercise', 'NN'), (',', ','), ('I', 'PRP'), ("'m", 'VBP'), ('trying', 'VBG'), ('to', 'TO'), ('write', 'VB'), ('a', 'DT'), ('little', 'JJ'), ('Go', 'NNP'), ('program', 'NN'), ('that', 'WDT'), ('simulates', 'VBZ'), ('a', 'DT'), ('lottery', 'NN'), ('draw', 'NN'), ('.', '.'), ('It', 'PRP'), ('draws', 'VBZ'), ('six', 'CD'), ('random', 'NN'), ('numbers', 'NNS'), ('to', 'TO'), ('be', 'VB'), ('the', 'DT'), ('winning', 'NN'), ('set', 'NN'), (',', ','), ('then', 'RB'), ('continually', 'RB'), ('draws', 'JJ'), ('random', 'JJ'), ('arrays', 'NNS'), ('of', 'IN'), ('random', 'JJ'), ('ints', 'NNS'), ('until', 'IN'), ('you', 'PRP'), ('get', 'VBP'), ('that', 'IN'), ('set', 'NN'), ('again', 'RB'), ('.', '.'), ('First', 'NNP'), ('I', 'PRP'), ('wrote', 'VBD'), ('a', 'DT'), ('function', 'NN'), ('which', 'WDT'), ('takes', 'VBZ'), ('a', 'DT'), ('channel', 'NN'), ('and', 'CC'), ('infinitely', 'RB'), ('loops', 'JJ'), ('"', 'NNP'), ('add', 'VBP'), ('array', 'NN'), ('of', 'IN'), ('6', 'CD'), ('random', 'JJ'), ('ints', 'NNS'), ('to', 'TO'), ('the', 'DT'), ('channel', 'NN'), ('"', 'NN'), (':', ':'), ('func', 'JJ'), ('draw', 'NN'), ('(', '('), ('ch', 'JJ'), ('chan', 'NN'), ('<-', 'JJ'), ('[', 'NN'), ('6', 'CD'), (']', 'NNP'), ('int', 'NN'), (')', ')'), ('{', '('), ('generator', 'NN'), (':=', 'NN'), ('rand.New(rand.NewSource(time.Now().UnixNano()))', 'NN'), ('for', 'IN'), ('{', '('), ('ch', 'JJ'), ('<-', 'JJ'), ('[', 'NN'), ('6', 'CD'), (']', 'JJ'), ('int', 'NN'), ('{', '('), ('generator.Intn(100)', 'NN'), (',', ','), ('generator.Intn(100)', 'NN'), (',', ','), ('generator.Intn(100)', 'NN'), (',', ','), ('generator.Intn(100)', 'NN'), (',', ','), ('generator.Intn(100)', 'NN'), (',', ','), ('generator.Intn(100)', 'NN'), (',', ','), ('}', ')'), ('}', ')'), ('}', ')'), ('Then', 'RB'), ('in', 'IN'), ('main()', 'NN'), ('I', 'PRP'), ('specify', 'VBP'), ('two', 'CD'), ('OS', 'NNP'), ('threads', 'NNS'), (',', ','), ('create', 'VBP'), ('a', 'DT'), ('channel', 'NN'), ('that', 'WDT'), ('can', 'MD'), ('hold', 'VB'), ('250', 'CD'), ('arrays', 'NNS'), ('of', 'IN'), ('6', 'CD'), ('ints', 'NNS'), (',', ','), ('and', 'CC'), ('start', 'VB'), ('my', 'PRP$'), ('draw()', 'NN'), ('function', 'NN'), ('in', 'IN'), ('a', 'DT'), ('goroutine', 'NN'), ('.', '.'), ('runtime.GOMAXPROCS(2)', 'VB'), ('ch', 'JJ'), (':=', 'NNP'), ('make(chan [6]int, 250)', 'NN'), ('go', 'VBP'), ('draw(ch)', 'JJ'), ('Next', 'NNP'), ('I', 'PRP'), ('take', 'VBP'), ('a', 'DT'), ('winning', 'NN'), ('set', 'NN'), ('(', '('), ('eg', 'JJ'), ('[', 'VBP'), ('4', 'CD'), ('8', 'CD'), ('15', 'CD'), ('16', 'CD'), ('23', 'CD'), ('42', 'CD'), (']', 'NN'), (')', ')'), ('from', 'IN'), ('the', 'DT'), ('channel', 'NN'), (',', ','), ('then', 'RB'), ('a', 'DT'), ("'current'", 'NN'), ('set', 'VBN'), (',', ','), ('meaning', 'VBG'), ('the', 'DT'), ('most', 'RBS'), ('recent', 'JJ'), ('draw', 'NN'), ('.', '.'), ('I', 'PRP'), ('set', 'VBP'), ('my', 'PRP$'), ('game_played', 'JJ'), ('counter', 'NN'), ('to', 'TO'), ('1', 'CD'), (':', ':'), ('winning', 'NN'), (':=', 'JJ'), ('<-', 'JJ'), ('ch', 'NN'), ('current', 'JJ'), (':=', 'JJ'), ('<-', 'JJ'), ('ch', 'NN'), ('games_played', 'VBD'), (':=', '$'), ('1', 'CD'), ('Here', 'RB'), ("'s", 'VBZ'), ('the', 'DT'), ('tricky', 'JJ'), ('bit', 'NN'), ('.', '.'), ('In', 'IN'), ('an', 'DT'), ('infinite', 'JJ'), ('loop', 'NN'), (',', ','), ('I', 'PRP'), ('check', 'VBP'), ('if', 'IN'), ('the', 'DT'), ('current', 'JJ'), ('draw', 'NN'), ('is', 'VBZ'), ('equal', 'JJ'), ('to', 'TO'), ('the', 'DT'), ('winning', 'VBG'), ('draw', 'NN'), ('.', '.'), ('If', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), (',', ','), ('I', 'PRP'), ('print', 'VBP'), ('the', 'DT'), ('number', 'NN'), ('of', 'IN'), ('games', 'NNS'), ('played', 'VBN'), (',', ','), ('and', 'CC'), ('break', 'NN'), ('from', 'IN'), ('the', 'DT'), ('loop', 'NN'), ('.', '.'), ('If', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ("n't", 'RB'), (',', ','), ('I', 'PRP'), ('set', 'VBP'), ('current', 'JJ'), ('to', 'TO'), ('a', 'DT'), ('new', 'JJ'), ('draw', 'NN'), (',', ','), ('and', 'CC'), ('increment', 'VB'), ('the', 'DT'), ('counter', 'NN'), ('.', '.'), ('The', 'DT'), ('loop', 'NN'), ('should', 'MD'), ('then', 'RB'), ('run', 'VB'), ('the', 'DT'), ('if', 'IN'), ('winning', 'VBG'), ('==', 'JJ'), ('current', 'JJ'), ('...', ':'), ('check', 'NN'), ('again', 'RB'), ('over', 'IN'), ('and', 'CC'), ('over', 'IN'), ('until', 'IN'), ('there', 'EX'), ("'s", 'VBZ'), ('a', 'DT'), ('match', 'NN'), ('.', '.'), ('for', 'IN'), ('{', '('), ('if', 'IN'), ('winning', 'VBG'), ('==', 'NNP'), ('current', 'JJ'), ('{', '('), ('fmt.Println(games_played)', 'JJ'), ('break', 'NN'), ('}', ')'), ('else', 'RB'), ('{', '('), ('current', 'JJ'), (':=', 'JJ'), ('<-', 'JJ'), ('ch', 'NN'), ('games_played', 'VBD'), ('+=', '$'), ('1', 'CD'), ('}', ')'), ('}', ')'), ('Here', 'RB'), ("'s", 'VBZ'), ('the', 'DT'), ('problem', 'NN'), (':', ':'), ('that', 'DT'), ('fourth-last', 'JJ'), ('line', 'NN'), (',', ','), ('current', 'JJ'), (':=', 'NN'), (',', ','), ('throws', 'VBZ'), ('a', 'DT'), ('compiler', 'NN'), ('error', 'NN'), (',', ','), ("'", "''"), ('current', 'JJ'), ('declared', 'VBN'), ('and', 'CC'), ('not', 'RB'), ('used', 'VBN'), ("'", 'POS'), ('.', '.'), ('I', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('say', 'VB'), ('"Yeah,', 'JJ'), ('I', 'PRP'), ('know', 'VBP'), ('it', 'PRP'), ("'s", 'VBZ'), ('not', 'RB'), ('used', 'VBN'), ('after', 'IN'), ('that', 'DT'), ('point', 'NN'), ('reading', 'VBG'), ('downward', 'JJ'), (',', ','), ('but', 'CC'), ('it', 'PRP'), ("'s", 'VBZ'), ('declared', 'VBN'), ('inside', 'IN'), ('a', 'DT'), ('loop', 'NN'), (',', ','), ('so', 'IN'), ('its', 'PRP$'), ('value', 'NN'), ('matters', 'NNS'), ('on', 'IN'), ('the', 'DT'), ('next', 'JJ'), ('iteration', 'NN'), ('.', '.'), ('"', 'NN'), ('But', 'CC'), ('I', 'PRP'), ('ca', 'MD'), ("n't", 'RB'), ('work', 'VB'), ('out', 'RP'), ('how', 'WRB'), (',', ','), ('or', 'CC'), ('if', 'IN'), ('I', 'PRP'), ("'ve", 'VBP'), ('done', 'VBN'), ('something', 'NN'), ('stupid', 'JJ'), ('.', '.'), ('I', 'PRP'), ("'m", 'VBP'), ('totally', 'RB'), ('clueless', 'JJ'), ('about', 'IN'), ('Go', 'NNP'), (',', ','), ('obviously', 'RB'), ('.', '.'), ('But', 'CC'), ('to', 'TO'), ('me', 'PRP'), (',', ','), ('thinking', 'VBG'), ('through', 'IN'), ('it', 'PRP'), (',', ','), ('the', 'DT'), ('logic', 'NN'), ('is', 'VBZ'), ('sound', 'JJ'), ('.', '.'), ('Am', 'VBP'), ('I', 'PRP'), ('messing', 'VBG'), ('something', 'NN'), ('up', 'RP'), ('?', '.'), ('(Note:', 'IN'), ('I', 'PRP'), ("'m", 'VBP'), ('aware', 'JJ'), ('of', 'IN'), ('the', 'DT'), ('oversight', 'NN'), ('that', 'IN'), ('a', 'DT'), ('draw', 'NN'), ('of', 'IN'), ('[', '$'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), (']', 'NN'), ('wo', 'MD'), ("n't", 'RB'), ('be', 'VB'), ('equal', 'JJ'), ('to', 'TO'), ('[', 'VB'), ('2', 'CD'), ('3', 'CD'), ('1', 'CD'), (']', 'NN'), (',', ','), ('ignoring', 'VBG'), ('that', 'IN'), ('for', 'IN'), ('now', 'RB'), ('.', '.'), (')', ')')]
[('Write', 'VB'), ('a', 'DT'), ('function', 'NN'), ('that', 'WDT'), ('converts', 'VBZ'), ('a', 'DT'), ('function', 'NN'), ('with', 'IN'), ('the', 'DT'), ('Redis', 'NNP'), ('instance', 'NN'), ('argument', 'NN'), ('to', 'TO'), ('an', 'DT'), ('HTTP', 'NNP'), ('handler', 'NN'), (':', ':'), ('func', 'NN'), ('redisHandler', 'NN'), ('(', '('), ('c', 'JJ'), ('*', 'NN'), ('RedisInstance', 'NNP'), (',', ','), ('f', 'NN'), ('func', 'NN'), ('(', '('), ('c', 'JJ'), ('*', 'NN'), ('RedisInstance', 'NNP'), (',', ','), ('w', 'NN'), ('http', 'NN'), ('.', '.'), ('ResponseWriter', 'NNP'), (',', ','), ('r', 'NN'), ('*', 'NNP'), ('http', 'NN'), ('.', '.'), ('Request', 'NNP'), ('))', 'JJ'), ('http', 'NN'), ('.', '.'), ('Handler', 'NNP'), ('{', '('), ('return', 'VB'), ('http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) { f(c, w, r) })', 'NN'), ('}', ')'), ('Write', 'NNP'), ('your', 'PRP$'), ('API', 'NNP'), ('handlers', 'NNS'), ('like', 'IN'), ('this', 'DT'), (':', ':'), ('func', 'NN'), ('AddTodoHandler', 'NNP'), ('(', '('), ('c', 'JJ'), ('*', 'NN'), ('RedisInstance', 'NNP'), (',', ','), ('w', 'NN'), ('http', 'NN'), ('.', '.'), ('ResponseWriter', 'NNP'), (',', ','), ('r', 'NN'), ('*', 'NNP'), ('http', 'NN'), ('.', '.'), ('Request', 'NNP'), (')', ')'), ('{', '('), ('...', ':'), ('}', ')'), ('Add', 'NNP'), ('to', 'TO'), ('the', 'DT'), ('mux', 'NN'), ('like', 'IN'), ('this', 'DT'), (':', ':'), ('r.Handler("/todo", redisHandler(client, api.AddTodoHandler)).Methods("POST")', 'NN'), ('where', 'WRB'), ('client', 'NN'), ('is', 'VBZ'), ('the', 'DT'), ('Redis', 'NNP'), ('instance', 'NN'), ('.', '.')]
[('package', 'NN'), ('main', 'JJ'), ('import', 'NN'), ('(', '('), ('"fmt"', 'JJ'), ('"syscall"', 'NNP'), ('"unsafe"', 'NNP'), (')', ')'), ('const', 'NN'), ('(', '('), ('PROCESS_QUERY_INFORMATION', 'NNP'), ('=', 'VBZ'), ('1', 'CD'), ('<<', 'NN'), ('10', 'CD'), ('PROCESS_VM_READ', 'NNP'), ('=', 'VBD'), ('1', 'CD'), ('<<', 'NNP'), ('4', 'CD'), (')', ')'), ('type', 'NN'), ('PROCESS_MEMORY_COUNTERS', 'NNP'), ('struct', 'NN'), ('{', '('), ('cb', 'JJ'), ('uint32', 'JJ'), ('PageFaultCount', 'NNP'), ('uint32', 'JJ'), ('PeakWorkingSetSize', 'NNP'), ('uint64', 'NN'), ('WorkingSetSize', 'NNP'), ('uint64', 'JJ'), ('QuotaPeakPagedPoolUsage', 'NNP'), ('uint64', 'JJ'), ('QuotaPagedPoolUsage', 'NNP'), ('uint64', 'JJ'), ('QuotaPeakNonPagedPoolUsage', 'NNP'), ('uint64', 'JJ'), ('QuotaNonPagedPoolUsage', 'NNP'), ('uint64', 'JJ'), ('PagefileUsage', 'NNP'), ('uint64', 'JJ'), ('PeakPagefileUsage', 'NNP'), ('uint64', 'NN'), ('}', ')'), ('func', 'NN'), ('main', 'JJ'), ('()', 'NNP'), ('{', '('), ('current', 'JJ'), (',', ','), ('err', 'JJ'), (':=', 'NNP'), ('syscall.OpenProcess(PROCESS_QUERY_INFORMATION|PROCESS_VM_READ, false, 21984)', 'NN'), ('defer', 'NN'), ('syscall.CloseHandle(current)', 'NN'), ('if', 'IN'), ('err', 'JJ'), ('!=', 'NNP'), ('nil', 'NN'), ('{', '('), ('return', 'NN'), ('}', ')'), ('psapi', 'NN'), (':=', 'JJ'), ('syscall.NewLazyDLL("psapi.dll")', 'NN'), ('var', 'NN'), ('process', 'NN'), ('PROCESS_MEMORY_COUNTERS', 'NNP'), ('process', 'NN'), ('.', '.'), ('cb', 'NN'), ('=', 'JJ'), ('uint32(unsafe.Sizeof((process)))', 'JJ'), ('GetProcessMemoryInfo', 'NNP'), (':=', 'NNP'), ('psapi.NewProc("GetProcessMemoryInfo")', 'NN'), ('_', 'NNP'), (',', ','), ('_', 'NNP'), (',', ','), ('err', 'VBZ'), ('=', 'NNP'), ('GetProcessMemoryInfo.Call(uintptr(current), uintptr(unsafe.Pointer(&process)), uintptr(process.cb))', 'NNP'), ('if', 'IN'), ('err', 'JJ'), ('!=', 'NNP'), ('nil', 'NN'), ('{', '('), ('fmt.Println(err)', 'JJ'), ('}', ')'), ('fmt.Println("PageFaultCount: ", process.PageFaultCount)', 'JJ'), ('fmt.Println("PeakWorkingSetSize: ", process.PeakWorkingSetSize)', 'JJ'), ('fmt.Println("WorkingSetSize: ", process.WorkingSetSize)', 'NN'), ('fmt.Println("QuotaPeakPagedPoolUsage: ", process.QuotaPeakPagedPoolUsage)', 'NN'), ('}', ')'), ('The', 'DT'), ('results', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('code', 'NN'), ('run', 'NN'), ('and', 'CC'), ('I', 'PRP'), ('see', 'VBP'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('gaps', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('resource', 'NN'), ('manager.Who', 'NN'), ('can', 'MD'), ('tell', 'VB'), ('me', 'PRP'), ('Why', 'WRB'), ('?', '.')]
[('Try', 'VB'), ('to', 'TO'), ('add', 'VB'), ('your', 'PRP$'), ('endpoint', 'NN'), ('operatin', 'NN'), ('id', 'JJ'), ("('updateBar')", 'NNP'), ('as', 'IN'), ('a', 'DT'), ('parameter', 'NN'), ('operation', 'NN'), ('id', 'NN'), ('.', '.'), ('Something', 'VBG'), ('like', 'IN'), (':', ':'), ('//', 'NN'), ('swagger:parameters', 'NNS'), ('updateBar', 'JJ'), ('type', 'JJ'), ('BarParam', 'NNP'), ('struct', 'NN'), ('{', '('), ('//', 'JJ'), ('aaaa', 'NN'), ('//', 'NN'), ('in', 'IN'), (':', ':'), ('path', 'NN'), ('bar', 'NN'), ('string', 'NN'), ('}', ')'), ('And', 'CC'), ('remove', 'VB'), ("'Parameters'", 'CD'), ('from', 'IN'), ('your', 'PRP$'), ('endpoint', 'NN'), ('swagger', 'NN'), ('doc', 'NN')]
[('I', 'PRP'), ('have', 'VBP'), ('the', 'DT'), ('code', 'NN'), ('to', 'TO'), ('find', 'VB'), ('the', 'DT'), ('kth', 'NN'), ('from', 'IN'), ('the', 'DT'), ('last', 'JJ'), ('element', 'NN'), ('in', 'IN'), ('a', 'DT'), ('list', 'NN'), ('in', 'IN'), ('golang', 'NN'), ('.', '.'), ('I', 'PRP'), ('wrote', 'VBD'), ('a', 'DT'), ('recursive', 'JJ'), ('function', 'NN'), ('.', '.'), ('When', 'WRB'), ('it', 'PRP'), ('reaches', 'VBZ'), ('the', 'DT'), ('end', 'NN'), ('of', 'IN'), ('the', 'DT'), ('list', 'NN'), (',', ','), ('it', 'PRP'), ('will', 'MD'), ('return', 'VB'), ('the', 'DT'), ('count', 'NN'), ('as', 'IN'), ('1', 'CD'), ('and', 'CC'), ('increments', 'NNS'), ('in', 'IN'), ('further', 'JJ'), ('returns', 'NNS'), ('.', '.'), ('When', 'WRB'), ('the', 'DT'), ('count', 'NN'), ('==', 'NNP'), ('k', 'NN'), ('then', 'RB'), ('return', 'VB'), ('the', 'DT'), ('node', 'JJ'), ('value', 'NN'), ('.', '.'), ('But', 'CC'), ('I', 'PRP'), ('am', 'VBP'), ('getting', 'VBG'), ("'", "''"), ('nil', 'JJ'), ('pointer', 'NN'), ('dereference', 'NN'), ("'", "''"), ('error', 'NN'), ('.', '.'), ('Could', 'NNP'), ('anyone', 'NN'), ('help', 'NN'), ('me', 'PRP'), ('in', 'IN'), ('this', 'DT'), ('?', '.'), ('package', 'NN'), ('main', 'JJ'), ('import', 'NN'), ('(', '('), ('"container/list"', 'NNP'), ('"fmt"', 'NNP'), (')', ')'), ('var', 'NN'), ('sMap', 'NN'), ('map', 'NN'), ('[', 'NNP'), ('int', 'NN'), (']', 'NNP'), ('bool', 'NN'), ('func', 'NN'), ('main', 'JJ'), ('()', 'NNP'), ('{', '('), ('l', 'NN'), (':=', 'NNP'), ('list.New()', 'NN'), ('for', 'IN'), ('i', 'JJ'), (':=', 'VBP'), ('1', 'CD'), (';', ':'), ('i', 'JJ'), ('<', 'VBP'), ('100', 'CD'), (';', ':'), ('i', 'JJ'), ('++', 'VBP'), ('{', '('), ('l.PushBack(i)', 'NN'), ('}', ')'), ('kFromLastElemRec', 'FW'), (':=', 'JJ'), ('findKFromLastRecr(l.Front(), 3, WrapObj{0})', 'NN'), ('fmt.Println(kFromLastElemRec.Value.(int))', 'NN'), ('}', ')'), ('//', 'WDT'), ('Object', 'VBP'), ('to', 'TO'), ('store', 'VB'), ('the', 'DT'), ('count', 'NN'), ('type', 'NN'), ('WrapObj', 'NNP'), ('struct', 'NN'), ('{', '('), ('count', 'NN'), ('int', 'NN'), ('}', ')'), ('//', 'NNP'), ('ERROR', 'NNP'), ('//', 'NNP'), ('recursive', 'JJ'), ('function', 'NN'), ('to', 'TO'), ('find', 'VB'), ('the', 'DT'), ('kth', 'NN'), ('from', 'IN'), ('last', 'JJ'), ('element', 'NN'), ('func', 'NN'), ('findKFromLastRecr', 'NN'), ('(', '('), ('head', 'JJ'), ('*', 'NNP'), ('list', 'NN'), ('.', '.'), ('Element', 'NNP'), (',', ','), ('k', 'NN'), ('int', 'NN'), (',', ','), ('wrapper', 'IN'), ('WrapObj', 'NNP'), (')', ')'), ('*', 'VBP'), ('list', 'NN'), ('.', '.'), ('Element', 'NNP'), ('{', '('), ('if', 'IN'), ('head', 'VBN'), ('==', 'NNP'), ('nil', 'JJ'), ('{', '('), ('return', 'VB'), ('nil', 'JJ'), ('}', ')'), ('resNode', 'NN'), (':=', 'JJ'), ('findKFromLastRecr(head.Next(), k, wrapper)', 'JJ'), ('wrapper', 'NN'), ('.', '.'), ('count', 'NN'), ('=', 'NN'), ('(', '('), ('wrapper', 'NN'), ('.', '.'), ('count', 'NN'), (')', ')'), ('+', 'VBZ'), ('1', 'CD'), ('if', 'IN'), ('wrapper', 'NN'), ('.', '.'), ('count', 'NN'), ('==', 'NNP'), ('k', 'NNP'), ('{', '('), ('return', 'VB'), ('head', 'NN'), ('}', ')'), ('return', 'NN'), ('resNode', 'NN'), ('}', ')')]
[('I', 'PRP'), ('have', 'VBP'), ('some', 'DT'), ('different', 'JJ'), ('structs', 'NNS'), ('like', 'IN'), ('Big', 'NNP'), ('with', 'IN'), ('Small', 'NNP'), ('embedded', 'VBD'), ('at', 'IN'), ('offset', '$'), ('0', 'CD'), ('.', '.'), ('How', 'WRB'), ('can', 'MD'), ('I', 'PRP'), ('access', 'NN'), ('Small', 'NNP'), ("'s", 'POS'), ('structure', 'NN'), ('fields', 'NNS'), ('from', 'IN'), ('code', 'NN'), (',', ','), ('that', 'WDT'), ('does', 'VBZ'), ("n't", 'RB'), ('know', 'VB'), ('anything', 'NN'), ('about', 'IN'), ('Big', 'NNP'), ('type', 'NN'), (',', ','), ('but', 'CC'), ('it', 'PRP'), ('is', 'VBZ'), ('known', 'VBN'), ('that', 'IN'), ('Small', 'NNP'), ('is', 'VBZ'), ('at', 'IN'), ('offset', '$'), ('0', 'CD'), ('?', '.'), ('type', 'VB'), ('Small', 'NNP'), ('struct', 'NN'), ('{', '('), ('val', 'JJ'), ('int', 'NN'), ('}', ')'), ('type', 'NN'), ('Big', 'NNP'), ('struct', 'NN'), ('{', '('), ('Small', 'NNP'), ('bigval', 'NN'), ('int', 'NN'), ('}', ')'), ('var', 'NN'), ('v', 'JJ'), ('interface', 'NN'), ('{}', 'NNP'), ('=', 'NNP'), ('Big', 'NNP'), ('{}', 'NN'), ('//', 'NN'), ('here', 'RB'), ('i', 'VBZ'), ('only', 'RB'), ('know', 'VBP'), ('about', 'IN'), ("'Small'", 'POS'), ('struct', 'NN'), ('and', 'CC'), ('i', 'NN'), ('know', 'VBP'), ('that', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('at', 'IN'), ('the', 'DT'), ('begining', 'NN'), ('of', 'IN'), ('variable', 'JJ'), ('v', 'NN'), ('.(', 'NNP'), ('Small', 'NNP'), (').', 'NNP'), ('val', 'NN'), ('v', 'NN'), ('.(', 'NNP'), ('Small', 'NNP'), (').', 'NNP'), ('val', 'NN'), ('//', 'NNP'), ('compile', 'NN'), ('error', 'NN'), ('It', 'PRP'), ('seems', 'VBZ'), ('that', 'IN'), ('compiler', 'NN'), ('is', 'VBZ'), ('theoretically', 'RB'), ('able', 'JJ'), ('to', 'TO'), ('operate', 'VB'), ('such', 'JJ'), ('expression', 'NN'), (',', ','), ('because', 'IN'), ('it', 'PRP'), ('knows', 'VBZ'), ('that', 'IN'), ('Big', 'NNP'), ('type', 'NN'), ('has', 'VBZ'), ('Small', 'VBN'), ('type', 'NN'), ('embedded', 'VBN'), ('at', 'IN'), ('offset', '$'), ('0', 'CD'), ('.', '.'), ('Is', 'VB'), ('there', 'RB'), ('any', 'DT'), ('way', 'NN'), ('to', 'TO'), ('do', 'VB'), ('such', 'JJ'), ('things', 'NNS'), ('(', '('), ('maybe', 'RB'), ('with', 'IN'), ('unsafe.Pointer', 'NN'), (')', ')'), ('?', '.')]
[('You', 'PRP'), ('are', 'VBP'), ('right', 'JJ'), ('currently', 'RB'), ('it', 'PRP'), ("'s", 'VBZ'), ('impossible', 'JJ'), ('.', '.'), ('But', 'CC'), ('you', 'PRP'), ('can', 'MD'), ('use', 'VB'), ('sub-structures', 'NNS'), ('like', 'IN'), ('type', 'NN'), ('PriceType', 'NNP'), ('struct', 'NN'), ('{', '('), ('Price', 'NNP'), ('int', 'NN'), ('xml', 'NN'), (':', ':'), ('"Price,attr"', 'JJ'), ('Type', 'NNP'), ('string', 'NN'), ('xml', 'NN'), (':', ':'), ('"Type,attr"', 'NN'), ('}', ')'), ('type', 'NN'), ('Book', 'NNP'), ('struct', 'NN'), ('{', '('), ('XMLName', 'JJ'), ('xml', 'NNP'), ('.', '.'), ('Name', 'NN'), ('xml', 'NN'), (':', ':'), ('"DailyAct"', 'JJ'), ('Symbol', 'NNP'), ('string', 'NN'), ('xml', 'NN'), (':', ':'), ('"TradeInstrId,attr"', 'JJ'), ('EntityId', 'NNP'), ('string', 'NN'), ('xml', 'NN'), (':', ':'), ('"EntityId,attr"', 'JJ'), ('AssetClass', 'NNP'), ('string', 'NN'), ('xml', 'NN'), (':', ':'), ('"AssetClass,attr"', 'JJ'), ('Open', 'NNP'), ('PriceType', 'NNP'), ('xml', 'NN'), (':', ':'), ('"Open"', 'JJ'), ('High', 'NNP'), ('PriceType', 'NNP'), ('xml', 'NN'), (':', ':'), ('"High"', 'NN'), ('Low', 'NNP'), ('PriceType', 'NNP'), ('xml', 'NN'), (':', ':'), ('"Low"', 'NN'), ('Close', 'NNP'), ('PriceType', 'NNP'), ('xml', 'NN'), (':', ':'), ('"Close"', 'NN'), ('}', ')'), ('Example', 'NNP'), ('here', 'RB'), ('http://play.golang.org/p/Ekd6Xf3miS', 'VBD')]
[('I', 'PRP'), ('have', 'VBP'), ('the', 'DT'), ('following', 'VBG'), ('snippet', 'NN'), ('which', 'WDT'), ('recovers', 'NNS'), ('from', 'IN'), ('index', 'NN'), ('out', 'IN'), ('of', 'IN'), ('range', 'NN'), ('panics', 'NNS'), ('Playground', 'NNP'), (',', ','), ('also', 'RB'), ('pasted', 'VBN'), ('below', 'IN'), ('The', 'DT'), ('error', 'NN'), ('is', 'VBZ'), ('nil', 'JJ'), ('when', 'WRB'), ('called', 'VBN'), ('from', 'IN'), ('main', 'JJ'), ('but', 'CC'), ('not', 'RB'), ('nil', 'RB'), ('in', 'IN'), ('an', 'DT'), ('equivalent', 'JJ'), ('test', 'NN'), ('case', 'NN'), ('.', '.'), ('What', 'WP'), ("'s", 'VBZ'), ('the', 'DT'), ('difference', 'NN'), ('?', '.'), ('type', 'NN'), ('Foo', 'NNP'), ('struct', 'NN'), ('{', '('), ('Is', 'VBZ'), ('[]', 'JJ'), ('int', 'NN'), ('}', ')'), ('func', 'NN'), ('main', 'JJ'), ('()', 'NNP'), ('{', '('), ('fp', 'NN'), (':=', 'NNP'), ('&', 'CC'), ('Foo', 'NNP'), ('{}', 'VBP'), ('if', 'IN'), ('err', 'JJ'), (':=', 'NNP'), ('fp.Panic()', 'NN'), (';', ':'), ('err', 'CC'), ('!=', 'VB'), ('nil', 'JJ'), ('{', '('), ('fmt.Errorf("Error: %v", err)', 'JJ'), ('}', ')'), ('fmt.Println("ok")', 'NN'), ('}', ')'), ('func', 'NN'), ('(', '('), ('fp', 'JJ'), ('*', 'NNP'), ('Foo', 'NNP'), (')', ')'), ('Panic', 'NNP'), ('()', 'NNP'), ('(', '('), ('err', 'JJ'), ('error', 'NN'), (')', ')'), ('{', '('), ('defer', 'NN'), ('PanicRecovery(&err)', 'NNP'), ('fp', 'NN'), ('.', '.'), ('Is', 'VBZ'), ('[', 'JJ'), ('0', 'CD'), (']', 'JJ'), ('=', 'JJ'), ('5', 'CD'), ('return', 'NN'), ('nil', 'NN'), ('}', ')'), ('func', 'NN'), ('PanicRecovery', 'NNP'), ('(', '('), ('err', 'JJ'), ('*', 'NNP'), ('error', 'NN'), (')', ')'), ('{', '('), ('if', 'IN'), ('r', 'VBN'), (':=', 'VBP'), ('recover', 'VB'), ('();', 'NNP'), ('r', 'NN'), ('!=', 'NNP'), ('nil', 'RB'), ('{', '('), ('if', 'IN'), ('_', 'VBN'), (',', ','), ('ok', 'JJ'), (':=', 'NNP'), ('r', 'NN'), ('.(', 'NNP'), ('runtime', 'NN'), ('.', '.'), ('Error', 'NNP'), (');', 'NNP'), ('ok', 'MD'), ('{', '('), ('//', 'VB'), ('fmt.Println("Panicing")', 'NN'), ('*', 'NNP'), ('err', 'NN'), ('=', 'NNP'), ('r', 'NN'), ('.(', 'NNP'), ('error', 'NN'), (')', ')'), ('*', 'VBZ'), ('err', 'JJ'), ('=', 'NNP'), ('r', 'NN'), ('.(', 'NNP'), ('error', 'NN'), (')', ')'), ('//', 'NN'), ('panic(r)', 'NN'), ('}', ')'), ('else', 'RB'), ('{', '('), ('*', 'JJ'), ('err', 'NN'), ('=', 'NNP'), ('r', 'NN'), ('.(', 'NNP'), ('error', 'NN'), (')', ')'), ('}', ')'), ('}', ')'), ('}', ')'), ('Test', 'NNP'), ('case', 'NN'), (':', ':'), ('func', 'NN'), ('TestPanic', 'NNP'), ('(', '('), ('t', 'JJ'), ('*', 'NN'), ('testing', 'VBG'), ('.', '.'), ('T', 'NNP'), (')', ')'), ('{', '('), ('fp', 'JJ'), (':=', 'NNP'), ('&', 'CC'), ('Foo', 'NNP'), ('{}', 'VBP'), ('if', 'IN'), ('err', 'JJ'), (':=', 'NNP'), ('fp.Panic()', 'NN'), (';', ':'), ('err', 'CC'), ('!=', 'VB'), ('nil', 'JJ'), ('{', '('), ('t.Errorf("Panic: %v", err)', 'NN'), ('}', ')'), ('}', ')')]
[('What', 'WP'), ('is', 'VBZ'), ('the', 'DT'), ('use', 'JJ'), ('case/advantage', 'NN'), ('of', 'IN'), ('defining', 'VBG'), ('a', 'DT'), ('function', 'NN'), ('within', 'IN'), ('a', 'DT'), ('structure', 'NN'), ('in', 'IN'), ('go', 'VB'), ('?', '.'), ('type', 'NN'), ('demo', 'NN'), ('struct', 'NN'), ('{', '('), ('F', 'NNP'), ('func', 'VBP'), ('()', 'NN'), ('}', ')')]
