Wrong tokens: 
Generated: ['append(m[1], "one")']
Test: ['append', '(', 'm', '[', '1', '],', '"one"', ')']

Wrong tokens: 
Generated: ['append(m[2], "two")']
Test: ['append', '(', 'm', '[', '2', '],', '"two"', ')']

Wrong tokens: 
Generated: ['append(m[1], "three")']
Test: ['append', '(', 'm', '[', '1', '],', '"three"', ')']

Wrong tokens: 
Generated: ["(can't)"]
Test: ['(', 'ca', "n't", ')']

Wrong tokens: 
Generated: ['(potentially)']
Test: ['(', 'potentially', ')']

Wrong tokens: 
Generated: ['"pain",']
Test: ['``', 'pain', "''", ',']

Wrong tokens: 
Generated: ['append(*s, "one")']
Test: ['append', '(*', 's', ',', '"one"', ')']

Wrong tokens: 
Generated: ['append(*s, "two")']
Test: ['append', '(*', 's', ',', '"two"', ')']

Wrong tokens: 
Generated: ['append(*s, "three")']
Test: ['append', '(*', 's', ',', '"three"', ')']

Wrong tokens: 
Generated: ['Ã¢\x80\x93', 'acceptable']
Test: ['-', 'acceptable', 'in']

Wrong tokens: 
Generated: ['in', 'most', 'cases', '.']
Test: ['most', 'cases', '.', 'An']

Wrong tokens: 
Generated: ['An', 'even', 'faster', 'solution', 'may', 'use', 'another', 'map', '(']
Test: ['even', 'faster', 'solution', 'may', 'use', 'another', 'map', '(', 'as']

Wrong tokens: 
Generated: ['as', 'a', 'set', ',', 'see', 'example']
Test: ['a', 'set', ',', 'see', 'example', '#', '1']

Wrong tokens: 
Generated: ['#', '1', 'and', 'example']
Test: ['and', 'example', '#', '2']

Wrong tokens: 
Generated: ['#2)']
Test: [')', 'as']

Wrong tokens: 
Generated: ['as', 'the', 'value', 'type', ',', 'which', 'will']
Test: ['the', 'value', 'type', ',', 'which', 'will', 'be']

Wrong tokens: 
Generated: ['be', 'O(1)', 'complexity', 'for', 'removals', 'too', '.', 'Cool', '.']
Test: ['O(1)', 'complexity', 'for', 'removals', 'too', '.', 'Cool', '.', 'It']

Wrong tokens: 
Generated: ['"add"']
Test: ['``', 'add', "''"]

Wrong tokens: 
Generated: ['append([]string{"MY INSERTED TEXT HERE"}, lines[i:]...)...)']
Test: ['append', '([]', 'string', '{', '"MY INSERTED TEXT HERE"', '},', 'lines', '[', 'i', ':]...)...)']

Wrong tokens: 
Generated: ['append(lines, "")']
Test: ['append', '(', 'lines', ',', '""', ')']

Wrong tokens: 
Generated: ['copy(lines[i+1:], lines[i:])']
Test: ['copy', '(', 'lines', '[', 'i', '+', '1', ':],', 'lines', '[', 'i', ':])']

Wrong tokens: 
Generated: ['(pagination,']
Test: ['(', 'pagination', ',']

Wrong tokens: 
Generated: ['etc', '.']
Test: ['etc.']

Wrong tokens: 
Generated: ['------------------------------------------------------------------']
Test: ['--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--']

Wrong tokens: 
Generated: ['----------------------------------------------------------------------']
Test: ['--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--']

Wrong tokens: 
Generated: ['UserCreate(email, password, username string, role int)']
Test: ['UserCreate', '(', 'email', ',', 'password', ',', 'username', 'string', ',', 'role', 'int', ')']

Wrong tokens: 
Generated: ['int64(role)']
Test: ['int64', '(', 'role', ')']

Wrong tokens: 
Generated: ['UserDelete(userid int64)']
Test: ['UserDelete', '(', 'userid', 'int64', ')']

Wrong tokens: 
Generated: ['UserRead(userid int64)']
Test: ['UserRead', '(', 'userid', 'int64', ')']

Wrong tokens: 
Generated: ['UserReadAll()']
Test: ['UserReadAll', '()']

Wrong tokens: 
Generated: ['UserUpdate(userid int64, uu *UserUpdateStruct)']
Test: ['UserUpdate', '(', 'userid', 'int64', ',', 'uu', '*', 'UserUpdateStruct', ')']

Wrong tokens: 
Generated: ['UserPaginate(page, countPage int)']
Test: ['UserPaginate', '(', 'page', ',', 'countPage', 'int', ')']

Wrong tokens: 
Generated: ['-------------------------------------------------------------------']
Test: ['--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '-']

Wrong tokens: 
Generated: ['--------------------------------------------------------------------']
Test: ['--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--']

Wrong tokens: 
Generated: ['CategoryCreate(name string)']
Test: ['CategoryCreate', '(', 'name', 'string', ')']

Wrong tokens: 
Generated: ['CategoryDelete(catid int64)']
Test: ['CategoryDelete', '(', 'catid', 'int64', ')']

Wrong tokens: 
Generated: ['CategoryRead(catid int64)']
Test: ['CategoryRead', '(', 'catid', 'int64', ')']

Wrong tokens: 
Generated: ['CategoryReadAll()']
Test: ['CategoryReadAll', '()']

Wrong tokens: 
Generated: ['CategoryUpdate(catid int64, name string)']
Test: ['CategoryUpdate', '(', 'catid', 'int64', ',', 'name', 'string', ')']

Wrong tokens: 
Generated: ['CategoryPaginate(page, countPage int)']
Test: ['CategoryPaginate', '(', 'page', ',', 'countPage', 'int', ')']

Wrong tokens: 
Generated: ['Create(name, email, password, local string, termOf bool)']
Test: ['Create', '(', 'name', ',', 'email', ',', 'password', ',', 'local', 'string', ',', 'termOf', 'bool', ')']

Wrong tokens: 
Generated: ['len(errMsg)']
Test: ['len', '(', 'errMsg', ')']

Wrong tokens: 
Generated: ['"foo":']
Test: ['``', 'foo', "''", ':']

Wrong tokens: 
Generated: ['{{-']
Test: ['{', '{', '-']

Wrong tokens: 
Generated: ['-}}']
Test: ['-', '}', '}']

Wrong tokens: 
Generated: ['"-"']
Test: ['"', '-', '"']

Wrong tokens: 
Generated: ['can', 't', 'load', 'package', ':']
Test: ['ca', "n't", 'load', 'package']

Wrong tokens: 
Generated: ['package', 'prometheus', ':']
Test: [':', 'package', 'prometheus']

Wrong tokens: 
Generated: ['It', 'turns', 'out', 'the', 'method', 'I', 'needed', 'was', 'img.At(x', ',']
Test: ['Which', 'somehow', 'makes', 'sense', ',', 'because', 'there', 'are']

Wrong tokens: 
Generated: ['y).RGBA()', ',']
Test: ['actually', 'no']

Wrong tokens: 
Generated: ['this', 'returns', 'those']
Test: ['sources', 'in', 'the', 'root']

Wrong tokens: 
Generated: ['panic("Error, socket not opened")']
Test: ['panic', '(', '"Error, socket not opened"', ')']

Wrong tokens: 
Generated: ['http://golang.org/pkg/testing/#hdr-Examples']
Test: ['http', ':', '//golang.org/pkg/testing/', '#', 'hdr-Examples']

Wrong tokens: 
Generated: ['https://godoc.org/github.com/creack/multio#example-Multiplexer--ReadWriter']
Test: ['https', ':', '//godoc.org/github.com/creack/multio', '#', 'example-Multiplexer', '--', 'ReadWriter']

Wrong tokens: 
Generated: ['https://github.com/creack/multio/blob/master/example_test.go']
Test: ['https', ':', '//github.com/creack/multio/blob/master/example_test.go']

Wrong tokens: 
Generated: ['(exactly)']
Test: ['(', 'exactly', ')']

Wrong tokens: 
Generated: ['http://play.golang.org/p/hnOhh8242i']
Test: ['http', ':', '//play.golang.org/p/hnOhh8242i']

Wrong tokens: 
Generated: ['handler(w http.ResponseWriter, r *http.Request)']
Test: ['handler', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['closure1()']
Test: ['closure1', '()']

Wrong tokens: 
Generated: ['closure1()']
Test: ['closure1', '()']

Wrong tokens: 
Generated: ['closure2(i)']
Test: ['closure2', '(', 'i', ')']

Wrong tokens: 
Generated: ['GetColour()']
Test: ['GetColour', '()']

Wrong tokens: 
Generated: ['GetColour()']
Test: ['GetColour', '()']

Wrong tokens: 
Generated: ['PrintColour(a Animalizer)']
Test: ['PrintColour', '(', 'a', 'Animalizer', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['wo', "n't"]
Test: ['you', 'wo']

Wrong tokens: 
Generated: ["won't", 'have']
Test: ["n't", 'have', 'to']

Wrong tokens: 
Generated: ['to', 'use', 'a', 'typeswitch', 'since', 'the', 'compiler', 'knows']
Test: ['use', 'a', 'typeswitch', 'since', 'the', 'compiler', 'knows', 'an']

Wrong tokens: 
Generated: ['an', 'Animalizer']
Test: ['Animalizer', 'is']

Wrong tokens: 
Generated: ['is', 'implementing', 'GetColour', '.', 'And', ',', 'finally', ',', 'the', 'behaviour', '(printing)']
Test: ['implementing', 'GetColour', '.', 'And', ',', 'finally', ',', 'the', 'behaviour', '(', 'printing', ')', 'is']

Wrong tokens: 
Generated: ['Save(d interface{})']
Test: ['Save', '(', 'd', 'interface', '{})']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['Save(Admin{})']
Test: ['Save', '(', 'Admin', '{})']

Wrong tokens: 
Generated: ['Save(d interface{})']
Test: ['Save', '(', 'd', 'interface', '{})']

Wrong tokens: 
Generated: ['Save(i interface{}, id int)']
Test: ['Save', '(', 'i', 'interface', '{},', 'id', 'int', ')']

Wrong tokens: 
Generated: ['ID()']
Test: ['ID', '()']

Wrong tokens: 
Generated: ['ID()']
Test: ['ID', '()']

Wrong tokens: 
Generated: ['setID(id int)']
Test: ['setID', '(', 'id', 'int', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['Save(d Model)']
Test: ['Save', '(', 'd', 'Model', ')']

Wrong tokens: 
Generated: ['Save(i Model)']
Test: ['Save', '(', 'i', 'Model', ')']

Wrong tokens: 
Generated: ['There', "'s", "There's", 'nothing', 'wrong', 'with', 'providing', 'getters', 'and', 'setters', 'yourself']
Test: ['.', 'There', "'s", 'nothing', 'wrong', 'with', 'providing', 'getters', 'and', 'setters', 'yourself', ',', 'and', 'it']

Wrong tokens: 
Generated: ['it', "'s", 'and', "it's", 'often', 'appropriate']
Test: ['s', 'often', 'appropriate', 'to', 'do', 'so', ',', 'but']

Wrong tokens: 
Generated: ['to']
Test: ['it']

Wrong tokens: 
Generated: ['do']
Test: ["'s"]

Wrong tokens: 
Generated: ['it', "'s", ',', 'but', "it's", 'neither']
Test: ['neither', 'idiomatic', 'nor']

Wrong tokens: 
Generated: ['idiomatic']
Test: ['necessary']

Wrong tokens: 
Generated: ['nor', 'necessary']
Test: ['to', 'put', 'Get', 'into']

Wrong tokens: 
Generated: ['to', 'getter', "'s", 'Get', 'into', 'the', "getter's", 'name', '.', 'If', 'you', 'have']
Test: ['the', 'getter', "'s", 'name', '.', 'If', 'you', 'have', 'a', 'field', 'called', 'owner']

Wrong tokens: 
Generated: ['a']
Test: ['(']

Wrong tokens: 
Generated: ['field']
Test: ['lower']

Wrong tokens: 
Generated: ['called', 'owner', '(', 'lower']
Test: ['case', ',', 'unexported', ')', ',']

Wrong tokens: 
Generated: ['case', ',', 'unexported']
Test: ['the', 'getter', 'method']

Wrong tokens: 
Generated: [')', ',', 'the', 'getter', 'method', 'should', 'be']
Test: ['should', 'be', 'called', 'Owner', '(', 'upper']

Wrong tokens: 
Generated: ['called', 'Owner', '(', 'upper', 'case', ',', 'exported']
Test: ['case', ',', 'exported', ')', ',', 'not', 'GetOwner', '.', 'The']

Wrong tokens: 
Generated: [')', ',', 'not']
Test: ['use', 'of']

Wrong tokens: 
Generated: ['GetOwner', '.', 'The', 'use']
Test: ['upper-case', 'names']

Wrong tokens: 
Generated: ['of', 'upper-case', 'names']
Test: ['for', 'export', 'provides']

Wrong tokens: 
Generated: ['for']
Test: ['the']

Wrong tokens: 
Generated: ['export']
Test: ['hook', 'to']

Wrong tokens: 
Generated: ['provides', 'the', 'hook']
Test: ['discriminate', 'the']

Wrong tokens: 
Generated: ['to', 'discriminate', 'the', 'field', 'from']
Test: ['field', 'from', 'the', 'method', '.', 'A', 'setter']

Wrong tokens: 
Generated: ['the', 'method']
Test: ['function', ',']

Wrong tokens: 
Generated: ['.', 'A']
Test: ['if']

Wrong tokens: 
Generated: ['setter']
Test: ['needed']

Wrong tokens: 
Generated: ['function', ',', 'if']
Test: [',', 'will', 'likely']

Wrong tokens: 
Generated: ['needed', ',', 'will', 'likely']
Test: ['be', 'called', 'SetOwner', '.']

Wrong tokens: 
Generated: ['be', 'called', 'SetOwner', '.']
Test: ['Both', 'names', 'read', 'well']

Wrong tokens: 
Generated: ['language.For']
Test: ['language', '.', 'For']

Wrong tokens: 
Generated: ['-', '-']
Test: ['--']

Wrong tokens: 
Generated: ['Signature".Please']
Test: ['Signature', "''", '.', 'Please']

Wrong tokens: 
Generated: ['it.I']
Test: ['it', '.', 'I']

Wrong tokens: 
Generated: ['golang-nuts.I']
Test: ['golang-nuts', '.', 'I']

Wrong tokens: 
Generated: ['here,Please']
Test: ['here', ',', 'Please']

Wrong tokens: 
Generated: ['armored,pripwd']
Test: ['armored', ',', 'pripwd']

Wrong tokens: 
Generated: ['pubkey+sign']
Test: ['pubkey', '+', 'sign']

Wrong tokens: 
Generated: ['SignPubKeyPKS(asciiPub string, asciiPri string, pripwd string) (asciiSignedKey string)']
Test: ['SignPubKeyPKS', '(', 'asciiPub', 'string', ',', 'asciiPri', 'string', ',', 'pripwd', 'string', ')', '(', 'asciiSignedKey', 'string', ')']

Wrong tokens: 
Generated: ['getPri(asciiPri, pripwd)']
Test: ['getPri', '(', 'asciiPri', ',', 'pripwd', ')']

Wrong tokens: 
Generated: ['packet.PublicKey']
Test: ['packet', '.', 'PublicKey']

Wrong tokens: 
Generated: ['openpgp.Entity']
Test: ['openpgp', '.', 'Entity']

Wrong tokens: 
Generated: ['Public', 'Key']
Test: ['Public Key']

Wrong tokens: 
Generated: ['getPub(asciiPub string) (pubKey packet.PublicKey, retEntity openpgp.Entity)']
Test: ['getPub', '(', 'asciiPub', 'string', ')', '(', 'pubKey', 'packet', '.', 'PublicKey', ',', 'retEntity', 'openpgp', '.', 'Entity', ')']

Wrong tokens: 
Generated: ['packet.PrivateKEy']
Test: ['packet', '.', 'PrivateKEy']

Wrong tokens: 
Generated: ['openpgp.Entity']
Test: ['openpgp', '.', 'Entity']

Wrong tokens: 
Generated: ['Private', 'Key']
Test: ['Private Key']

Wrong tokens: 
Generated: ['getPri(asciiPri string, pripwd string) (priKey packet.PrivateKey, priEnt openpgp.Entity)']
Test: ['getPri', '(', 'asciiPri', 'string', ',', 'pripwd', 'string', ')', '(', 'priKey', 'packet', '.', 'PrivateKey', ',', 'priEnt', 'openpgp', '.', 'Entity', ')']

Wrong tokens: 
Generated: ['openpgp.Entity']
Test: ['openpgp', '.', 'Entity']

Wrong tokens: 
Generated: ['PubEntToAsciiArmor(pubEnt openpgp.Entity) (asciiEntity string)']
Test: ['PubEntToAsciiArmor', '(', 'pubEnt', 'openpgp', '.', 'Entity', ')', '(', 'asciiEntity', 'string', ')']

Wrong tokens: 
Generated: ['go', 'tWriter.String()']
Test: ['gotWriter.String()']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['tmp1.DialTLS']
Test: ['tmp1', '.', 'DialTLS']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['*', 'http2.Transport']
Test: ['*http2.Transport']

Wrong tokens: 
Generated: ['*', 'http.RoundTripper']
Test: ['*http.RoundTripper']

Wrong tokens: 
Generated: ['*', 'http.RoundTripper']
Test: ['*http.RoundTripper']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['tmp1.DialTLS']
Test: ['tmp1', '.', 'DialTLS']

Wrong tokens: 
Generated: ['http.RoundTripper']
Test: ['http', '.', 'RoundTripper']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['fmt.Printf("%+v']
Test: ['fmt', '.', 'Printf', '(', '``', '%', '+v']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['&{DialTLS:']
Test: ['&', '{', 'DialTLS', ':']

Wrong tokens: 
Generated: ['TLSClientConfig:0xc8203ec8c0']
Test: ['TLSClientConfig', ':', '0xc8203ec8c0']

Wrong tokens: 
Generated: ['DisableCompression:false']
Test: ['DisableCompression', ':', 'false']

Wrong tokens: 
Generated: ['MaxHeaderListSize:0']
Test: ['MaxHeaderListSize', ':', '0']

Wrong tokens: 
Generated: ['connPoolOnce:{m:{state:0']
Test: ['connPoolOnce', ':', '{', 'm', ':', '{', 'state', ':', '0']

Wrong tokens: 
Generated: ['sema:0']
Test: ['sema', ':', '0']

Wrong tokens: 
Generated: ['done:0']
Test: ['done', ':', '0']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['undefined (type http.RoundTripper has no field or method DialTLS)']
Test: ['undefined', '(', 'type', 'http', '.', 'RoundTripper', 'has', 'no', 'field', 'or', 'method', 'DialTLS', ')']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['"non-standard"']
Test: ['``', 'non-standard', "''"]

Wrong tokens: 
Generated: [').']
Test: [')', '.']

Wrong tokens: 
Generated: ['-->']
Test: ['--', '>']

Wrong tokens: 
Generated: ["'1'", 'means', 'next', 'field', 'is']
Test: [", '1', ", 'means', 'next', 'field']

Wrong tokens: 
Generated: ['32bit']
Test: ['32', 'bit']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['Version=0100']
Test: ['Version', '=', '0100']

Wrong tokens: 
Generated: ['Subversion=10']
Test: ['Subversion', '=', '10']

Wrong tokens: 
Generated: ['Optional=1']
Test: ['Optional', '=', '1']

Wrong tokens: 
Generated: ['0', '0000']
Test: ['0 0000']

Wrong tokens: 
Generated: ['msg.Length']
Test: ['msg', '.', 'Length']

Wrong tokens: 
Generated: ['msg.Type']
Test: ['msg', '.', 'Type']

Wrong tokens: 
Generated: ['msg.Version']
Test: ['msg', '.', 'Version']

Wrong tokens: 
Generated: ['msg.Subversion']
Test: ['msg', '.', 'Subversion']

Wrong tokens: 
Generated: ['msg.Optional']
Test: ['msg', '.', 'Optional']

Wrong tokens: 
Generated: ['msg.NodeName']
Test: ['msg', '.', 'NodeName']

Wrong tokens: 
Generated: ['msg.ANumber']
Test: ['msg', '.', 'ANumber']

Wrong tokens: 
Generated: [';)']
Test: [';', ')']

Wrong tokens: 
Generated: ['|', 'id', '|', 'fname', '|', 'lname', '|', 'uname', '|', 'email', '|', 'contact', '|']
Test: ['| id | fname     | lname    | uname    | email                         | contact      |']

Wrong tokens: 
Generated: ['set (0.00 sec)']
Test: ['set', '(', '0.00', 'sec', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['sql.Open("mysql', '"', ',', '":@tcp(127.0.0.1:)/?charset=utf8"', ')']
Test: ['sql.Open("mysql", ":@tcp(127.0.0.1:)/?charset=utf8" )']

Wrong tokens: 
Generated: ['[', 'Rishikesh', 'Sandeep', 'Darshan', 'Surendra', 'Mukesh', ']']
Test: ['[Rishikesh Sandeep Darshan Surendra Mukesh]']

Wrong tokens: 
Generated: ["I'd"]
Test: ['I', "'d"]

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['getS(sC chan string)']
Test: ['getS', '(', 'sC', 'chan', 'string', ')']

Wrong tokens: 
Generated: ['getC(sC chan string, cC chan string)']
Test: ['getC', '(', 'sC', 'chan', 'string', ',', 'cC', 'chan', 'string', ')']

Wrong tokens: 
Generated: ['Time', 'zone']
Test: ['Time zone']

Wrong tokens: 
Generated: ['"switch"']
Test: ['``', 'switch', "''"]

Wrong tokens: 
Generated: ['time', 'zone']
Test: ['time zone']

Wrong tokens: 
Generated: ['time', 'zone']
Test: ['time zone']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['+', '01']
Test: ['+01']

Wrong tokens: 
Generated: ['Format(e *log.Entry) ([]byte, error)']
Test: ['Format', '(', 'e', '*', 'log', '.', 'Entry', ')', '([]', 'byte', ',', 'error', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['--import.']
Test: ['--', 'import', '.']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['Reader.ReadString()']
Test: ['Reader.ReadString', '(', ')']

Wrong tokens: 
Generated: ["r.ReadString('\\n')"]
Test: ['r.ReadString', '(', "'\\n'", ')']

Wrong tokens: 
Generated: ['what', "'s", "what's", 'going', 'wrong', '.', 'What']
Test: ['and', 'what', "'s", 'going', 'wrong', '.', 'What', 'you']

Wrong tokens: 
Generated: ['you']
Test: ['may']

Wrong tokens: 
Generated: ['may', 'do', 'is']
Test: ['do', 'is', 'cut']

Wrong tokens: 
Generated: ['cut']
Test: ['the']

Wrong tokens: 
Generated: ['the', 'trailing', 'newline', 'character', 'before', 'attempting', 'to', 'parse']
Test: ['trailing', 'newline', 'character', 'before', 'attempting', 'to', 'parse', 'any']

Wrong tokens: 
Generated: ['any', 'number', 'from']
Test: ['number', 'from', 'it', ',']

Wrong tokens: 
Generated: ['it', ',']
Test: ['e.g']

Wrong tokens: 
Generated: ['average(xs []float64)']
Test: ['average', '(', 'xs', '[]', 'float64', ')']

Wrong tokens: 
Generated: ['it', "'s", "it's"]
Test: ['course', 'it']

Wrong tokens: 
Generated: ['going', 'to']
Test: ["'s", 'going']

Wrong tokens: 
Generated: ['be']
Test: ['to']

Wrong tokens: 
Generated: ['that', "'s", 'since', "that's"]
Test: ['be', '0', 'since', 'that', "'s", 'the']

Wrong tokens: 
Generated: ['the', 'zero', 'value']
Test: ['zero', 'value', 'for']

Wrong tokens: 
Generated: ['for', 'that', 'wo']
Test: ['that', 'field']

Wrong tokens: 
Generated: ["n't", '.', 'AppEngine', "won't", 'modify', 'your', 'struct', 'when', 'it', 'stores']
Test: ['.', 'AppEngine', 'wo', "n't", 'modify', 'your', 'struct', 'when', 'it', 'stores', 'it', '.']

Wrong tokens: 
Generated: ['it', '.']
Test: ['The']

Wrong tokens: 
Generated: ['The', 'newly', 'created']
Test: ['newly', 'created', 'key']

Wrong tokens: 
Generated: ['key']
Test: ['you']

Wrong tokens: 
Generated: ['you']
Test: ['get']

Wrong tokens: 
Generated: ['get', 'back', 'when']
Test: ['back', 'when', 'you']

Wrong tokens: 
Generated: ['you']
Test: ['Put']

Wrong tokens: 
Generated: ['Put']
Test: ['the']

Wrong tokens: 
Generated: ['the', 'struct', 'contains']
Test: ['struct', 'contains', 'the']

Wrong tokens: 
Generated: ['the', 'generated', 'IntId()', 'when', 'an', 'incomplete']
Test: ['generated', 'IntId', '(', ')', 'when', 'an', 'incomplete', 'key']

Wrong tokens: 
Generated: ['key', 'is', 'used', '.', 'I', 'think', 'your', 'confusion']
Test: ['is', 'used', '.', 'I', 'think', 'your', 'confusion', 'was']

Wrong tokens: 
Generated: ['was', 'caused', 'by', 'assuming', 'something']
Test: ['caused', 'by', 'assuming', 'something', 'the']

Wrong tokens: 
Generated: ['the', 'docs', 'never', 'said', '.', 'Namely', 'that', 'AppEngine', 'would', 'auto-populate', 'ID', 'fields', 'in', 'your', 'stored', 'data']
Test: ['docs', 'never', 'said', '.', 'Namely', 'that', 'AppEngine', 'would', 'auto-populate', 'ID', 'fields', 'in', 'your', 'stored', 'data', 'for']

Wrong tokens: 
Generated: ['for']
Test: ['you']

Wrong tokens: 
Generated: ['you', '.', 'Since', 'in', 'your', 'case']
Test: ['.', 'Since', 'in', 'your', 'case', 'you']

Wrong tokens: 
Generated: ['you', 'want']
Test: ['want', 'the']

Wrong tokens: 
Generated: ['the', 'ID', 'field', 'of']
Test: ['ID', 'field', 'of', 'the']

Wrong tokens: 
Generated: ['the', 'struct', 'to', 'store']
Test: ['struct', 'to', 'store', 'the']

Wrong tokens: 
Generated: ['the', 'id', 'used', 'in']
Test: ['id', 'used', 'in', 'the']

Wrong tokens: 
Generated: ['the']
Test: ['key']

Wrong tokens: 
Generated: ['key']
Test: ['you']

Wrong tokens: 
Generated: ['you', 'you', "'re", 'want', 'to', 'generate', "you're", 'own', 'unique', 'ids', 'for', 'when', 'you', 'create']
Test: ['probably', 'want', 'to', 'generate', 'you', "'re", 'own', 'unique', 'ids', 'for', 'when', 'you', 'create', 'a']

Wrong tokens: 
Generated: ['a', 'Key', 'instead', 'of', 'using', 'incomplete', 'keys']
Test: ['Key', 'instead', 'of', 'using', 'incomplete', 'keys', '.']

Wrong tokens: 
Generated: ['.', 'When', 'the', 'doc', 'says']
Test: ['When', 'the', 'doc', 'says', 'a']

Wrong tokens: 
Generated: ['it', "'s", 'string', 'can', 'be']
Test: ['string', 'can', 'be', 'zero']

Wrong tokens: 
Generated: ['zero']
Test: ['it', "'s"]

Wrong tokens: 
Generated: ["it's", 'referring', 'to', 'the']
Test: ['referring', 'to', 'the', 'zero']

Wrong tokens: 
Generated: ['zero', 'value', 'of', 'a', 'string']
Test: ['value', 'of', 'a', 'string', 'type']

Wrong tokens: 
Generated: ['type', 'which', 'would', 'the', 'empty', 'string', '"".']
Test: ['which', 'would', 'the', 'empty', 'string', '``', "''", '.', 'You']

Wrong tokens: 
Generated: ['You']
Test: ['can']

Wrong tokens: 
Generated: ['project', "'s"]
Test: ["project's"]

Wrong tokens: 
Generated: ['ca', "n't", "can't"]
Test: ['I', "can't", 'seem']

Wrong tokens: 
Generated: ['seem', 'to', 'get']
Test: ['to', 'get', 'Go', 'to']

Wrong tokens: 
Generated: ['Go', 'to', 'generate', 'the', 'appropriate', 'header', 'files', 'to', 'allow', 'my', 'project', 'to', 'actually', 'compile', '.', 'When', 'I', 'generate', 'the', 'archive', ',']
Test: ['generate', 'the', 'appropriate', 'header', 'files', 'to', 'allow', 'my', 'project', 'to', 'actually', 'compile', '.', 'When I', 'generate', 'the', 'archive', ',', 'I', 'see']

Wrong tokens: 
Generated: ['I', 'see', 'the', 'function', 'in', 'the', 'exported', 'symbols', '(', 'using', 'objdump', ')']
Test: ['the', 'function', 'in', 'the', 'exported', 'symbols', '(', 'using', 'objdump', ')', ',', 'but']

Wrong tokens: 
Generated: [',', 'but', 'without', 'the', 'header', 'files', 'to', 'include', 'gcc', 'complains', 'about', 'the', 'function', 'not', 'existing', '(', 'as', 'I', "'m", ')']
Test: ['without', 'the', 'header', 'files', 'to', 'include', 'gcc', 'complains', 'about', 'the', 'function', 'not', 'existing', '(', 'as', 'expected']

Wrong tokens: 
Generated: ["I'm", 'quite', 'new', 'to', 'Go', '-']
Test: [')', "I'm", 'quite', 'new', 'to', 'Go']

Wrong tokens: 
Generated: ['however', ',']
Test: ['-', 'however']

Wrong tokens: 
Generated: ['I']
Test: [',']

Wrong tokens: 
Generated: ['love', 'the', 'language', 'and', 'would', 'like', 'to', 'make', 'use', 'of', 'it', '.']
Test: ['I', 'love', 'the', 'language', 'and', 'would', 'like', 'to', 'make', 'use', 'of', 'it']

Wrong tokens: 
Generated: ['Is', 'there', 'any', 'idiomatic', 'way', '("idiomatic"', 'gets', 'used', 'a']
Test: ['.', 'Is', 'there', 'any', 'idiomatic', 'way', '("idiomatic"', 'gets', 'used']

Wrong tokens: 
Generated: ['lot', 'in', 'the', 'world', 'of', 'Go', 'I']
Test: ['a', 'lot', 'in', 'the', 'world', 'of', 'Go']

Wrong tokens: 
Generated: ['see', '.']
Test: ['I', 'see']

Wrong tokens: 
Generated: [')']
Test: ['.']

Wrong tokens: 
Generated: ['to', 'get', 'this', 'to', 'play', 'nicely', 'with', 'each', 'other', '?']
Test: [')', 'to', 'get', 'this', 'to', 'play', 'nicely', 'with', 'each', 'other']

Wrong tokens: 
Generated: ['The', 'reason', 'I']
Test: ['?', 'The', 'reason']

Wrong tokens: 
Generated: ['asked', 'this', 'question', 'and', 'specifically', 'mentioned', 'Go', '1.5', 'is', 'that', 'according', 'to', 'this', 'document', ',']
Test: ['I', 'asked', 'this', 'question', 'and', 'specifically', 'mentioned', 'Go', '1.5', 'is', 'that', 'according', 'to', 'this', 'document']

Wrong tokens: 
Generated: ['https://docs.google.com/document/d/1nr-TQHw_er6GOQRsF6T43GGhFDelrAP0NqSS_00RgZQ/edit?pli=1#heading=h.1gw5ytjfcoke', 'Go', '1.5', 'added', 'support', 'for', 'non-Go', 'programs', 'to', 'call', 'Go', 'code', '.']
Test: [',', 'https://docs.google.com/document/d/1nr-TQHw_er6GOQRsF6T43GGhFDelrAP0NqSS_00RgZQ/edit?pli=1#heading=h.1gw5ytjfcoke', 'Go', '1.5', 'added', 'support', 'for', 'non-Go', 'programs', 'to', 'call', 'Go', 'code']

Wrong tokens: 
Generated: ['Specifically', ',']
Test: ['.', 'Specifically']

Wrong tokens: 
Generated: ['mentioned', 'under', 'the', 'section', '"']
Test: [',', 'mentioned', 'under', 'the', 'section']

Wrong tokens: 
Generated: ['Go', 'code', 'linked', 'into', ',']
Test: ['"', 'Go', 'code', 'linked', 'into']

Wrong tokens: 
Generated: ['and', 'called', 'from', ',']
Test: [',', 'and', 'called', 'from']

Wrong tokens: 
Generated: ['a']
Test: [',']

Wrong tokens: 
Generated: ['non-Go', 'program', '"']
Test: ['a', 'non-Go', 'program']

Wrong tokens: 
Generated: ['[]Foo']
Test: ['[', ']', 'Foo']

Wrong tokens: 
Generated: ['[]Reader']
Test: ['[', ']', 'Reader']

Wrong tokens: 
Generated: ['Copy', 'or', 'edit', 'a']
Test: ['#', 'Copy', 'or', 'edit']

Wrong tokens: 
Generated: ['I']
Test: ['#']

Wrong tokens: 
Generated: ['Do', "n't", "Don't"]
Test: ['.', 'Do', "n't", 'use', 'a']

Wrong tokens: 
Generated: ['use', 'a', 'front-end', 'if', 'you']
Test: ['front-end', 'if', 'you', 'have']

Wrong tokens: 
Generated: ['have', 'no', 'specific', 'It']
Test: ['no', 'specific', 'reason']

Wrong tokens: 
Generated: ["'s", ':']
Test: [':', 'It']

Wrong tokens: 
Generated: ["It's", 'easy']
Test: ["'s", 'easy', 'to']

Wrong tokens: 
Generated: ['to', 'make', 'a', 'complete', 'web', 'application', 'just', 'using']
Test: ['make', 'a', 'complete', 'web', 'application', 'just', 'using', 'Go']

Wrong tokens: 
Generated: ['Go', '.', 'You', 'will']
Test: ['.', 'You', 'will', 'be']

Wrong tokens: 
Generated: ['be', 'far', 'from', 'alone', '.']
Test: ['far', 'from', 'alone', '.', 'In']

Wrong tokens: 
Generated: ['In']
Test: ['my']

Wrong tokens: 
Generated: ['my', 'opinion']
Test: ['opinion', 'Go']

Wrong tokens: 
Generated: ['Go']
Test: ['is']

Wrong tokens: 
Generated: ['is', 'especially', 'well', 'suited']
Test: ['especially', 'well', 'suited', 'to']

Wrong tokens: 
Generated: ['to', 'build', 'long', 'running', 'servers', '.', 'Goroutines', 'and', 'channels', 'makes']
Test: ['build', 'long', 'running', 'servers', '.', 'Goroutines', 'and', 'channels', 'makes', 'it']

Wrong tokens: 
Generated: ['it', 'really', 'easy']
Test: ['really', 'easy', 'to']

Wrong tokens: 
Generated: ['to', 'handle', 'both', 'user', 'requests', 'and', 'long', 'term', 'tasks', '(or,', 'for', 'example', ',']
Test: ['handle', 'both', 'user', 'requests', 'and', 'long', 'term', 'tasks', '(', 'or', ',', 'for', 'example', ',', 'do']

Wrong tokens: 
Generated: ['do', 'the', 'postreatment']
Test: ['the', 'postreatment', 'of']

Wrong tokens: 
Generated: ['of', 'user', 'queries', 'after', 'you', 'answered', 'the', 'http', 'is', "n't", ',', 'which']
Test: ['user', 'queries', 'after', 'you', 'answered', 'the', 'http', 'query', ',', 'which', 'is']

Wrong tokens: 
Generated: ["isn't"]
Test: ["n't", 'so']

Wrong tokens: 
Generated: ['so', 'easy']
Test: ['easy', 'in']

Wrong tokens: 
Generated: ['in', 'php', 'and']
Test: ['php', 'and', 'is']

Wrong tokens: 
Generated: ['is', 'too', 'many', 'LOC']
Test: ['too', 'many', 'LOC', 'in']

Wrong tokens: 
Generated: ['in', 'java']
Test: ['java', 'if']

Wrong tokens: 
Generated: ['if', 'you', 'want']
Test: ['you', 'want', 'to']

Wrong tokens: 
Generated: ['to']
Test: ['do']

Wrong tokens: 
Generated: ['do']
Test: ['it']

Wrong tokens: 
Generated: ['it', 'properly']
Test: ['properly', ')', '.']

Wrong tokens: 
Generated: ['-', 'cover']
Test: ['-cover']

Wrong tokens: 
Generated: ['-', '1']
Test: ['-1']

Wrong tokens: 
Generated: ['Google', '+']
Test: ['Google+']

Wrong tokens: 
Generated: ['https', '://', 'www', '.', 'go', 'ogleapis', '.', 'com/auth/plus.profile.emails.read']
Test: ['https://www.googleapis.com/auth/plus.profile.emails.read']

Wrong tokens: 
Generated: ['https', '://', 'www', '.', 'go', 'ogleapis', '.', 'com/auth/plus.login']
Test: ['https://www.googleapis.com/auth/plus.login']

Wrong tokens: 
Generated: ['https', '://', 'www', '.', 'go', 'ogleapis', '.', 'com/auth/plus.me']
Test: ['https://www.googleapis.com/auth/plus.me']

Wrong tokens: 
Generated: ['https', '://', 'www', '.', 'go', 'ogleapis', '.', 'com/plus/v1/people/me']
Test: ['https://www.googleapis.com/plus/v1/people/me']

Wrong tokens: 
Generated: ['https', '://', 'www', '.', 'go', 'ogleapis', '.', 'com/oauth2/v3/userinfo']
Test: ['https://www.googleapis.com/oauth2/v3/userinfo']

Wrong tokens: 
Generated: ['(provider)']
Test: ['(', 'provider', ')']

Wrong tokens: 
Generated: ['do', "n't", "don't", 'get', 'any', 'results', '.', 'It', 'might', 'be', 'the']
Test: ['I', 'do', "n't", 'get', 'any', 'results', '.', 'It', 'might', 'be', 'the', 'lack']

Wrong tokens: 
Generated: ['lack']
Test: ['of', 'an']

Wrong tokens: 
Generated: ['of', 'an', 'index', 'defined', 'for']
Test: ['index', 'defined', 'for', 'that']

Wrong tokens: 
Generated: ['that', 'property']
Test: ['property', ',', 'but']

Wrong tokens: 
Generated: ['but']
Test: ['as', 'I']

Wrong tokens: 
Generated: [',', 'as', 'I', 'understand', 'it', ',', 'simple', 'indices', 'should', 'automatically', 'be', 'created', 'in', 'the', 'development', 'server']
Test: ['understand', 'it', ',', 'simple', 'indices', 'should', 'automatically', 'be', 'created', 'in', 'the', 'development', 'server', '(', 'and']

Wrong tokens: 
Generated: ['(', 'and', 'an', 'index.yaml']
Test: ['an', 'index.yaml', 'file']

Wrong tokens: 
Generated: ['file', 'created', 'and', 'populated']
Test: ['created', 'and', 'populated', 'with']

Wrong tokens: 
Generated: ['with']
Test: ['it', ')', '.']

Wrong tokens: 
Generated: ['it', ')', '.']
Test: ['This']

Wrong tokens: 
Generated: ['2016', '-', '0', '8', '-', '0', '8']
Test: ['2016-08-08']

Wrong tokens: 
Generated: ['05', ':', '0', '9', ':', '52', ',', '894']
Test: ['05:09:52,894']

Wrong tokens: 
Generated: ['api_server', '.', 'py', ':', '651', ']']
Test: ['api_server.py:651]']

Wrong tokens: 
Generated: ['"index.yaml"']
Test: ['``', 'index.yaml', "''"]

Wrong tokens: 
Generated: ['I']
Test: [',']

Wrong tokens: 
Generated: ["'m", "I'm", 'assuming', 'that']
Test: ['I', "'m", 'assuming', 'that', 'no']

Wrong tokens: 
Generated: ['no', 'indices', 'needed']
Test: ['indices', 'needed', 'to']

Wrong tokens: 
Generated: ['to']
Test: ['be']

Wrong tokens: 
Generated: ['be', 'created', ',', 'which', 'means', 'that']
Test: ['created', ',', 'which', 'means', 'that', 'my']

Wrong tokens: 
Generated: ['my', 'not']
Test: ['query']

Wrong tokens: 
Generated: ["'ve", 'must']
Test: ['must', 'not']

Wrong tokens: 
Generated: ["not've"]
Test: ["'ve", 'had']

Wrong tokens: 
Generated: ['had']
Test: ['the']

Wrong tokens: 
Generated: ['the', 'desired', 'effect', '?', 'What']
Test: ['desired', 'effect', '?', 'What', 'am', 'I']

Wrong tokens: 
Generated: ['am', 'I', 'missing', '?', 'Edit', ':', 'Note', 'that']
Test: ['missing', '?', 'Edit', ':', 'Note', 'that', 'the']

Wrong tokens: 
Generated: ['the', 'record']
Test: ['record', 'was']

Wrong tokens: 
Generated: ['was', 'previously', 'created']
Test: ['previously', 'created', 'and']

Wrong tokens: 
Generated: ['and']
Test: ['the']

Wrong tokens: 
Generated: ['the', 'application', 'stopped']
Test: ['application', 'stopped', 'and']

Wrong tokens: 
Generated: ['and', 'started', 'many', 'times', 'since', '.', 'I', 'sincerely', 'doubt', 'this']
Test: ['started', 'many', 'times', 'since', '.', 'I', 'sincerely', 'doubt', 'this', 'is', 'a']

Wrong tokens: 
Generated: ['is', 'a', 'eventual-consistency', 'thing', '.', 'Edit', '2', ':']
Test: ['eventual-consistency', 'thing', '.', 'Edit', '2', ':', 'For']

Wrong tokens: 
Generated: ['For']
Test: ['the']

Wrong tokens: 
Generated: ['the', 'purpose', 'I', "'ve", 'testing']
Test: ['purpose', 'of', 'testing', ',', 'I', "'ve"]

Wrong tokens: 
Generated: [',', "I've", 'created', 'the', 'following']
Test: ['created', 'the', 'following', 'model']

Wrong tokens: 
Generated: ['model', 'with', 'the', 'following']
Test: ['with', 'the', 'following', 'code', '.']

Wrong tokens: 
Generated: ['code']
Test: ['They']

Wrong tokens: 
Generated: ['.', 'They', 'both', 'exhibit', 'the', 'same', 'behavior', 'as', 'my', 'original']
Test: ['both', 'exhibit', 'the', 'same', 'behavior', 'as', 'my', 'original', 'model']

Wrong tokens: 
Generated: ['model', 'and']
Test: ['and', 'code', '.']

Wrong tokens: 
Generated: ['02', ':', '11', ':', '36']
Test: ['02:11:36']

Wrong tokens: 
Generated: ['DEBUG', ':', 'Putting', '.']
Test: ['DEBUG: Putting.']

Wrong tokens: 
Generated: ['02', ':', '11', ':', '36']
Test: ['02:11:36']

Wrong tokens: 
Generated: ['DEBUG', ':', 'Waiting', '.']
Test: ['DEBUG: Waiting.']

Wrong tokens: 
Generated: ['02', ':', '11', ':', '37']
Test: ['02:11:37']

Wrong tokens: 
Generated: ['2016/08/09', '02', ':', '11', ':', '37']
Test: ['2016/08/0902:11:37']

Wrong tokens: 
Generated: ['DEBUG', ':', 'Running', 'query', '.']
Test: ['DEBUG: Running query.']

Wrong tokens: 
Generated: ['02', ':', '11', ':', '37']
Test: ['02:11:37']

Wrong tokens: 
Generated: ['there', "'s", "there's", 'more', 'than', 'two']
Test: ['(', 'there', "'s", 'more', 'than', 'two', ',', 'but', 'we']

Wrong tokens: 
Generated: ['we', "'re", 'but']
Test: ["'re", 'going']

Wrong tokens: 
Generated: ["we're", 'going', 'to']
Test: ['to', 'focus', 'on', 'the']

Wrong tokens: 
Generated: ['focus', 'on', 'the', 'explicit']
Test: ['explicit', 'ones', ')', ',', 'main']

Wrong tokens: 
Generated: ['ones', ')', ',', 'main', 'and', 'readFromChannel', '.']
Test: ['and', 'readFromChannel', '.', 'Lets', 'look', 'at']

Wrong tokens: 
Generated: ['Lets']
Test: ['what']

Wrong tokens: 
Generated: ['chan', 'nel']
Test: ['channel']

Wrong tokens: 
Generated: ['chan', 'nel']
Test: ['channel']

Wrong tokens: 
Generated: ['chan', 'nel']
Test: ['channel']

Wrong tokens: 
Generated: ['may/']
Test: ['may', '/']

Wrong tokens: 
Generated: ['there', "'s", "there's", 'always', 'a', 'receive', 'at']
Test: ['that', 'there', "'s", 'always', 'a', 'receive', 'at', 'the']

Wrong tokens: 
Generated: ['the', 'other']
Test: ['other', 'end']

Wrong tokens: 
Generated: ['end', 'of']
Test: ['of', 'the']

Wrong tokens: 
Generated: ['the', 'channel']
Test: ['channel', 'for']

Wrong tokens: 
Generated: ['for', 'every', 'send', '.']
Test: ['every', 'send', '.', 'You']

Wrong tokens: 
Generated: ['You']
Test: ['can']

Wrong tokens: 
Generated: ['can', 'also']
Test: ['also', 'use']

Wrong tokens: 
Generated: ['use', 'a', 'buffered', 'channel', ',']
Test: ['a', 'buffered', 'channel', ',', 'but']

Wrong tokens: 
Generated: ['but', 'in', 'your', 'code', 'above']
Test: ['in', 'your', 'code', 'above', ',', 'it']

Wrong tokens: 
Generated: [',', 'it', 'would']
Test: ['would', 'not']

Wrong tokens: 
Generated: ['not', 'be']
Test: ['be', 'the']

Wrong tokens: 
Generated: ['the', '"right"', 'Here', "'s"]
Test: ['``', 'right', "''", 'solution', '.']

Wrong tokens: 
Generated: ['.', "Here's", 'my', 'fix', 'for', 'the', 'deadlock']
Test: ['Here', "'s", 'my', 'fix', 'for', 'the', 'deadlock', ':']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['readFromChannel(c chan int, ti <-chan time.Time)']
Test: ['readFromChannel', '(', 'c', 'chan', 'int', ',', 'ti', '<-', 'chan', 'time', '.', 'Time', ')']

Wrong tokens: 
Generated: ['*File)']
Test: ['*File', ')']

Wrong tokens: 
Generated: ['Read(b']
Test: ['Read', '(', 'b']

Wrong tokens: 
Generated: ['[]byte)']
Test: ['[', ']', 'byte', ')']

Wrong tokens: 
Generated: ['cannot']
Test: ['can', 'not']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['Thanks', '~']
Test: ['Thanks~']

Wrong tokens: 
Generated: ['I']
Test: [',']

Wrong tokens: 
Generated: ["'m", "I'm", 'sure', 'they', 'would']
Test: ['I', "'m", 'sure', 'they', 'would', 'be']

Wrong tokens: 
Generated: ['be', 'happy', 'for', 'your', 'contributions']
Test: ['happy', 'for', 'your', 'contributions', '.', '(']

Wrong tokens: 
Generated: ['.']
Test: ['I']

Wrong tokens: 
Generated: ['(', 'I', 'try', 'not']
Test: ['try', 'not', 'to']

Wrong tokens: 
Generated: ['to', 'say', '"', 'submit', 'a', 'patch', '"', 'when']
Test: ['say', '``', 'submit', 'a', 'patch', "''", 'when', 'we']

Wrong tokens: 
Generated: ['we', 'are', 'talk', 'about', 'old', 'languages/modules', ',', 'however', 'a', 'new', 'language']
Test: ['are', 'talk', 'about', 'old', 'languages/modules', ',', 'however', 'a', 'new', 'language', 'is']

Wrong tokens: 
Generated: ['is']
Test: ['an']

Wrong tokens: 
Generated: [':)']
Test: [':', ')']

Wrong tokens: 
Generated: ['New()']
Test: ['New', '()']

Wrong tokens: 
Generated: ['sender()']
Test: ['sender', '()']

Wrong tokens: 
Generated: ['s', '.', 'c', '.', 'L.Lock()']
Test: ['s.c.L.Lock()']

Wrong tokens: 
Generated: ['s', '.', 'c', '.', 'L.Unlock()']
Test: ['s.c.L.Unlock()']

Wrong tokens: 
Generated: ['s', '.', 'c.Wait()']
Test: ['s.c.Wait()']

Wrong tokens: 
Generated: ['s', '.', 'c', '.', 'L.Unlock()']
Test: ['s.c.L.Unlock()']

Wrong tokens: 
Generated: ['Reconnect()']
Test: ['Reconnect', '()']

Wrong tokens: 
Generated: ['s', '.', 'c.Broadcast()']
Test: ['s.c.Broadcast()']

Wrong tokens: 
Generated: ['i']
Test: [',']

Wrong tokens: 
Generated: ["'m", "i'm", 'trying']
Test: ['i', "'m", 'trying', 'to']

Wrong tokens: 
Generated: ['to', 'utilize', '2', 'threads']
Test: ['utilize', '2', 'threads', 'at']

Wrong tokens: 
Generated: ['at', 'a', 'time']
Test: ['a', 'time', 'to']

Wrong tokens: 
Generated: ['to', 'print', 'out', 'the', 'current', 'time', ',', 'with', 'approximately', '2', 'second', 'delays', 'between', 'every', '2']
Test: ['print', 'out', 'the', 'current', 'time', ',', 'with', 'approximately', '2', 'second', 'delays', 'between', 'every', '2', 'go']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['c', ':=', 'make(chan string, 2)']
Test: ['c := make(chan string, 2)']

Wrong tokens: 
Generated: ['return', 'CurrentTime()']
Test: ['returnCurrentTime()']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '50']
Test: ['03:17:50']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '50']
Test: ['03:17:50']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '50']
Test: ['03:17:50']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '52']
Test: ['03:17:52']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '52']
Test: ['03:17:52']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '52']
Test: ['03:17:52']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '50']
Test: ['03:17:50']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '50']
Test: ['03:17:50']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '52']
Test: ['03:17:50']

Wrong tokens: 
Generated: ['3', 'rd']
Test: ['3rd']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '54']
Test: ['03:17:54']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '54']
Test: ['03:17:54']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '56']
Test: ['03:17:56']

Wrong tokens: 
Generated: ['3', 'rd']
Test: ['3rd']

Wrong tokens: 
Generated: ['+', 'v']
Test: ['+v']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ["I'd"]
Test: ['I', "'d"]

Wrong tokens: 
Generated: ['[[', '2', 'd3h', '3', 'h', ']', '[', '3', 'h5d', '5', 'd', ']]']
Test: ['[[2d3h 3h] [3h5d 5d]]']

Wrong tokens: 
Generated: ['[', '[', '2d3h', '3h', ']', ']']
Test: ['[[2d3h 3h]]']

Wrong tokens: 
Generated: ['https://github.com/login/oauth/access_token', 'with', 'code']
Test: ['http://github.com/login/oauth/access_token', 'with', 'code', ',']

Wrong tokens: 
Generated: [',', 'client_id', 'and', 'client_secret']
Test: ['client_id', 'and', 'client_secret', '.']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['go', 'req']
Test: ['goreq']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['Data', '::', 'Dumper', '::', 'Dumper()']
Test: ['Data::Dumper::Dumper()']

Wrong tokens: 
Generated: ['I']
Test: ['.']

Wrong tokens: 
Generated: ["'ve", "I've", 'taken', 'up', 'learning']
Test: ['I', "'ve", 'taken', 'up', 'learning', 'Go', ',']

Wrong tokens: 
Generated: ['Go', ',', 'because', 'it', 'looks', 'like', 'a']
Test: ['because', 'it', 'looks', 'like', 'a', 'fun']

Wrong tokens: 
Generated: ['fun']
Test: ['and']

Wrong tokens: 
Generated: ['and', 'interesting', 'language', ',', 'something', 'that', 'will']
Test: ['interesting', 'language', ',', 'something', 'that', 'will', 'get']

Wrong tokens: 
Generated: ['get', 'me']
Test: ['me', 'out']

Wrong tokens: 
Generated: ['out', 'of']
Test: ['of', 'the']

Wrong tokens: 
Generated: ['the', 'I']
Test: ['Perl']

Wrong tokens: 
Generated: ["'m", 'rut', "I'm"]
Test: ['rut', 'I', "'m", 'in']

Wrong tokens: 
Generated: ['in', ',', 'while', 'opening']
Test: [',', 'while', 'opening', 'my']

Wrong tokens: 
Generated: ['my', 'eyes']
Test: ['eyes', 'to']

Wrong tokens: 
Generated: ['to', 'new', 'ways']
Test: ['new', 'ways', 'of']

Wrong tokens: 
Generated: ['of', 'doing', 'stuffz', '.']
Test: ['doing', 'stuffz', '...']

Wrong tokens: 
Generated: ['.', '.', 'One']
Test: ['One', 'of']

Wrong tokens: 
Generated: ['of', 'the', 'things', 'I', 'really', 'want']
Test: ['the', 'things', 'I', 'really', 'want', 'is']

Wrong tokens: 
Generated: ["I'll"]
Test: ['I', "'ll"]

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['"box"']
Test: ['``', 'box', "''"]

Wrong tokens: 
Generated: ['"x"']
Test: ['``', 'x', "''"]

Wrong tokens: 
Generated: ['"box"']
Test: ['``', 'box', "''"]

Wrong tokens: 
Generated: ['(and,']
Test: ['(', 'and', ',']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['...and:']
Test: ['...', 'and', ':']

Wrong tokens: 
Generated: ['print', 'x', ',', 'id(x)']
Test: ['print x, id(x)']

Wrong tokens: 
Generated: ['you']
Test: ['but']

Wrong tokens: 
Generated: ["'ve"]
Test: ['you']

Wrong tokens: 
Generated: ["you've", 'picked', 'a', 'worst-case', 'scenario']
Test: ["'ve", 'picked', 'a', 'worst-case', 'scenario', '-', 'in']

Wrong tokens: 
Generated: ['-', 'in']
Test: ['the']

Wrong tokens: 
Generated: ['the', 'Benchmarks', 'Game']
Test: ['Benchmarks', 'Game', ',', 'we']

Wrong tokens: 
Generated: [',', 'we']
Test: ['see']

Wrong tokens: 
Generated: ['see', 'go', 'being']
Test: ['go', 'being', ',', 'on']

Wrong tokens: 
Generated: [',', 'on', 'average', ',', 'about']
Test: ['average', ',', 'about', '25x']

Wrong tokens: 
Generated: ['25x', 'times', 'faster', '(', '100x', 'in']
Test: ['times', 'faster', '(', '100x', 'in', 'the']

Wrong tokens: 
Generated: ['the', 'worst', 'case', 'You', "'ve", '.', "You've"]
Test: ['worst', 'case', ')', '.', 'You', "'ve", 'probably']

Wrong tokens: 
Generated: ['probably']
Test: ['read', 'that']

Wrong tokens: 
Generated: ['read', 'that', ',', 'if', 'your', 'Python']
Test: [',', 'if', 'your', 'Python', 'programs']

Wrong tokens: 
Generated: ['programs', 'are']
Test: ['are', 'too', 'slow', ',']

Wrong tokens: 
Generated: ['too']
Test: ['you']

Wrong tokens: 
Generated: ['slow', ',', 'you']
Test: ['can', 'speed']

Wrong tokens: 
Generated: ['can', 'speed']
Test: ['them', 'up', 'by']

Wrong tokens: 
Generated: ['them', 'up']
Test: ['moving']

Wrong tokens: 
Generated: ['by', 'moving', 'things', 'into', 'C', '.', 'Fortunately', ',', 'in']
Test: ['things', 'into', 'C', '.', 'Fortunately', ',', 'in', 'this', 'case']

Wrong tokens: 
Generated: ['somebody', "'s", 'case', ',', "somebody's", 'already']
Test: [',', 'somebody', "'s", 'already', 'done', 'this', 'for', 'you']

Wrong tokens: 
Generated: ['done', 'this', 'for', 'you', '.', 'If']
Test: ['.', 'If', 'you', 'rewrite', 'your']

Wrong tokens: 
Generated: ['you', 'rewrite', 'your']
Test: ['empty', 'loop', 'to', 'use']

Wrong tokens: 
Generated: ['empty', 'loop', 'to', 'use']
Test: ['xrange( )', 'like', 'so']

Wrong tokens: 
Generated: ['xrange(1000000000)', ':']
Test: ['xrange', '(', '1000000000', '):']

Wrong tokens: 
Generated: ['print', '"Done."']
Test: ['print "Done."']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ["you'll"]
Test: ['you', "'ll"]

Wrong tokens: 
Generated: ['4', '.']
Test: ['4.']

Wrong tokens: 
Generated: ['1', '.']
Test: ['1.']

Wrong tokens: 
Generated: ['i.e', '.']
Test: ['i.e.']

Wrong tokens: 
Generated: ['<--']
Test: ['<', '--']

Wrong tokens: 
Generated: ['TotalLength()']
Test: ['TotalLength', '()']

Wrong tokens: 
Generated: ['"hello"']
Test: ['``', 'hello', "''"]

Wrong tokens: 
Generated: ['"world"']
Test: ['``', 'world', "''"]

Wrong tokens: 
Generated: ['say(s string)']
Test: ['say', '(', 's', 'string', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['say("world")']
Test: ['say', '(', '"world"', ')']

Wrong tokens: 
Generated: ['"Status"']
Test: ['``', 'Status', "''"]

Wrong tokens: 
Generated: ['Add()']
Test: ['Add', '()']

Wrong tokens: 
Generated: ['len(p.Children)']
Test: ['len', '(', 'p', '.', 'Children', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['"proper".']
Test: ['``', 'proper', "''", '.']

Wrong tokens: 
Generated: ['Add(fn1 func(), fn2 func())']
Test: ['Add', '(', 'fn1', 'func', '(),', 'fn2', 'func', '())']

Wrong tokens: 
Generated: ['[]*']
Test: ['[]', '*']

Wrong tokens: 
Generated: ['"pre-first",']
Test: ['``', 'pre-first', "''", ',']

Wrong tokens: 
Generated: ['*', 'os.File']
Test: ['*os.File']

Wrong tokens: 
Generated: ['*', 'os.File']
Test: ['*os.File']

Wrong tokens: 
Generated: ['[]byte.']
Test: ['[ ]byte', '.']

Wrong tokens: 
Generated: ['Here', "'s", "Here's", 'the', 'complete']
Test: ['.', 'Here', "'s", 'the', 'complete', 'code', ':']

Wrong tokens: 
Generated: ['*bytes.Buffer)']
Test: ['*bytes.Buffer', ')']

Wrong tokens: 
Generated: ['cannot']
Test: ['can', 'not']

Wrong tokens: 
Generated: ['*os.File,']
Test: ['*os.File', ',']

Wrong tokens: 
Generated: ['#2:']
Test: ['#', '2', ':']

Wrong tokens: 
Generated: ['"work"']
Test: ['``', 'work', "''"]

Wrong tokens: 
Generated: ['do', "n't"]
Test: ['you', 'do']

Wrong tokens: 
Generated: ["don't", 'even', 'need', 'the', 'bytes.Buffer', ',', 'you', 'can', 'just', '"stream"', 'the', 'compressed', 'data']
Test: ["n't", 'even', 'need', 'the', 'bytes.Buffer', ',', 'you', 'can', 'just', '``', 'stream', "''", 'the', 'compressed', 'data', 'to']

Wrong tokens: 
Generated: ['to', 'the', 'http.ResponseWriter', '.']
Test: ['the', 'http.ResponseWriter', '.', 'It']

Wrong tokens: 
Generated: ['myHandler(w http.ResponseWriter, r *http.Request)']
Test: ['myHandler', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')']

Wrong tokens: 
Generated: ['"fired"']
Test: ['``', 'fired', "''"]

Wrong tokens: 
Generated: ['"happens-before"']
Test: ['``', 'happens-before', "''"]

Wrong tokens: 
Generated: ['cannot']
Test: ['can', 'not']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['The', 'GOROOT']
Test: ['The GOROOT']

Wrong tokens: 
Generated: ['In', 'LiteIDE']
Test: ['In LiteIDE']

Wrong tokens: 
Generated: ["'s"]
Test: ["'", 's']

Wrong tokens: 
Generated: ["'s"]
Test: ["'", 's']

Wrong tokens: 
Generated: ['Build', 'Output']
Test: ['Build Output']

Wrong tokens: 
Generated: ['My', 'LiteIDE']
Test: ['My LiteIDE']

Wrong tokens: 
Generated: ['GOBIN', '=']
Test: ['#', 'GOBIN']

Wrong tokens: 
Generated: ['gnome', '-', 'terminal']
Test: ['gnome-terminal']

Wrong tokens: 
Generated: ['xfce4', '-', 'terminal']
Test: ['xfce4-terminal']

Wrong tokens: 
Generated: ['"Output:"']
Test: ['``', 'Output', ':', "''"]

Wrong tokens: 
Generated: [':)']
Test: [':', ')']

Wrong tokens: 
Generated: [').']
Test: [')', '.']

Wrong tokens: 
Generated: ['#2:']
Test: ['#', '2', ':']

Wrong tokens: 
Generated: ['readType(decl *ast.GenDecl, spec *ast.TypeSpec)']
Test: ['readType', '(', 'decl', '*', 'ast', '.', 'GenDecl', ',', 'spec', '*', 'ast', '.', 'TypeSpec', ')']

Wrong tokens: 
Generated: ['*ast.GenDecl:']
Test: ['*ast.GenDecl', ':']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '3', ':', '1', ':', 'GenDecl', '%!', 's(*ast.CommentGroup=)']
Test: ['main.go:3:1:    GenDecl %!s(*ast.CommentGroup=)']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '11', ':', '1', ':', 'GenDecl', '&{[%!', 's(*ast.Comment=&{69 // FirstType docs})', ']}']
Test: ['main.go:11:1:   GenDecl &{[%!s(*ast.Comment=&{69 // FirstType docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '11', ':', '6', ':', 'TypeSpec', 'FirstType', '%!', 's(*ast.CommentGroup=)']
Test: ['main.go:11:6:   TypeSpec FirstType  %!s(*ast.CommentGroup=)']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '13', ':', '2', ':', 'Field', '[', 'FirstMember', ']', '&{[%!', 's(*ast.Comment=&{112 // FirstMember docs})', ']}']
Test: ['main.go:13:2:   Field [FirstMember] &{[%!s(*ast.Comment=&{112 // FirstMember docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '17', ':', '1', ':', 'GenDecl', '&{[%!', 's(*ast.Comment=&{155 // SecondType docs})', ']}']
Test: ['main.go:17:1:   GenDecl &{[%!s(*ast.Comment=&{155 // SecondType docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '17', ':', '6', ':', 'TypeSpec', 'SecondType', '%!', 's(*ast.CommentGroup=)']
Test: ['main.go:17:6:   TypeSpec SecondType %!s(*ast.CommentGroup=)']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '19', ':', '2', ':', 'Field', '[', 'SecondMember', ']', '&{[%!', 's(*ast.Comment=&{200 // SecondMember docs})', ']}']
Test: ['main.go:19:2:   Field [SecondMember]    &{[%!s(*ast.Comment=&{200 // SecondMember docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '23', ':', '1', ':', 'FuncDecl', 'main', '&{[%!', 's(*ast.Comment=&{245 // Main docs})', ']}']
Test: ['main.go:23:1:   FuncDecl main   &{[%!s(*ast.Comment=&{245 // Main docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '33', ':', '23', ':', 'Field', '[', 'n', ']', '%!', 's(*ast.CommentGroup=)']
Test: ['main.go:33:23:  Field [n]   %!s(*ast.CommentGroup=)']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '33', ':', '35', ':', 'Field', '[]', '%!', 's(*ast.CommentGroup=)']
Test: ['main.go:33:35:  Field []    %!s(*ast.CommentGroup=)']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '3', ':', '1', ':', 'GenDecl', '%!', 's(*ast.CommentGroup=)']
Test: ['main.go:3:1:    GenDecl %!s(*ast.CommentGroup=)']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '11', ':', '1', ':', 'GenDecl', '&{[%!', 's(*ast.Comment=&{69 // This documents FirstType and SecondType together})', ']}']
Test: ['main.go:11:1:   GenDecl &{[%!s(*ast.Comment=&{69 // This documents FirstType and SecondType together})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '13', ':', '2', ':', 'TypeSpec', 'FirstType', '&{[%!', 's(*ast.Comment=&{129 // FirstType docs})', ']}']
Test: ['main.go:13:2:   TypeSpec FirstType  &{[%!s(*ast.Comment=&{129 // FirstType docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '15', ':', '3', ':', 'Field', '[', 'FirstMember', ']', '&{[%!', 's(*ast.Comment=&{169 // FirstMember docs})', ']}']
Test: ['main.go:15:3:   Field [FirstMember] &{[%!s(*ast.Comment=&{169 // FirstMember docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '19', ':', '2', ':', 'TypeSpec', 'SecondType', '&{[%!', 's(*ast.Comment=&{215 // SecondType docs})', ']}']
Test: ['main.go:19:2:   TypeSpec SecondType &{[%!s(*ast.Comment=&{215 // SecondType docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '21', ':', '3', ':', 'Field', '[', 'SecondMember', ']', '&{[%!', 's(*ast.Comment=&{257 // SecondMember docs})', ']}']
Test: ['main.go:21:3:   Field [SecondMember]    &{[%!s(*ast.Comment=&{257 // SecondMember docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '26', ':', '1', ':', 'FuncDecl', 'main', '&{[%!', 's(*ast.Comment=&{306 // Main docs})', ']}']
Test: ['main.go:26:1:   FuncDecl main   &{[%!s(*ast.Comment=&{306 // Main docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '36', ':', '23', ':', 'Field', '[', 'n', ']', '%!', 's(*ast.CommentGroup=)']
Test: ['main.go:36:23:  Field [n]   %!s(*ast.CommentGroup=)']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '36', ':', '35', ':', 'Field', '[]', '%!', 's(*ast.CommentGroup=)']
Test: ['main.go:36:35:  Field []    %!s(*ast.CommentGroup=)']

Wrong tokens: 
Generated: ['"contractions"']
Test: ['``', 'contractions', "''"]

Wrong tokens: 
Generated: ['type', 'switch']
Test: ['type switch']

Wrong tokens: 
Generated: ['(https://github.com/jmoiron/sqlx)']
Test: ['(', 'https://github.com/jmoiron/sqlx', ')']

Wrong tokens: 
Generated: ['(https://github.com/mattn/go-oci8)']
Test: ['(', 'https://github.com/mattn/go-oci8', ')']

Wrong tokens: 
Generated: ['t(x int primary key)', ';']
Test: ['t', '(', 'x', 'int', 'primary key', ');']

Wrong tokens: 
Generated: ['primary', 'key']
Test: ['primary key']

Wrong tokens: 
Generated: ['func', 'tion']
Test: ['function']

Wrong tokens: 
Generated: ['f(x int)']
Test: ['f', '(', 'x', 'int', ')']

Wrong tokens: 
Generated: ['values(x)']
Test: ['values', '(', 'x', ')']

Wrong tokens: 
Generated: ['return', 'ing']
Test: ['returning']

Wrong tokens: 
Generated: ['ORA', '-', '14551']
Test: ['ORA-14551']

Wrong tokens: 
Generated: ['ORA', '-', '06512']
Test: ['ORA-06512']

Wrong tokens: 
Generated: ['f(:arg2)']
Test: ['f(arg2)', ';']

Wrong tokens: 
Generated: [';', 'end']
Test: ['end', ';']

Wrong tokens: 
Generated: ['Process(s string)']
Test: ['Process', '(', 's', 'string', ')']

Wrong tokens: 
Generated: ['TestProcess(t *testing.T)']
Test: ['TestProcess', '(', 't', '*', 'testing', '.', 'T', ')']

Wrong tokens: 
Generated: ['-cover:']
Test: ['-cover', ':']

Wrong tokens: 
Generated: ['"Lu");']
Test: ['``', 'Lu', "''", ')', ';']

Wrong tokens: 
Generated: ['set(a **myint)']
Test: ['set', '(', 'a', '**', 'myint', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['set( (**myint)(&k) ) // cannot convert &k (type **int)']
Test: ['set((**myint)(&k))', '//', 'can', 'not', 'convert', '&', 'k', '(', 'type', '**', 'int', ')']

Wrong tokens: 
Generated: ["'int'"]
Test: ["'", 'int', "'"]

Wrong tokens: 
Generated: ["'myint'"]
Test: ["'", 'myint', "'"]

Wrong tokens: 
Generated: ["'*int'"]
Test: ["'", '*int', "'"]

Wrong tokens: 
Generated: ["'*myint'"]
Test: ["'", '*myint', "'"]

Wrong tokens: 
Generated: ['It', "'s", "It's", 'when']
Test: ['.', 'It', "'s", 'when', 'you']

Wrong tokens: 
Generated: ['you', 'have', 'pointer', 'to', 'pointer', 'problems', 'I', "'ve"]
Test: ['have', 'pointer', 'to', 'pointer', 'problems', 'arise', '.', 'I']

Wrong tokens: 
Generated: ['.', "I've", 'been', 'stuck']
Test: ["'ve", 'been', 'stuck', 'on']

Wrong tokens: 
Generated: ['on', 'this', 'for', 'the', 'second', 'day', 'now', '.', 'Any', 'help']
Test: ['this', 'for', 'the', 'second', 'day', 'now', '.', 'Any', 'help', 'is']

Wrong tokens: 
Generated: ['Init(fn1 func(), fn2 func())']
Test: ['Init', '(', 'fn1', 'func', '(),', 'fn2', 'func', '())']

Wrong tokens: 
Generated: ['Add(c *Child)']
Test: ['Add', '(', 'c', '*', 'Child', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['website][1]']
Test: ['website', ']', '[', '1', ']']

Wrong tokens: 
Generated: ['[1]:']
Test: ['[', '1', ']', ':']

Wrong tokens: 
Generated: ['does', "n't", "doesn't", 'return', 'all', 'data']
Test: ['method', 'does', "n't", 'return', 'all', 'data', '.']

Wrong tokens: 
Generated: ['.', 'By', 'all', 'data']
Test: ['By', 'all', 'data', 'I']

Wrong tokens: 
Generated: ['I', 'mean', 'data', 'in']
Test: ['mean', 'data', 'in', 'a']

Wrong tokens: 
Generated: ['a', 'table', 'including', 'data', 'from', 'all', 'tables', 'related', 'to', 'it']
Test: ['table', 'including', 'data', 'from', 'all', 'tables', 'related', 'to', 'it', '.']

Wrong tokens: 
Generated: ['.', 'this', 'is', 'the', 'output', 'from', 'the', 'generated', 'i', "'m"]
Test: ['this', 'is', 'the', 'output', 'from', 'the', 'generated', 'code']

Wrong tokens: 
Generated: ["i'm"]
Test: ['i', "'m"]

Wrong tokens: 
Generated: ['here', "'s", "here's", 'my']
Test: ['.', 'here', "'s", 'my', 'code', ':']

Wrong tokens: 
Generated: ["'All'"]
Test: ["'", 'All', "'"]

Wrong tokens: 
Generated: ["'All'"]
Test: ["'", 'All', "'"]

Wrong tokens: 
Generated: ['FindAll(b []byte, n int)']
Test: ['FindAll', '(', 'b', '[]', 'byte', ',', 'n', 'int', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['golang.The']
Test: ['golang', '.', 'The']

Wrong tokens: 
Generated: ['os.Interrupt,while']
Test: ['os.Interrupt', ',', 'while']

Wrong tokens: 
Generated: ['normally.What']
Test: ['normally', '.', 'What']

Wrong tokens: 
Generated: ['sleep', '100000']
Test: ['sleep 100000']

Wrong tokens: 
Generated: ['Please', 'check', 'this', 'out', 'difference']
Test: ['In', 'the', 'later', 'condition', 'the', 'parent']

Wrong tokens: 
Generated: ['between', 'godep', 'update', 'and', 'godep']
Test: ['of', 'sleep 100000', 'will', 'be', 'the', 'init']

Wrong tokens: 
Generated: ['save', '.', 'I', 'usually', 'just']
Test: ['process', 'after', '20s', 'if']

Wrong tokens: 
Generated: ['use', 'godep']
Test: ['we', 'did', "n't"]

Wrong tokens: 
Generated: ['RSA_public_decrypt(pubKey *rsa.PublicKey, data []byte)']
Test: ['RSA_public_decrypt', '(', 'pubKey', '*', 'rsa', '.', 'PublicKey', ',', 'data', '[]', 'byte', ')']

Wrong tokens: 
Generated: ['Hello()']
Test: ['Hello', '()']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['Joker', '{', '"Peter"', '}']
Test: ['Joker{"Peter"}']

Wrong tokens: 
Generated: ['invokeHello(p Person)']
Test: ['invokeHello', '(', 'p', 'Person', ')']

Wrong tokens: 
Generated: ['Peter', 'says', ',', '"Hello!"']
Test: ['Peter says, "Hello!"']

Wrong tokens: 
Generated: ['Hello()']
Test: ['Hello', '()']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['invokeHello(p *Person)']
Test: ['invokeHello', '(', 'p', '*', 'Person', ')']

Wrong tokens: 
Generated: ['command', '-']
Test: ['#', 'command']

Wrong tokens: 
Generated: ['line', '-']
Test: ['-', 'line']

Wrong tokens: 
Generated: ['j (type *Joker)']
Test: ['j', '(', 'type', '*', 'Joker', ')']

Wrong tokens: 
Generated: ['undefined (type *Person has no field or method Hello)']
Test: ['undefined', '(', 'type', '*', 'Person', 'has', 'no', 'field', 'or', 'method', 'Hello', ')']

Wrong tokens: 
Generated: ['I', 'have', 'started', 'programming', 'in', 'Go']
Test: ['How', 'can', 'I', 'fix', 'the', 'second', 'program', '?']

Wrong tokens: 
Generated: ['it', "'s", "it's", 'not', 'finding', 'it', 'at', 'compile', 'time']
Test: ['but', 'it', "'s", 'not', 'finding', 'it', 'at', 'compile', 'time', ':']

Wrong tokens: 
Generated: ['cgo', 'pkg', '-']
Test: ['#', 'cgo', 'pkg']

Wrong tokens: 
Generated: ['config', ':']
Test: ['-', 'config']

Wrong tokens: 
Generated: ['Nothing(self, args *C.PyObject) (status *C.PyObject)']
Test: ['Nothing', '(', 'self', ',', 'args', '*', 'C', '.', 'PyObject', ')', '(', 'status', '*', 'C', '.', 'PyObject', ')']

Wrong tokens: 
Generated: ['/tmp/go-build293667616/example.com/mywrapper/_obj/_cgo_main.o:(.data.rel+0x0):']
Test: ['/tmp/go-build293667616/example.com/mywrapper/_obj/_cgo_main.o:(.data.rel+0x0)', ':']

Wrong tokens: 
Generated: ['Py', '*']
Test: ['Py*']

Wrong tokens: 
Generated: ['ca', "n't"]
Test: ['but', 'ca']

Wrong tokens: 
Generated: ["can't", 'find', 'Py_None', '.', 'The', 'Python', 'library']
Test: ["n't", 'find', 'Py_None', '.', 'The', 'Python', 'library', 'is']

Wrong tokens: 
Generated: ['is', 'obviously', 'being', 'What']
Test: ['obviously', 'being', 'loaded']

Wrong tokens: 
Generated: ["'s", '.', "What's", 'going']
Test: ['.', 'What', "'s", 'going', 'on']

Wrong tokens: 
Generated: ['I', "'m"]
Test: ['if', 'I']

Wrong tokens: 
Generated: ["I'm", 'approaching', 'this', 'correctly']
Test: ["'m", 'approaching', 'this', 'correctly', ',']

Wrong tokens: 
Generated: [',', 'here', 'is', 'some', 'example', 'code', 'that', 'exhibits', 'the', 'problem']
Test: ['here', 'is', 'some', 'example', 'code', 'that', 'exhibits', 'the', 'problem', ':']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['sdl', '.', 'CreateWindow', '(', '"test"', ',', 'sdl', '.', 'WINDOWPOS_UNDEFINED', ',', 'sdl', '.', 'WINDOWPOS_UNDEFINED', ',']
Test: ['sdl.CreateWindow("test", sdl.WINDOWPOS_UNDEFINED, sdl.WINDOWPOS_UNDEFINED,']

Wrong tokens: 
Generated: ['800', ',', '600', ',', 'sdl', '.', 'WINDOW_SHOWN', ')']
Test: ['800, 600, sdl.WINDOW_SHOWN)']

Wrong tokens: 
Generated: ['sdl', '.', 'CreateTexture', '(', 'renderer', ',', 'sdl', '.', 'PIXELFORMAT_ARGB8888', ',']
Test: ['sdl.CreateTexture(renderer, sdl.PIXELFORMAT_ARGB8888,']

Wrong tokens: 
Generated: ['sdl', '.', 'TEXTUREACCESS_STATIC', ',', '800', ',', '600', ')']
Test: ['sdl.TEXTUREACCESS_STATIC, 800, 600)']

Wrong tokens: 
Generated: ['do', "n't", "don't"]
Test: ['(', 'do', "n't", 'know']

Wrong tokens: 
Generated: ['know', 'Go']
Test: ['Go', ',', 'but']

Wrong tokens: 
Generated: [',', 'but']
Test: ['this']

Wrong tokens: 
Generated: ['output(bitbuf & 0xff)']
Test: ['output', '(', 'bitbuf', '&', '0xff', ')']

Wrong tokens: 
Generated: ['~30%']
Test: ['~30', '%']

Wrong tokens: 
Generated: ['"100000".']
Test: ['``', '100000', "''", '.']

Wrong tokens: 
Generated: ['go', 'routine']
Test: ['goroutine']

Wrong tokens: 
Generated: ['CallCommand(ch chan struct{}, id int)']
Test: ['CallCommand', '(', 'ch', 'chan', 'struct', '{},', 'id', 'int', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['ca', "n't"]
Test: ["can't"]

Wrong tokens: 
Generated: [':', ':', '1']
Test: ['::1']

Wrong tokens: 
Generated: ['(IPv6)']
Test: ['(', 'IPv6', ')']

Wrong tokens: 
Generated: ['(*']
Test: ['(', '*']

Wrong tokens: 
Generated: ['(127.0.0.1)']
Test: ['(', '127.0.0.1', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['"xml"']
Test: ['``', 'xml', "''"]

Wrong tokens: 
Generated: ['".']
Test: ['``', '.']

Wrong tokens: 
Generated: ['I', 'said', '"hello?"']
Test: ['I said "hello?"']

Wrong tokens: 
Generated: ['b', ':=', 'new(bytes.Buffer)']
Test: ['b := new(bytes.Buffer)']

Wrong tokens: 
Generated: ["I'll"]
Test: ['I', "'ll"]

Wrong tokens: 
Generated: ['Crawl(url string, depth int, fetcher Fetcher)']
Test: ['Crawl', '(', 'url', 'string', ',', 'depth', 'int', ',', 'fetcher', 'Fetcher', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['Crawl("http://golang.org/", 4, fetcher)']
Test: ['Crawl', '(', '"http://golang.org/"', ',', '4', ',', 'fetcher', ')']

Wrong tokens: 
Generated: ['http', '://', 'go', 'lang', '.', 'org/cmd/']
Test: ['http://golang.org/cmd/']

Wrong tokens: 
Generated: ['there', "'s", "there's", 'an', 'explanation', 'for', 'it', '.', 'Imagine', 'an', 'interface{}', 'variable', 'as', 'a', 'struct', 'composed', 'of', 'two', 'fields']
Test: ['but', 'there', "'s", 'an', 'explanation', 'for', 'it', '.', 'Imagine', 'an', 'interface{ }', 'variable', 'as', 'a', 'struct', 'composed', 'of', 'two', 'fields', ':', 'one']

Wrong tokens: 
Generated: [':', 'one', 'is', 'the']
Test: ['is', 'the', 'type']

Wrong tokens: 
Generated: ['type', 'and', 'another', 'is', 'the']
Test: ['and', 'another', 'is', 'the', 'data']

Wrong tokens: 
Generated: ['data', '.', '(', '[]int', 'and']
Test: ['.', '(', '[]int', 'and', 'nil', ')']

Wrong tokens: 
Generated: ['nil', ')', '.', 'Actually', ',', 'it', 'looks']
Test: ['.', 'Actually', ',', 'it', 'looks', 'just']

Wrong tokens: 
Generated: ['just']
Test: ['like']

Wrong tokens: 
Generated: ['like']
Test: ['that']

Wrong tokens: 
Generated: ['no(interface{[]int, nil})']
Test: ['no', '(', 'interface', '{[]', 'int', ',', 'nil', '})']

Total token number: 18198
Total wront token number: 2620
