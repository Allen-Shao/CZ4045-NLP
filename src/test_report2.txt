Wrong tokens: 
Generated: ["(can't)"]
Test: ['(', 'ca', "n't", ')']

Wrong tokens: 
Generated: ['(potentially)']
Test: ['(', 'potentially', ')']

Wrong tokens: 
Generated: ['"pain",']
Test: ['``', 'pain', "''", ',']

Wrong tokens: 
Generated: ['Ã¢\x80\x93']
Test: ['-']

Wrong tokens: 
Generated: ['#2)']
Test: ['#', '2', ')']

Wrong tokens: 
Generated: ['"add"']
Test: ['``', 'add', "''"]

Wrong tokens: 
Generated: ['(pagination,']
Test: ['(', 'pagination', ',']

Wrong tokens: 
Generated: ['etc', '.']
Test: ['etc.']

Wrong tokens: 
Generated: ['DB', '.', 'Find', '(&', 'User', '{},', '&', 'User', '{', 'Email', ':', 'email', '}).']
Test: ['DB.Find(&User{}, &User{Email:email})', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Create', '(', 'user', ').']
Test: ['DB.Create(user)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Find', '(', 'user', ',', '"ID = ?"', ',', 'userid', ').']
Test: ['DB.Find(user, "ID = ?", userid)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Delete', '(', 'user', ').']
Test: ['DB.Delete(user)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Find', '(', 'user', ',', '"ID = ?"', ',', 'userid', ').']
Test: ['DB.Find(user, "ID = ?", userid)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Model', '(', 'user', ').', 'Related', '(&', 'user', '.', 'Session', ').']
Test: ['DB.Model(user).Related(&user.Session)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Model', '(', 'user', ').', 'Related', '(&', 'user', '.', 'UserInfo', ').']
Test: ['DB.Model(user).Related(&user.UserInfo)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Model', '(', 'user', ').', 'Related', '(&', 'user', '.', 'Cook', ').']
Test: ['DB.Model(user).Related(&user.Cook)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Find', '(&', 'users', ').']
Test: ['DB.Find(&users)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Find', '(', 'user', ',', '"ID = ?"', ',', 'userid', ').']
Test: ['DB.Find(user, "ID = ?", userid)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Find', '(&', 'Role', '{}).']
Test: ['DB.Find(&Role{})', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Save', '(', 'user', ').']
Test: ['DB.Save(user)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Limit', '(', 'countPage', ').', 'Offset', '((', 'page', '*', 'countPage', ')', '-', 'countPage', ').', 'Find', '(&', 'result', ').']
Test: ['DB.Limit(countPage).Offset((page * countPage) - countPage).Find(&result)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Find', '(&', 'Category', '{},', '&', 'Category', '{', 'Name', ':', 'name', '}).']
Test: ['DB.Find(&Category{}, &Category{Name:name})', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Create', '(', 'cat', ').']
Test: ['DB.Create(cat)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Find', '(', 'cat', ',', '"ID = ?"', ',', 'catid', ').']
Test: ['DB.Find(cat, "ID = ?", catid)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Delete', '(', 'cat', ').']
Test: ['DB.Delete(cat)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Find', '(', 'cat', ',', '"ID = ?"', ',', 'catid', ').']
Test: ['DB.Find(cat, "ID = ?", catid)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Model', '(', 'cat', ').', 'Related', '(&', 'cat', '.', 'Post', ').']
Test: ['DB.Model(cat).Related(&cat.Post)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Find', '(&', 'cats', ').']
Test: ['DB.Find(&cats)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Find', '(', 'cat', ',', '"ID = ?"', ',', 'catid', ').']
Test: ['DB.Find(cat, "ID = ?", catid)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Save', '(', 'cat', ').']
Test: ['DB.Save(cat)', '.']

Wrong tokens: 
Generated: ['DB', '.', 'Limit', '(', 'countPage', ').', 'Offset', '((', 'page', '*', 'countPage', ')', '-', 'countPage', ').', 'Find', '(&', 'result', ').']
Test: ['DB.Limit(countPage).Offset((page * countPage) - countPage).Find(&result)', '.']

Wrong tokens: 
Generated: ['{{-']
Test: ['{', '{', '-']

Wrong tokens: 
Generated: ['-}}']
Test: ['-', '}', '}']

Wrong tokens: 
Generated: ['can', 't']
Test: ['ca', "n't"]

Wrong tokens: 
Generated: ['It']
Test: ['Which']

Wrong tokens: 
Generated: ['turns']
Test: ['somehow']

Wrong tokens: 
Generated: ['out']
Test: ['makes']

Wrong tokens: 
Generated: ['the']
Test: ['sense']

Wrong tokens: 
Generated: ['method']
Test: [',']

Wrong tokens: 
Generated: ['I']
Test: ['because']

Wrong tokens: 
Generated: ['needed']
Test: ['there']

Wrong tokens: 
Generated: ['was']
Test: ['are']

Wrong tokens: 
Generated: ['img.At(x']
Test: ['actually']

Wrong tokens: 
Generated: [',']
Test: ['no']

Wrong tokens: 
Generated: ['y).RGBA()']
Test: ['sources']

Wrong tokens: 
Generated: [',']
Test: ['in']

Wrong tokens: 
Generated: ['this']
Test: ['the']

Wrong tokens: 
Generated: ['returns']
Test: ['root']

Wrong tokens: 
Generated: ['those']
Test: ['directory']

Wrong tokens: 
Generated: ['values']
Test: ['and']

Wrong tokens: 
Generated: ['respectively']
Test: ['the']

Wrong tokens: 
Generated: ['http://golang.org/pkg/testing/#hdr-Examples']
Test: ['http', ':', '//golang.org/pkg/testing/', '#', 'hdr-Examples']

Wrong tokens: 
Generated: ['https://godoc.org/github.com/creack/multio#example-Multiplexer--ReadWriter']
Test: ['https', ':', '//godoc.org/github.com/creack/multio', '#', 'example-Multiplexer', '--', 'ReadWriter']

Wrong tokens: 
Generated: ['https://github.com/creack/multio/blob/master/example_test.go']
Test: ['https', ':', '//github.com/creack/multio/blob/master/example_test.go']

Wrong tokens: 
Generated: ['(exactly)']
Test: ['(', 'exactly', ')']

Wrong tokens: 
Generated: ['GetColour()']
Test: ['GetColour', '()']

Wrong tokens: 
Generated: ['(printing)']
Test: ['(', 'printing', ')']

Wrong tokens: 
Generated: ['ID()']
Test: ['ID', '()']

Wrong tokens: 
Generated: ["'s"]
Test: ['s', 'often']

Wrong tokens: 
Generated: ['often']
Test: ['appropriate']

Wrong tokens: 
Generated: ['appropriate']
Test: ['to']

Wrong tokens: 
Generated: ['to']
Test: ['do']

Wrong tokens: 
Generated: ['do']
Test: ['so']

Wrong tokens: 
Generated: ['so']
Test: [',']

Wrong tokens: 
Generated: [',']
Test: ['but']

Wrong tokens: 
Generated: ['but']
Test: ['it']

Wrong tokens: 
Generated: ['it']
Test: ["'s"]

Wrong tokens: 
Generated: ["'s"]
Test: ['neither']

Wrong tokens: 
Generated: ['neither']
Test: ['idiomatic']

Wrong tokens: 
Generated: ['idiomatic']
Test: ['nor']

Wrong tokens: 
Generated: ['nor']
Test: ['necessary']

Wrong tokens: 
Generated: ['necessary']
Test: ['to']

Wrong tokens: 
Generated: ['to']
Test: ['put']

Wrong tokens: 
Generated: ['put']
Test: ['Get']

Wrong tokens: 
Generated: ['Get']
Test: ['into']

Wrong tokens: 
Generated: ['into']
Test: ['the']

Wrong tokens: 
Generated: ['the']
Test: ['getter']

Wrong tokens: 
Generated: ['getter']
Test: ["'s"]

Wrong tokens: 
Generated: ["'s"]
Test: ['name']

Wrong tokens: 
Generated: ['name']
Test: ['.']

Wrong tokens: 
Generated: ['.']
Test: ['If']

Wrong tokens: 
Generated: ['If']
Test: ['you']

Wrong tokens: 
Generated: ['you']
Test: ['have']

Wrong tokens: 
Generated: ['have']
Test: ['a', 'field']

Wrong tokens: 
Generated: ['a', 'field']
Test: ['called']

Wrong tokens: 
Generated: ['called']
Test: ['owner']

Wrong tokens: 
Generated: ['owner']
Test: ['(']

Wrong tokens: 
Generated: ['(']
Test: ['lower']

Wrong tokens: 
Generated: ['lower']
Test: ['case']

Wrong tokens: 
Generated: ['case']
Test: [',']

Wrong tokens: 
Generated: [',']
Test: ['unexported']

Wrong tokens: 
Generated: ['unexported']
Test: [')']

Wrong tokens: 
Generated: [')']
Test: [',']

Wrong tokens: 
Generated: [',']
Test: ['the']

Wrong tokens: 
Generated: ['the']
Test: ['getter']

Wrong tokens: 
Generated: ['getter']
Test: ['method']

Wrong tokens: 
Generated: ['method']
Test: ['should']

Wrong tokens: 
Generated: ['should']
Test: ['be']

Wrong tokens: 
Generated: ['be']
Test: ['called']

Wrong tokens: 
Generated: ['called']
Test: ['Owner']

Wrong tokens: 
Generated: ['Owner']
Test: ['(']

Wrong tokens: 
Generated: ['(']
Test: ['upper']

Wrong tokens: 
Generated: ['upper']
Test: ['case']

Wrong tokens: 
Generated: ['case']
Test: [',']

Wrong tokens: 
Generated: [',']
Test: ['exported']

Wrong tokens: 
Generated: ['exported']
Test: [')']

Wrong tokens: 
Generated: [')']
Test: [',']

Wrong tokens: 
Generated: [',']
Test: ['not']

Wrong tokens: 
Generated: ['not']
Test: ['GetOwner']

Wrong tokens: 
Generated: ['GetOwner']
Test: ['.']

Wrong tokens: 
Generated: ['.']
Test: ['The']

Wrong tokens: 
Generated: ['The']
Test: ['use']

Wrong tokens: 
Generated: ['use']
Test: ['of']

Wrong tokens: 
Generated: ['of']
Test: ['upper-case']

Wrong tokens: 
Generated: ['upper-case']
Test: ['names']

Wrong tokens: 
Generated: ['names']
Test: ['for']

Wrong tokens: 
Generated: ['for']
Test: ['export']

Wrong tokens: 
Generated: ['export']
Test: ['provides']

Wrong tokens: 
Generated: ['provides']
Test: ['the']

Wrong tokens: 
Generated: ['the']
Test: ['hook']

Wrong tokens: 
Generated: ['hook']
Test: ['to']

Wrong tokens: 
Generated: ['to']
Test: ['discriminate']

Wrong tokens: 
Generated: ['discriminate']
Test: ['the']

Wrong tokens: 
Generated: ['the']
Test: ['field']

Wrong tokens: 
Generated: ['field']
Test: ['from']

Wrong tokens: 
Generated: ['from']
Test: ['the']

Wrong tokens: 
Generated: ['the']
Test: ['method']

Wrong tokens: 
Generated: ['method']
Test: ['.']

Wrong tokens: 
Generated: ['.']
Test: ['A']

Wrong tokens: 
Generated: ['A']
Test: ['setter']

Wrong tokens: 
Generated: ['setter']
Test: ['function']

Wrong tokens: 
Generated: ['function']
Test: [',']

Wrong tokens: 
Generated: [',']
Test: ['if']

Wrong tokens: 
Generated: ['if']
Test: ['needed']

Wrong tokens: 
Generated: ['needed']
Test: [',']

Wrong tokens: 
Generated: [',']
Test: ['will']

Wrong tokens: 
Generated: ['will']
Test: ['likely']

Wrong tokens: 
Generated: ['likely']
Test: ['be']

Wrong tokens: 
Generated: ['be']
Test: ['called']

Wrong tokens: 
Generated: ['called']
Test: ['SetOwner']

Wrong tokens: 
Generated: ['SetOwner']
Test: ['.']

Wrong tokens: 
Generated: ['.']
Test: ['Both']

Wrong tokens: 
Generated: ['Both']
Test: ['names']

Wrong tokens: 
Generated: ['names']
Test: ['read']

Wrong tokens: 
Generated: ['read']
Test: ['well']

Wrong tokens: 
Generated: ['well']
Test: ['in']

Wrong tokens: 
Generated: ['in']
Test: ['practice']

Wrong tokens: 
Generated: ['language.For']
Test: ['language', '.', 'For']

Wrong tokens: 
Generated: ['-', '-']
Test: ['--']

Wrong tokens: 
Generated: ['Signature".Please']
Test: ['Signature', "''", '.', 'Please']

Wrong tokens: 
Generated: ['it.I']
Test: ['it', '.', 'I']

Wrong tokens: 
Generated: ['golang-nuts.I']
Test: ['golang-nuts', '.', 'I']

Wrong tokens: 
Generated: ['here,Please']
Test: ['here', ',', 'Please']

Wrong tokens: 
Generated: ['armored,pripwd']
Test: ['armored', ',', 'pripwd']

Wrong tokens: 
Generated: ['pubkey+sign']
Test: ['pubkey', '+', 'sign']

Wrong tokens: 
Generated: ['getPri(asciiPri, pripwd)']
Test: ['getPri', '(', 'asciiPri', ',', 'pripwd', ')']

Wrong tokens: 
Generated: ['packet.PublicKey']
Test: ['packet', '.', 'PublicKey']

Wrong tokens: 
Generated: ['openpgp.Entity']
Test: ['openpgp', '.', 'Entity']

Wrong tokens: 
Generated: ['Public', 'Key']
Test: ['Public Key']

Wrong tokens: 
Generated: ['packet.PrivateKEy']
Test: ['packet', '.', 'PrivateKEy']

Wrong tokens: 
Generated: ['openpgp.Entity']
Test: ['openpgp', '.', 'Entity']

Wrong tokens: 
Generated: ['Private', 'Key']
Test: ['Private Key']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['*', 'http2.Transport']
Test: ['*http2.Transport']

Wrong tokens: 
Generated: ['*', 'http.RoundTripper']
Test: ['*http.RoundTripper']

Wrong tokens: 
Generated: ['*', 'http.RoundTripper']
Test: ['*http.RoundTripper']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['tmp1.DialTLS']
Test: ['tmp1', '.', 'DialTLS']

Wrong tokens: 
Generated: ['http.RoundTripper']
Test: ['http', '.', 'RoundTripper']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['fmt.Printf("%+v']
Test: ['fmt', '.', 'Printf', '(', '``', '%', '+v']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['&{DialTLS:']
Test: ['&', '{', 'DialTLS', ':']

Wrong tokens: 
Generated: ['TLSClientConfig:0xc8203ec8c0']
Test: ['TLSClientConfig', ':', '0xc8203ec8c0']

Wrong tokens: 
Generated: ['DisableCompression:false']
Test: ['DisableCompression', ':', 'false']

Wrong tokens: 
Generated: ['MaxHeaderListSize:0']
Test: ['MaxHeaderListSize', ':', '0']

Wrong tokens: 
Generated: ['connPoolOnce:{m:{state:0']
Test: ['connPoolOnce', ':', '{', 'm', ':', '{', 'state', ':', '0']

Wrong tokens: 
Generated: ['sema:0']
Test: ['sema', ':', '0']

Wrong tokens: 
Generated: ['done:0']
Test: ['done', ':', '0']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['"non-standard"']
Test: ['``', 'non-standard', "''"]

Wrong tokens: 
Generated: [').']
Test: [')', '.']

Wrong tokens: 
Generated: ['-->']
Test: ['--', '>']

Wrong tokens: 
Generated: ["'1'", 'means']
Test: [", '1', "]

Wrong tokens: 
Generated: ['next']
Test: ['means']

Wrong tokens: 
Generated: ['field']
Test: ['next']

Wrong tokens: 
Generated: ['is']
Test: ['field']

Wrong tokens: 
Generated: ['NOT']
Test: ['is']

Wrong tokens: 
Generated: ['32bit']
Test: ['32', 'bit']

Wrong tokens: 
Generated: ['Version=0100']
Test: ['Version', '=', '0100']

Wrong tokens: 
Generated: ['Subversion=10']
Test: ['Subversion', '=', '10']

Wrong tokens: 
Generated: ['Optional=1']
Test: ['Optional', '=', '1']

Wrong tokens: 
Generated: ['0', '0000']
Test: ['0 0000']

Wrong tokens: 
Generated: ['msg.Length']
Test: ['msg', '.', 'Length']

Wrong tokens: 
Generated: ['msg.Type']
Test: ['msg', '.', 'Type']

Wrong tokens: 
Generated: ['msg.Version']
Test: ['msg', '.', 'Version']

Wrong tokens: 
Generated: ['msg.Subversion']
Test: ['msg', '.', 'Subversion']

Wrong tokens: 
Generated: ['msg.Optional']
Test: ['msg', '.', 'Optional']

Wrong tokens: 
Generated: ['msg.NodeName']
Test: ['msg', '.', 'NodeName']

Wrong tokens: 
Generated: ['msg.ANumber']
Test: ['msg', '.', 'ANumber']

Wrong tokens: 
Generated: ['rows', '.', 'Next', '()']
Test: ['rows.Next()']

Wrong tokens: 
Generated: ["I'd"]
Test: ['I', "'d"]

Wrong tokens: 
Generated: ['Time', 'zone']
Test: ['Time zone']

Wrong tokens: 
Generated: ['"switch"']
Test: ['``', 'switch', "''"]

Wrong tokens: 
Generated: ['time', 'zone']
Test: ['time zone']

Wrong tokens: 
Generated: ['time', 'zone']
Test: ['time zone']

Wrong tokens: 
Generated: ['+', '01']
Test: ['+01']

Wrong tokens: 
Generated: ['Reader.ReadString()']
Test: ['Reader.ReadString', '(', ')']

Wrong tokens: 
Generated: ["r.ReadString('\\n')"]
Test: ['r.ReadString', '(', "'\\n'", ')']

Wrong tokens: 
Generated: ['strings', '.', 'Split', '(', 'line', ',', '","', ')']
Test: ['strings.Split(line, ",")']

Wrong tokens: 
Generated: ['IntId()']
Test: ['IntId', '(', ')']

Wrong tokens: 
Generated: ['"".']
Test: ["''", '.']

Wrong tokens: 
Generated: ['The']
Test: ['allowed']

Wrong tokens: 
Generated: ['fmt']
Test: ['in']

Wrong tokens: 
Generated: ['package']
Test: ['slice']

Wrong tokens: 
Generated: ['has']
Test: ['literals']

Wrong tokens: 
Generated: ['project', "'s"]
Test: ["project's"]

Wrong tokens: 
Generated: ['ca', "n't"]
Test: ["can't"]

Wrong tokens: 
Generated: ['When', 'I']
Test: ['When I']

Wrong tokens: 
Generated: ['I', "'m"]
Test: ["I'm"]

Wrong tokens: 
Generated: ['[]Foo']
Test: ['[', ']', 'Foo']

Wrong tokens: 
Generated: ['[]Reader']
Test: ['[', ']', 'Reader']

Wrong tokens: 
Generated: ['(or,']
Test: ['(', 'or', ',']

Wrong tokens: 
Generated: ['-', 'cover']
Test: ['-cover']

Wrong tokens: 
Generated: ['len', '(', 'auth_code', ')']
Test: ['len(auth_code)']

Wrong tokens: 
Generated: ['-', '1']
Test: ['-1']

Wrong tokens: 
Generated: ['Google', '+']
Test: ['Google+']

Wrong tokens: 
Generated: ['(provider)']
Test: ['(', 'provider', ')']

Wrong tokens: 
Generated: ['t', '.', 'Next', '(&', 'ua', ');']
Test: ['t.Next(&ua)', ';']

Wrong tokens: 
Generated: ['2016', '-', '0', '8', '-', '0', '8']
Test: ['2016-08-08']

Wrong tokens: 
Generated: ['05', ':', '0', '9', ':', '52', ',', '894']
Test: ['05:09:52,894']

Wrong tokens: 
Generated: ['api_server', '.', 'py', ':', '651', ']']
Test: ['api_server.py:651]']

Wrong tokens: 
Generated: ['"index.yaml"']
Test: ['``', 'index.yaml', "''"]

Wrong tokens: 
Generated: ['t', '.', 'Next', '(', 'te', ');']
Test: ['t.Next(te)', ';']

Wrong tokens: 
Generated: ['02', ':', '11', ':', '36']
Test: ['02:11:36']

Wrong tokens: 
Generated: ['02', ':', '11', ':', '36']
Test: ['02:11:36']

Wrong tokens: 
Generated: ['02', ':', '11', ':', '37']
Test: ['02:11:37']

Wrong tokens: 
Generated: ['2016/08/09', '02', ':', '11', ':', '37']
Test: ['2016/08/0902:11:37']

Wrong tokens: 
Generated: ['02', ':', '11', ':', '37']
Test: ['02:11:37']

Wrong tokens: 
Generated: ['chan', 'nel']
Test: ['channel']

Wrong tokens: 
Generated: ['chan', 'nel']
Test: ['channel']

Wrong tokens: 
Generated: ['chan', 'nel']
Test: ['channel']

Wrong tokens: 
Generated: ['may/']
Test: ['may', '/']

Wrong tokens: 
Generated: ['return', 's']
Test: ['returns']

Wrong tokens: 
Generated: ['"right"']
Test: ['``', 'right', "''"]

Wrong tokens: 
Generated: ['*File)']
Test: ['*File', ')']

Wrong tokens: 
Generated: ['Read(b']
Test: ['Read', '(', 'b']

Wrong tokens: 
Generated: ['[]byte)']
Test: ['[', ']', 'byte', ')']

Wrong tokens: 
Generated: ['cannot']
Test: ['can', 'not']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: [':)']
Test: [':', ')']

Wrong tokens: 
Generated: ['atomic', '.', 'LoadUint32', '(&', 's', '.', 'state', ')']
Test: ['atomic.LoadUint32(&s.state)']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '52']
Test: ['03:17:50']

Wrong tokens: 
Generated: ['3', 'rd']
Test: ['3rd']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '56']
Test: ['03:17:56']

Wrong tokens: 
Generated: ['3', 'rd']
Test: ['3rd']

Wrong tokens: 
Generated: ['+', 'v']
Test: ['+v']

Wrong tokens: 
Generated: ["I'd"]
Test: ['I', "'d"]

Wrong tokens: 
Generated: ['[', '[', '2d3h', '3h', ']', ']']
Test: ['[[2d3h 3h]]']

Wrong tokens: 
Generated: ['https://github.com/login/oauth/access_token']
Test: ['http://github.com/login/oauth/access_token']

Wrong tokens: 
Generated: ['go', 'req']
Test: ['goreq']

Wrong tokens: 
Generated: ['Data', '::', 'Dumper', '::', 'Dumper()']
Test: ['Data::Dumper::Dumper()']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['"box"']
Test: ['``', 'box', "''"]

Wrong tokens: 
Generated: ['"x"']
Test: ['``', 'x', "''"]

Wrong tokens: 
Generated: ['"box"']
Test: ['``', 'box', "''"]

Wrong tokens: 
Generated: ['(and,']
Test: ['(', 'and', ',']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['4', '.']
Test: ['4.']

Wrong tokens: 
Generated: ['1', '.']
Test: ['1.']

Wrong tokens: 
Generated: ['i.e', '.']
Test: ['i.e.']

Wrong tokens: 
Generated: ['<--']
Test: ['<', '--']

Wrong tokens: 
Generated: ['"hello"']
Test: ['``', 'hello', "''"]

Wrong tokens: 
Generated: ['"world"']
Test: ['``', 'world', "''"]

Wrong tokens: 
Generated: ['"Status"']
Test: ['``', 'Status', "''"]

Wrong tokens: 
Generated: ['len(p.Children)']
Test: ['len', '(', 'p', '.', 'Children', ')']

Wrong tokens: 
Generated: ['"proper".']
Test: ['``', 'proper', "''", '.']

Wrong tokens: 
Generated: ['[]*']
Test: ['[]', '*']

Wrong tokens: 
Generated: ['cPost', '.', 'Find', '(', 'bson', '.', 'M', '{', '"_id"', ':', 'bson', '.', 'M', '{', '"$gte"', ':', 'fromId', ',', '"$lt"', ':', 'toId', '}}).', 'All', '(&', 'posts', ');']
Test: ['cPost.Find(bson.M{"_id": bson.M{"$gte": fromId, "$lt": toId}}).All(&posts)', ';']

Wrong tokens: 
Generated: ['"pre-first",']
Test: ['``', 'pre-first', "''", ',']

Wrong tokens: 
Generated: ['*', 'os.File']
Test: ['*os.File']

Wrong tokens: 
Generated: ['*', 'os.File']
Test: ['*os.File']

Wrong tokens: 
Generated: ['[]byte.']
Test: ['[ ]byte', '.']

Wrong tokens: 
Generated: ['io', '.', 'Copy', '(', 'w', ',', 'file', ');']
Test: ['io.Copy(w, file)', ';']

Wrong tokens: 
Generated: ['w', '.', 'Close', '();']
Test: ['w.Close()', ';']

Wrong tokens: 
Generated: ['file', '.', 'Seek', '(', '0', ',', '0', ');']
Test: ['file.Seek(0, 0)', ';']

Wrong tokens: 
Generated: ['io', '.', 'Copy', '(', 'file', ',', 'b', ');']
Test: ['io.Copy(file, b)', ';']

Wrong tokens: 
Generated: ['file', '.', 'Truncate', '(', 'int64', '(', 'b', '.', 'Len', '()));']
Test: ['file.Truncate(int64(b.Len()))', ';']

Wrong tokens: 
Generated: ['*bytes.Buffer)']
Test: ['*bytes.Buffer', ')']

Wrong tokens: 
Generated: ['cannot']
Test: ['can', 'not']

Wrong tokens: 
Generated: ['*os.File,']
Test: ['*os.File', ',']

Wrong tokens: 
Generated: ['io', '.', 'Copy', '(', 'w', ',', 'file', ');']
Test: ['io.Copy(w, file)', ';']

Wrong tokens: 
Generated: ['w', '.', 'Close', '();']
Test: ['w.Close()', ';']

Wrong tokens: 
Generated: ['#2:']
Test: ['#', '2', ':']

Wrong tokens: 
Generated: ['"work"']
Test: ['``', 'work', "''"]

Wrong tokens: 
Generated: ['"stream"']
Test: ['``', 'stream', "''"]

Wrong tokens: 
Generated: ['io', '.', 'Copy', '(', 'gz', ',', 'file', ');']
Test: ['io.Copy(gz, file)', ';']

Wrong tokens: 
Generated: ['"fired"']
Test: ['``', 'fired', "''"]

Wrong tokens: 
Generated: ['"happens-before"']
Test: ['``', 'happens-before', "''"]

Wrong tokens: 
Generated: ['cannot']
Test: ['can', 'not']

Wrong tokens: 
Generated: ['The', 'GOROOT']
Test: ['The GOROOT']

Wrong tokens: 
Generated: ['In', 'LiteIDE']
Test: ['In LiteIDE']

Wrong tokens: 
Generated: ["'s"]
Test: ["'", 's']

Wrong tokens: 
Generated: ["'s"]
Test: ["'", 's']

Wrong tokens: 
Generated: ['Build', 'Output']
Test: ['Build Output']

Wrong tokens: 
Generated: ['My', 'LiteIDE']
Test: ['My LiteIDE']

Wrong tokens: 
Generated: ['gnome', '-', 'terminal']
Test: ['gnome-terminal']

Wrong tokens: 
Generated: ['xfce4', '-', 'terminal']
Test: ['xfce4-terminal']

Wrong tokens: 
Generated: ['"Output:"']
Test: ['``', 'Output', ':', "''"]

Wrong tokens: 
Generated: [').']
Test: [')', '.']

Wrong tokens: 
Generated: ['#2:']
Test: ['#', '2', ':']

Wrong tokens: 
Generated: ['boolInt', '()']
Test: ['boolInt( )']

Wrong tokens: 
Generated: ['ast', '.', 'Inspect', '(', 'f', ',', 'func', '(', 'n', 'ast', '.', 'Node', ')']
Test: ['ast.Inspect(f, func(n ast.Node)']

Wrong tokens: 
Generated: ['"contractions"']
Test: ['``', 'contractions', "''"]

Wrong tokens: 
Generated: ['type', 'switch']
Test: ['type switch']

Wrong tokens: 
Generated: ['(https://github.com/jmoiron/sqlx)']
Test: ['(', 'https://github.com/jmoiron/sqlx', ')']

Wrong tokens: 
Generated: ['(https://github.com/mattn/go-oci8)']
Test: ['(', 'https://github.com/mattn/go-oci8', ')']

Wrong tokens: 
Generated: ['primary', 'key']
Test: ['primary key']

Wrong tokens: 
Generated: ['func', 'tion']
Test: ['function']

Wrong tokens: 
Generated: ['f(x int)']
Test: ['f', '(', 'x', 'int', ')']

Wrong tokens: 
Generated: ['return', 'ing']
Test: ['returning']

Wrong tokens: 
Generated: ['ORA', '-', '14551']
Test: ['ORA-14551']

Wrong tokens: 
Generated: ['ORA', '-', '06512']
Test: ['ORA-06512']

Wrong tokens: 
Generated: ['f(:arg2)']
Test: ['f(arg2)']

Wrong tokens: 
Generated: ['len', '(', 's', ')']
Test: ['len(s)']

Wrong tokens: 
Generated: ['Process', '(', '"123"', ');']
Test: ['Process("123")', ';']

Wrong tokens: 
Generated: ['Process', '(', '"123456"', ');']
Test: ['Process("123456")', ';']

Wrong tokens: 
Generated: ['"Lu");']
Test: ['``', 'Lu', "''", ')', ';']

Wrong tokens: 
Generated: ['set( (**myint)(&k) ) // cannot convert &k (type **int)']
Test: ['set((**myint)(&k))', '//', 'can', 'not', 'convert', '&', 'k', '(', 'type', '**', 'int', ')']

Wrong tokens: 
Generated: ["'int'"]
Test: ["'", 'int', "'"]

Wrong tokens: 
Generated: ["'myint'"]
Test: ["'", 'myint', "'"]

Wrong tokens: 
Generated: ["'*int'"]
Test: ["'", '*int', "'"]

Wrong tokens: 
Generated: ["'*myint'"]
Test: ["'", '*myint', "'"]

Wrong tokens: 
Generated: ['website][1]']
Test: ['website', ']', '[', '1', ']']

Wrong tokens: 
Generated: ['[1]:']
Test: ['[', '1', ']', ':']

Wrong tokens: 
Generated: ["'All'"]
Test: ["'", 'All', "'"]

Wrong tokens: 
Generated: ["'All'"]
Test: ["'", 'All', "'"]

Wrong tokens: 
Generated: ['FindAll(b []byte, n int)']
Test: ['FindAll', '(', 'b', '[]', 'byte', ',', 'n', 'int', ')']

Wrong tokens: 
Generated: ['golang.The']
Test: ['golang', '.', 'The']

Wrong tokens: 
Generated: ['os.Interrupt,while']
Test: ['os.Interrupt', ',', 'while']

Wrong tokens: 
Generated: ['normally.What']
Test: ['normally', '.', 'What']

Wrong tokens: 
Generated: ['sleep', '100000']
Test: ['sleep 100000']

Wrong tokens: 
Generated: ['len', '(', 'out', ');']
Test: ['len(out)', ';']

Wrong tokens: 
Generated: ['len', '(', 'out', ')']
Test: ['len(out)']

Wrong tokens: 
Generated: ['j (type *Joker)']
Test: ['j', '(', 'type', '*', 'Joker', ')']

Wrong tokens: 
Generated: ['/tmp/go-build293667616/example.com/mywrapper/_obj/_cgo_main.o:(.data.rel+0x0):']
Test: ['/tmp/go-build293667616/example.com/mywrapper/_obj/_cgo_main.o:(.data.rel+0x0)', ':']

Wrong tokens: 
Generated: ['Py', '*']
Test: ['Py*']

Wrong tokens: 
Generated: ['"100000".']
Test: ['"100000"', '.']

Wrong tokens: 
Generated: ['go', 'routine']
Test: ['goroutine']

Wrong tokens: 
Generated: [':', ':', '1']
Test: ['::1']

Wrong tokens: 
Generated: ['(IPv6)']
Test: ['(', 'IPv6', ')']

Wrong tokens: 
Generated: ['(*']
Test: ['(', '*']

Wrong tokens: 
Generated: ['(127.0.0.1)']
Test: ['(', '127.0.0.1', ')']

Wrong tokens: 
Generated: ['template', '.', 'New', '(', '""', ').', 'Funcs', '(', 'template', '.', 'FuncMap', '{', '"xml"', ':', 'func', '(', 's', 'string', ')']
Test: ['template.New("").Funcs(template.FuncMap{"xml": func(s string)']

Wrong tokens: 
Generated: ['I', 'said', '"hello?"']
Test: ['I said "hello?"']

Total token number: 
18320
Total wrong token number: 
681