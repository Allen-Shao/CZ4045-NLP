Wrong tokens: 
Generated: ['append(m[1], "one")']
Test: ['append', '(', 'm', '[', '1', '],', '"one"', ')']

Wrong tokens: 
Generated: ['append(m[2], "two")']
Test: ['append', '(', 'm', '[', '2', '],', '"two"', ')']

Wrong tokens: 
Generated: ['append(m[1], "three")']
Test: ['append', '(', 'm', '[', '1', '],', '"three"', ')']

Wrong tokens: 
Generated: ["(can't)"]
Test: ['(', 'ca', "n't", ')']

Wrong tokens: 
Generated: ['(potentially)']
Test: ['(', 'potentially', ')']

Wrong tokens: 
Generated: ['"pain",']
Test: ['``', 'pain', "''", ',']

Wrong tokens: 
Generated: ['append(*s, "one")']
Test: ['append', '(*', 's', ',', '"one"', ')']

Wrong tokens: 
Generated: ['append(*s, "two")']
Test: ['append', '(*', 's', ',', '"two"', ')']

Wrong tokens: 
Generated: ['append(*s, "three")']
Test: ['append', '(*', 's', ',', '"three"', ')']

Wrong tokens: 
Generated: ['Ã¢\x80\x93', 'acceptable']
Test: ['-', 'acceptable', 'in']

Wrong tokens: 
Generated: ['in', 'most', 'cases', '.']
Test: ['most', 'cases', '.', 'An']

Wrong tokens: 
Generated: ['An', 'even', 'faster', 'solution', 'may', 'use', 'another', 'map', '(']
Test: ['even', 'faster', 'solution', 'may', 'use', 'another', 'map', '(', 'as']

Wrong tokens: 
Generated: ['as', 'a', 'set', ',', 'see', 'example']
Test: ['a', 'set', ',', 'see', 'example', '#', '1']

Wrong tokens: 
Generated: ['#', '1', 'and', 'example']
Test: ['and', 'example', '#', '2']

Wrong tokens: 
Generated: ['#2)']
Test: [')', 'as']

Wrong tokens: 
Generated: ['as', 'the', 'value', 'type', ',', 'which', 'will']
Test: ['the', 'value', 'type', ',', 'which', 'will', 'be']

Wrong tokens: 
Generated: ['be', 'O(1)', 'complexity', 'for', 'removals', 'too', '.', 'Cool', '.']
Test: ['O(1)', 'complexity', 'for', 'removals', 'too', '.', 'Cool', '.', 'It']

Wrong tokens: 
Generated: ['"add"']
Test: ['``', 'add', "''"]

Wrong tokens: 
Generated: ['append([]string{"MY INSERTED TEXT HERE"}, lines[i:]...)...)']
Test: ['append', '([]', 'string', '{', '"MY INSERTED TEXT HERE"', '},', 'lines', '[', 'i', ':]...)...)']

Wrong tokens: 
Generated: ['append(lines, "")']
Test: ['append', '(', 'lines', ',', '""', ')']

Wrong tokens: 
Generated: ['copy(lines[i+1:], lines[i:])']
Test: ['copy', '(', 'lines', '[', 'i', '+', '1', ':],', 'lines', '[', 'i', ':])']

Wrong tokens: 
Generated: ['(pagination,']
Test: ['(', 'pagination', ',']

Wrong tokens: 
Generated: ['etc', '.']
Test: ['etc.']

Wrong tokens: 
Generated: ['------------------------------------------------------------------']
Test: ['--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--']

Wrong tokens: 
Generated: ['----------------------------------------------------------------------']
Test: ['--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--']

Wrong tokens: 
Generated: ['UserCreate(email, password, username string, role int)']
Test: ['UserCreate', '(', 'email', ',', 'password', ',', 'username', 'string', ',', 'role', 'int', ')']

Wrong tokens: 
Generated: ['int64(role)']
Test: ['int64', '(', 'role', ')']

Wrong tokens: 
Generated: ['UserDelete(userid int64)']
Test: ['UserDelete', '(', 'userid', 'int64', ')']

Wrong tokens: 
Generated: ['UserRead(userid int64)']
Test: ['UserRead', '(', 'userid', 'int64', ')']

Wrong tokens: 
Generated: ['UserReadAll()']
Test: ['UserReadAll', '()']

Wrong tokens: 
Generated: ['UserUpdate(userid int64, uu *UserUpdateStruct)']
Test: ['UserUpdate', '(', 'userid', 'int64', ',', 'uu', '*', 'UserUpdateStruct', ')']

Wrong tokens: 
Generated: ['UserPaginate(page, countPage int)']
Test: ['UserPaginate', '(', 'page', ',', 'countPage', 'int', ')']

Wrong tokens: 
Generated: ['-------------------------------------------------------------------']
Test: ['--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '-']

Wrong tokens: 
Generated: ['--------------------------------------------------------------------']
Test: ['--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--']

Wrong tokens: 
Generated: ['CategoryCreate(name string)']
Test: ['CategoryCreate', '(', 'name', 'string', ')']

Wrong tokens: 
Generated: ['CategoryDelete(catid int64)']
Test: ['CategoryDelete', '(', 'catid', 'int64', ')']

Wrong tokens: 
Generated: ['CategoryRead(catid int64)']
Test: ['CategoryRead', '(', 'catid', 'int64', ')']

Wrong tokens: 
Generated: ['CategoryReadAll()']
Test: ['CategoryReadAll', '()']

Wrong tokens: 
Generated: ['CategoryUpdate(catid int64, name string)']
Test: ['CategoryUpdate', '(', 'catid', 'int64', ',', 'name', 'string', ')']

Wrong tokens: 
Generated: ['CategoryPaginate(page, countPage int)']
Test: ['CategoryPaginate', '(', 'page', ',', 'countPage', 'int', ')']

Wrong tokens: 
Generated: ['Create(name, email, password, local string, termOf bool)']
Test: ['Create', '(', 'name', ',', 'email', ',', 'password', ',', 'local', 'string', ',', 'termOf', 'bool', ')']

Wrong tokens: 
Generated: ['len(errMsg)']
Test: ['len', '(', 'errMsg', ')']

Wrong tokens: 
Generated: ['"foo":']
Test: ['``', 'foo', "''", ':']

Wrong tokens: 
Generated: ['{{-']
Test: ['{', '{', '-']

Wrong tokens: 
Generated: ['-}}']
Test: ['-', '}', '}']

Wrong tokens: 
Generated: ['"-"']
Test: ['"', '-', '"']

Wrong tokens: 
Generated: ['can', 't', 'load', 'package', ':']
Test: ['ca', "n't", 'load', 'package']

Wrong tokens: 
Generated: ['package', 'prometheus', ':']
Test: [':', 'package', 'prometheus']

Wrong tokens: 
Generated: ['It', 'turns', 'out', 'the', 'method', 'I', 'needed', 'was', 'img.At(x', ',']
Test: ['Which', 'somehow', 'makes', 'sense', ',', 'because', 'there', 'are']

Wrong tokens: 
Generated: ['y).RGBA()', ',']
Test: ['actually', 'no']

Wrong tokens: 
Generated: ['this', 'returns', 'those']
Test: ['sources', 'in', 'the', 'root']

Wrong tokens: 
Generated: ['panic("Error, socket not opened")']
Test: ['panic', '(', '"Error, socket not opened"', ')']

Wrong tokens: 
Generated: ['http://golang.org/pkg/testing/#hdr-Examples']
Test: ['http', ':', '//golang.org/pkg/testing/', '#', 'hdr-Examples']

Wrong tokens: 
Generated: ['https://godoc.org/github.com/creack/multio#example-Multiplexer--ReadWriter']
Test: ['https', ':', '//godoc.org/github.com/creack/multio', '#', 'example-Multiplexer', '--', 'ReadWriter']

Wrong tokens: 
Generated: ['https://github.com/creack/multio/blob/master/example_test.go']
Test: ['https', ':', '//github.com/creack/multio/blob/master/example_test.go']

Wrong tokens: 
Generated: ['(exactly)']
Test: ['(', 'exactly', ')']

Wrong tokens: 
Generated: ['http://play.golang.org/p/hnOhh8242i']
Test: ['http', ':', '//play.golang.org/p/hnOhh8242i']

Wrong tokens: 
Generated: ['handler(w http.ResponseWriter, r *http.Request)']
Test: ['handler', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['closure1()']
Test: ['closure1', '()']

Wrong tokens: 
Generated: ['closure1()']
Test: ['closure1', '()']

Wrong tokens: 
Generated: ['closure2(i)']
Test: ['closure2', '(', 'i', ')']

Wrong tokens: 
Generated: ['GetColour()']
Test: ['GetColour', '()']

Wrong tokens: 
Generated: ['GetColour()']
Test: ['GetColour', '()']

Wrong tokens: 
Generated: ['PrintColour(a Animalizer)']
Test: ['PrintColour', '(', 'a', 'Animalizer', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['(printing)']
Test: ['(', 'printing', ')']

Wrong tokens: 
Generated: ['Save(d interface{})']
Test: ['Save', '(', 'd', 'interface', '{})']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['Save(Admin{})']
Test: ['Save', '(', 'Admin', '{})']

Wrong tokens: 
Generated: ['Save(d interface{})']
Test: ['Save', '(', 'd', 'interface', '{})']

Wrong tokens: 
Generated: ['Save(i interface{}, id int)']
Test: ['Save', '(', 'i', 'interface', '{},', 'id', 'int', ')']

Wrong tokens: 
Generated: ['ID()']
Test: ['ID', '()']

Wrong tokens: 
Generated: ['ID()']
Test: ['ID', '()']

Wrong tokens: 
Generated: ['setID(id int)']
Test: ['setID', '(', 'id', 'int', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['Save(d Model)']
Test: ['Save', '(', 'd', 'Model', ')']

Wrong tokens: 
Generated: ['Save(i Model)']
Test: ['Save', '(', 'i', 'Model', ')']

Wrong tokens: 
Generated: ["'s", 'often', 'appropriate', 'to', 'do', 'so']
Test: ['s', 'often', 'appropriate', 'to', 'do', 'so', ',']

Wrong tokens: 
Generated: [',', 'but', 'it', "'s", 'neither', 'idiomatic', 'nor', 'necessary', 'to', 'put', 'Get', 'into', 'the', 'getter', "'s", 'name']
Test: ['but', 'it', "'s", 'neither', 'idiomatic', 'nor', 'necessary', 'to', 'put', 'Get', 'into', 'the', 'getter', "'s", 'name', '.']

Wrong tokens: 
Generated: ['.', 'If', 'you', 'have']
Test: ['If', 'you', 'have', 'a']

Wrong tokens: 
Generated: ['a', 'field', 'called', 'owner']
Test: ['field', 'called', 'owner', '(']

Wrong tokens: 
Generated: ['(', 'lower', 'case']
Test: ['lower', 'case', ',']

Wrong tokens: 
Generated: [',', 'unexported']
Test: ['unexported', ')']

Wrong tokens: 
Generated: [')']
Test: [',']

Wrong tokens: 
Generated: [',', 'the', 'getter', 'method', 'should', 'be', 'called', 'Owner']
Test: ['the', 'getter', 'method', 'should', 'be', 'called', 'Owner', '(']

Wrong tokens: 
Generated: ['(', 'upper', 'case']
Test: ['upper', 'case', ',']

Wrong tokens: 
Generated: [',', 'exported']
Test: ['exported', ')']

Wrong tokens: 
Generated: [')']
Test: [',']

Wrong tokens: 
Generated: [',', 'not', 'GetOwner']
Test: ['not', 'GetOwner', '.']

Wrong tokens: 
Generated: ['.', 'The', 'use', 'of', 'upper-case', 'names', 'for', 'export', 'provides', 'the', 'hook', 'to', 'discriminate', 'the', 'field', 'from', 'the', 'method']
Test: ['The', 'use', 'of', 'upper-case', 'names', 'for', 'export', 'provides', 'the', 'hook', 'to', 'discriminate', 'the', 'field', 'from', 'the', 'method', '.']

Wrong tokens: 
Generated: ['.']
Test: ['A']

Wrong tokens: 
Generated: ['A', 'setter', 'function']
Test: ['setter', 'function', ',']

Wrong tokens: 
Generated: [',', 'if', 'needed']
Test: ['if', 'needed', ',']

Wrong tokens: 
Generated: [',', 'will', 'likely', 'be', 'called', 'SetOwner']
Test: ['will', 'likely', 'be', 'called', 'SetOwner', '.']

Wrong tokens: 
Generated: ['.', 'Both', 'names', 'read', 'well', 'in', 'practice']
Test: ['Both', 'names', 'read', 'well', 'in', 'practice', ':']

Wrong tokens: 
Generated: ['language.For']
Test: ['language', '.', 'For']

Wrong tokens: 
Generated: ['-', '-']
Test: ['--']

Wrong tokens: 
Generated: ['Signature".Please']
Test: ['Signature', "''", '.', 'Please']

Wrong tokens: 
Generated: ['it.I']
Test: ['it', '.', 'I']

Wrong tokens: 
Generated: ['golang-nuts.I']
Test: ['golang-nuts', '.', 'I']

Wrong tokens: 
Generated: ['here,Please']
Test: ['here', ',', 'Please']

Wrong tokens: 
Generated: ['armored,pripwd']
Test: ['armored', ',', 'pripwd']

Wrong tokens: 
Generated: ['pubkey+sign']
Test: ['pubkey', '+', 'sign']

Wrong tokens: 
Generated: ['SignPubKeyPKS(asciiPub string, asciiPri string, pripwd string) (asciiSignedKey string)']
Test: ['SignPubKeyPKS', '(', 'asciiPub', 'string', ',', 'asciiPri', 'string', ',', 'pripwd', 'string', ')', '(', 'asciiSignedKey', 'string', ')']

Wrong tokens: 
Generated: ['getPri(asciiPri, pripwd)']
Test: ['getPri', '(', 'asciiPri', ',', 'pripwd', ')']

Wrong tokens: 
Generated: ['packet.PublicKey']
Test: ['packet', '.', 'PublicKey']

Wrong tokens: 
Generated: ['openpgp.Entity']
Test: ['openpgp', '.', 'Entity']

Wrong tokens: 
Generated: ['Public', 'Key']
Test: ['Public Key']

Wrong tokens: 
Generated: ['getPub(asciiPub string) (pubKey packet.PublicKey, retEntity openpgp.Entity)']
Test: ['getPub', '(', 'asciiPub', 'string', ')', '(', 'pubKey', 'packet', '.', 'PublicKey', ',', 'retEntity', 'openpgp', '.', 'Entity', ')']

Wrong tokens: 
Generated: ['packet.PrivateKEy']
Test: ['packet', '.', 'PrivateKEy']

Wrong tokens: 
Generated: ['openpgp.Entity']
Test: ['openpgp', '.', 'Entity']

Wrong tokens: 
Generated: ['Private', 'Key']
Test: ['Private Key']

Wrong tokens: 
Generated: ['getPri(asciiPri string, pripwd string) (priKey packet.PrivateKey, priEnt openpgp.Entity)']
Test: ['getPri', '(', 'asciiPri', 'string', ',', 'pripwd', 'string', ')', '(', 'priKey', 'packet', '.', 'PrivateKey', ',', 'priEnt', 'openpgp', '.', 'Entity', ')']

Wrong tokens: 
Generated: ['openpgp.Entity']
Test: ['openpgp', '.', 'Entity']

Wrong tokens: 
Generated: ['PubEntToAsciiArmor(pubEnt openpgp.Entity) (asciiEntity string)']
Test: ['PubEntToAsciiArmor', '(', 'pubEnt', 'openpgp', '.', 'Entity', ')', '(', 'asciiEntity', 'string', ')']

Wrong tokens: 
Generated: ['go', 'tWriter.String()']
Test: ['gotWriter.String()']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['tmp1.DialTLS']
Test: ['tmp1', '.', 'DialTLS']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['*', 'http2.Transport']
Test: ['*http2.Transport']

Wrong tokens: 
Generated: ['*', 'http.RoundTripper']
Test: ['*http.RoundTripper']

Wrong tokens: 
Generated: ['*', 'http.RoundTripper']
Test: ['*http.RoundTripper']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['tmp1.DialTLS']
Test: ['tmp1', '.', 'DialTLS']

Wrong tokens: 
Generated: ['http.RoundTripper']
Test: ['http', '.', 'RoundTripper']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['fmt.Printf("%+v']
Test: ['fmt', '.', 'Printf', '(', '``', '%', '+v']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['&{DialTLS:']
Test: ['&', '{', 'DialTLS', ':']

Wrong tokens: 
Generated: ['TLSClientConfig:0xc8203ec8c0']
Test: ['TLSClientConfig', ':', '0xc8203ec8c0']

Wrong tokens: 
Generated: ['DisableCompression:false']
Test: ['DisableCompression', ':', 'false']

Wrong tokens: 
Generated: ['MaxHeaderListSize:0']
Test: ['MaxHeaderListSize', ':', '0']

Wrong tokens: 
Generated: ['connPoolOnce:{m:{state:0']
Test: ['connPoolOnce', ':', '{', 'm', ':', '{', 'state', ':', '0']

Wrong tokens: 
Generated: ['sema:0']
Test: ['sema', ':', '0']

Wrong tokens: 
Generated: ['done:0']
Test: ['done', ':', '0']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['undefined (type http.RoundTripper has no field or method DialTLS)']
Test: ['undefined', '(', 'type', 'http', '.', 'RoundTripper', 'has', 'no', 'field', 'or', 'method', 'DialTLS', ')']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['"non-standard"']
Test: ['``', 'non-standard', "''"]

Wrong tokens: 
Generated: [').']
Test: [')', '.']

Wrong tokens: 
Generated: ['-->']
Test: ['--', '>']

Wrong tokens: 
Generated: ["'1'", 'means', 'next', 'field', 'is']
Test: [", '1', ", 'means', 'next', 'field']

Wrong tokens: 
Generated: ['32bit']
Test: ['32', 'bit']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['Version=0100']
Test: ['Version', '=', '0100']

Wrong tokens: 
Generated: ['Subversion=10']
Test: ['Subversion', '=', '10']

Wrong tokens: 
Generated: ['Optional=1']
Test: ['Optional', '=', '1']

Wrong tokens: 
Generated: ['0', '0000']
Test: ['0 0000']

Wrong tokens: 
Generated: ['msg.Length']
Test: ['msg', '.', 'Length']

Wrong tokens: 
Generated: ['msg.Type']
Test: ['msg', '.', 'Type']

Wrong tokens: 
Generated: ['msg.Version']
Test: ['msg', '.', 'Version']

Wrong tokens: 
Generated: ['msg.Subversion']
Test: ['msg', '.', 'Subversion']

Wrong tokens: 
Generated: ['msg.Optional']
Test: ['msg', '.', 'Optional']

Wrong tokens: 
Generated: ['msg.NodeName']
Test: ['msg', '.', 'NodeName']

Wrong tokens: 
Generated: ['msg.ANumber']
Test: ['msg', '.', 'ANumber']

Wrong tokens: 
Generated: [';)']
Test: [';', ')']

Wrong tokens: 
Generated: ['|', 'id', '|', 'fname', '|', 'lname', '|', 'uname', '|', 'email', '|', 'contact', '|']
Test: ['| id | fname     | lname    | uname    | email                         | contact      |']

Wrong tokens: 
Generated: ['set (0.00 sec)']
Test: ['set', '(', '0.00', 'sec', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['sql.Open("mysql', '"', ',', '":@tcp(127.0.0.1:)/?charset=utf8"', ')']
Test: ['sql.Open("mysql", ":@tcp(127.0.0.1:)/?charset=utf8" )']

Wrong tokens: 
Generated: ['[', 'Rishikesh', 'Sandeep', 'Darshan', 'Surendra', 'Mukesh', ']']
Test: ['[Rishikesh Sandeep Darshan Surendra Mukesh]']

Wrong tokens: 
Generated: ["I'd"]
Test: ['I', "'d"]

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['getS(sC chan string)']
Test: ['getS', '(', 'sC', 'chan', 'string', ')']

Wrong tokens: 
Generated: ['getC(sC chan string, cC chan string)']
Test: ['getC', '(', 'sC', 'chan', 'string', ',', 'cC', 'chan', 'string', ')']

Wrong tokens: 
Generated: ['Time', 'zone']
Test: ['Time zone']

Wrong tokens: 
Generated: ['"switch"']
Test: ['``', 'switch', "''"]

Wrong tokens: 
Generated: ['time', 'zone']
Test: ['time zone']

Wrong tokens: 
Generated: ['time', 'zone']
Test: ['time zone']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['+', '01']
Test: ['+01']

Wrong tokens: 
Generated: ['Format(e *log.Entry) ([]byte, error)']
Test: ['Format', '(', 'e', '*', 'log', '.', 'Entry', ')', '([]', 'byte', ',', 'error', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['--import.']
Test: ['--', 'import', '.']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['Reader.ReadString()']
Test: ['Reader.ReadString', '(', ')']

Wrong tokens: 
Generated: ["r.ReadString('\\n')"]
Test: ['r.ReadString', '(', "'\\n'", ')']

Wrong tokens: 
Generated: ['average(xs []float64)']
Test: ['average', '(', 'xs', '[]', 'float64', ')']

Wrong tokens: 
Generated: ['IntId()']
Test: ['IntId', '(', ')']

Wrong tokens: 
Generated: ['"".']
Test: ['``', "''"]

Wrong tokens: 
Generated: ['You', 'can', 'read', 'more', 'about', 'zero', 'values', 'here', ':']
Test: ['.', 'You', 'can', 'read', 'more', 'about', 'zero', 'values', 'here']

Wrong tokens: 
Generated: ['project', "'s"]
Test: ["project's"]

Wrong tokens: 
Generated: ['ca', "n't"]
Test: ["can't"]

Wrong tokens: 
Generated: ['When', 'I']
Test: ['When I']

Wrong tokens: 
Generated: ['I', "'m"]
Test: ["I'm"]

Wrong tokens: 
Generated: ['[]Foo']
Test: ['[', ']', 'Foo']

Wrong tokens: 
Generated: ['[]Reader']
Test: ['[', ']', 'Reader']

Wrong tokens: 
Generated: ['Copy', 'or', 'edit', 'a']
Test: ['#', 'Copy', 'or', 'edit']

Wrong tokens: 
Generated: ['I']
Test: ['#']

Wrong tokens: 
Generated: ['(or,']
Test: ['(', 'or', ',']

Wrong tokens: 
Generated: ['-', 'cover']
Test: ['-cover']

Wrong tokens: 
Generated: ['-', '1']
Test: ['-1']

Wrong tokens: 
Generated: ['Google', '+']
Test: ['Google+']

Wrong tokens: 
Generated: ['https', '://', 'www', '.', 'go', 'ogleapis', '.', 'com/auth/plus.profile.emails.read']
Test: ['https://www.googleapis.com/auth/plus.profile.emails.read']

Wrong tokens: 
Generated: ['https', '://', 'www', '.', 'go', 'ogleapis', '.', 'com/auth/plus.login']
Test: ['https://www.googleapis.com/auth/plus.login']

Wrong tokens: 
Generated: ['https', '://', 'www', '.', 'go', 'ogleapis', '.', 'com/auth/plus.me']
Test: ['https://www.googleapis.com/auth/plus.me']

Wrong tokens: 
Generated: ['https', '://', 'www', '.', 'go', 'ogleapis', '.', 'com/plus/v1/people/me']
Test: ['https://www.googleapis.com/plus/v1/people/me']

Wrong tokens: 
Generated: ['https', '://', 'www', '.', 'go', 'ogleapis', '.', 'com/oauth2/v3/userinfo']
Test: ['https://www.googleapis.com/oauth2/v3/userinfo']

Wrong tokens: 
Generated: ['(provider)']
Test: ['(', 'provider', ')']

Wrong tokens: 
Generated: ['2016', '-', '0', '8', '-', '0', '8']
Test: ['2016-08-08']

Wrong tokens: 
Generated: ['05', ':', '0', '9', ':', '52', ',', '894']
Test: ['05:09:52,894']

Wrong tokens: 
Generated: ['api_server', '.', 'py', ':', '651', ']']
Test: ['api_server.py:651]']

Wrong tokens: 
Generated: ['"index.yaml"']
Test: ['``', 'index.yaml', "''"]

Wrong tokens: 
Generated: ['02', ':', '11', ':', '36']
Test: ['02:11:36']

Wrong tokens: 
Generated: ['DEBUG', ':', 'Putting', '.']
Test: ['DEBUG: Putting.']

Wrong tokens: 
Generated: ['02', ':', '11', ':', '36']
Test: ['02:11:36']

Wrong tokens: 
Generated: ['DEBUG', ':', 'Waiting', '.']
Test: ['DEBUG: Waiting.']

Wrong tokens: 
Generated: ['02', ':', '11', ':', '37']
Test: ['02:11:37']

Wrong tokens: 
Generated: ['2016/08/09', '02', ':', '11', ':', '37']
Test: ['2016/08/0902:11:37']

Wrong tokens: 
Generated: ['DEBUG', ':', 'Running', 'query', '.']
Test: ['DEBUG: Running query.']

Wrong tokens: 
Generated: ['02', ':', '11', ':', '37']
Test: ['02:11:37']

Wrong tokens: 
Generated: ['chan', 'nel']
Test: ['channel']

Wrong tokens: 
Generated: ['chan', 'nel']
Test: ['channel']

Wrong tokens: 
Generated: ['chan', 'nel']
Test: ['channel']

Wrong tokens: 
Generated: ['may/']
Test: ['may', '/']

Wrong tokens: 
Generated: ['"right"']
Test: ['``', 'right', "''"]

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['readFromChannel(c chan int, ti <-chan time.Time)']
Test: ['readFromChannel', '(', 'c', 'chan', 'int', ',', 'ti', '<-', 'chan', 'time', '.', 'Time', ')']

Wrong tokens: 
Generated: ['*File)']
Test: ['*File', ')']

Wrong tokens: 
Generated: ['Read(b']
Test: ['Read', '(', 'b']

Wrong tokens: 
Generated: ['[]byte)']
Test: ['[', ']', 'byte', ')']

Wrong tokens: 
Generated: ['cannot']
Test: ['can', 'not']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['Thanks', '~']
Test: ['Thanks~']

Wrong tokens: 
Generated: [':)']
Test: [':', ')']

Wrong tokens: 
Generated: ['New()']
Test: ['New', '()']

Wrong tokens: 
Generated: ['sender()']
Test: ['sender', '()']

Wrong tokens: 
Generated: ['s', '.', 'c', '.', 'L.Lock()']
Test: ['s.c.L.Lock()']

Wrong tokens: 
Generated: ['s', '.', 'c', '.', 'L.Unlock()']
Test: ['s.c.L.Unlock()']

Wrong tokens: 
Generated: ['s', '.', 'c.Wait()']
Test: ['s.c.Wait()']

Wrong tokens: 
Generated: ['s', '.', 'c', '.', 'L.Unlock()']
Test: ['s.c.L.Unlock()']

Wrong tokens: 
Generated: ['Reconnect()']
Test: ['Reconnect', '()']

Wrong tokens: 
Generated: ['s', '.', 'c.Broadcast()']
Test: ['s.c.Broadcast()']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['c', ':=', 'make(chan string, 2)']
Test: ['c := make(chan string, 2)']

Wrong tokens: 
Generated: ['return', 'CurrentTime()']
Test: ['returnCurrentTime()']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '50']
Test: ['03:17:50']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '50']
Test: ['03:17:50']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '50']
Test: ['03:17:50']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '52']
Test: ['03:17:52']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '52']
Test: ['03:17:52']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '52']
Test: ['03:17:52']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '50']
Test: ['03:17:50']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '50']
Test: ['03:17:50']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '52']
Test: ['03:17:50']

Wrong tokens: 
Generated: ['3', 'rd']
Test: ['3rd']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '54']
Test: ['03:17:54']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '54']
Test: ['03:17:54']

Wrong tokens: 
Generated: ['2013', '-', '02', '-', '27']
Test: ['2013-02-27']

Wrong tokens: 
Generated: ['03', ':', '17', ':', '56']
Test: ['03:17:56']

Wrong tokens: 
Generated: ['3', 'rd']
Test: ['3rd']

Wrong tokens: 
Generated: ['+', 'v']
Test: ['+v']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ["I'd"]
Test: ['I', "'d"]

Wrong tokens: 
Generated: ['[[', '2', 'd3h', '3', 'h', ']', '[', '3', 'h5d', '5', 'd', ']]']
Test: ['[[2d3h 3h] [3h5d 5d]]']

Wrong tokens: 
Generated: ['[', '[', '2d3h', '3h', ']', ']']
Test: ['[[2d3h 3h]]']

Wrong tokens: 
Generated: ['https://github.com/login/oauth/access_token', 'with', 'code']
Test: ['http://github.com/login/oauth/access_token', 'with', 'code', ',']

Wrong tokens: 
Generated: [',', 'client_id', 'and', 'client_secret']
Test: ['client_id', 'and', 'client_secret', '.']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['go', 'req']
Test: ['goreq']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['Data', '::', 'Dumper', '::', 'Dumper()']
Test: ['Data::Dumper::Dumper()']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ["I'll"]
Test: ['I', "'ll"]

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['"box"']
Test: ['``', 'box', "''"]

Wrong tokens: 
Generated: ['"x"']
Test: ['``', 'x', "''"]

Wrong tokens: 
Generated: ['"box"']
Test: ['``', 'box', "''"]

Wrong tokens: 
Generated: ['(and,']
Test: ['(', 'and', ',']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['...and:']
Test: ['...', 'and', ':']

Wrong tokens: 
Generated: ['print', 'x', ',', 'id(x)']
Test: ['print x, id(x)']

Wrong tokens: 
Generated: ['xrange(1000000000)', ':']
Test: ['xrange', '(', '1000000000', '):']

Wrong tokens: 
Generated: ['print', '"Done."']
Test: ['print "Done."']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ["you'll"]
Test: ['you', "'ll"]

Wrong tokens: 
Generated: ['4', '.']
Test: ['4.']

Wrong tokens: 
Generated: ['1', '.']
Test: ['1.']

Wrong tokens: 
Generated: ['i.e', '.']
Test: ['i.e.']

Wrong tokens: 
Generated: ['<--']
Test: ['<', '--']

Wrong tokens: 
Generated: ['TotalLength()']
Test: ['TotalLength', '()']

Wrong tokens: 
Generated: ['"hello"']
Test: ['``', 'hello', "''"]

Wrong tokens: 
Generated: ['"world"']
Test: ['``', 'world', "''"]

Wrong tokens: 
Generated: ['say(s string)']
Test: ['say', '(', 's', 'string', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['say("world")']
Test: ['say', '(', '"world"', ')']

Wrong tokens: 
Generated: ['"Status"']
Test: ['``', 'Status', "''"]

Wrong tokens: 
Generated: ['Add()']
Test: ['Add', '()']

Wrong tokens: 
Generated: ['len(p.Children)']
Test: ['len', '(', 'p', '.', 'Children', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['"proper".']
Test: ['``', 'proper', "''", '.']

Wrong tokens: 
Generated: ['Add(fn1 func(), fn2 func())']
Test: ['Add', '(', 'fn1', 'func', '(),', 'fn2', 'func', '())']

Wrong tokens: 
Generated: ['[]*']
Test: ['[]', '*']

Wrong tokens: 
Generated: ['"pre-first",']
Test: ['``', 'pre-first', "''", ',']

Wrong tokens: 
Generated: ['*', 'os.File']
Test: ['*os.File']

Wrong tokens: 
Generated: ['*', 'os.File']
Test: ['*os.File']

Wrong tokens: 
Generated: ['[]byte.']
Test: ['[ ]byte', '.']

Wrong tokens: 
Generated: ['*bytes.Buffer)']
Test: ['*bytes.Buffer', ')']

Wrong tokens: 
Generated: ['cannot']
Test: ['can', 'not']

Wrong tokens: 
Generated: ['*os.File,']
Test: ['*os.File', ',']

Wrong tokens: 
Generated: ['#2:']
Test: ['#', '2', ':']

Wrong tokens: 
Generated: ['"work"']
Test: ['``', 'work', "''"]

Wrong tokens: 
Generated: ['"stream"']
Test: ['``', 'stream', "''"]

Wrong tokens: 
Generated: ['myHandler(w http.ResponseWriter, r *http.Request)']
Test: ['myHandler', '(', 'w', 'http', '.', 'ResponseWriter', ',', 'r', '*', 'http', '.', 'Request', ')']

Wrong tokens: 
Generated: ['"fired"']
Test: ['``', 'fired', "''"]

Wrong tokens: 
Generated: ['"happens-before"']
Test: ['``', 'happens-before', "''"]

Wrong tokens: 
Generated: ['cannot']
Test: ['can', 'not']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['The', 'GOROOT']
Test: ['The GOROOT']

Wrong tokens: 
Generated: ['In', 'LiteIDE']
Test: ['In LiteIDE']

Wrong tokens: 
Generated: ["'s"]
Test: ["'", 's']

Wrong tokens: 
Generated: ["'s"]
Test: ["'", 's']

Wrong tokens: 
Generated: ['Build', 'Output']
Test: ['Build Output']

Wrong tokens: 
Generated: ['My', 'LiteIDE']
Test: ['My LiteIDE']

Wrong tokens: 
Generated: ['GOBIN', '=']
Test: ['#', 'GOBIN']

Wrong tokens: 
Generated: ['gnome', '-', 'terminal']
Test: ['gnome-terminal']

Wrong tokens: 
Generated: ['xfce4', '-', 'terminal']
Test: ['xfce4-terminal']

Wrong tokens: 
Generated: ['"Output:"']
Test: ['``', 'Output', ':', "''"]

Wrong tokens: 
Generated: [':)']
Test: [':', ')']

Wrong tokens: 
Generated: [').']
Test: [')', '.']

Wrong tokens: 
Generated: ['#2:']
Test: ['#', '2', ':']

Wrong tokens: 
Generated: ['readType(decl *ast.GenDecl, spec *ast.TypeSpec)']
Test: ['readType', '(', 'decl', '*', 'ast', '.', 'GenDecl', ',', 'spec', '*', 'ast', '.', 'TypeSpec', ')']

Wrong tokens: 
Generated: ['*ast.GenDecl:']
Test: ['*ast.GenDecl', ':']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '3', ':', '1', ':', 'GenDecl', '%!', 's(*ast.CommentGroup=)']
Test: ['main.go:3:1:    GenDecl %!s(*ast.CommentGroup=)']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '11', ':', '1', ':', 'GenDecl', '&{[%!', 's(*ast.Comment=&{69 // FirstType docs})', ']}']
Test: ['main.go:11:1:   GenDecl &{[%!s(*ast.Comment=&{69 // FirstType docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '11', ':', '6', ':', 'TypeSpec', 'FirstType', '%!', 's(*ast.CommentGroup=)']
Test: ['main.go:11:6:   TypeSpec FirstType  %!s(*ast.CommentGroup=)']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '13', ':', '2', ':', 'Field', '[', 'FirstMember', ']', '&{[%!', 's(*ast.Comment=&{112 // FirstMember docs})', ']}']
Test: ['main.go:13:2:   Field [FirstMember] &{[%!s(*ast.Comment=&{112 // FirstMember docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '17', ':', '1', ':', 'GenDecl', '&{[%!', 's(*ast.Comment=&{155 // SecondType docs})', ']}']
Test: ['main.go:17:1:   GenDecl &{[%!s(*ast.Comment=&{155 // SecondType docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '17', ':', '6', ':', 'TypeSpec', 'SecondType', '%!', 's(*ast.CommentGroup=)']
Test: ['main.go:17:6:   TypeSpec SecondType %!s(*ast.CommentGroup=)']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '19', ':', '2', ':', 'Field', '[', 'SecondMember', ']', '&{[%!', 's(*ast.Comment=&{200 // SecondMember docs})', ']}']
Test: ['main.go:19:2:   Field [SecondMember]    &{[%!s(*ast.Comment=&{200 // SecondMember docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '23', ':', '1', ':', 'FuncDecl', 'main', '&{[%!', 's(*ast.Comment=&{245 // Main docs})', ']}']
Test: ['main.go:23:1:   FuncDecl main   &{[%!s(*ast.Comment=&{245 // Main docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '33', ':', '23', ':', 'Field', '[', 'n', ']', '%!', 's(*ast.CommentGroup=)']
Test: ['main.go:33:23:  Field [n]   %!s(*ast.CommentGroup=)']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '33', ':', '35', ':', 'Field', '[]', '%!', 's(*ast.CommentGroup=)']
Test: ['main.go:33:35:  Field []    %!s(*ast.CommentGroup=)']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '3', ':', '1', ':', 'GenDecl', '%!', 's(*ast.CommentGroup=)']
Test: ['main.go:3:1:    GenDecl %!s(*ast.CommentGroup=)']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '11', ':', '1', ':', 'GenDecl', '&{[%!', 's(*ast.Comment=&{69 // This documents FirstType and SecondType together})', ']}']
Test: ['main.go:11:1:   GenDecl &{[%!s(*ast.Comment=&{69 // This documents FirstType and SecondType together})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '13', ':', '2', ':', 'TypeSpec', 'FirstType', '&{[%!', 's(*ast.Comment=&{129 // FirstType docs})', ']}']
Test: ['main.go:13:2:   TypeSpec FirstType  &{[%!s(*ast.Comment=&{129 // FirstType docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '15', ':', '3', ':', 'Field', '[', 'FirstMember', ']', '&{[%!', 's(*ast.Comment=&{169 // FirstMember docs})', ']}']
Test: ['main.go:15:3:   Field [FirstMember] &{[%!s(*ast.Comment=&{169 // FirstMember docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '19', ':', '2', ':', 'TypeSpec', 'SecondType', '&{[%!', 's(*ast.Comment=&{215 // SecondType docs})', ']}']
Test: ['main.go:19:2:   TypeSpec SecondType &{[%!s(*ast.Comment=&{215 // SecondType docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '21', ':', '3', ':', 'Field', '[', 'SecondMember', ']', '&{[%!', 's(*ast.Comment=&{257 // SecondMember docs})', ']}']
Test: ['main.go:21:3:   Field [SecondMember]    &{[%!s(*ast.Comment=&{257 // SecondMember docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '26', ':', '1', ':', 'FuncDecl', 'main', '&{[%!', 's(*ast.Comment=&{306 // Main docs})', ']}']
Test: ['main.go:26:1:   FuncDecl main   &{[%!s(*ast.Comment=&{306 // Main docs})]}']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '36', ':', '23', ':', 'Field', '[', 'n', ']', '%!', 's(*ast.CommentGroup=)']
Test: ['main.go:36:23:  Field [n]   %!s(*ast.CommentGroup=)']

Wrong tokens: 
Generated: ['main', '.', 'go', ':', '36', ':', '35', ':', 'Field', '[]', '%!', 's(*ast.CommentGroup=)']
Test: ['main.go:36:35:  Field []    %!s(*ast.CommentGroup=)']

Wrong tokens: 
Generated: ['"contractions"']
Test: ['``', 'contractions', "''"]

Wrong tokens: 
Generated: ['type', 'switch']
Test: ['type switch']

Wrong tokens: 
Generated: ['(https://github.com/jmoiron/sqlx)']
Test: ['(', 'https://github.com/jmoiron/sqlx', ')']

Wrong tokens: 
Generated: ['(https://github.com/mattn/go-oci8)']
Test: ['(', 'https://github.com/mattn/go-oci8', ')']

Wrong tokens: 
Generated: ['t(x int primary key)', ';']
Test: ['t', '(', 'x', 'int', 'primary key', ');']

Wrong tokens: 
Generated: ['primary', 'key']
Test: ['primary key']

Wrong tokens: 
Generated: ['func', 'tion']
Test: ['function']

Wrong tokens: 
Generated: ['f(x int)']
Test: ['f', '(', 'x', 'int', ')']

Wrong tokens: 
Generated: ['values(x)']
Test: ['values', '(', 'x', ')']

Wrong tokens: 
Generated: ['return', 'ing']
Test: ['returning']

Wrong tokens: 
Generated: ['ORA', '-', '14551']
Test: ['ORA-14551']

Wrong tokens: 
Generated: ['ORA', '-', '06512']
Test: ['ORA-06512']

Wrong tokens: 
Generated: ['f(:arg2)']
Test: ['f(arg2)', ';']

Wrong tokens: 
Generated: [';', 'end']
Test: ['end', ';']

Wrong tokens: 
Generated: ['Process(s string)']
Test: ['Process', '(', 's', 'string', ')']

Wrong tokens: 
Generated: ['TestProcess(t *testing.T)']
Test: ['TestProcess', '(', 't', '*', 'testing', '.', 'T', ')']

Wrong tokens: 
Generated: ['-cover:']
Test: ['-cover', ':']

Wrong tokens: 
Generated: ['"Lu");']
Test: ['``', 'Lu', "''", ')', ';']

Wrong tokens: 
Generated: ['set(a **myint)']
Test: ['set', '(', 'a', '**', 'myint', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['set( (**myint)(&k) ) // cannot convert &k (type **int)']
Test: ['set((**myint)(&k))', '//', 'can', 'not', 'convert', '&', 'k', '(', 'type', '**', 'int', ')']

Wrong tokens: 
Generated: ["'int'"]
Test: ["'", 'int', "'"]

Wrong tokens: 
Generated: ["'myint'"]
Test: ["'", 'myint', "'"]

Wrong tokens: 
Generated: ["'*int'"]
Test: ["'", '*int', "'"]

Wrong tokens: 
Generated: ["'*myint'"]
Test: ["'", '*myint', "'"]

Wrong tokens: 
Generated: ['Init(fn1 func(), fn2 func())']
Test: ['Init', '(', 'fn1', 'func', '(),', 'fn2', 'func', '())']

Wrong tokens: 
Generated: ['Add(c *Child)']
Test: ['Add', '(', 'c', '*', 'Child', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['.', '.', '.']
Test: ['...']

Wrong tokens: 
Generated: ['website][1]']
Test: ['website', ']', '[', '1', ']']

Wrong tokens: 
Generated: ['[1]:']
Test: ['[', '1', ']', ':']

Wrong tokens: 
Generated: ["'All'"]
Test: ["'", 'All', "'"]

Wrong tokens: 
Generated: ["'All'"]
Test: ["'", 'All', "'"]

Wrong tokens: 
Generated: ['FindAll(b []byte, n int)']
Test: ['FindAll', '(', 'b', '[]', 'byte', ',', 'n', 'int', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['golang.The']
Test: ['golang', '.', 'The']

Wrong tokens: 
Generated: ['os.Interrupt,while']
Test: ['os.Interrupt', ',', 'while']

Wrong tokens: 
Generated: ['normally.What']
Test: ['normally', '.', 'What']

Wrong tokens: 
Generated: ['sleep', '100000']
Test: ['sleep 100000']

Wrong tokens: 
Generated: ['Please', 'check', 'this', 'out', 'difference']
Test: ['In', 'the', 'later', 'condition', 'the', 'parent']

Wrong tokens: 
Generated: ['between', 'godep', 'update', 'and', 'godep']
Test: ['of', 'sleep 100000', 'will', 'be', 'the', 'init']

Wrong tokens: 
Generated: ['save', '.', 'I', 'usually', 'just']
Test: ['process', 'after', '20s', 'if']

Wrong tokens: 
Generated: ['use', 'godep']
Test: ['we', 'did', "n't"]

Wrong tokens: 
Generated: ['RSA_public_decrypt(pubKey *rsa.PublicKey, data []byte)']
Test: ['RSA_public_decrypt', '(', 'pubKey', '*', 'rsa', '.', 'PublicKey', ',', 'data', '[]', 'byte', ')']

Wrong tokens: 
Generated: ['Hello()']
Test: ['Hello', '()']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['Joker', '{', '"Peter"', '}']
Test: ['Joker{"Peter"}']

Wrong tokens: 
Generated: ['invokeHello(p Person)']
Test: ['invokeHello', '(', 'p', 'Person', ')']

Wrong tokens: 
Generated: ['Peter', 'says', ',', '"Hello!"']
Test: ['Peter says, "Hello!"']

Wrong tokens: 
Generated: ['Hello()']
Test: ['Hello', '()']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['invokeHello(p *Person)']
Test: ['invokeHello', '(', 'p', '*', 'Person', ')']

Wrong tokens: 
Generated: ['command', '-']
Test: ['#', 'command']

Wrong tokens: 
Generated: ['line', '-']
Test: ['-', 'line']

Wrong tokens: 
Generated: ['j (type *Joker)']
Test: ['j', '(', 'type', '*', 'Joker', ')']

Wrong tokens: 
Generated: ['undefined (type *Person has no field or method Hello)']
Test: ['undefined', '(', 'type', '*', 'Person', 'has', 'no', 'field', 'or', 'method', 'Hello', ')']

Wrong tokens: 
Generated: ['I', 'have', 'started', 'programming', 'in', 'Go']
Test: ['How', 'can', 'I', 'fix', 'the', 'second', 'program', '?']

Wrong tokens: 
Generated: ['cgo', 'pkg', '-']
Test: ['#', 'cgo', 'pkg']

Wrong tokens: 
Generated: ['config', ':']
Test: ['-', 'config']

Wrong tokens: 
Generated: ['Nothing(self, args *C.PyObject) (status *C.PyObject)']
Test: ['Nothing', '(', 'self', ',', 'args', '*', 'C', '.', 'PyObject', ')', '(', 'status', '*', 'C', '.', 'PyObject', ')']

Wrong tokens: 
Generated: ['/tmp/go-build293667616/example.com/mywrapper/_obj/_cgo_main.o:(.data.rel+0x0):']
Test: ['/tmp/go-build293667616/example.com/mywrapper/_obj/_cgo_main.o:(.data.rel+0x0)', ':']

Wrong tokens: 
Generated: ['Py', '*']
Test: ['Py*']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['sdl', '.', 'CreateWindow', '(', '"test"', ',', 'sdl', '.', 'WINDOWPOS_UNDEFINED', ',', 'sdl', '.', 'WINDOWPOS_UNDEFINED', ',']
Test: ['sdl.CreateWindow("test", sdl.WINDOWPOS_UNDEFINED, sdl.WINDOWPOS_UNDEFINED,']

Wrong tokens: 
Generated: ['800', ',', '600', ',', 'sdl', '.', 'WINDOW_SHOWN', ')']
Test: ['800, 600, sdl.WINDOW_SHOWN)']

Wrong tokens: 
Generated: ['sdl', '.', 'CreateTexture', '(', 'renderer', ',', 'sdl', '.', 'PIXELFORMAT_ARGB8888', ',']
Test: ['sdl.CreateTexture(renderer, sdl.PIXELFORMAT_ARGB8888,']

Wrong tokens: 
Generated: ['sdl', '.', 'TEXTUREACCESS_STATIC', ',', '800', ',', '600', ')']
Test: ['sdl.TEXTUREACCESS_STATIC, 800, 600)']

Wrong tokens: 
Generated: ['output(bitbuf & 0xff)']
Test: ['output', '(', 'bitbuf', '&', '0xff', ')']

Wrong tokens: 
Generated: ['~30%']
Test: ['~30', '%']

Wrong tokens: 
Generated: ['"100000".']
Test: ['``', '100000', "''", '.']

Wrong tokens: 
Generated: ['go', 'routine']
Test: ['goroutine']

Wrong tokens: 
Generated: ['CallCommand(ch chan struct{}, id int)']
Test: ['CallCommand', '(', 'ch', 'chan', 'struct', '{},', 'id', 'int', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['ca', "n't"]
Test: ["can't"]

Wrong tokens: 
Generated: [':', ':', '1']
Test: ['::1']

Wrong tokens: 
Generated: ['(IPv6)']
Test: ['(', 'IPv6', ')']

Wrong tokens: 
Generated: ['(*']
Test: ['(', '*']

Wrong tokens: 
Generated: ['(127.0.0.1)']
Test: ['(', '127.0.0.1', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['"xml"']
Test: ['``', 'xml', "''"]

Wrong tokens: 
Generated: ['".']
Test: ['``', '.']

Wrong tokens: 
Generated: ['I', 'said', '"hello?"']
Test: ['I said "hello?"']

Wrong tokens: 
Generated: ['b', ':=', 'new(bytes.Buffer)']
Test: ['b := new(bytes.Buffer)']

Wrong tokens: 
Generated: ["I'll"]
Test: ['I', "'ll"]

Wrong tokens: 
Generated: ['Crawl(url string, depth int, fetcher Fetcher)']
Test: ['Crawl', '(', 'url', 'string', ',', 'depth', 'int', ',', 'fetcher', 'Fetcher', ')']

Wrong tokens: 
Generated: ['main()']
Test: ['main', '()']

Wrong tokens: 
Generated: ['Crawl("http://golang.org/", 4, fetcher)']
Test: ['Crawl', '(', '"http://golang.org/"', ',', '4', ',', 'fetcher', ')']

Wrong tokens: 
Generated: ['http', '://', 'go', 'lang', '.', 'org/cmd/']
Test: ['http://golang.org/cmd/']

Wrong tokens: 
Generated: ['no(interface{[]int, nil})']
Test: ['no', '(', 'interface', '{[]', 'int', ',', 'nil', '})']

Total token number: 
18198
Total wront token number: 
